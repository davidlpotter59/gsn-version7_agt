%%                       
Screen
        Name = "agtmt100l";
        Type = "Detail" ;
        Highlight=Underscore ;
        highlightfield="Yes";
        Padcharacter=Space ;
        Screensize="dynamic";
        Windowtitle="%a     %s Rating Information - Ver. 7.00     %m";
        Domain="AGQGENERAL" ;
        resizeable = yes ;
        iconline = 0 ;

        Global Unsigned Ascii Number G_APP_NO[11] ;
        Global Unsigned Ascii Number G_LINE_OF_BUSINESS[4] ;
        Global Unsigned Ascii Number G_OPT[2] ;
        global unsigned ascii number g_add_prem_no[1] ;
        global unsigned ascii number g_add_build_no[1] ;
        global unsigned ascii number g_add_new_quote[1] ;
        global unsigned ascii number g_prem_no[4] ;
        global unsigned ascii number g_build_no[4];
        global unsigned ascii number g_from_search_screen[1] ;
        global unsigned ascii number g_enhancement[1] ;
        global unsigned ascii number g_state[2] ;

        global string g_company_id[10] ,
                      g_initial_screen[50] ,
                      g_zipcode_change[1] ,
                      g_portfolio[1] ;

        rwdate l_agqgeneral_eff_date;
        wdate  l_rich_date;

        array[10] of string l_view_desc[85] ;
        array[10] of tag l_the_tag[15] ;

        Local Unsigned Ascii Number L_SUB_CODE[4] ,
                                    L_STATE[2],
                                    l_special_exposure_factor[5]=0/dec=3,
                                    l_first_prem_no[4],
                                    l_first_build_no[4],
                                    l_val_zipcode[5],
                                    l_zipcode_5[5],
                                    l_restricted[1],
                                    l_restricted_distance[5]=0/dec=2,
                                    l_deductible[5],
                                    l_distance_to_shore[2],
                                    l_prior_distance_to_shore[2],
                                    l_tier[2]=0,
                                    l_last_prem_no[4],
                                    l_possible_counties[2],
                                    l_length[75],
                                    l_last_build_no[4],
                                    l_agent_no[4],
                                    l_county[3],
                                    l_app_no[11],
                                    l_rating_territory[3],
                                    l_loop[4],
                                    l_exclude_terrorism[1]=0,
                                    l_possible_class_code[2],
                                    l_prior_class_code[5],
                                    l_active_help_was_set[1],
                                    l_prem_no[4]=0,
                                    l_first_bold_one[1]=0,
                                    l_second_bold_one[1]=0,
                                    l_no_locations[2]=0,
                                    l_build_no[4]=0,
                                    l_off_premises_limit[8]=0,
                                    l_mcp140_limit[8],
                                    l_mm[2],
                                    l_signs_limit[5],
                                    l_valuable_papers_limit[5],
                                    l_water_limit[5],
                                    l_credit_card_limit[5],
                                    l_yyyy[4],
                                    l_dd[2],
                                    l_territory[3],
                                    l_prior_no_employees[4],
                                    l_minimum_limit[8],
                                    l_maximum_limit[8],
                                    l_zipcode[9],
                                    l_building_minimum_limit[8],
                                    l_contents_minimum_limit[8],
                                    l_combined_minimum_limit[8],
                                    l_building_maximum_limit[8],
                                    l_contents_maximum_limit[8],
                                    l_combined_maximum_limit[8],
                                    l_building_binding_limit[8],
                                    l_contents_binding_limit[8],
                                    l_combined_binding_limit[8],
                                    l_min_error[1],
                                    l_sub[2],
                                    l_sub_1[5],
                                    l_field_no[4]=0,
                                    l_tag_position[2]=0,
                                    l_len_string[5]=0,
                                    l_max_error[1],
                                    l_binding_error[1],
                                    l_combined_limit[8]=0,
                                    l_rating_territory_group_1[1],
                                    l_rating_territory_group_2[1],
                                    l_rating_territory_group_3[1],
                                    l_group_1[5]=0/dec=3,
                                    l_group_2[5]=0/dec=3,
                                    L_CLASS_CODE[5],
                                    l_restaurant[1],
                                    l_year[4],
                                    l_end_sequence[4],
                                    L_PROPERTY_LIMIT[8]=0,
                                    l_property_limit_1[8]=0,
                                    L_LINE_OF_BUSINESS[2] ,
                                    L_AR_LIMIT[8],
                                    L_COMPUTER_LIMIT[8],
                                    l_computer_limit_1[8],
                                    l_computer_limit_2[8],
                                    l_csexec_number[12],
                                    l_percent[4],
                                    i_csexec_number[12],
                                    l_abort_program[1],
                                    L_UTILITY_LIMIT[8],
                                    L_MECHANICAL_LIMIT[8],
                                    L_EXTERIOR_SIGNS_LIMIT[8],
                                    L_EMPLOYEE_LIMIT[8],
                                    L_GLASS_LIMIT[8],
                                    L_SEWER_LIMIT[8],
                                    L_VALUABLE_LIMIT[8],
                                    L_FORM[1] ,
                                    l_Form_1[1] ;

        Local String L_DESC[50] ,
                     L_REINSURANCE[1] ,
                     l_supplemental_form[7],
                     l_found_desc[50],
                     l_lob_code[10],
                     l_sub_line[2],
                     l_zip_code_5[5],
                     l_screen_name[15],
                     l_agent_wording[9]="Agent No:",
                     l_fob[1],
                     l_fob_desc[50],
                     l_fob_description[50],
                     l_fob_description1[75],
                     l_form_of_business[1],
                     l_special_exposure[17]="Special Exposure:",
                     l_text_1[85],
                     l_text_2[85],
                     l_county_description[75],
                     l_server_name[100],
                     l_current_web_page[50],
                     l_second_time[1]="N",
                     l_web_site_address[150],
                     l_first_bold[1]="Y",
                     l_last_bold[1]="N",
                     l_first_str_location[8],
                     l_last_str_location[8],
                     l_str_location[8],
                     i_csexec_application[25] ,
                     l_first_location[1]="Y",
                     l_string_view[15],
                     l_family_apt[15]="2-4 Family Apt:",
                     l_printers_credit_wording[23]="Printers Credit:",
                     l_total_printers_wording[23]="Total Printers:",
                     l_first[1],
                     l_str_zipcode[9]="",
                     l_buyback_option_wording[23]="Buyback Option Charge:",
                     l_fungi_mold_wording[23]="Fungi/Mold Limitations:",
                     l_irpm_wording[12]="IRPM:",
                     l_enter[1],
                     l_minimum_message[200],
                     l_combined_minimum_message[200],
                     l_maximum_message[200],
                     l_combined_maximum_message[200],
                     l_binding_message[200],
                     l_combined_binding_message[200],
                     l_contact_message[200],
                     l_mp_wording[4]="M.P.",
                     l_continue_1[3]="",
                     l_continue_2[3]="",
                     l_continue_3[3]="",
                     l_dec[15]="",
                     l_app[3]="agq",
                     L_CODE[7],
                     L_CODE_1[7],
                     L_CODE_2[7],
                     L_CODE_3[7],
                     L_CODE_4[7],
                     L_CODE_5[7],
                     L_CODE_6[7],
                     L_CODE_7[7],
                     L_CODE_8[7],
                     l_code_9[7],
                     l_code_10[7],
                     l_code_11[7],
                     l_code_12[7],
                     l_code_13[7],
                     l_code_14[7],
                     l_code_17[7],
                     l_csexec_application[25],
                     l_processing_system[30],
                     l_rating_system[40],
                     l_territory_wording[10]="Territory:",
                     l_system_id[15],
                     L_SCREEN[15] ,
                     l_screen_1[9],
                     L_FORM_EDITION[18],
                     L_DESCRIPTION[55],
                     L_COMPUTER_DESC[50] ,
                     l_computer_desc_1[50],
                     L_DELETE_NONOWNED_HIRED[1]="N",
                     L_ADD_ENDORSEMENT[1]="Y",
                     L_PROPERTY_LIMIT_CHANGE[1]="N",
                     l_agqgeneral_str[10],
                     l_attorney[1],
                     L_COMPANY_ID[10] ;

        local wdate l_eff_date ,
                    l_bpssupplemental_eff_date,
                    l_bpsdefault2_eff_date ;

        include "print.var"

        include "virtualdecs.var"

        Access agqGENERAL,
           Set agqGENERAL:app_no = G_app_no, generic

        Include "stdkeys7.inc"

Style Definition
        Include "styles.inc"
        Displayonly Field Style {
                                  backgroundcolor="#CCCCCC"
                                }


Functions

        "redisplay" display/noreturn "agtmt100l" ;

        "add" sequence "new"      tagged add_fn ;
        "new" add/hidden ;

        "change" sequence "chg"   tagged change_fn ;
        "chg" change/hidden ;

        "func1" display "agtmt200" tagged calc_fn ;
        "back" sequence "goto" tagged back_fn ;
        "goto" continue begin
                        if g_portfolio not one of "Y" then
                            l_screen_1 = "agtmt001"
                        else
                            l_screen_1 = "agtmt9999"
                        function = "popup"
                        end ;
        "popup" display/noreturn l_screen_1 ;

        reaccess ;

        include "stdfunc7b.inc"

EVENT DEFINITION
        default eventhandler {
                             "REMOVE_SCREEN" { function = "exit" abort () }
                             "reload" { function = "reaccess" abort () }
                             "display_message" { warning "" + event.value }
                             "current_line_of_business" {
                                                          g_line_of_business = val(event.value)
                                                        }
                             }
Menu Definition

Toolbar Definition

Screen Entry
if g_line_of_business = 99 then
    l_line_of_business = 5
else
    l_line_of_business = g_line_of_business
disable(accept_fn)
access sfsdefault, set sfsdefault:sfs_code = "SFS", generic

g_initial_screen = ""
l_username = username
l_company_id = sfsdefault:company_id

access sfsprofile,
   set sfsprofile:user_id  = l_username, exact

If SFSPROFILE:USER_ID <> L_USERNAME Then
  Begin
    L_USERNAME = "default"
    Access SFSPROFILE, Set SFSPROFILE:USER_ID = L_USERNAME, Exact
  End

l_server_name = sfsprofile:UNIX_SERVER                            --"http://192.168.1.197/"

l_username = username
access sfsemail, set sfsemail:company_id = l_company_id,
                     sfsemail:user_id    = l_username, generic

access sfsagent, set sfsagent:company_id = l_company_id,
                     sfsagent:agent_no   = sfsemail:agent_no, generic

access sfsdefault, set sfsdefault:sfs_code = "SFS", generic

access sfsdefault, set sfsdefault:sfs_code = "SFS", generic

if sfsdefault:company_id one of "FLEMINGTON" then
    begin
    hide(lebins_fn)
    hide(farmers_fn)
    hide(ggund_fn)
    end
else
if sfsdefault:company_id one of "FARMERS" then
    begin
    hide(ficof_fn)
    hide(ggund_fn)
    hide(lebins_fn)
    end
else
if sfsdefault:company_id one of "LEBINS" then
    begin
    hide(ficof_fn)
    hide(farmers_fn)
    hide(ggund_fn)
    end
else
if sfsdefault:company_id one of "GGUND" then
    begin
    hide(ficof_fn)
    hide(farmers_fn)
    hide(lebins_fn)
    hide(t_line_of_business)
    end

l_state = sfsagent:state
if l_state = 0 then
    l_state = agqgeneral:state
if l_state = 0 then
    l_state = sfsdefault:state

Access SFSLINE_ALIAS, Set SFSLINE_alias:COMPANY_ID       = l_company_id,
                          SFSLINE_alias:LINE_OF_BUSINESS = l_line_of_business,
                          SFSLINE_alias:LOB_SUBLINE      = "00", Generic

Access SFSLINE, Set SFSLINE:COMPANY_ID       = l_company_id,
                    SFSLINE:LINE_OF_BUSINESS = l_line_of_business,
                    SFSLINE:LOB_SUBLINE      = "00", Generic

access agqgeneral,
   set agqgeneral:app_no = g_app_no, generic

if l_company_id = "FLEMINGTON" then
    begin
    if agqgeneral:app_no = 0 then
        {
        l_current_web_page = "webhelp_scr_bop_rating_no_proposal_num.htm"
        do change_current_browser(l_server_name,l_current_web_page)
        }
    else
        {
        l_current_web_page = "webhelp_scr_bop_rating_yes_proposal_num.htm"
        do change_current_browser(l_server_name,l_current_web_page)
        }
    end

access agqname, set agqname:app_no = g_app_no,generic

if agqname:quote_no <> 0 then
    begin
    disable(add_fn)
    disable(change_fn)
    disable(delete_fn)
    disable(accept_fn)
    end

if agqgeneral:app_no = 0 then
    begin
    disable(previous_fn)
    disable(next_fn)
    end

if l_state not one of 29 then
    hide(nj_fn)

if sfsline_alias:option <> "P" then
    hide(receipts_fn)

access sfscompany, set sfscompany:company_id = l_company_id, generic

l_screen_name = "agtmt100l"
if g_app_no = 0 then
    l_field_no = 9997
else
    l_field_no = 9999

access validation
if agqgeneral:app_no <> g_app_no then
    error 1000

access agqgeneral_alias, set agqgeneral_alias:app_no = agqgeneral:app_no, generic

l_no_locations   = 0
l_first_location = "Y"
l_first_prem_no  = 0
l_first_build_no = 0
l_last_prem_no   = 0
l_last_build_no  = 0
while agqgeneral_alias:app_no = agqgeneral:app_no
    begin
    if l_first_location = "Y" then
        begin
        l_first_str_location  = str(agqgeneral_alias:prem_no) +
                               str(agqgeneral_alias:build_no)
        l_first_location = "N"
        end
    l_last_str_location  = str(agqgeneral_alias:prem_no) +
                           str(agqgeneral_alias:build_no)
    l_no_locations  = l_no_locations + 1

    next agqgeneral_alias
    end

l_str_location = str(agqgeneral:prem_no) +
                 str(agqgeneral:build_no)

if l_no_locations one of 0, 1 then
    begin
    disable(next_fn)
    disable(previous_fn)
    end
else
if l_str_location = l_first_str_location and
   l_no_locations > 1 then
    begin
    disable(previous_fn)
    enable(next_fn)
    end
else
if l_str_location <> l_first_str_location and
   l_str_location <> l_last_str_location and
   l_no_locations > 1 then
    begin
    enable(next_fn)
    enable(previous_fn)
    end
else
if l_str_location = l_last_str_location and
   l_no_locations > 1 then
    begin
    disable(next_fn)
    enable(previous_fn)
    end

screen at 1,1 to 30,100
Properties
        {
          Layouttype = screen
          transparent = False
          backgroundcolor = "#ADD8E6"
          scrollbarpolicy = asneeded
        }
{

    Panel at 1,1 to 2,100
        Properties
            {
            layouttype = screen
            }
        {
        components
            guidetext at 1,1 to 2,40
                properties
                    {
                    iconname = "qp_logo.gif"
                    }
            guidetext at 1,83 to 2,100 tagged ficof_fn
                properties
                    {
                    iconname = "ficof_logo.gif"
                    }
            guidetext at 1,83 to 2,100 tagged farmers_fn
                properties
                    {
                    iconname = "salem_logo.gif"
                    }
            guidetext at 1,83 to 2,100 tagged lebins_fn
                properties
                    {
                    iconname = ""
                    }
            guidetext at 1,83 to 2,100 tagged ggund_fn
                properties
                    {
                    iconname = ""
                    }
            guidetext at 1,35 to 2,100 tagged t_line_of_business
                Properties
                   {
                   iconname = "title_bop.gif"
                   }

        }


panel at 3,1 to 4,100
Properties
        {
        LayoutType = screen
        backgroundcolor = "Grey"
        transparent = False
        }
{
components
          guidetext at 1.45,1 to 1.45,40     tagged display_information_box
                properties
                  {
                    text = "Rating Information..."
                    fontsize = 18
                    fontstyle = BOLD
                    fontname = "arial"
                    transparent = False
                    backgroundcolor = "Grey"
                  }

}

Panel at 3.45,75 to 4.45, 100
Properties
        {
          LayoutType = screen
        }
{
%%
App No: ___________

%%
fields
101   begin
        l_agent_no   = sfsemail:agent_no
        if l_agent_no = 0 then
            {
            l_agent_no = 9999
            }
        l_company_id = sfsdefault:company_id
        access sfsagent, set sfsagent:company_id = l_company_id,
                             sfsagent:agent_no   = l_agent_no, generic

        l_state      = sfsagent:state
        if l_state = 0 then
            l_state = sfsdefault:state
        Access agsdefault_bop, Set agsdefault_bop:COMPANY_ID       = L_COMPANY_ID,
                                   agsdefault_bop:state            = l_state,
                                   agsdefault_bop:agent_no         = l_agent_no,
                                   agsdefault_bop:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS, generic

        g_add_prem_no  = 0
        g_add_build_no = 0
        g_prem_no      = 0
        if function one of "ADD", "NEW" then
            begin
            access agqgeneral_alias, set agqgeneral_alias:app_no = g_app_no, generic

            if g_app_no <> 0 and
               agqgeneral_alias:app_no = g_app_no then
                begin
                if l_company_id = "LEBINS" then
                    l_screen_1 = "agtmt100i"
                else
                    l_screen_1 = "agtmt100d"
                display modal screen l_screen_1
                with initial function "CHANGE|BACK"

                if g_add_prem_no = 0 and
                   g_add_build_no = 0 then
                    begin
                    function = "redisplay"
                    abort()
                    end

                if g_add_prem_no = 1 then
                    begin
                    l_prem_no = 0
                    access agqgeneral_alias, set agqgeneral_alias:app_no = g_app_no, generic

                    while agqgeneral_alias:app_no = g_app_no
                        begin
                        l_prem_no  = agqgeneral_alias:prem_no

                        next agqgeneral_alias
                        end

                    access agqmaster, set agqmaster:app_no = g_app_no, generic

                    access sfsfob, set sfsfob:company_id       = agqgeneral:company_id,
                                       sfsfob:form_of_business = agqmaster:form_of_business, generic

                    l_fob_description  = sfsfob:description
                    l_fob_description1 = agqmaster:fob_description

                    access agqgeneral_alias, set agqgeneral_alias:app_no = g_app_no, generic

                    agqgeneral:app_no            = g_app_no
                    agqgeneral:prem_no           = l_prem_no + 1
                    agqgeneral:build_no          = 1
                    agqgeneral:entry_date        = todaysdate
                    agqgeneral:first_name[1]     = agqgeneral_alias:first_name[1]/raw
                    agqgeneral:last_name[1]      = agqgeneral_alias:last_name[1]/raw
                    agqgeneral:business_name[1]  = agqgeneral_alias:business_name[1]/raw
                    agqgeneral:eff_date          = agqgeneral_alias:eff_date
                    agqgeneral:state             = agqgeneral_alias:state
                    agqGENERAL:COUNTY            = agqgeneral_alias:COUNTY
                    agqgeneral:company_id        = agqgeneral_alias:company_id
                    agqgeneral:line_of_business  = agqgeneral_alias:line_of_business
                    agqgeneral:bop_type          = agqgeneral_alias:bop_type
                    agqgeneral:agent_no          = agqgeneral_alias:agent_no
                    agqgeneral:rating_territory  = agqgeneral_alias:rating_territory
                    agqgeneral:occupancy_type    = agqgeneral_alias:occupancy_type
                    agqgeneral:protection        = agqgeneral_alias:protection
                    agqgeneral:construction      = agqgeneral_alias:construction
                    agqgeneral:class_code        = agqgeneral_alias:class_code
                    agqgeneral:acv_building      = agqgeneral_alias:acv_building
                    agqgeneral:acv_contents      = agqgeneral_alias:acv_contents
                    agqgeneral:construction_year = agqgeneral_alias:construction_year
                    agqgeneral:sprinklers        = agqgeneral_alias:sprinklers
                    end
                else
                if g_add_build_no = 1 then
                    begin
                    access agqgeneral_alias, set agqgeneral_alias:app_no = g_app_no, generic

                    l_build_no = 0
                    while agqgeneral_alias:app_no = g_app_no
                        begin
                        if agqgeneral_alias:prem_no = g_prem_no then
                            l_build_no  = agqgeneral_alias:build_no

                        next agqgeneral_alias
                        end

                    access agqmaster, set agqmaster:app_no = g_app_no, generic

                    access sfsfob, set sfsfob:company_id       = agqgeneral:company_id,
                                       sfsfob:form_of_business = agqmaster:form_of_business, generic

                    l_fob_description  = sfsfob:description
                    l_fob_description1 = agqmaster:fob_description

                    access agqgeneral_alias, set agqgeneral_alias:app_no = g_app_no, generic

                    agqgeneral:app_no           = g_app_no
                    agqgeneral:prem_no          = g_prem_no
                    agqgeneral:build_no         = l_build_no + 1
                    agqgeneral:entry_date       = agqgeneral_alias:entry_date
                    agqgeneral:first_name[1]    = agqgeneral_alias:first_name[1]/raw
                    agqgeneral:last_name[1]     = agqgeneral_alias:last_name[1]/raw
                    agqgeneral:business_name[1] = agqgeneral_alias:business_name[1]/raw
                    agqgeneral:eff_date         = agqgeneral_alias:eff_date
                    agqgeneral:state            = agqgeneral_alias:state
                    agqGENERAL:COUNTY           = agqgeneral_alias:COUNTY
                    agqgeneral:company_id       = agqgeneral_alias:company_id
                    agqgeneral:line_of_business = agqgeneral_alias:line_of_business
                    agqgeneral:bop_type         = agqgeneral_alias:bop_type
                    agqgeneral:agent_no         = agqgeneral_alias:agent_no
                    agqgeneral:rating_territory = agqgeneral_alias:rating_territory
                    agqgeneral:occupancy_type   = agqgeneral_alias:occupancy_type
                    agqgeneral:protection       = agqgeneral_alias:protection
                    agqgeneral:construction     = agqgeneral_alias:construction
                    agqgeneral:class_code       = agqgeneral_alias:class_code
                    agqgeneral:construction_year = agqgeneral_alias:construction_year
                    agqgeneral:acv_building     = agqgeneral_alias:acv_building
                    agqgeneral:acv_contents     = agqgeneral_alias:acv_contents
                    agqgeneral:sprinklers       = agqgeneral_alias:sprinklers
                    end
                end
            else
            if g_portfolio not one of "Y" then
                begin
                do access_sfscsexec
                agqgeneral:app_no        = i_csexec_number
                g_app_no                 = i_csexec_number
                l_app_no                 = i_csexec_number
                agqgeneral:prem_no       = 1
                agqgeneral:build_no      = 1
                agqgeneral:agent_no      = l_agent_no
                end
            else
                begin
                agqgeneral:app_no        = g_app_no
                l_app_no                 = g_app_no
                agqgeneral:prem_no       = 1
                agqgeneral:build_no      = 1
                agqgeneral:agent_no      = l_agent_no
                end

            access agqamt, set agqamt:app_no = g_app_no, generic

            if agqamt:app_no = g_app_no then
                begin
                agqgeneral:business_name[1] = agqamt:name
                agqgeneral:eff_date         = agqamt:eff_date
                end

            access agqmaster, set agqmaster:app_no = g_app_no, generic

            access sfsfob, set sfsfob:company_id       = agqgeneral:company_id,
                               sfsfob:form_of_business = agqmaster:form_of_business, generic

            l_fob_description  = sfsfob:description
            l_fob_description1 = agqmaster:fob_description

            g_prem_no                   = agqgeneral:prem_no
            g_build_no                  = agqgeneral:build_no
            agqgeneral:entry_date       = todaysdate
            if agqgeneral:state = 0 then
                agqgeneral:state            = agsdefault_bop:state
--            if agqgeneral:county = 0 then
--                agqGENERAL:COUNTY           = agsdefault_bop:COUNTY
            if agqgeneral:company_id = "" then
                agqgeneral:company_id       = agsdefault_bop:company_id
            if agqgeneral:line_of_business = 0 then
                agqgeneral:line_of_business = l_line_of_business
            if agqgeneral:line_of_business = 99 then
                agqgeneral:line_of_business = 5
            if agqgeneral:bop_type = 0 then
                agqgeneral:bop_type         = agsdefault_bop:bop_type
            if agqgeneral:agent_no = 0 then
                agqgeneral:agent_no         = l_agent_no
            if agqgeneral:sprinklers = "" then
                agqgeneral:sprinklers = "N"
            end

        access agqmaster, set agqmaster:app_no = g_app_no, generic

        if agqmaster:app_no <> g_app_no then
            begin
            add agqmaster
                begin
                agqmaster:app_no = g_app_no
                agqmaster:extend_hired_nonowned = "N"
                agqmaster:delete_hired_nonowned = "N"
                end
            end

        access agqmastsupp, set agqmastsupp:app_no = g_app_no,
                                agqmastsupp:line_of_business = agqgeneral:line_of_business, generic

        if agqmastsupp:app_no <> g_app_no or
           agqmastsupp:line_of_business <> agqgeneral:line_of_business then
            begin
            add agqmastsupp
                begin
                agqmastsupp:app_no                = g_app_no
                agqmastsupp:line_of_business      = agqgeneral:line_of_business
                agqmastsupp:extend_hired_nonowned = "N"
                agqmastsupp:delete_hired_nonowned = "N"
                end
            end
        end
        agqGENERAL:APP_NO/displayonly ;

}
-- top button bar
Panel at 5,1 to 6,100 Tagged icon_line2_tg
Properties
        {
          LayoutType = screen
        }
{
Components

        Button at 1.5,1   tagged add_fn
        Properties {
                Iconname = "btn_add_location.bmp"
                }
        Events  {
                Action = add_fn
                }

        Button at 1.5,38    tagged change_fn
        Properties {
                Iconname = "btn_edit_location.bmp"
                }
        Events  {
                Action = change_fn
                }

        Button at 1.5, 70 tagged delete_fn
        Properties {
                Iconname = "btn_delete_location.bmp"
                }
        Events  {
                Action = delete_fn
                }
    }

    Panel at 5,94 to 6,96 tagged button_panel
        Properties
            {
            layouttype = column
            }
        {
        Components
            Button to 1,1
                properties
                    {
                    Iconname = "btn_print_screen.bmp"
                    }
                events
                    {
                    action
                        {
                        function = "print"
                        abort()
                        }
                    }
        }

   Panel at 6.45,92
        Properties
            {
            layouttype = column
            }
      {
        Components
            guidetext to 1,1
                properties
                    {
                      text = "agtmt100l.sd"
                      fontsize = 9
                    }
      }

Panel at 7,1 to 9,100 Tagged location
        Properties {
                LayoutType = screen
--                transparent = False
--                backgroundcolor = "White"
        }
        {
         Components
           guidetext at 1.5,24 to 2.5,36
             properties
               {
                 text = "Location No:"
                 fontsize = 12
                 fontname = "arial"
               }
           guidetext at 1.5,44 to 2.5,56
             properties
               {
                 text = "Building No:"
                 fontsize = 12
                 fontname = "arial"
               }
        }

Panel at 7.5,33 to 9,60 Tagged rating_pl
Properties
        {
--          transparent = False
--          backgroundcolor = "White"
        }
{
%%
____                ____
%%

components

fields
101   agqgeneral:prem_no/displayonly ;
102   agqgeneral:build_no/displayonly ;
}

Panel at 8,70 to 8,100
      Properties
         {
           layouttype = row
         }
    {
      Components
        Button at 1,55 tagged accept_fn
          properties
            {
              Iconname = "btn_accept_edits.bmp"
            }
          Events  {
                    mouseclicked = accept
                  }

    }

Panel at 9,1 to 22,100  tagged territory_rating_special
        Properties {
                LayoutType = screen
        }
        {
         Components
           guidetext at 1,1 to 1,22
             properties
               {
                 text = "Insured's Name:"
                 fontsize = 12
                 contentalignment = right
                 fontname = "arial"
               }

           guidetext at 2,1 to 2,22
             properties
               {
                 text = "Eff Date:"
                 fontsize = 12
                 contentalignment = right
                 fontname = "arial"
               }
           guidetext at 3,1 to 3,22
             properties
               {
                 text = "Form Of Business:"
                 fontsize = 12
                 contentalignment = right
                 fontname = "arial"
               }
           guidetext at 4,1 to 4,22
             properties
               {
                 text = "State:"
                 fontsize = 12
                 contentalignment = right
                 fontname = "arial"
               }
           guidetext at 5,1 to 5,22
             properties
               {
                 text = "Location Zip Code:"
                 fontsize = 12
                 contentalignment = right
                 fontname = "arial"
               }
            guidetext at 6,1 to 6,22
             properties
               {
                 text = "Rating Type:"
                 fontsize = 12
                 contentalignment = right
                 fontname = "arial"
              }
           guidetext at 7,1 to 7,22
             properties
               {
                 text = "County:"
                 fontsize = 12
                 contentalignment = right
                 fontname = "arial"
               }
           guidetext at 8,1 to 8,22 tagged nj_fn
             properties
               {
                 text = "Rating Territory:"
                 fontsize = 12
                 contentalignment = right
                 fontname = "arial"
               }
           guidetext at 9,1 to 9,22 tagged standard
             properties
               {
                 text = "Lessor/Owner Occupied:"
                 fontsize = 12
                 contentalignment = right
                 fontname = "arial"
               }
           guidetext at 10,1 to 10,22
             properties
               {
                 text = "Construction:"
                 fontsize = 12
                 contentalignment = right
                 fontname = "arial"
               }
           guidetext at 11,1 to 11,22
             properties
               {
                 text = "Protection:"
                 fontsize = 12
                 contentalignment = right
                 fontname = "arial"
               }
           guidetext at 12,1 to 12,22
             properties
               {
                 text = "Class Code:"
                 fontsize = 12
                 contentalignment = right
                 fontname = "arial"
               }
           guidetext at 13,1 to 13,22
             properties
               {
                 text = "Building Limit:"
                 fontsize = 12
                 contentalignment = right
                 fontname = "arial"
               }
           guidetext at 14,1 to 14,22  tagged receipts_fn
             properties
               {
                 text = "Total Food/Liquor Receipts:"
                 fontsize = 12
                 contentalignment = right
                 fontname = "arial"
               }
           guidetext at 14,38 to 14,52  tagged contents_acv
             properties
               {
                 text = "ACV Contents:"
                 fontsize = 12
                 contentalignment = right
                 fontname = "arial"
               }
         }

Panel at 9,24 to 23, 100
{
%%
___________________________________________________
__________                 _________  ____
____________________________  _________________________________________
__  ________________________________________________
_________  Distance to Shore: __ ______________________________________
___  ________________________________________________
___  ________________________________________________
___  ________________________________________________
___  ________________________________________________
___  ________________________________________________
___                        Year of Construction: ____
__________________________________________________________    _____
_____________  ACV Building:~~_   Contents Limit: ______________
_____________               ~~_       No Stories: __  # Res Units: ___
                                _________________ _____
%%

components

fields
101     begin
          if function one of "ADD","NEW","CHG","CHANGE" then
            {
              enable(accept_fn)
              disable(calc_fn)
            }
          else
            {
              disable(accept_fn)
              enable(calc_fn)
            }

        if function one of "ADD", "NEW", "CHANGE", "CHG" then
            begin
            if l_company_id = "FLEMINGTON" then
                {
                l_current_web_page = "webhelp_tbx_insured_name.htm"
                do change_current_browser(l_server_name,l_current_web_page)
                }
            end
        end
        agqgeneral:business_name[1]/tabstop/uppercase/default ;
201     begin
        if function one of "ADD", "NEW", "CHANGE", "CHG" then
            begin
            if l_company_id = "FLEMINGTON" then
                {
                l_current_web_page = "webhelp_tbx_eff_date.htm"
                do change_current_browser(l_server_name,l_current_web_page)
                }
            end
        if function one of "ADD", "NEW" then
            begin
            if agqgeneral:eff_date = 0 then
                agqgeneral:eff_date = todaysdate
            if g_enhancement = 1 then
                agqgeneral:special_enhancement = 1
            else
                agqgeneral:special_enhancement = 0
            end
        end
        agqgeneral:eff_date/tabstop/default mandatory
        if agqgeneral:eff_date < todaysdate - 30 then
            error "The effective date can not be more than 30 days from todaysdate"

        if month(agqgeneral:eff_date) = 02 and
           day(agqgeneral:eff_date) = 29 and
           sfsemail:agent_no <> 0 then
            error "Please change your effective date to 2-28"

        agqgeneral:exp_date = dateadd(agqgeneral:eff_date,0,1) ;
202     l_agent_wording/displayonly/showasguidetext tagged ficof_fn
        hide if sfsemail:agent_No <> 0 ;
203     begin
        access sfsagent_alias, set sfsagent_alias:company_id = agqgeneral:company_id, generic

        end
        agqgeneral:agent_no/showasguidetext/default  tagged ficof_fn
        hide if sfsemail:agent_no <> 0
        access sfsagent, set sfsagent:company_id = agqgeneral:company_id,
                             sfsagent:agent_no = agqgeneral:agent_no, generic

        if agqgeneral:agent_no <> sfsagent:agent_No then
            error "Invalid Agent No"

        activehelp sfsagent_alias:agent_no,
                   sfsagent_alias:name[1] ;
301     begin
        l_fob = agqmaster:form_of_business
        access sfsfob, set sfsfob:company_id       = agqgeneral:company_id,
                           sfsfob:form_of_business = agqmaster:form_of_business, generic

        l_fob_desc = sfsfob:description

        access sfsfob, set sfsfob:company_id       = agqgeneral:company_id, approximate

        access agqmaster, set agqmaster:app_no = g_app_no, generic

        if agqgeneral:business_name[1] <> "" and
           agqmaster:form_of_business <> "" then
            begin
            access sfsfob, set sfsfob:company_id       = agqgeneral:company_id,
                               sfsfob:form_of_business = agqmaster:form_of_business, generic

            l_fob_description  = sfsfob:description
            l_fob_description1 = agqmaster:fob_description
            end

        access sfsfob, set sfsfob:company_id       = agqgeneral:company_id, approximate

        if agqmaster:form_of_business = "" then
            activehelp()
        end
        l_fob_description/default/tabstop
        if l_fob <> agqmaster:form_of_business or
           l_fob_desc <> l_fob_description then
            begin
            l_form_of_business = sfsfob:form_of_business
            if l_form_of_business <> "T" then
                l_fob_description1 = ""
            do update_agqmaster
            end

        activehelp sfsfob:description;
302     l_fob_description1/default/tabstop/uppercase
        hide if trun(l_fob_description) not one of "OTHER", "Other" ;
401     agqgeneral:state/default
        Activehelp If SFSSTATE_alt:STATE < 99 And
                      SFSSTATE_alt:COUNTY = 0 Then
                       SFSSTATE_alt:STATE
                   Else
                       NULL /width=5/heading="State",
                   If SFSSTATE_alt:STATE < 99 And
                      SFSSTATE_alt:COUNTY = 0 Then
                       SFSSTATE_alt:DESCRIPTION Else NULL /width=30/heading="Description" ;
402     sfsstate:description ;
501     agqgeneral:str_zipcode/tabstop mandatory;
501     Begin
        If agqgeneral:STR_ZIPCODE[6,9] = "" Then
             agqgeneral:STR_ZIPCODE[6,9] = "0000"
        End
        agqgeneral:STR_ZIPCODE/displayonly;
502     begin
        access agqlocation, set agqlocation:app_no   = agqgeneral:app_no,
                                agqlocation:prem_no  = agqgeneral:prem_no,
                                agqlocation:build_no = agqgeneral:build_no, generic

        l_prior_distance_to_shore = agqlocation:distance_to_shore
        l_distance_to_shore = agqlocation:distance_to_shore
        access sfsdistance_alias, set sfsdistance_alias:company_id       = agqgeneral:company_id,
                                      sfsdistance_alias:state            = agqgeneral:state,
                                      sfsdistance_alias:line_of_business = agqgeneral:line_of_business, generic

        activehelp()
        end
        l_distance_to_shore/default  mandatory
        hide if agqgeneral:state not one of 29, 7
        access sfsdistance, set sfsdistance:company_id        = agqgeneral:company_id,
                                sfsdistance:state             = agqgeneral:state,
                                sfsdistance:line_of_business  = agqgeneral:line_of_business,
                                sfsdistance:distance_to_shore = l_distance_to_shore, generic

        if l_distance_to_shore <> sfsdistance:distance_to_shore or
           l_distance_to_shore = 0 then
            error "Invalid Code Entered"

        activehelp sfsdistance_alias:distance_to_shore,
                   sfsdistance_alias:description ;
503     begin
        if agqgeneral:state = 37 and
           l_distance_to_shore = 0 then
            l_distance_to_shore = 9
        access agqlocation, set agqlocation:app_no   = agqgeneral:app_no,
                                agqlocation:prem_no  = agqgeneral:prem_no,
                                agqlocation:build_no = agqgeneral:build_no, generic

        if agqlocation:app_no   <> agqgeneral:app_no or
           agqlocation:prem_no  <> agqgeneral:prem_no or
           agqlocation:build_no <> agqgeneral:build_no then
            begin
            add agqlocation
                begin
                agqlocation:app_no            = agqgeneral:app_no
                agqlocation:prem_no           = agqgeneral:prem_no
                agqlocation:build_no          = agqgeneral:build_no
                agqlocation:sub_code          = 10
                agqlocation:distance_to_shore = l_distance_to_shore
                end
            end
        else
            begin
            change agqlocation
                begin
                agqlocation:distance_to_shore = l_distance_to_shore
                end
            end

        access sfsdistance, set sfsdistance:company_id        = agqgeneral:company_id,
                                sfsdistance:state             = agqgeneral:state,
                                sfsdistance:line_of_business  = agqgeneral:line_of_business,
                                sfsdistance:distance_to_shore = l_distance_to_shore, generic
        end
        sfsdistance:description ;

601     begin
        if function one of "ADD", "NEW", "CHANGE", "CHG" then
            begin
            if l_company_id = "FLEMINGTON" then
                {
                l_current_web_page = "webhelp_dbx_rating_type.htm"
                do change_current_browser(l_server_name,l_current_web_page)
                }
            end
        if function one of "ADD", "NEW" then
            begin
            agqgeneral:trans_date = todaysdate
            if agqgeneral:bop_type = 0 then
                agqgeneral:bop_type = agsdefault_bop:bop_type
            end
        end
        agqgeneral:bop_type/tabstop/default
        if agqgeneral:bop_type <> bpstype:bop_type or
           agqgeneral:bop_type = 0 then
            error "Invalid Type Entered"

        if bpstype:hide_if_enhancement = 1 and
           bpstype:line_of_business = 50 then
            error "Invalid Type Entered"

        activehelp if bpstype_alias:hide_if_enhancement = 0 then
                       bpstype_alias:bop_type
                   else
                       null/width=10 ,
                   if bpstype_alias:hide_if_enhancement = 0 then
                       bpstype_alias:description
                   else
                       null/width=60 ;
602     bpstype:description ;

701     begin
        if function one of "ADD", "NEW", "CHANGE", "CHG" then
            begin
            if l_company_id = "FLEMINGTON" then
                {
                l_current_web_page = "webhelp_dbx_county.htm"
                do change_current_browser(l_server_name,l_current_web_page)
                }
            end
/*        if function one of "ADD", "NEW" then
            begin
            if agqgeneral:county = 0 then
                agqgeneral:county = agsdefault_bop:county
            end*/
        end
        agqGENERAL:COUNTY/default/tabstop
        if agqgeneral:county <> sfsstate_alias:county or
           agqgeneral:county = 0 or
           sfsstate_alias:hide_for_bop = 1 then
            error 1222

        access sfsterritory, set sfsterritory:company_id       = agqgeneral:company_Id,
                                 sfsterritory:state            = agqgeneral:state,
                                 sfsterritory:line_of_business = agqgeneral:line_of_business,
                                 sfsterritory:county           = agqgeneral:county, generic

        agqgeneral:territory = sfsterritory:territory
        if agqgeneral:state <> 29 then
            begin
            l_str_zipcode = str(agqgeneral:zipcode[1,5]) + "0000"
            l_zipcode     = val(l_str_zipcode)
            Access sfsterritory1, Set sfsterritory1:COMPANY_ID       = agqgeneral:COMPANY_ID,
                                      sfsterritory1:STATE            = agqgeneral:STATE,
                                      sfsterritory1:LINE_OF_BUSINESS = agqgeneral:LINE_OF_BUSINESS,
                                      sfsterritory1:zipcode          = l_zipcode,
                                      sfsterritory1:territory        = agqgeneral:territory, generic

            while sfsterritory1:COMPANY_ID       = agqgeneral:COMPANY_ID and
                  sfsterritory1:STATE            = agqgeneral:STATE and
                  sfsterritory1:LINE_OF_BUSINESS = agqgeneral:LINE_OF_BUSINESS and
                  sfsterritory1:zipcode          = l_zipcode and
                  sfsterritory1:territory        = agqgeneral:territory
                    begin
                    if agqgeneral:eff_date >= sfsterritory1:eff_date then
                        begin
                        l_group_1 = sfsterritory1:factor[1]
                        end

                    next sfsterritory1
                    end

            access sfsterritory, set sfsterritory:company_id       = agqgeneral:company_Id,
                                     sfsterritory:state            = agqgeneral:state,
                                     sfsterritory:line_of_business = agqgeneral:line_of_business,
                                     sfsterritory:county           = agqgeneral:county,
                                     sfsterritory:territory        = agqgeneral:territory, generic

            l_territory = sfsterritory:territory_group[1]
            Access sfsterrfactors, Set sfsterrfactors:COMPANY_ID       = agqgeneral:COMPANY_ID,
                                       sfsterrfactors:STATE            = agqgeneral:STATE,
                                       sfsterrfactors:LINE_OF_BUSINESS = agqgeneral:LINE_OF_BUSINESS,
                                       sfsterrfactors:territory        = l_territory, generic

            while sfsterrfactors:COMPANY_ID       = agqgeneral:COMPANY_ID and
                  sfsterrfactors:STATE            = agqgeneral:STATE and
                  sfsterrfactors:LINE_OF_BUSINESS = agqgeneral:LINE_OF_BUSINESS and
                  sfsterrfactors:territory        = l_territory
                begin
                if agqgeneral:eff_date >= sfsterrfactors:eff_date then
                    begin
                    l_group_1 = sfsterrfactors:factor[1]
                    l_group_2 = sfsterrfactors:factor[2]
                    end

                next sfsterrfactors
                end

            agqgeneral:territory_factors[2]    = l_group_2
            agqgeneral:rating_territory_factor = l_group_1
            if function one of "ADD", "NEW" or
               l_distance_to_shore <> l_prior_distance_to_shore then
                begin
                access sfsdistance, set sfsdistance:company_id        = agqgeneral:company_id,
                                        sfsdistance:state             = agqgeneral:state,
                                        sfsdistance:line_of_business  = agqgeneral:line_of_business,
                                        sfsdistance:distance_to_shore = l_distance_to_shore, generic

                l_special_exposure_factor = 1.00
                while sfsdistance:company_id        = agqgeneral:company_id and
                      sfsdistance:state             = agqgeneral:state and
                      sfsdistance:line_of_business  = agqgeneral:line_of_business and
                      sfsdistance:distance_to_shore = l_distance_to_shore
                    begin
                    if (agqgeneral:eff_date >= sfsdistance:EfF_date and
                       (agqgeneral:eff_date <= sfsdistance:exp_date or
                       sfsdistance:exp_date = 0)) then
                        l_special_exposure_factor = sfsdistance:factor

                    next sfsdistance
                    end

                if l_special_exposure_factor <> 1.00 then
                    agqgeneral:special_exposure = 1
                else
                    agqgeneral:special_exposure = 0
                agqgeneral:special_exposure_factor = l_special_exposure_factor
                end

/*            if l_distance_to_shore one of 1, 2, 3, 4, 5, 6 then
                agqgeneral:windstorm_exclusion = 1
            else
                agqgeneral:windstorm_exclusion = 0*/
            end

        activehelp if sfsstate_alias:county <> 0 and
                      sfsstate_alias:hide_for_bop = 0 then
                       sfsstate_alias:county
                   else
                       null,
                   if sfsstate_alias:county <> 0 and
                      sfsstate_alias:hide_for_bop = 0 then
                       sfsstate_alias:description
                   else
                       null ;
701     Begin
        l_company_id       = agqgeneral:company_id
        l_state            = agqgeneral:state
        l_line_of_business = agqgeneral:line_of_business
        l_county           = agqgeneral:county
        access sfsterritory, set sfsterritory:company_id       = l_company_id,
                                 sfsterritory:state            = l_state,
                                 sfsterritory:line_of_business = l_line_of_business,
                                 sfsterritory:county           = l_county, generic

        agqGENERAL:TERRITORY = SFSTERRITORY:TERRITORY
        End
        agqGENERAL:COUNTY/displayonly
        if sfscompany:special_territory_rating not one of 1 then
            agqgeneral:rating_territory = agqgeneral:county;
702     SFSSTATE_ALIAS:DESCRIPTION ;

801     agqgeneral:rating_territory/displayonly
        hide if agqgeneral:state <> 29
        hide if sfscompany:special_territory_rating one of 1 ;
801     begin
          if function one of "ADD", "NEW", "CHANGE", "CHG" then
              begin
              if l_company_id = "FLEMINGTON" then
                  {
                  l_current_web_page = "webhelp_dbx_rating_terr.htm"
                  do change_current_browser(l_server_name,l_current_web_page)
                  }
              end
            l_eff_date = agqgeneral:eff_date
        end
        agqGENERAL:RATING_TERRITORY/tabstop/default
        hide if agqgeneral:state <> 29
        l_rating_territory = agqgeneral:rating_territory
        l_county = agqgeneral:county
        hide if SFSCOMPANY:SPECIAL_TERRITORY_RATING not one of 1
        Access BPSRATINGTERR, Set BPSRATINGTERR:COMPANY_ID       = L_COMPANY_ID,
                                  BPSRATINGTERR:STATE            = L_STATE,
                                  BPSRATINGTERR:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS,
                                  BPSRATINGTERR:COUNTY           = L_COUNTY,
                                  BPSRATINGTERR:TERRITORY        = L_RATING_TERRITORY, Generic

        If agqGENERAL:RATING_TERRITORY <> BPSRATINGTERR:TERRITORY or
           agqgeneral:rating_territory = 0 Then
            Error 1206

        agqGENERAL:RATING_TERRITORY_SUB_CODE = BPSRATINGTERR_ALIAS:SUB_CODE
        agqgeneral:rating_territory_group    = 1

        Activehelp if (l_eff_date >= bpsratingterr_alias:eff_date and
                      (l_eff_date <= bpsratingterr_alias:exp_date or
                      bpsratingterr_alias:exp_date = 0)) then
                       BPSRATINGTERR_ALIAS:TERRITORY
                   else
                       null,
                   if (l_eff_date >= bpsratingterr_alias:eff_date and
                      (l_eff_date <= bpsratingterr_alias:exp_date or
                      bpsratingterr_alias:exp_date = 0)) then
                       BPSRATINGTERR_ALIAS:DESCRIPTION
                   else
                       null ;
802     bpsratingterr:description ;
802     begin
        Access BPSRATINGTERR, Set BPSRATINGTERR:COMPANY_ID       = agqgeneral:COMPANY_ID,
                                  BPSRATINGTERR:STATE            = agqGENERAL:STATE,
                                  BPSRATINGTERR:LINE_OF_BUSINESS = agqgeneral:LINE_OF_BUSINESS,
                                  BPSRATINGTERR:COUNTY           = agqGENERAL:COUNTY,
                                  BPSRATINGTERR:TERRITORY        = agqGENERAL:RATING_TERRITORY, Generic

        while BPSRATINGTERR:COMPANY_ID       = agqgeneral:COMPANY_ID and
              BPSRATINGTERR:STATE            = agqGENERAL:STATE and
              BPSRATINGTERR:LINE_OF_BUSINESS = agqgeneral:LINE_OF_BUSINESS and
              BPSRATINGTERR:COUNTY           = agqGENERAL:COUNTY and
              BPSRATINGTERR:TERRITORY        = agqGENERAL:RATING_TERRITORY
                begin
                if (l_eff_date >= bpsratingterr:eff_date and
                   (l_eff_date <= bpsratingterr:exp_date or
                   bpsratingterr:exp_date = 0)) then
                    begin
                    l_group_2 = bpsratingterr:group_2
                    l_group_1 = bpsratingterr:group_1
                    end

                next bpsratingterr
                end
        Access BPSRATINGTERR, Set BPSRATINGTERR:COMPANY_ID       = agqgeneral:COMPANY_ID,
                                  BPSRATINGTERR:STATE            = agqGENERAL:STATE,
                                  BPSRATINGTERR:LINE_OF_BUSINESS = agqgeneral:LINE_OF_BUSINESS,
                                  BPSRATINGTERR:COUNTY           = agqGENERAL:COUNTY,
                                  BPSRATINGTERR:TERRITORY        = agqGENERAL:RATING_TERRITORY, Generic

        End
        bpsratingterr:description/displayonly
        hide if agqgeneral:state <> 29
        If agqGENERAL:RATING_TERRITORY_GROUP = 2 Then
            agqGENERAL:RATING_TERRITORY_FACTOR = L_GROUP_2
        else
            agqgeneral:rating_territory_factor = l_group_1
        if function one of "ADD", "NEW" or
           l_distance_to_shore <> l_prior_distance_to_shore then
            begin
            access sfsdistance, set sfsdistance:company_id        = agqgeneral:company_id,
                                    sfsdistance:state             = agqgeneral:state,
                                    sfsdistance:line_of_business  = agqgeneral:line_of_business,
                                    sfsdistance:distance_to_shore = l_distance_to_shore, generic

            l_special_exposure_factor = 1.00
            while sfsdistance:company_id        = agqgeneral:company_id and
                  sfsdistance:state             = agqgeneral:state and
                  sfsdistance:line_of_business  = agqgeneral:line_of_business and
                  sfsdistance:distance_to_shore = l_distance_to_shore
                begin
                if (agqgeneral:eff_date >= sfsdistance:EfF_date and
                   (agqgeneral:eff_date <= sfsdistance:exp_date or
                   sfsdistance:exp_date = 0)) then
                    l_special_exposure_factor = sfsdistance:factor

                next sfsdistance
                end

            if l_special_exposure_factor <> 1.00 then
                agqgeneral:special_exposure = 1
            else
                agqgeneral:special_exposure = 0
            agqgeneral:special_exposure_factor = l_special_exposure_factor
            end ;

/*        if l_distance_to_shore one of 1, 2, 3, 4, 5, 6 then
            agqgeneral:windstorm_exclusion = 1
        else
            agqgeneral:windstorm_exclusion = 0 ;*/

901     begin
          if function one of "ADD", "NEW", "CHANGE", "CHG" then
              begin
              if l_company_id = "FLEMINGTON" then
                  {
                  l_current_web_page = "webhelp_dbx_occupancy.htm"
                  do change_current_browser(l_server_name,l_current_web_page)
                  }
              end
        end
        agqGENERAL:occupancy_type/tabstop/default
        if agqgeneral:occupancy_type <> bpsoccupancy:occupancy_type or
           agqgeneral:occupancy_type = 0 then
            error "Invalid Type Entered"

        agqgeneral:tenant           = bpsoccupancy:tenant
        agqgeneral:percent_occupied = bpsoccupancy:percent_occupied
        agqgeneral:single_occupancy = bpsoccupancy:single_occupancy
        if agqgeneral:single_occupancy = "" then
            agqgeneral:single_occupancy = "N"

        activehelp bpsoccupancy_alias:occupancy_type,
                   bpsoccupancy_alias:description;
902     bpsoccupancy:description ;

1001   Begin
         if function one of "ADD", "NEW", "CHANGE", "CHG" then
              begin
              if l_company_id = "FLEMINGTON" then
                  {
                  l_current_web_page = "webhelp_dbx_construction.htm"
                  do change_current_browser(l_server_name,l_current_web_page)
                  }
              end
        If FUNCTION one of "ADD", "NEW" Then
            begin
            if agqgeneral:construction = 0 then
                agqGENERAL:CONSTRUCTION = agsdefault_bop:CONSTRUCTION
            end
        End
        agqGENERAL:CONSTRUCTION/default/tabstop
        If agqGENERAL:CONSTRUCTION <> SFSCONSTRUCTION:CONSTRUCTION Or
           agqGENERAL:CONSTRUCTION = 0 Then
            Error 1203

        Activehelp SFSCONSTRUCTION_ALIAS:CONSTRUCTION,
                   SFSCONSTRUCTION_ALIAS:DESCRIPTION ;
1002    SFSCONSTRUCTION:DESCRIPTION;

1101    Begin
          if function one of "ADD", "NEW", "CHANGE", "CHG" then
              begin
              if l_company_id = "FLEMINGTON" then
                  {
                  l_current_web_page = "webhelp_dbx_protection.htm"
                  do change_current_browser(l_server_name,l_current_web_page)
                  }
              end
        If FUNCTION one of "ADD", "NEW" Then
            begin
            if agqgeneral:protection = 0 then
                agqGENERAL:PROTECTION = agsdefault_bop:PROTECTION
            end
        End
        agqGENERAL:PROTECTION/default/tabstop
        If agqGENERAL:PROTECTION <> SFSPROTECTION:PROTECTION Or
           agqGENERAL:PROTECTION = 0 Then
            Error 1204

        Activehelp SFSPROTECTION_ALIAS:PROTECTION,
                   SFSPROTECTION_ALIAS:DESCRIPTION ;

1102    begin
          if function one of "ADD", "NEW", "CHANGE", "CHG" then
              begin
              if l_company_id = "FLEMINGTON" then
                  {
                  l_current_web_page = "webhelp_tbx_construction_yr.htm"
                  do change_current_browser(l_server_name,l_current_web_page)
                  }
              end
        end
          agqGENERAL:CONSTRUCTION_YEAR/tabstop/default
        If agqGENERAL:CONSTRUCTION_YEAR[1,2] = 0 Then
            agqGENERAL:CONSTRUCTION_YEAR[1,2] = 19
        if agqgeneral:construction_Year < agsdefault_bop:construction_year and
           agsdefault_bop:construction_year <> 0 and
           sfsemail:agent_no <> 0 then
            error "Not eligible for BOP if year of construction is prior to 1950" ;
1102    agqGENERAL:CONSTRUCTION_YEAR/displayonly ;

1201    Begin
        Access BPSCLASS_type, Set BPSCLASS_type:COMPANY_ID       = agqGENERAL:COMPANY_ID ,
                                  BPSCLASS_type:STATE            = agqGENERAL:STATE,
                                  BPSCLASS_type:LINE_OF_BUSINESS = agqGENERAL:LINE_OF_BUSINESS,
                                  bpsclass_type:bop_type         = agqgeneral:bop_type,
                                  BPSCLASS_type:CLASS_CODE       = agqGENERAL:CLASS_CODE,
                                  BPSCLASS_type:SUB_CODE         = agqGENERAL:SUB_CODE, Generic

        Repeat Begin
            Exit If bpsclass_type:COMPANY_ID       <> agqGENERAL:COMPANY_ID Or
                    bpsclass_type:STATE            <> agqGENERAL:STATE Or
                    bpsclass_type:LINE_OF_BUSINESS <> agqGENERAL:LINE_OF_BUSINESS Or
                    bpsclass_type:bop_type         <> agqgeneral:bop_type or
                    bpsclass_type:CLASS_CODE       <> agqGENERAL:CLASS_CODE Or
                    bpsclass_type:SUB_CODE         <> agqGENERAL:SUB_CODE

            If AGQGENERAL:EFF_DATE >= bpsclass_type:EFF_DATE Then
                L_DESC = bpsclass_type:DESCRIPTION[1]

            Next bpsclass_type
            End
        End
        L_DESC/displayonly ;

1201    Begin
        l_eff_date = agqgeneral:eff_date
          if function one of "ADD", "NEW", "CHANGE", "CHG" then
              begin
              if l_company_id = "FLEMINGTON" then
                  {
                  l_current_web_page = "webhelp_dbx_class_code.htm"
                  do change_current_browser(l_server_name,l_current_web_page)
                  }
              end
        Access bpsclass_type_ALIAS, Set bpsclass_type_ALIAS:COMPANY_ID       = agqGENERAL:COMPANY_ID,
                                        bpsclass_type_ALIAS:STATE            = agqGENERAL:STATE,
                                        bpsclass_type_ALIAS:LINE_OF_BUSINESS = agqGENERAL:LINE_OF_BUSINESS,
                                        bpsclass_type_alias:bop_type         = agqgeneral:bop_type,
                                        bpsclass_type_ALIAS:ALPHA_LOOK       = L_DESC, generic

        End
        L_DESC/default/upper/tabstop      Mandatory
        if l_desc = "" or
           l_desc <> bpsclass_type_alias:alpha_look then
            error "Invalid Class Code Entered"

        Access bpsclass_type_ALIAS, Set bpsclass_type_ALIAS:COMPANY_ID       = agqGENERAL:COMPANY_ID,
                                        bpsclass_type_ALIAS:STATE            = agqGENERAL:STATE,
                                        bpsclass_type_ALIAS:LINE_OF_BUSINESS = agqGENERAL:LINE_OF_BUSINESS,
                                        bpsclass_type_alias:bop_type         = agqgeneral:bop_type,
                                        bpsclass_type_ALIAS:ALPHA_LOOK       = L_DESC, Approximate

/*        if bpsclass_type_alias:refer_to_underwriter = 1 and
           bpsclass_type_alias:class_code <> 64 then
            warning "The class you have select requires prior underwriter's approval"

        if bpsclass_type_alias:refer_to_underwriter = 1 and
           bpsclass_type_alias:class_code = 64 then
            error "Please Contact Your Underwriter for a Commercial Package Quote"*/



        Activehelp If (((l_eff_date >= bpsclass_type_alias:eff_date and
                       (l_eff_date <= bpsclass_type_alias:exp_date or
                       bpsclass_type_alias:exp_date = 0)) and
                       bpsclass_type_alias:hide_from_rating = 0 and
                       bpsclass_type_alias:bop_type = agqgeneral:bop_type)) then-- or

/*                      ((l_eff_date >= bpsclass_type_alias:eff_date and
                      (l_eff_date <= bpsclass_type_alias:exp_date or
                      bpsclass_type_alias:exp_date = 0)) and
                      bpsclass_type_alias:hide_from_rating = 1 and
                      sfsemail:agent_no = 0 and
                      bpsclass_type_alias:bop_type = agqgeneral:bop_type)) Then*/
                       bpsclass_type_ALIAS:ALPHA_LOOK
                   Else
                       NULL/width=50,
                   If (((l_eff_date >= bpsclass_type_alias:eff_date and
                      (l_eff_date <= bpsclass_type_alias:exp_date or
                      bpsclass_type_alias:exp_date = 0)) and
                      bpsclass_type_alias:Hide_from_rating = 0 and
                      bpsclass_type_alias:bop_type = agqgeneral:bop_type)) then-- or

/*                      ((l_eff_date >= bpsclass_type_alias:eff_date and
                      (l_eff_date <= bpsclass_type_alias:exp_date or
                      bpsclass_type_alias:exp_date = 0)) and
                      bpsclass_type_alias:hide_from_rating = 1 and
                      sfsemail:agent_no = 0 and
                      bpsclass_type_alias:bop_type = agqgeneral:bop_type)) Then*/
                       bpsclass_type_ALIAS:CLASS_CODE
                   Else
                       NULL ;
1202    Begin
        l_prior_class_code = agqgeneral:class_code
        Access bpsclass_type_ALIAS, Set bpsclass_type_ALIAS:COMPANY_ID       = agqGENERAL:COMPANY_ID,
                                        bpsclass_type_ALIAS:STATE            = agqGENERAL:STATE,
                                        bpsclass_type_ALIAS:LINE_OF_BUSINESS = agqGENERAL:LINE_OF_BUSINESS,
                                        bpsclass_type_alias:bop_type         = agqgeneral:bop_type,
                                        bpsclass_type_ALIAS:ALPHA_LOOK       = L_DESC, Generic

        agqGENERAL:CLASS_CODE   = bpsclass_type_ALIAS:CLASS_CODE
        agqGENERAL:SUB_CODE     = bpsclass_type_ALIAS:SUB_CODE
        agqgeneral:bpsclass_sub_code = bpsclass_type_alias:bpsclass_sub_code
        agqGENERAL:RATE_NO      = bpsclass_type_ALIAS:RATE_NO
        agqGENERAL:RATE_GROUP   = bpsclass_type_ALIAS:RATE_GROUP
        L_DELETE_NONOWNED_HIRED = bpsclass_type_ALIAS:DELETE_NONOWNED_HIRED
        agqGENERAL:RESTAURANT   = bpsclass_type_ALIAS:RESTAURANT
        l_restaurant            = bpsclass_type_alias:restaurant

        access bpsguidelines, set bpsguidelines:company_id = agqgeneral:company_id,
                                  bpsguidelines:class_code = agqgeneral:class_code, generic

        if bpsguidelines:company_id = agqgeneral:company_id and
           bpsguidelines:class_code = agqgeneral:class_code then
            begin
            if function one of "ADD", "NEW" then
                warning bpsguidelines:guidelines
            if function one of "CHG", "CHANGE" and
               agqgeneral:class_code <> l_prior_class_code then
                warning bpsguidelines:guidelines
            end
        End
        agqGENERAL:CLASS_CODE/displayonly
        if agqgeneral:class_code = 0 then
            error "Invalid class code entered" ;
1202    begin
        if agqgeneral:class_code one of 75 and
           sfscompany:boiler_rating = 1 and
           agqgeneral:bop_type = 9 then
            agqgeneral:condo = 1
        else
        if agqgeneral:line_of_business = 51 then
            agqgeneral:condo = 1
        else
            agqgeneral:condo = 0
        end
        agqgeneral:class_code/displayonly ;
1301    begin
          if function one of "ADD", "NEW", "CHANGE", "CHG" then
              begin
              if l_company_id = "FLEMINGTON" then
                  {
                  l_current_web_page = "webhelp_tbx_bldg_limit.htm"
                  do change_current_browser(l_server_name,l_current_web_page)
                  }
              end
            do minimum_maximum_limits
        end
        agqGENERAL:BUILDING_LIMIT/tabstop/default   tagged building_tag
        If agqGENERAL:BUILDING_LIMIT = 0 Then
            agqGENERAL:BUILDING_PREMIUM = 0

        if agqgeneral:bop_type one of 4, 5 and
           agqgeneral:line_of_business one of 50 then
            begin
            if agqgeneral:building_limit = 0 then
                error "This rating type is for building coverage only. If contents coverage is needed, change rating type to 'Unit Owner'"
            end

        If agqgeneral:building_limit < l_building_minimum_limit and
           l_building_minimum_limit <> 0 and
           agqgeneral:building_limit <> 0 and
           sfsemail:agent_no <> 0 Then
            Begin
            if l_min_error = 0 then
                begin
                l_continue_2 = dialog("MINIMUM LIMITS","warning.bmp",trun(l_minimum_message),"Yes","No")
                if l_continue_2 = "No" then
                    begin
                    l_continue_3 = dialog("CONTACT UNDERWRITER","warning.bmp",trun(l_contact_message),"OK")
                    end
                if l_continue_2 = "Yes" then
                    begin
                    error "Please change the limit entered"
                    end
                end
            else
                begin
                l_continue_2 = dialog("MINIMUM LIMITS","warning.bmp",trun(l_minimum_message),"OK")
                if l_continue_2 = "OK" then
                    begin
                    error "Please change the limit entered"
                    end
                end
            end
        else
        if agqgeneral:building_limit < agsdefault_bop:minimum_limit[1] and
           agqgeneral:building_limit <> 0 and
           agsdefault_bop:minimum_limit[1] <> 0 and
           l_minimum_limit = 0 and
           sfsemail:agent_no <> 0 then
            error "Limit entered is less than program minimum"

        if agqgeneral:building_limit > l_building_maximum_limit and
           l_building_maximum_limit <> 0 and
           agqgeneral:building_limit <> 0 and
           sfsemail:agent_no <> 0 then
            begin
            if l_max_error = 0 then
                begin
                l_continue_2 = dialog("MAXIMUM LIMITS","warning.bmp",trun(l_maximum_message),"Yes","No")
                if l_continue_2 = "No" then
                    begin
                    l_continue_3 = dialog("CONTACT UNDERWRITER","warning.bmp",trun(l_contact_message),"OK")
                    end
                if l_continue_2 = "Yes" then
                    begin
                    error "Please change the limit entered"
                    end
                end
            else
                begin
                l_continue_2 = dialog("MAXIMUM LIMITS","warning.bmp",trun(l_maximum_message),"OK")
                if l_continue_2 = "OK" then
                    begin
                    error "Please change the limit entered"
                    end
                end
            end
        else
        if agqgeneral:building_limit > agsdefault_bop:maximum_limit[1] and
           agqgeneral:building_limit <> 0 and
           agsdefault_bop:maximum_limit[1] <> 0 and
           l_maximum_limit = 0 and
           sfsemail:agent_no <> 0 then
            error "Limit entered is greater than program maximum, contact underwriter before binding" ;
1302    begin
          if function one of "ADD", "NEW", "CHANGE", "CHG" then
              begin
              if l_company_id = "FLEMINGTON" then
                  {
                  l_current_web_page = "webhelp_cbx_acv_bldg.htm"
                  do change_current_browser(l_server_name,l_current_web_page)
                  }
              end
        end
        agqGENERAL:ACV_BUILDING/checkbox/values="N,Y"/tabstop/default
        Hide If agqGENERAL:BUILDING_LIMIT = 0 ;
1303    Begin
          if function one of "ADD", "NEW", "CHANGE", "CHG" then
              begin
              if l_company_id = "FLEMINGTON" then
                  {
                  l_current_web_page = "webhelp_tbx_contents_limit.htm"
                  do change_current_browser(l_server_name,l_current_web_page)
                  }
              end
          L_PROPERTY_LIMIT = agqGENERAL:PROPERTY_LIMIT
        End
        agqGENERAL:PROPERTY_LIMIT/tabstop/default
        if agqgeneral:property_limit < 50000 and
           agqgeneral:property_limit <> 0 and
           agqgeneral:line_of_business one of 50 then
            error "Contents limit can not be less than 50,000"

        if agqgeneral:bop_type one of 4, 5 and
           agqgeneral:line_of_business one of 50 then
            begin
            if agqgeneral:property_limit <> 0  then
                error "This rating type is for building coverage only. If contents coverage is needed, change rating type to 'Unit Owner'"
            end

        if agqgeneral:line_of_business one of 50 and
           agqgeneral:company_id = "FLEMINGTON" then
            begin
            if agqgeneral:building_limit <> 0 and
               agqgeneral:property_limit = 0 and
               agqgeneral:bop_type not one of 4, 5 then
                error "You must enter property limits"
            end

        if g_enhancement = 1 and
           agqgeneral:line_of_business one of 5 and
           agqgeneral:property_limit = 0 and
           agqgeneral:company_id = "FLEMINGTON" then
            error "You must enter property limits"

        If agqgeneral:property_limit < l_contents_minimum_limit and
           l_contents_minimum_limit <> 0 and
           agqgeneral:property_limit <> 0 and
           sfsemail:agent_no <> 0 Then
            Begin
            if l_min_error = 0 then
                begin
                l_continue_2 = dialog("MINIMUM LIMITS","warning.bmp",trun(l_minimum_message),"Yes","No")
                if l_continue_2 = "No" then
                    begin
                    l_continue_3 = dialog("CONTACT UNDERWRITER","warning.bmp",trun(l_contact_message),"OK")
                    end
                if l_continue_2 = "Yes" then
                    begin
                    error "Please change the limit entered"
                    end
                end
            else
                begin
                l_continue_2 = dialog("MINIMUM LIMITS","warning.bmp",trun(l_minimum_message),"OK")
                if l_continue_2 = "OK" then
                    begin
                    error "Please change the limit entered"
                    end
                end
            end
        else
        if agqgeneral:property_limit < agsdefault_bop:minimum_limit[2] and
           agqgeneral:property_limit <> 0 and
           agsdefault_bop:minimum_limit[2] <> 0 and
           sfsemail:agent_no <> 0 then
            error "Limit entered is less than program minimum"

        if agqgeneral:property_limit > l_contents_maximum_limit and
           l_contents_maximum_limit <> 0 and
           agqgeneral:property_limit <> 0 and
           sfsemail:agent_no <> 0 then
            begin
            if l_max_error = 0 then
                begin
                l_continue_2 = dialog("MAXIMUM LIMITS","warning.bmp",trun(l_maximum_message),"Yes","No")
                if l_continue_2 = "No" then
                    begin
                    l_continue_3 = dialog("CONTACT UNDERWRITER","warning.bmp",trun(l_contact_message),"OK")
                    end
                if l_continue_2 = "Yes" then
                    begin
                    error "Please change the limit entered"
                    end
                end
            else
                begin
                l_continue_2 = dialog("MAXIMUM LIMITS","warning.bmp",trun(l_maximum_message),"OK")
                if l_continue_2 = "OK" then
                    begin
                    error "Please change the limit entered"
                    end
                end
            end
        else
        if agqgeneral:property_limit > agsdefault_bop:maximum_limit[2] and
           agqgeneral:property_limit <> 0 and
           agsdefault_bop:maximum_limit[2] <> 0 and
           sfsemail:agent_no <> 0 then
            error "Limit entered is greater than program maximum, contact underwriter before binding"

        if agqgeneral:building_limit + agqgeneral:property_limit > l_combined_maximum_limit and
           l_combined_maximum_limit <> 0 and
           sfsemail:agent_no <> 0 then
            begin
            if l_max_error = 0 then
                begin
                l_continue_2 = dialog("MAXIMUM COMBINED LIMITS","warning.bmp",trun(l_combined_maximum_message),"Yes","No")
                if l_continue_2 = "No" then
                    begin
                    l_continue_3 = dialog("CONTACT UNDERWRITER","warning.bmp",trun(l_contact_message),"OK")
                    end
                if l_continue_2 = "Yes" then
                    begin
                    error "Please change the limit entered"
                    end
                end
            else
                begin
                l_continue_2 = dialog("MAXIMUM COMBINED LIMITS","warning.bmp",trun(l_combined_maximum_message),"OK")
                if l_continue_2 = "OK" then
                    begin
                    goto (building_tag)
                    end
                end
            end

        if agqgeneral:building_limit + agqgeneral:property_limit > l_combined_binding_limit and
           agqgeneral:building_limit + agqgeneral:property_limit <= l_combined_maximum_limit and
           l_combined_binding_limit <> 0 and
           l_combined_maximum_limit <> 0 and
           sfsemail:agent_no <> 0 then
            begin
            if l_binding_error = 0 then
                begin
                l_continue_2 = dialog("COMBINED BINDING LIMITS","warning.bmp",trun(l_combined_binding_message),"Yes","No")
                if l_continue_2 = "No" then
                    begin
                    l_continue_3 = dialog("CONTACT UNDERWRITER","warning.bmp",trun(l_contact_message),"OK")
                    end
                if l_continue_2 = "Yes" then
                    begin
                    goto (building_tag)
                    end
                end
            else
                begin
                l_continue_2 = dialog("COMBINED BINDING LIMITS","warning.bmp",trun(l_combined_binding_message),"OK")
                if l_continue_2 = "OK" then
                    begin
                    goto (building_tag)
                    end
                end
            end
        else
            begin
            l_combined_limit = agqgeneral:building_limit + agqgeneral:property_limit
            if l_combined_limit > agsdefault_bop:combined_limit and
               agsdefault_bop:combined_limit <> 0 and
               sfsemail:agent_no <> 0 then
                error "Combined building and contents exceeds program maximum, contact underwriter before binding"
            end

        l_property_limit_1 = agqgeneral:property_limit
        If agqGENERAL:PROPERTY_LIMIT = 0 And
           agqGENERAL:BUILDING_LIMIT = 0 and
           agqgeneral:liability_only = 0 Then
            Error 1317

        If agqGENERAL:PROPERTY_LIMIT = 0 Then
            agqGENERAL:PROPERTY_PREMIUM = 0

        If agqGENERAL:PROPERTY_LIMIT <> L_PROPERTY_LIMIT Then
            L_PROPERTY_LIMIT_CHANGE = "Y"
        Else
            L_PROPERTY_LIMIT_CHANGE = "N"
        if function one of "ADD", "NEW" then
            begin
            if agqgeneral:eff_date >= 08.01.2012 and
               agqgeneral:company_id = "FARMERS" then
                do add_optional_coverages_bpsdefault2
            else
                do add_optional_coverages
            end
        if function one of "CHG", "CHANGE" then
            begin
            if agqgeneral:eff_date >= 08.01.2012 and
               agqgeneral:company_id = "FARMERS" then
                do change_optional_coverages_bpsdefault2
            else
                do change_optional_coverages
            end
        if sfsline_alias:option <> "P" then    --no reciepts it is disables
              begin
              if l_company_id = "FLEMINGTON" then
                  {
                  l_current_web_page = "webhelp_scr_bop_rating_yes_proposal_num.htm"
                 do change_current_browser(l_server_name,l_current_web_page)
                 }
              end  ;

1401    agqgeneral:receipts/tabstop/default tagged receipts_fn
        hide if agqgeneral:line_of_business <> 50
--        hide if agqgeneral:class_code not one of 82
        if agqgeneral:receipts = 0 then
            error "You must enter receipts";
1402    agqgeneral:acv_contents/checkbox/values="N,Y"/tabstop/default tagged contents_acv ;
1403    agqgeneral:stories ;
1404    agqgeneral:no_units ;
1501    l_special_exposure/showasguidetext/displayonly
        hide if sfsemail:agent_no <> 0 ;
1502    agqgeneral:special_exposure_factor/showasguidetext/default
        hide if sfsemail:agent_no <> 0 ;

}

Panel at 25,1 to 26,120 Tagged icon_line2_tg
Properties
        {
          LayoutType = screen
        }
{
Components

        Button at 1,1   tagged back_fn
        Properties {
                Iconname = "btn_back_to_main_screen.bmp"
                }
        Events  {
                Action {
                       if g_portfolio <> "Y" then
                           begin
                           l_continue_2 = dialog("EXITING","warning.bmp","You are about to leave the application, Do you wish to continue","Yes","No")
                           if l_continue_2 = "Yes" then
                               begin
                               function = "back"
                               abort()
                               end
                           end
                       else
                           begin
                           function = "back"
                           abort()
                           end
                       }
                }

        Button at 1,32    tagged previous_fn
        Properties {
                Iconname = "btn_prev_loc.bmp"
                }
        Events  {
                Action = previous_fn
                }

        Button at 1, 48 tagged next_fn
        Properties {
                Iconname = "btn_next_loc.bmp"
                }
        Events  {
                Action = next_fn
                }


        Button at 1,75   tagged calc_fn
        Properties {
                Iconname = "btn_view_summary_totals.bmp"
                }
        Events  {
                Action {
                          do get_heading("Quote Summary . . .")
                          function = "func1"
                          abort()
                       }
                }

}

-- draw a line
panel at 27,1 to 27,120 tagged line_panel_1
    {
      Components
        line at 1,1 to 1,120
            Properties
              {
                Linestyle = embossed
                Linewidth = 5
                foregroundcolor = "black"
--                backgroundcolor = "#ADD8E6"
              }
    }

panel at 27,1 to 32,100  tagged ficof_fn

Properties
        {
          LayoutType = screen
--          Transparent = False
          backgroundcolor = "white"
        }
{
      Components
         browser at 1,1 to 7,100  tagged helper_tg
             properties {
                          url = ""
                        }
}

}

Update
if UPDATEOK = "NO" then
  {
    access agqgeneral_alias, set agqgeneral_alias:app_no = g_app_no, generic

    if agqgeneral_alias:app_no <> g_app_no and
       g_portfolio <> "Y" then
        g_app_no = 0

    enable (calc_fn)
    disable(accept_fn)
  }

If UPDATEOK = "YES" And
   Abort = "NO" Then
    Begin
    enable(calc_fn)
    disable(accept_fn)
    if function one of "CHANGE", "CHG" then
        begin
        access agqgeneral_alias, set agqgeneral_alias:app_no = agqgeneral:app_no, generic

        while agqgeneral_alias:app_no = agqgeneral:app_no
            begin
            if agqgeneral_alias:eff_date <> agqgeneral:eff_date then
                begin
                change agqgeneral_alias
                    begin
                    agqgeneral_alias:eff_date = agqgeneral:eff_date
                    agqgeneral_alias:exp_date = agqgeneral:exp_date
                    end
                end
            next agqgeneral_alias
            end
        end

    if function one of "DELETE" then
        begin
        access sfsline, set sfsline:company_id       = agqname:company_id,
                            sfsline:line_of_business = agqname:line_of_business,
                            sfsline:lob_subline      = "00", generic

        access agqgeneral_alias, set agqgeneral_alias:app_no = g_app_no, generic

        if sfsline:lob_code = "CPORTFOLIO" then
            begin
            access agqmastsupp, set agqmastsupp:app_no           = g_app_no,
                                    agqmastsupp:line_of_business = agqgeneral:line_of_business, generic

            if agqmastsupp:app_no           = g_app_no and
               agqmastsupp:line_of_business = agqgeneral:line_of_business then
                begin
                if agqgeneral_alias:app_no <> g_app_no then
                    delete agqmastsupp
                end
            end

        access agqend, set agqend:app_no = g_app_no, generic

        while agqend:app_no = g_app_no
            begin
            if agqend:lob_end_code = "X" then
                begin
                if agqgeneral_alias:app_no <> g_app_no then
                    delete agqend
                else
                if agqend:prem_no = agqgeneral:prem_no and
                   agqend:build_no = agqgeneral:build_no then
                    delete agqend
                end

            next agqend
            end

        access agqtotals, set agqtotals:app_no = agqgeneral:app_no, generic

        while agqtotals:app_no = agqgeneral:app_no
            begin
            if agqtotals:deductible <> 0 then
                delete agqtotals

            next agqtotals
            end

        access agqlocation, set agqlocation:app_no   = agqgeneral:app_no,
                                agqlocation:prem_no  = agqgeneral:prem_no,
                                agqlocation:build_no = agqgeneral:build_no, generic

        if agqlocation:app_no   = agqgeneral:app_no and
           agqlocation:prem_no  = agqgeneral:prem_no and
           agqlocation:build_no = agqgeneral:build_no then
            delete agqlocation

        access agqamt, set agqamt:app_no = g_app_no, generic

        if agqamt:app_no = g_app_no then
            begin
            if agqgeneral_alias:app_no <> g_app_no then
                begin
                change agqamt
                    begin
                    agqamt:lob_totals[5]    = 0
                    agqamt:lob_terrorism[5] = 0
                    agqamt:lob_surcharge[5] = 0
                    end
                end
            end

        g_prem_no  = 1
        g_build_no = 1
        function   = "redisplay"
        end
    else
    begin
    access sfsline, set sfsline:company_id       = agqname:company_id,
                        sfsline:line_of_business = agqname:line_of_business,
                        sfsline:lob_subline      = "00", generic

    if sfsline:lob_code = "CPORTFOLIO" and
       function <> "DELETE" then
        begin
        access agqmastsupp, set agqmastsupp:app_no           = g_app_no,
                                agqmastsupp:line_of_business = agqgeneral:line_of_business, generic

        if agqmastsupp:app_no           <> g_app_no or
           agqmastsupp:line_of_business <> agqgeneral:line_of_business then
            do add_agqmastsupp
        else
            do change_agqmastsupp
        end
    else
    if function <> "DELETE" then
        begin
        access agqmaster, set agqmaster:app_no = l_app_no, generic

--    if g_enhancement = 0 then
--        begin
        if agqmaster:app_no <> l_app_no then
            do add_agqmaster
        else
            do change_agqmaster
--        end
        end

    access sfsline, set sfsline:company_id       = agqgeneral:company_id,
                        sfsline:line_of_business = agqgeneral:line_of_business,
                        sfsline:lob_subline      = l_sub_line, exact

    Access SFSLINE_ALIAS, Set SFSLINE_alias:COMPANY_ID       = agqgeneral:company_id,
                              SFSLINE_alias:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                              SFSLINE_alias:LOB_SUBLINE      = "00", Generic

    if function one of "ADD", "NEW", "CHANGE", "CHG" then
        begin
        access agqname, set agqname:app_no = agqgeneral:app_no, generic

        if agqname:app_no <> agqgeneral:app_no then
            begin
            add agqname
                begin
                agqname:app_no            = agqgeneral:app_no
                agqname:name[1]           = agqgeneral:business_name[1]
                agqname:line_of_business  = agqgeneral:line_of_business
                agqname:trans_date        = agqgeneral:entry_date
                agqname:eff_date          = agqgeneral:eff_date
                agqname:exp_date          = agqgeneral:exp_date
                agqname:company_id        = agqgeneral:company_id
                agqname:original_eff_date = agqgeneral:eff_date
                agqname:agent_no          = agqgeneral:agent_no
                end
            end
        else
            begin
            change agqname
                begin
                agqname:name[1]           = agqgeneral:business_name[1]
                agqname:line_of_business  = agqgeneral:line_of_business
                agqname:trans_date        = agqgeneral:entry_date
                agqname:eff_date          = agqgeneral:eff_date
                agqname:exp_date          = agqgeneral:exp_date
                agqname:company_id        = agqgeneral:company_id
                agqname:original_eff_date = agqgeneral:eff_date
                agqname:agent_no          = agqgeneral:agent_no
                end
            end

        if sfsline:lob_code = "CPORTFOLIO" then
            begin
            access agqmastsupp, set agqmastsupp:app_no           = g_app_no,
                                    agqmastsupp:line_of_business = l_line_of_business, generic

            If agqmastsupp:app_no = G_app_no and
               agqmastsupp:line_of_business = l_line_of_business Then
                begin
                l_form = agqmastsupp:form
                If L_DELETE_NONOWNED_HIRED = "Y" Then
                    begin
                    Change agqmastsupp
                        Begin
                        agqmastsupp:DELETE_HIRED_NONOWNED       = "Y"
                        agqmastsupp:DELETE_NONOWNED_HIRED_CLASS = "Y"
                        agqmastsupp:EXTEND_HIRED_NONOWNED       = "N"
                        end
                    End
                else
                if l_delete_nonowned_hired = "N" then
                    begin
                    If agqmastsupp:DELETE_NONOWNED_HIRED_CLASS = "Y" Then
                        begin
                        Change agqmastsupp
                            Begin
                            agqmastsupp:DELETE_HIRED_NONOWNED       = "N"
                            agqmastsupp:DELETE_NONOWNED_HIRED_CLASS = "N"
                            End
                        end
                    end
                end
            end
        else
            begin
            access agqmaster, set agqmaster:app_no = g_app_no, exact

            If agqMASTER:app_no = G_app_no Then
                begin
                l_form = agqmaster:form
                If L_DELETE_NONOWNED_HIRED = "Y" Then
                    begin
                    Change agqMASTER
                        Begin
                        agqMASTER:DELETE_HIRED_NONOWNED       = "Y"
                        agqMASTER:DELETE_NONOWNED_HIRED_CLASS = "Y"
                        agqMASTER:EXTEND_HIRED_NONOWNED       = "N"
                        end
                    End
                else
                if l_delete_nonowned_hired = "N" then
                    begin
                    If agqmaster:DELETE_NONOWNED_HIRED_CLASS = "Y" Then
                        Change agqmaster
                            Begin
                            agqmaster:DELETE_HIRED_NONOWNED       = "N"
                            agqmaster:DELETE_NONOWNED_HIRED_CLASS = "N"
                            End
                    end

                if agqgeneral:company_id = "GGUND" and
                   function one of "ADD", "NEW" and
                   agqmaster:extend_hired_nonowned = "N" then
                    begin
                    change agqmaster
                        begin
                        agqmaster:delete_hired_nonowned = "Y"
                        end
                    end
                end

            end

    Access agqgeneral, Set agqgeneral:app_no = G_app_no, generic

    Access agqGENERAL_ALIAS, Set agqGENERAL_ALIAS:app_no = G_app_no,
                                 agqGENERAL_ALIAS:PREM_NO = G_PREM_NO,
                                 agqGENERAL_ALIAS:BUILD_NO = G_BUILD_NO, Generic

    Access SFSLINE_ALIAS, Set SFSLINE_alias:COMPANY_ID = agqgeneral:company_id,
                              SFSLINE_alias:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                              SFSLINE_alias:LOB_SUBLINE = "00", Generic

    if sfsline:lob_code = "CPORTFOLIO" then
        l_deductible = agqmastsupp:deductible
    else
        l_deductible = agqmaster:deductible
    Access sfsdeductible, Set sfsdeductible:COMPANY_ID       = agqgeneral_alias:company_id,
                              sfsdeductible:STATE            = agqgeneral_alias:state,
                              sfsdeductible:LINE_OF_BUSINESS = agqgeneral_alias:line_of_business,
                              sfsdeductible:deductible       = l_deductible, Generic

    l_code_17 = ""
    while sfsdeductible:COMPANY_ID       = agqgeneral_alias:company_id and
          sfsdeductible:STATE            = agqgeneral_alias:STATE and
          sfsdeductible:LINE_OF_BUSINESS = agqgeneral_alias:line_of_business and
          sfsdeductible:deductible       = l_deductible
        begin
        If agqgeneral:EFF_DATE >= sfsdeductible:EFF_DATE Then
            Begin
            L_CODE_17  = sfsdeductible:wind_exclusion_code
            End

        Next sfsdeductible
        End

    If L_CODE_17 <> "" Then
        Begin
        L_CODE = L_CODE_17
        Do ACCESS_agqEND
        If L_ADD_ENDORSEMENT = "Y" And
           agqGENERAL_ALIAS:windstorm_exclusion = 1 Then
            Do ADD_agqEND
        else
        If L_ADD_ENDORSEMENT = "N" And
           agqGENERAL_ALIAS:windstorm_exclusion = 0 Then
            Do DELETE_agqEND
        End

    access bpssupplemental, set bpssupplemental:company_id       = agqgeneral:company_id,
                                bpssupplemental:state            = agqgeneral:state,
                                bpssupplemental:line_of_business = agqgeneral:line_of_business, generic

    l_code_1 = ""
    while bpssupplemental:company_id       = agqgeneral:company_id and
          bpssupplemental:state            = agqgeneral:state and
          bpssupplemental:line_of_business = agqgeneral:line_of_business
        begin
        if agqgeneral:eff_date >= bpssupplemental:eff_date then
            begin
            l_code_1 = bpssupplemental:code
            end

        next bpssupplemental
        end

    if l_code_1 <> "" then
        begin
        l_code = l_code_1
        do access_agqend
        if l_add_endorsement = "Y" and
           agqgeneral:special_enhancement = 1 then
            do add_agqend
        else
        if l_add_endorsement = "N" and
           agqgeneral:special_enhancement = 0 then
            do delete_agqend
        end

    Access bpssupplemental, Set bpssupplemental:COMPANY_ID       = agqgeneral:company_id,
                                bpssupplemental:state            = agqgeneral:state,
                                bpssupplemental:LINE_OF_BUSINESS = agqgeneral:line_of_business, generic

    l_bpssupplemental_eff_date = 0
    while bpssupplemental:company_id       = agqgeneral:company_id and
          bpssupplemental:state            = agqgeneral:state and
          bpssupplemental:line_of_business = agqgeneral:line_of_business
            begin
            if agqgeneral:eff_date >= bpssupplemental:eff_date then
                begin
                l_bpssupplemental_eff_date = bpssupplemental:eff_date
                end

            next bpssupplemental
            end

    Access bpssupplemental, Set bpssupplemental:COMPANY_ID       = agqgeneral:company_id,
                                bpssupplemental:state            = agqgeneral:state,
                                bpssupplemental:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                                bpssupplemental:eff_date         = l_bpssupplemental_eff_date, generic

    l_form = agqmaster:form
    access bpsdefault1, set bpsdefault1:company_id = agqgeneral:company_id,
                            bpsdefault1:line_of_business = agqgeneral:line_of_business,
                            bpsdefault1:form = l_form, generic

    access bpsdefault, set bpsdefault:company_id = agqgeneral:company_id,
                           bpsdefault:line_of_business = agqgeneral:line_of_business,
                           bpsdefault:form = l_form, generic

    Access agsdefault_bop, Set agsdefault_bop:COMPANY_ID       = agqgeneral:COMPANY_ID,
                               agsdefault_bop:state            = agqgeneral:state,
                               agsdefault_bop:agent_no         = agqgeneral:agent_no,
                               agsdefault_bop:LINE_OF_BUSINESS = agqgeneral:LINE_OF_BUSINESS, generic

    l_code_1 = ""
    l_code_2 = ""
    l_code_3 = ""
    l_code_8 = ""
    l_code_9 = ""
    l_code_10 = ""
    l_code_11 = ""
    If SFSLINE_ALIAS:OPTION = "P" Then
        Begin
        L_CODE_1  = agsdefault_bop:COMPUTER_CODE
        L_CODE_2  = agsdefault_bop:EMPLOYEE_DIS_CODE
        L_CODE_3  = agsdefault_bop:INDOOR_GLASS_CODE
        L_CODE_8  = agsdefault_bop:COMPUTER_HACKING
        l_code_9  = agsdefault_bop:computer_code_1
        l_code_11 = agsdefault_bop:water_damage_code

        If L_CODE_1 <> "" Then
            Begin
            g_prem_no = agqgeneral:prem_no
            g_build_no = agqgeneral:build_no
            -- computer
            if l_code_9 <> "" and
               agqgeneral:eff_date >= agsdefault_bop:computer_code_1_eff_date then
                l_code = l_code_9
            else
                L_CODE = L_CODE_1
            Do ACCESS_agqEND
            If L_ADD_ENDORSEMENT = "Y" Then
                Begin
                Do ADD_agqEND
                if g_enhancement = 1 then
                    begin
                    l_computer_limit = agqgeneral:property_limit * (bpssupplemental:computer_hardware_percent divide 100)
                    if bpssupplemental:computer_coverage_hardware > l_computer_limit then
                        L_COMPUTER_LIMIT   = bpssupplemental:computer_coverage_hardware
                    l_computer_limit_1 = agqgeneral:property_limit * (bpssupplemental:computer_software_percent divide 100)
                    if bpssupplemental:computer_coverage_media > l_computer_limit_1 then
                        l_computer_limit_1 = bpssupplemental:computer_coverage_media
                    l_computer_limit_2 = agqgeneral:property_limit * (bpssupplemental:extra_expense_percent divide 100)
                    if bpssupplemental:extra_expense_limit > l_computer_limit_2 then
                        l_computer_limit_2 = bpssupplemental:extra_expense_limit
                    end
                else
                    begin
                    l_computer_limit = agqgeneral:property_limit * (bpsdefault1:computer_hardware_percent divide 100)
                    if bpsdefault1:computer_hardware_limit > l_computer_limit and
                       agqgeneral:company_id <> "GGUND" then
                        L_COMPUTER_LIMIT   = bpsdefault1:computer_hardware_limit
                    else
                        l_computer_limit   = bpsdefault:computer_limit
                    l_computer_limit_1 = agqgeneral:property_limit * (bpsdefault1:computer_software_percent divide 100)
                    if bpsdefault1:computer_software_limit > l_computer_limit_1 and
                       agqgeneral:company_id <> "GGUND" then
                        l_computer_limit_1 = bpsdefault1:computer_software_limit
                    else
                        l_computer_limit_1 = bpsdefault:computer_limit_1
                    l_computer_limit_2 = agqgeneral:property_limit * (bpsdefault1:extra_expense_percent divide 100)
                    if bpsdefault1:extra_expense_limit > l_computer_limit_2 and
                       agqgeneral:company_id <> "GGUND" then
                        l_computer_limit_2 = bpsdefault1:extra_expense_limit
                    end

                L_COMPUTER_DESC    = agsdefault_bop:COMPUTER_hardware
                l_computer_desc_1  = agsdefault_bop:computer_software

                Do ADD_COMPUTER_INFO
                End
            If L_ADD_ENDORSEMENT = "N" Then
                Begin
                if g_enhancement = 1 then
                    begin
                    l_computer_limit = agqgeneral:property_limit * (bpssupplemental:computer_hardware_percent divide 100)
                    if bpssupplemental:computer_coverage_hardware > l_computer_limit then
                        L_COMPUTER_LIMIT   = bpssupplemental:computer_coverage_hardware
                    l_computer_limit_1 = agqgeneral:property_limit * (bpssupplemental:computer_software_percent divide 100)
                    if bpssupplemental:computer_coverage_media > l_computer_limit_1 then
                        l_computer_limit_1 = bpssupplemental:computer_coverage_media
                    l_computer_limit_2 = agqgeneral:property_limit * (bpssupplemental:extra_expense_percent divide 100)
                    if bpssupplemental:extra_expense_limit > l_computer_limit_2 then
                        l_computer_limit_2 = bpssupplemental:extra_expense_limit
                    end
                else
                    begin
                    l_computer_limit = agqgeneral:property_limit * (bpsdefault1:computer_hardware_percent divide 100)
                    if bpsdefault1:computer_hardware_limit > l_computer_limit and
                       agqgeneral:company_id <> "GGUND" then
                        L_COMPUTER_LIMIT   = bpsdefault1:computer_hardware_limit
                    else
                        l_computer_limit = bpsdefault:computer_limit
                    l_computer_limit_1 = agqgeneral:property_limit * (bpsdefault1:computer_software_percent divide 100)
                    if bpsdefault1:computer_software_limit > l_computer_limit_1 and
                       agqgeneral:company_id <> "GGUND" then
                        l_computer_limit_1 = bpsdefault1:computer_software_limit
                    else
                        l_computer_limit_1 = bpsdefault:computer_limit_1
                    l_computer_limit_2 = agqgeneral:property_limit * (bpsdefault1:extra_expense_percent divide 100)
                    if bpsdefault1:extra_expense_limit > l_computer_limit_2 and
                       agqgeneral:company_id <> "GGUND" then
                        l_computer_limit_2 = bpsdefault1:extra_expense_limit
                    end

                L_COMPUTER_DESC    = agsdefault_bop:COMPUTER_hardware
                l_computer_desc_1  = agsdefault_bop:computer_software

                if agqgeneral:company_id = "FLEMINGTON" then
                    do change_computer_info_ficof
                else
                    Do CHANGE_COMPUTER_INFO
                End
            End

        If L_CODE_2 <> "" Then
            Begin
            -- employee dishonesty
            L_CODE = L_CODE_2
            do access_agqend_1
            If L_ADD_ENDORSEMENT = "Y" Then
                Begin
                Do ADD_agqEND_1
                if g_enhancement = 1 then
                    l_employee_limit = bpssupplemental:employee_dishonesty
                else
                    L_EMPLOYEE_LIMIT = agsdefault_bop:EMPLOYEE_DISHONESTY
                Do ADD_EMPLOYEE_DIS_INFO_1
                End
            End

        If L_CODE_3 <> "" Then
            Begin
            -- indoor glass
            L_CODE = L_CODE_3
            Do ACCESS_agqEND
            If L_ADD_ENDORSEMENT = "Y" Then
                Begin
                Do ADD_agqEND
                if g_enhancement = 1 then
                    begin
                    l_glass_limit = (agqgeneral:property_limit *
                                    (bpssupplemental:indoor_glass_percent divide 100))
                    if l_glass_limit < bpssupplemental:indoor_glass_limit then
                        l_glass_limit = bpssupplemental:indoor_glass_limit
                    end
                else
                    begin
                    L_GLASS_LIMIT = (agqGENERAL:PROPERTY_LIMIT *
                                    (agsdefault_bop:INDOOR_GLASS_PERCENT Divide 100))
                    If L_GLASS_LIMIT < agsdefault_bop:INDOOR_GLASS_LIMIT Then
                        L_GLASS_LIMIT = agsdefault_bop:INDOOR_GLASS_LIMIT
                    end
                Do ADD_INDOOR_GLASS_INFO
                End
            If L_ADD_ENDORSEMENT = "N" Then
                Begin
                if g_enhancement = 1 then
                    begin
                    l_glass_limit = (agqgeneral:property_limit *
                                    (bpssupplemental:indoor_glass_percent divide 100))
                    if l_glass_limit < bpssupplemental:indoor_glass_limit then
                        l_glass_limit = bpssupplemental:indoor_glass_limit
                    end
                else
                    begin
                    L_GLASS_LIMIT = (agqGENERAL:PROPERTY_LIMIT *
                                    (agsdefault_bop:INDOOR_GLASS_PERCENT Divide 100))
                    If L_GLASS_LIMIT < agsdefault_bop:INDOOR_GLASS_LIMIT Then
                        L_GLASS_LIMIT = agsdefault_bop:INDOOR_GLASS_LIMIT
                    end
                g_prem_no = agqgeneral:prem_no
                g_build_no = agqgeneral:build_no
                Do CHANGE_INDOOR_GLASS_INFO
                End
            End

        If L_CODE_8 <> "" Then
            Begin
            -- computer hacking
            L_CODE = L_CODE_8
            Do ACCESS_agqEND
            If L_ADD_ENDORSEMENT = "Y" Then
                Begin
                Do ADD_agqEND
                End
            End

        If L_CODE_11 <> "" then
            Begin
            -- BU5003 - water damage code
            L_CODE = L_CODE_11
            Do ACCESS_agqEND
            If L_ADD_ENDORSEMENT = "Y" and
               agqgeneral:water_backup_limit <> 0 Then
                Begin
                Do ADD_agqEND
                End
            End
        End
    else
        begin
        L_CODE_1  = agsdefault_bop:COMPUTER_CODE
        L_CODE_2  = agsdefault_bop:EMPLOYEE_DIS_CODE
        L_CODE_8  = agsdefault_bop:COMPUTER_HACKING
        l_code_11 = agsdefault_bop:water_damage_code

        If L_CODE_1 <> "" and
           g_enhancement = 1 then
            Begin
            -- computer
            L_CODE = L_CODE_1
            Do ACCESS_agqEND
            If L_ADD_ENDORSEMENT = "Y" Then
                Begin
                Do ADD_agqEND
                L_COMPUTER_LIMIT   = agsdefault_bop:COMPUTER_LIMIT
                l_computer_limit_1 = agsdefault_bop:computer_limit_1
                L_COMPUTER_DESC    = agsdefault_bop:COMPUTER_hardware
                l_computer_desc_1  = agsdefault_bop:computer_software
                l_computer_limit_2 = 0
                Do ADD_COMPUTER_INFO
                End
            End

        If L_CODE_2 <> "" and
           g_enhancement = 1 then
            Begin
            -- employee dishonesty
            L_CODE = L_CODE_2
            do access_agqend_1
            If L_ADD_ENDORSEMENT = "Y" Then
                Begin
                do add_agqend_1
                L_EMPLOYEE_LIMIT = agsdefault_bop:EMPLOYEE_DISHONESTY
                Do ADD_EMPLOYEE_DIS_INFO_1
                End
            End

        If L_CODE_8 <> "" and
           g_enhancement = 1 then
            Begin
            -- computer hacking
            L_CODE = L_CODE_8
            Do ACCESS_agqEND
            If L_ADD_ENDORSEMENT = "Y" Then
                Begin
                Do ADD_agqEND
                End
            End

        If L_CODE_11 <> "" and
           g_enhancement = 1 or
           l_code_11 <> "" and
           agqgeneral:company_id = "GGUND" then
            Begin
            -- BU5003 - water damage code
            L_CODE = L_CODE_11
            Do ACCESS_agqEND
            If L_ADD_ENDORSEMENT = "Y" and
               agqgeneral:water_backup_limit <> 0 Then
                Begin
                Do ADD_agqEND
                End
            End

        end

        Access BPSCREDITS, Set BPSCREDITS:COMPANY_ID = agqGENERAL:COMPANY_ID,
                               BPSCREDITS:STATE = agqGENERAL:STATE,
                               BPSCREDITS:LINE_OF_BUSINESS = agqGENERAL:LINE_OF_BUSINESS, Generic

        Repeat Begin
            Exit If BPSCREDITS:COMPANY_ID <> agqGENERAL:COMPANY_ID Or
                    BPSCREDITS:STATE <> agqGENERAL:STATE Or
                    BPSCREDITS:LINE_OF_BUSINESS <> agqGENERAL:LINE_OF_BUSINESS

            If agqgeneral:EFF_DATE >= BPSCREDITS:EFF_DATE Then
                Begin
                L_CODE_1 = BPSCREDITS:ALARM_CODE[1]
                L_CODE_2 = BPSCREDITS:ALARM_CODE[2]
                End

        Next BPSCREDITS
        End

        If L_CODE_1 <> "" Then
            Begin
            -- burglary
            L_CODE = L_CODE_1
            Do ACCESS_agqEND
            If L_ADD_ENDORSEMENT = "Y" And
               agqGENERAL_alias:ALARM_OPTION[2] = "Y" then
                Do ADD_agqEND
            If L_ADD_ENDORSEMENT = "N" And
               agqGENERAL_alias:ALARM_OPTION[2] = "N" then
                Do DELETE_agqEND
            End

        If L_CODE_2 <> "" Then
            Begin
            -- fire alarm
            L_CODE = L_CODE_2
            Do ACCESS_agqEND
            If L_ADD_ENDORSEMENT = "Y" And
               agqGENERAL_alias:ALARM_OPTION[1] = "Y" then
                Do ADD_agqEND
            If L_ADD_ENDORSEMENT = "N" And
               agqGENERAL_alias:ALARM_OPTION[1] = "N" then
                Do DELETE_agqEND
            End
        end

    if function one of "ADD", "NEW", "CHANGE", "CHG" then
        begin
        do update_triggers
        do add_bpstrigger
        Access BPSRATE, Set BPSRATE:COMPANY_ID       = agqgeneral:COMPANY_ID,
                            BPSRATE:STATE            = agqgeneral:state,
                            BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

        l_code_1 = ""
        while bpsrate:company_id = agqgeneral:company_id and
              bpsrate:state = agqgeneral:state and
              bpsrate:line_of_business = agqgeneral:line_of_business
            begin
            If agqgeneral:EFF_DATE >= BPSRATE:EFF_DATE Then
                Begin
                L_CODE_1 = BPSRATE:HIRED_NONOWNED_CODE[1] -- BU5004
                L_CODE_2 = BPSRATE:HIRED_NONOWNED_CODE[2] -- BU0140
                End

            Next BPSRATE
            End

        If L_CODE_1 <> "" Then
            Begin
            -- delete Hired/Nonown
            L_CODE = L_CODE_1
            Do ACCESS_agqend
            If L_ADD_ENDORSEMENT = "Y" And
               agqmaster:DELETE_HIRED_NONOWNED = "Y" Then
                Do ADD_agqend
            If L_ADD_ENDORSEMENT = "N" And
               agqmaster:DELETE_HIRED_NONOWNED = "N" Then
                Do DELETE_agqend
            End

        If L_CODE_2 <> "" Then
            Begin
            -- extend hired/nonowned
            L_CODE = L_CODE_2
            Do ACCESS_agqend
            If L_ADD_ENDORSEMENT = "Y" And
               agqmaster:EXTEND_HIRED_NONOWNED = "Y" Then
                Do ADD_agqend
            If L_ADD_ENDORSEMENT = "N" And
               agqmaster:EXTEND_HIRED_NONOWNED = "N" Then
                Do DELETE_agqend
            End

    access agqmaster, set agqmaster:app_no = g_app_no, generic

    if agqmaster:app_no = g_app_no then
        begin
        change agqmaster
            begin
            if agqmaster:delete_hired_nonowned = "" then
                agqmaster:delete_hired_nonowned = "N"
            if agqmaster:extend_hired_nonowned = "" then
                agqmaster:extend_hired_nonowned = "N"
            end
        end

    access agqgeneral_alias, set agqgeneral_alias:app_no = g_app_no, generic

    l_attorney = "N"
    while agqgeneral_alias:app_no = g_app_no
        begin
        if agqgeneral_alias:class_code one of 51 and
           agqgeneral_alias:bpsclass_sub_code one of 60 then
            l_attorney = "Y"

        next agqgeneral_alias
        end

    if agqgeneral:eff_date >= bpsdefault1:epl_eff_date then
        begin
        if agqmaster:exclude_epl = 0 then
            begin
            if l_attorney = "Y" then
                begin
                access agqepl, set agqepl:app_no = g_app_no, generic

                if agqepl:app_no = g_app_no then
                    begin
                    change agqepl
                        begin
                        agqepl:epl_limit      = 0
                        agqepl:epl_deductible = 0
                        end
                    end
                else
                    begin
                    add agqepl
                        begin
                        agqepl:app_no         = g_app_no
                        agqepl:epl_limit      = 0
                        agqepl:epl_deductible = 0
                        end
                    end
                end
            else
                begin
                access agqepl, set agqepl:app_no = g_app_no, generic

                if agqepl:app_no = g_app_no then
                    begin
                    change agqepl
                        begin
                        if agqepl:epl_limit = 0 then
                            agqepl:epl_limit      = bpsdefault1:epl_limit
                        if agqepl:epl_deductible = 0 then
                            agqepl:epl_deductible = bpsdefault1:epl_deductible
                        end
                    end
                else
                    begin
                    add agqepl
                        begin
                        agqepl:app_no         = g_app_no
                        agqepl:epl_limit      = bpsdefault1:epl_limit
                        agqepl:epl_deductible = bpsdefault1:epl_deductible
                        end
                    end
                end
            end
        end

    if agqmaster:exclude_epl = 0 then
        begin
        access agqepl, set agqepl:app_no = g_app_no, generic

        l_company_id       = agqgeneral:company_id
        l_state            = agqgeneral:state
        l_line_of_business = agqgeneral:line_of_business
        Access BPSEPL, Set BPSEPL:COMPANY_ID       = l_company_id,
                           BPSEPL:STATE            = l_STATE,
                           BPSEPL:LINE_OF_BUSINESS = l_line_of_business,
                           bpsepl:limit            = agqepl:epl_limit,
                           bpsepl:deductible       = agqepl:epl_deductible, Generic

        l_code_1 = ""
        l_code_2 = ""
        l_code_3 = ""
        while BPSEPL:COMPANY_ID       = l_company_id and
              BPSEPL:STATE            = l_STATE and
              BPSEPL:LINE_OF_BUSINESS = l_line_of_business and
              bpsepl:limit            = agqepl:epl_limit and
              bpsepl:deductible       = agqepl:epl_deductible
            begin
            If agqgeneral:EFF_DATE >= BPSEPL:EFF_DATE Then
                Begin
                l_code_1 = bpsepl:code[1]
                l_code_2 = bpsepl:code[2]
                l_code_3 = bpsepl:code1[1]
                End

            Next BPSEPL
            End

        If L_CODE_1 <> "" Then
            Begin
            L_CODE = L_CODE_1
            Do ACCESS_agqEND_1
            If L_ADD_ENDORSEMENT = "Y" And
               agqepl:EPL_LIMIT <> 0 and
               l_attorney <> "Y" then
                Do ADD_agqEND_1
            else
            If ((L_ADD_ENDORSEMENT = "N" And
               agqepl:EPL_LIMIT = 0) or
               (l_add_endorsement = "N" and
               l_attorney = "Y")) then
                Do DELETE_agqEND_1
            End

        If L_CODE_2 <> "" Then
            Begin
            L_CODE = L_CODE_2
            Do ACCESS_agqEND_1
            If L_ADD_ENDORSEMENT = "Y" And
               agqepl:EPL_LIMIT <> 0 and
               l_attorney <> "Y" then
                Do ADD_agqEND_1
            else
            If ((L_ADD_ENDORSEMENT = "N" And
               agqepl:EPL_LIMIT = 0) or
               (l_add_endorsement = "N" and
               l_attorney = "Y")) then
                Do DELETE_agqEND_1
            End

        If L_CODE_3 <> "" Then
            Begin
            L_CODE = L_CODE_3
            Do ACCESS_agqEND_1
            If L_ADD_ENDORSEMENT = "Y" And
               agqepl:EPL_LIMIT <> 0 and
               agqgeneral:state = 19 and
               l_attorney <> "Y" Then
                Do ADD_agqEND_1
            else
            If ((L_ADD_ENDORSEMENT = "N" And
               agqepl:EPL_LIMIT = 0) or
               (l_add_endorsement = "N" and
               agqgeneral:state <> 19) or
               (l_add_endorsement = "N" and
               l_attorney = "Y")) Then
                Do DELETE_agqEND_1
            End
        end
    end
    end

    End

Procedure Definition

procedure get_sfszipcode
begin
l_val_zipcode = agqgeneral:zipcode
l_str_zipcode = agqgeneral:str_zipcode[1,5] + "0000"
access sfszipcode, set sfszipcode:company_id       = agqgeneral:company_id,
                       sfszipcode:state            = agqgeneral:state,
                       sfszipcode:line_of_business = agqgeneral:line_of_business,
                       sfszipcode:str_zipcode      = l_str_zipcode, generic

l_tier = 0
l_restricted = 0
l_restricted_distance = 0
while sfszipcode:company_Id       = agqgeneral:company_id and
      sfszipcode:state            = agqgeneral:state and
      sfszipcode:line_of_business = agqgeneral:line_of_business and
      sfszipcode:str_zipcode      = l_str_zipcode
        begin
        if (agqgeneral:eff_date >= sfszipcode:eff_date and
           (agqgeneral:eff_date <= sfszipcode:exp_date or
           sfszipcode:exp_date = 0)) then
            begin
            l_restricted = sfszipcode:restricted
            l_restricted_distance = sfszipcode:restricted_distance
            end

        next sfszipcode
        end

end

procedure update_agqmaster
BEGIN
access agqmaster, set agqmaster:app_no = g_app_no, exact

if agqmaster:app_no = g_app_no then
    {
    change agqmaster
        {
        agqmaster:form_of_business  = l_form_of_business
        agqmaster:FOB_DESCRIPTION   = l_fob_description1
        }
    }

END

/*procedure check_for_helpwording
begin
access scshelpfile, set scshelpfile:company_id       = l_company_id,
                        scshelpfile:state            = l_state,
                        scshelpfile:line_of_business = l_line_of_business,
                        scshelpfile:screen_name      = l_screen_name,
                        scshelpfile:field_no         = l_field_no, generic

l_sub             = 1
l_sub_1           = 1
l_first_bold_one  = 0
l_second_bold_one = 0
while l_sub < 2
    begin
    while l_sub_1 < 25
        begin
        if scshelpfile:help_message[l_sub,l_sub_1,l_sub_1] = "#" and
           l_first_bold_one = 0 then
            begin
            l_first_bold_one  = 1
            l_second_bold_one = 0
            end
        else
        if scshelpfile:help_message[l_sub,l_sub_1,l_sub_1] = "#" and
           l_first_bold_one = 1 then
            begin
            l_first_bold_one  = 0
            l_second_bold_one = 1
            end

        if l_first_bold_one  = 1 and
           l_second_bold_one = 0 and
           scshelpfile:help_message[1,l_sub_1,l_sub_1] <> "#" then
            begin
            l_string_view = "t_view" + trun(str(l_sub_1))
            l_tag_position = l_sub_1
            l_the_tag[l_sub_1] = tag(trun(l_string_view))
            l_text_1 = scshelpfile:help_message[1,l_sub_1,l_sub_1]
            do printboldtext(l_the_tag[l_tag_position],trun(l_text_1))
            end
        else
        if l_first_bold_one  = 0  and
           l_second_bold_one = 1 and
           scshelpfile:help_message[1,l_sub_1,l_sub_1] <> "#" then
            begin
            l_string_view = "t_view" + trun(str(l_sub_1))
            l_tag_position = l_sub_1
            l_the_tag[l_sub_1] = tag(trun(l_string_view))
            l_text_1 = scshelpfile:help_message[1,l_sub_1,l_sub_1]
--            do printplaintext(l_the_tag[l_tag_position],trun(l_text_1))
            end

        l_sub_1 = l_sub_1 + 1
        end

    l_sub = l_sub + 1
    end
end*/


/*
procedure check_for_helpwording
begin
access scshelpfile, set scshelpfile:company_id       = l_company_id,
                        scshelpfile:state            = l_state,
                        scshelpfile:line_of_business = l_line_of_business,
                        scshelpfile:screen_name      = l_screen_name,
                        scshelpfile:field_no         = l_field_no, generic

l_string_view = "t_view1"
l_tag_position = 1
l_the_tag[1] = tag(trun(l_string_view))
l_text_1 = scshelpfile:help_message[1]
do printguidetext(l_the_tag[l_tag_position],trun(l_text_1))

l_string_view = "t_view2"
l_tag_position = 2
l_the_tag[2] = tag(trun(l_string_view))
l_text_1 = scshelpfile:help_message[2]
do printguidetext(l_the_tag[l_tag_position],trun(l_text_1))

l_string_view = "t_view3"
l_tag_position = 3
l_the_tag[3] = tag(trun(l_string_view))
l_text_1 = trun(scshelpfile:help_message[3])
do printguidetext(l_the_tag[l_tag_position],trun(l_text_1))

l_string_view = "t_view4"
l_tag_position = 4
l_the_tag[4] = tag(trun(l_string_view))
l_text_1 = scshelpfile:help_message[4]
do printguidetext(l_the_tag[l_tag_position],trun(l_text_1))

l_string_view = "t_view5"
l_tag_position = 5
l_the_tag[5] = tag(trun(l_string_view))
l_text_1 = scshelpfile:help_message[5]
do printguidetext(l_the_tag[l_tag_position],trun(l_text_1))

end
*/

procedure change_current_browser (string p_server_name, string p_current_web_page)

BEGIN
  l_web_site_address = trun(p_server_name) + trun(p_current_web_page)
  setproperty(helper_tg,url,trun(l_web_site_address))
END
/*
procedure printboldtext(tag current_tag, string display_string)
begin
    setproperty(current_tag,fontstyle,bold)
    setproperty(current_tag,font,"Arial")
    setproperty(current_tag, text, display_string)
end

procedure printplaintext(tag current_tag, string display_string)
begin
    setproperty(current_tag,fontstyle,plain)
    setproperty(current_tag, text, display_string)
end

procedure printunderlinetext(tag current_tag, string display_string)
begin
    setproperty(current_tag,underlined,true)
end

procedure printitalictext(tag current_tag, string display_string)
begin
    setproperty(current_tag,fontstyle,italic)
end

procedure printbolditalictext(tag current_tag, string display_string)
begin
    setproperty(current_tag,fontstyle,bolditalic)
end

procedure printguidetext(tag current_tag, string display_string)
begin
    setproperty(current_tag, text, display_string)
end
*/
procedure add_agqmaster
begin
access agqmaster, set agqmaster:app_no = g_app_no, generic

l_state = agqgeneral:state
if agqgeneral:property_limit <> 0 then
    l_form = 3
else
    l_form = 1

access agsdefault_bop, set agsdefault_bop:company_id       = l_company_id,
                           agsdefault_bop:state            = l_state,
                           agsdefault_bop:agent_no         = l_agent_no,
                           agsdefault_bop:line_of_business = l_line_of_business,
                           agsdefault_bop:form             = l_form, generic

access sfsliability, set sfsliability:company_id       = agqgeneral:company_id,
                         sfsliability:state            = agqgeneral:state,
                         sfsliability:line_of_business = agqgeneral:line_of_business,
                         sfsliability:liability_code   = agsdefault_bop:liability_code, generic


if g_enhancement = 0 then
    begin
    add agqmaster
        begin
        agqmaster:app_no                    =       g_app_no
        agqmaster:form                      =       l_form
        agqmaster:deductible                =       agsdefault_bop:deductible
        agqmaster:liability_code            =       agsdefault_bop:liability_code
        agqmaster:medical_limit             =       agsdefault_bop:medical_limit
        agqmaster:personal_add_injury       =       sfsliability:limit
        agqmaster:general_aggregate         =       sfsliability:limit * agsdefault_bop:aggregate_percent
        agqmaster:off_premises_limit        =       agsdefault_bop:off_premises_b
        agqmaster:delete_hired_nonowned     =       agsdefault_bop:delete_nonowned
        if agqmaster:delete_hired_nonowned = "" then
            agqmaster:delete_hired_nonowned =       "N"
        agqmaster:extend_hired_nonowned     =       agsdefault_bop:extended_hired_nonowned
        if agqmaster:extend_hired_nonowned = "" then
            agqmaster:extend_hired_nonowned =       "N"
        agqmaster:exclude_terrorism         =       agsdefault_bop:exclude_terrorism
        end
    end

end

procedure add_agqmastsupp
begin
access agqmastsupp, set agqmastsupp:app_no = g_app_no,
                        agqmastsupp:line_of_business = agqgeneral:line_of_business, generic

if agqgeneral:property_limit <> 0 then
    l_form = 3
else
    l_form = 1

access agsdefault_bop, set agsdefault_bop:company_id       = l_company_id,
                           agsdefault_bop:state            = l_state,
                           agsdefault_bop:agent_no         = l_agent_no,
                           agsdefault_bop:line_of_business = l_line_of_business,
                           agsdefault_bop:form             = l_form, generic

access sfsliability, set sfsliability:company_id       = agqgeneral:company_id,
                         sfsliability:state            = agqgeneral:state,
                         sfsliability:line_of_business = agqgeneral:line_of_business,
                         sfsliability:liability_code   = agsdefault_bop:liability_code, generic


if g_enhancement = 0 then
    begin
    add agqmastsupp
        begin
        agqmastsupp:app_no                    =       g_app_no
        agqmastsupp:form                      =       l_form
        agqmastsupp:deductible                =       agsdefault_bop:deductible
        agqmastsupp:liability_code            =       agsdefault_bop:liability_code
        agqmastsupp:medical_limit             =       agsdefault_bop:medical_limit
        agqmastsupp:personal_add_injury       =       sfsliability:limit
        agqmastsupp:general_aggregate         =       sfsliability:limit * agsdefault_bop:aggregate_percent
        agqmastsupp:off_premises_limit        =       agsdefault_bop:off_premises_b
        agqmastsupp:delete_hired_nonowned     =       agsdefault_bop:delete_nonowned
        if agqmastsupp:delete_hired_nonowned = "" then
            agqmastsupp:delete_hired_nonowned =       "N"
        agqmastsupp:extend_hired_nonowned     =       agsdefault_bop:extended_hired_nonowned
        if agqmastsupp:extend_hired_nonowned = "" then
            agqmastsupp:extend_hired_nonowned =       "N"
        agqmastsupp:exclude_terrorism         =       agsdefault_bop:exclude_terrorism
        end
    end

end

procedure change_agqmaster
begin
access agqmaster, set agqmaster:app_no = g_app_no, generic

if agqgeneral:property_limit <> 0 then
    l_form = 3
else
    l_form = 1

l_state = agqgeneral:state
access agsdefault_bop, set agsdefault_bop:company_id       = l_company_id,
                           agsdefault_bop:state            = l_state,
                           agsdefault_bop:agent_no         = l_agent_no,
                           agsdefault_bop:line_of_business = l_line_of_business,
                           agsdefault_bop:form             = l_form, generic

access sfsliability, set sfsliability:company_id       = agqgeneral:company_id,
                         sfsliability:state            = agqgeneral:state,
                         sfsliability:line_of_business = agqgeneral:line_of_business,
                         sfsliability:liability_code = agsdefault_bop:liability_code, generic


change agqmaster
    begin
    if agqmaster:form = 0 then
        agqmaster:form                  =       l_form
    if agqmaster:deductible = 0 then
        agqmaster:deductible            =       agsdefault_bop:deductible
    if agqmaster:liability_code = 0 then
        agqmaster:liability_code        =       agsdefault_bop:liability_code
    if g_enhancement = 0 and
       agqmaster:medical_limit = 0 then
        agqmaster:medical_limit         =       agsdefault_bop:medical_limit
    if agqmaster:personal_add_injury = 0 then
        agqmaster:personal_add_injury       =       sfsliability:limit
    if agqmaster:general_aggregate = 0 then
        agqmaster:general_aggregate         =       sfsliability:limit * agsdefault_bop:aggregate_percent
    if agqmaster:off_premises_limit = 0 then
        agqmaster:off_premises_limit        =       agsdefault_bop:off_premises_b
    if agqmaster:delete_hired_nonowned = "" then
        agqmaster:delete_hired_nonowned     =       agsdefault_bop:delete_nonowned
    if agqmaster:delete_hired_nonowned = "" then
        agqmaster:delete_hired_nonowned =       "N"
    if agqmaster:extend_hired_nonowned = "" then
        agqmaster:extend_hired_nonowned     =       agsdefault_bop:extended_hired_nonowned
    if agqmaster:extend_hired_nonowned = "" then
        agqmaster:extend_hired_nonowned =       "N"
    if agqmaster:exclude_terrorism = 0 then
        agqmaster:exclude_terrorism         =       agsdefault_bop:exclude_terrorism
    end

end

procedure change_agqmastsupp
begin
access agqmastsupp, set agqmastsupp:app_no = g_app_no,
                        agqmastsupp:line_of_business = agqgeneral:line_of_business, generic

if agqgeneral:property_limit <> 0 then
    l_form = 3
else
    l_form = 1

access agsdefault_bop, set agsdefault_bop:company_id       = l_company_id,
                           agsdefault_bop:state            = l_state,
                           agsdefault_bop:agent_no         = l_agent_no,
                           agsdefault_bop:line_of_business = l_line_of_business,
                           agsdefault_bop:form             = l_form, generic

access sfsliability, set sfsliability:company_id       = agqgeneral:company_id,
                         sfsliability:state            = agqgeneral:state,
                         sfsliability:line_of_business = agqgeneral:line_of_business,
                         sfsliability:liability_code = agsdefault_bop:liability_code, generic


change agqmastsupp
    begin
    if agqmastsupp:form = 0 then
        agqmastsupp:form                  =       l_form
    if agqmastsupp:deductible = 0 then
        agqmastsupp:deductible            =       agsdefault_bop:deductible
    if agqmastsupp:liability_code = 0 then
        agqmastsupp:liability_code        =       agsdefault_bop:liability_code
    if g_enhancement = 0 and
       agqmastsupp:medical_limit = 0 then
        agqmastsupp:medical_limit         =       agsdefault_bop:medical_limit
    if agqmastsupp:personal_add_injury = 0 then
        agqmastsupp:personal_add_injury       =       sfsliability:limit
    if agqmastsupp:general_aggregate = 0 then
        agqmastsupp:general_aggregate         =       sfsliability:limit * agsdefault_bop:aggregate_percent
    if agqmastsupp:off_premises_limit = 0 then
        agqmastsupp:off_premises_limit        =       agsdefault_bop:off_premises_b
    if agqmastsupp:delete_hired_nonowned = "" then
        agqmastsupp:delete_hired_nonowned     =       agsdefault_bop:delete_nonowned
    if agqmastsupp:delete_hired_nonowned = "" then
        agqmastsupp:delete_hired_nonowned =       "N"
    if agqmastsupp:extend_hired_nonowned = "" then
        agqmastsupp:extend_hired_nonowned     =       agsdefault_bop:extended_hired_nonowned
    if agqmastsupp:extend_hired_nonowned = "" then
        agqmastsupp:extend_hired_nonowned =       "N"
    if agqmastsupp:exclude_terrorism = 0 then
        agqmastsupp:exclude_terrorism         =       agsdefault_bop:exclude_terrorism
    end

end

procedure get_heading(string l_display_heading)
begin
postevent("agtmt010b","set_info_box",l_display_heading)
end

procedure back_a_screen
begin
postevent("agtmt010","REMOVE_SCREEN")
postevent("agtmt010a","REMOVE_SCREEN")
postevent("agtmt010b","REMOVE_SCREEN")
postevent("agtmt001","REMOVE_SCREEN")
--function = "func2"
end

procedure access_sfscsexec
begin
i_csexec_application = "APQQUOTE                 "

access sfscsexec, set sfscsexec:application = i_csexec_application, generic

change sfscsexec
    begin
    i_csexec_number = sfscsexec:application_number + 1
    sfscsexec:application_number = i_csexec_number
    end

end

procedure update_triggers
begin
Access bpstrigger,
   Set bpstrigger:COMPANY_ID       = agqgeneral:company_id,
       bpstrigger:STATE            = agqgeneral:state,
       bpstrigger:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

l_code_1 = ""
l_code_2 = ""
l_code_3 = ""
l_code_4 = ""
l_code_5 = ""
l_code_6 = ""
l_code_7 = ""
l_code_8 = ""
while bpstrigger:COMPANY_ID       = agqgeneral:company_id and
      bpstrigger:STATE            = agqgeneral:STATE and
      bpstrigger:LINE_OF_BUSINESS = agqgeneral:line_of_business
  begin
    If agqgeneral:EFF_DATE >= bpstrigger:RATE_DATE Then
      Begin
        L_CODE_1 = bpstrigger:code[8] -- mcp140
        l_code_2 = bpstrigger:code[11] -- mcp250
        l_code_3 = bpstrigger:code[12] -- bu0185
        l_code_4 = bpstrigger:code[13] -- bu2512
        l_code_5 = bpstrigger:code[14] -- bu0242
        l_code_6 = bpstrigger:code[15] -- MCP105
        l_code_7 = bpstrigger:code[10] -- mcn883
        l_code_8 = bpstrigger:code1 -- bu0432
      end
    Next bpstrigger
  End

Access SFSLINE, Set SFSLINE:COMPANY_ID       = agqgeneral:company_id,
                    SFSLINE:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                    SFSLINE:LOB_SUBLINE      = "00", Generic

g_prem_no  = agqgeneral:prem_no
g_build_no = agqgeneral:build_no
If L_CODE_1 <> "" Then
  Begin
    L_CODE = L_CODE_1
    Do ACCESS_agqEND
    If L_ADD_ENDORSEMENT = "Y" Then
      begin
        Do ADD_agqEND
        do add_agqendorse
      end
  End

if l_code_2 <> "" then
  begin
    l_code = l_code_2
    do access_agqend
    if l_add_endorsement = "Y" and
       agqgeneral:building_limit <> 0 then
        do add_agqend
    if l_add_endorsement = "N" and
       agqgeneral:building_limit = 0 then
        do delete_agqend
  end

if l_code_3 <> "" then
  begin
    l_code = l_code_3
    do access_agqend
    if l_add_endorsement = "Y" and
       agqgeneral:building_limit <> 0 then
        do add_agqend
    if l_add_endorsement = "N" and
       agqgeneral:building_limit = 0 then
        do delete_agqend
  end

if l_code_4 <> "" then
    begin
    l_code = l_code_4
    do access_agqend
    if l_add_endorsement = "Y" and
       agqgeneral:building_limit <> 0 then
        do add_agqend
    if l_add_endorsement = "N" and
       agqgeneral:building_limit = 0 then
        do delete_agqend
    end

If L_CODE_5 <> "" Then
    Begin
    L_CODE = L_CODE_5
    Do ACCESS_agqEND
    If L_ADD_ENDORSEMENT = "Y" and
       agqgeneral:class_code one of 22, 78, 80 then
        begin
        Do ADD_agqEND
        end
    else
    if l_add_endorsement = "N" and
       agqgeneral:class_code not one of 22, 78, 80 then
        begin
        do delete_agqend
        end
    End

if l_code_6 <> "" then
    begin
    l_code = l_code_6
    do access_agqend_1
    if l_add_endorsement = "Y" and
       sfsline:option = "S" then
        begin
        do add_agqend_1
        end
    if l_add_endorsement = "N" and
       sfsline:option <> "S" then
        begin
        do delete_agqend_1
        end
    end

If L_CODE_7 <> "" Then
  Begin
    L_CODE = L_CODE_7
    Do ACCESS_AGQEND_1
    If L_ADD_ENDORSEMENT = "Y" Then
        begin
        Do ADD_AgqEND_1
        do add_agqendorse_1
        end
  End

if l_code_8 <> "" then
    begin
    l_code = l_code_8
    do access_agqend
    if l_add_endorsement = "Y" and
       agqgeneral:class_code one of 56 and
       agqgeneral:eff_date >= 08.01.2012 then
        begin
        do add_agqend
        end
    if ((l_add_endorsement = "N" and
       agqgeneral:class_code not one of 56) or
       (l_add_endorsement = "N" and
       agqgeneral:eff_date <= 07.31.2012)) then
        begin
        do delete_agqend
        end
    end

Access bpsrate,
   Set bpsrate:COMPANY_ID       = agqgeneral:company_id,
       bpsrate:STATE            = agqgeneral:state,
       bpsrate:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

l_code_1 = ""
while bpsrate:COMPANY_ID       = agqgeneral:company_id and
      bpsrate:STATE            = agqgeneral:STATE and
      bpsrate:LINE_OF_BUSINESS = agqgeneral:line_of_business
    begin
    If (agqgeneral:EFF_DATE >= bpsrate:eff_date and
       (agqgeneral:eff_date <= bpsrate:exp_date or
       bpsrate:exp_date = 0)) Then
        Begin
        L_CODE_1 = bpsrate:sprinkler_code
        end

    Next bpsrate
    End

If L_CODE_1 <> "" Then
    Begin
    L_CODE = L_CODE_1
    Do ACCESS_agqEND
    If L_ADD_ENDORSEMENT = "Y" and
       agqgeneral:sprinklers = "Y" Then
        begin
        Do ADD_agqEND
        end
    If L_ADD_ENDORSEMENT = "N" and
       agqgeneral:sprinklers = "N" Then
        begin
        Do DELETE_agqEND
        end
    End

end

Procedure ACCESS_agqEND_1
Begin
Access agqEND, Set agqEND:app_no = G_app_no ,
                   agqEND:PREM_NO = 0,
                   agqEND:BUILD_NO = 0, Generic

L_ADD_ENDORSEMENT = "Y"
while agqEND:app_no = G_app_no and
      agqEND:PREM_NO  = 0 and
      agqEND:BUILD_NO = 0
    begin
    If agqEND:CODE = L_CODE Then
        L_ADD_ENDORSEMENT = "N"

    Next agqEND
    End

End

Procedure ADD_agqEND_1
Begin
Access agqEND, Set agqEND:app_no = G_app_no ,
                   agqEND:PREM_NO  = 0,
                   agqEND:BUILD_NO = 0, Generic

L_SUB_CODE = 0
while agqEND:app_no = G_app_no and
      agqEND:PREM_NO  = 0 and
      agqEND:BUILD_NO = 0
    begin
    L_SUB_CODE = agqEND:SUB_CODE

    Next agqEND
    End

L_SUB_CODE = L_SUB_CODE + 10

Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID       = agqgeneral:company_id,
                      SFSOPTEND:STATE            = agqgeneral:STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                      SFSOPTEND:CODE             = L_CODE, Generic

while SFSOPTEND:COMPANY_ID       = agqgeneral:company_id and
      SFSOPTEND:STATE            = agqgeneral:STATE and
      SFSOPTEND:LINE_OF_BUSINESS = agqgeneral:line_of_business and
      SFSOPTEND:CODE             = L_CODE
    begin
    If (agqgeneral:EFF_DATE >= SFSOPTEND:EFF_DATE and
       (agqgeneral:eff_date <= sfsoptend:exp_date or
       sfsoptend:exp_date = 0)) Then
        Begin
        L_FORM_EDITION = SFSOPTEND:FORM_EDITION
        L_DESCRIPTION  = SFSOPTEND:DESCRIPTION
        l_mcp140_limit = sfsoptend:limit[1]
        End

    Next SFSOPTEND
    End

Add agqEND
    Begin
    agqEND:app_no               =       G_app_no
    agqEND:PREM_NO              =       0
    agqEND:BUILD_NO             =       0
    agqEND:SUB_CODE             =       L_SUB_CODE
    agqEND:CODE                 =       L_CODE
    agqEND:FORM_EDITION         =       L_FORM_EDITION
    agqEND:DESCRIPTION          =       L_DESCRIPTION
    agqEND:PREMIUM              =       0
    agqend:lob_end_code         =       "X"
    End

End

procedure add_bpstrigger
begin
access agqgeneral, set agqgeneral:app_no = g_app_no, generic

Access BPSRATE, Set BPSRATE:COMPANY_ID       = agqgeneral:company_id,
                    BPSRATE:STATE            = agqgeneral:STATE,
                    BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

l_code_1 = ""
l_code_2 = ""
l_code_3 = ""
l_code_4 = ""
Repeat Begin
    Exit If BPSRATE:COMPANY_ID <> agqgeneral:company_id Or
            BPSRATE:STATE <> agqgeneral:STATE Or
            BPSRATE:LINE_OF_BUSINESS <> agqgeneral:line_of_business

    If agqgeneral:EFF_DATE >= BPSRATE:EFF_DATE Then
        Begin
        L_CODE_1 = BPSRATE:BOILERS_CODE
        l_code_2 = bpsrate:boiler_code_1 -- delos has 2 forms for boiler
        l_code_3 = "BU0286"
        l_code_4 = "BU0284"
        End

    Next BPSRATE
    End

If L_CODE_1 <> "" Then
    Begin
    -- boiler endorsement if answer BU2519 applies
    L_CODE = L_CODE_1
    Do ACCESS_agqEND
    If L_ADD_ENDORSEMENT = "Y" And
       agqGENERAL:BOILERS = "Y" Then
        Do ADD_agqEND
    else
    If L_ADD_ENDORSEMENT = "N" And
       agqGENERAL:BOILERS = "N" Then
        Do DELETE_agqEND
    End

If L_CODE_2 <> "" Then
    Begin
    -- boiler endorsement if answer mcm025
    L_CODE = L_CODE_2
    Do ACCESS_agqEND_1
    If L_ADD_ENDORSEMENT = "Y" And
       agqGENERAL:BOILERS = "Y" Then
        Do ADD_agqEND_1
    else
    If L_ADD_ENDORSEMENT = "N" And
       agqGENERAL:BOILERS = "N" Then
        Do DELETE_agqEND_1
    End

if l_code_3 <> "" and
   agqgeneral:company_id not one of "GGUND" then
    begin
    l_code = l_code_3
    do access_agqend
    if l_add_endorsement = "Y" and
       agqgeneral:bop_type one of 4, 5 then
        begin
        do add_agqend
        end
    if l_add_endorsement = "N" and
       agqgeneral:bop_type not one of 4, 5 then
        begin
        do delete_agqend
        end
    end

if l_code_4 <> "" and
   agqgeneral:company_id not one of "GGUND" then
    begin
    l_code = l_code_4
    do access_agqend
    if l_add_endorsement = "Y" and
       agqgeneral:bop_type one of 6, 8 then
        begin
        do add_agqend
        end
    if l_add_endorsement = "N" and
       agqgeneral:bop_type not one of 6, 8 then
        begin
        do delete_agqend
        end
    end

end

procedure minimum_maximum_limits
begin
if agqgeneral:property_limit <> 0 then
    l_form = 3
else
    l_form = 1

access sfsminmax1, set sfsminmax1:company_id       = agqgeneral:company_id,
                       sfsminmax1:state            = agqgeneral:state,
                       sfsminmax1:line_of_business = agqgeneral:line_of_business,
                       sfsminmax1:form             = l_form,
                       sfsminmax1:class_code       = agqgeneral:class_code, approximate

if agqgeneral:class_code = sfsminmax1:class_code then
    l_class_code = sfsminmax1:class_code
else
    l_class_code = 99999
access sfsminmax1, set sfsminmax1:company_id       = agqgeneral:company_id,
                       sfsminmax1:state            = agqgeneral:state,
                       sfsminmax1:line_of_business = agqgeneral:line_of_business,
                       sfsminmax1:form             = l_form,
                       sfsminmax1:class_code       = l_class_code, generic

while sfsminmax1:company_id        = agqgeneral:company_id and
      sfsminmax1:state             = agqgeneral:state and
      sfsminmax1:line_of_business  = agqgeneral:line_of_business and
      sfsminmax1:form              = l_form and
      sfsminmax1:class_code        = l_class_code
        begin
        if (agqgeneral:eff_date >= sfsminmax1:eff_date and
           (agqgeneral:eff_date <= sfsminmax1:exp_date or
           sfsminmax1:exp_date = 0)) then
            begin
            l_building_minimum_limit   = sfsminmax1:building_minimum
            l_contents_minimum_limit   = sfsminmax1:contents_minimum
            l_combined_minimum_limit   = sfsminmax1:combined_minimum
            l_building_maximum_limit   = sfsminmax1:building_maximum
            l_contents_maximum_limit   = sfsminmax1:contents_maximum
            l_combined_maximum_limit   = sfsminmax1:combined_maximum
            l_building_binding_limit   = sfsminmax1:building_binding
            l_contents_binding_limit   = sfsminmax1:contents_binding
            l_combined_binding_limit   = sfsminmax1:combined_binding
            l_min_error                = sfsminmax1:give_error[1]
            l_binding_error            = sfsminmax1:give_error[2]
            l_max_error                = sfsminmax1:give_error[3]
            l_minimum_message          = sfsminmax1:minimum_message
            l_combined_minimum_message = sfsminmax1:minimum_combined_message
            l_binding_message          = sfsminmax1:binding_message
            l_combined_binding_message = sfsminmax1:binding_combined_message
            l_maximum_message          = sfsminmax1:maximum_message
            l_combined_maximum_message = sfsminmax1:maximum_combined_message
            l_contact_message          = sfsminmax1:contact_message
            end

        next sfsminmax1
        end

end

procedure add_optional_coverages_bpsdefault2
begin
if sfsline:lob_code = "CPORTFOLIO" then
    begin
    access agqmastsupp, set agqmastsupp:app_no         = g_app_no,
                            agqmastsupp:line_of_business = g_line_of_business, generic

    l_form               = agqmastsupp:form
    l_off_premises_limit = agqmastsupp:off_premises_limit
    end
else
    begin
    access agqmaster, set agqmaster:app_no = g_app_no, exact

    l_form               = agqmaster:form
    l_off_premises_limit = agqmaster:off_premises_limit
    end

if l_form = 0 then
    begin
    if agqgeneral:property_limit <> 0 then
        l_form = 3
    else
        l_form = 1
    end

switch(l_form)
  case 1, 3 : begin
              if l_restaurant = 1 then
                  l_supplemental_form = "BU0421"/raw
              else
                  l_supplemental_form = "BU0403"/raw
              end
  default   : begin
              if l_restaurant = 1 then
                  l_supplemental_form = "BU0424"/raw
              else
                  l_supplemental_form = "BU0413"/raw
              end
  end

Access BPSDEFAULT2, Set BPSDEFAULT2:COMPANY_ID        = agqgeneral:company_id,
                        bpsdefault2:state             = agqgeneral:state,
                        BPSDEFAULT2:LINE_OF_BUSINESS  = agqgeneral:line_of_business,
                        BPSDEFAULT2:SUPPLEMENTAL_FORM = l_supplemental_form, Generic

l_bpsdefault2_eff_date = 0
while BPSDEFAULT2:COMPANY_ID        = agqgeneral:company_id and
      bpsdefault2:state             = agqgeneral:state and
      BPSDEFAULT2:LINE_OF_BUSINESS  = agqgeneral:line_of_business and
      BPSDEFAULT2:SUPPLEMENTAL_FORM = l_supplemental_form
        begin
        if (agqgeneral:eff_date >= bpsdefault2:eff_date and
           (agqgeneral:eff_date <= bpsdefault2:exp_date or
           bpsdefault2:exp_date = 0)) then
            l_bpsdefault2_eff_date = bpsdefault2:eff_date

        next bpsdefault2
        end

Access BPSDEFAULT2, Set BPSDEFAULT2:COMPANY_ID        = agqgeneral:company_id,
                        bpsdefault2:state             = agqgeneral:state,
                        BPSDEFAULT2:LINE_OF_BUSINESS  = agqgeneral:line_of_business,
                        BPSDEFAULT2:SUPPLEMENTAL_FORM = l_supplemental_form,
                        bpsdefault2:eff_date          = l_bpsdefault2_eff_date, Generic

Access SFSLINE_ALIAS, Set SFSLINE_alias:COMPANY_ID       = agqgeneral:company_id,
                          SFSLINE_alias:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                          SFSLINE_alias:LOB_SUBLINE      = "00", Generic

Access BPSDEFAULT, Set BPSDEFAULT:COMPANY_ID       = agqgeneral:company_id,
                       BPSDEFAULT:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                       BPSDEFAULT:FORM             = L_FORM, Generic

Access BPSDEFAULT1, Set BPSDEFAULT1:COMPANY_ID       = agqgeneral:company_id,
                        BPSDEFAULT1:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                        BPSDEFAULT1:FORM             = L_FORM, Generic

access sfsinflation, set sfsinflation:company_id       = agqgeneral:company_id,
                         sfsinflation:state            = agqgeneral:state,
                         sfsinflation:line_of_business = agqgeneral:line_of_business, generic

l_percent = 0
while sfsinflation:company_id       = agqgeneral:company_id and
      sfsinflation:state            = agqgeneral:state and
      sfsinflation:line_of_business = agqgeneral:line_of_business
        begin
        if agqgeneral:eff_date >= sfsinflation:eff_date then
            begin
            if sfsinflation:make_default = 1 then
                l_percent = sfsinflation:percent

            end

        next sfsinflation
        end

access agqmaster, set agqmaster:app_no = g_app_no, generic

if agqmaster:app_no = g_app_no then
    begin
    change agqmaster
        begin
        agqmaster:off_premises_limit = bpsdefault2:off_premises_b
        end
    end

If agqgeneral:DIFFERENT_OFF_PREMISES = 0 Then
    agqgeneral:OFF_PREMISES_LIMIT     = L_OFF_PREMISES_LIMIT

if l_percent <> 0 then
    agqgeneral:auto_percent           = l_percent
else
    agqgeneral:AUTO_PERCENT           = BPSDEFAULT2:AUTO_PERCENT

if agqgeneral:wind_deductible = 0 then
    agqgeneral:WIND_DEDUCTIBLE        = BPSDEFAULT2:WIND_DEDUCTIBLE

agqgeneral:LOSS_INCOME_LIMIT          = BPSDEFAULT2:LOSS_INCOME_LIMIT
If agqgeneral:TENANT = "Y" Then
    agqgeneral:LIMIT_LOSS_INCOME      = BPSDEFAULT2:LIMIT_LOSS_INCOME
Else
    agqgeneral:LIMIT_LOSS_INCOME      = "N"
If agqgeneral:LIMIT_LOSS_INCOME = "" Then
    agqgeneral:LIMIT_LOSS_INCOME      = "N"
agqgeneral:DELETE_LOSS_INCOME         = "N"

agqgeneral:SIGNS_LIMIT                = BPSDEFAULT2:outdoor_signs
If SFSLINE_ALIAS:OPTION = "P" Then
    Begin
    L_EXTERIOR_SIGNS_LIMIT                  = (L_PROPERTY_LIMIT_1 *
                                              (BPSDEFAULT2:EXTERIOR_SIGNS_PERCENT
                                              Divide 100))
    If L_EXTERIOR_SIGNS_LIMIT > agqgeneral:SIGNS_LIMIT Then
        agqgeneral:SIGNS_LIMIT        = L_EXTERIOR_SIGNS_LIMIT
    End

agqgeneral:SIGNS_DEDUCTIBLE[1]        = BPSDEFAULT2:outdoor_signs_deductible
agqgeneral:SIGNS_DEDUCTIBLE[2]        = BPSDEFAULT2:SIGNS_NOT_ATTACHED_DEDUCT

If agqgeneral:PROPERTY_LIMIT <> 0 And
   L_FORM <> 3 Then
    Begin
    agqgeneral:BURGLARY_LIMIT_ON      = BPSDEFAULT2:BURGLARY_LIMIT_ON
    agqgeneral:BURGLARY_LIMIT_OFF     = BPSDEFAULT2:BURGLARY_LIMIT_OFF
    End

If L_FORM = 3 Or
   agqgeneral:PROPERTY_LIMIT = 0 Then
    Begin
    agqgeneral:BURGLARY_LIMIT_ON      = 0
    agqgeneral:BURGLARY_LIMIT_OFF     = 0
    End

If agqgeneral:PROPERTY_LIMIT <> 0 And
   L_FORM = 3 Then
    Begin
    agqgeneral:MONEY_LIMIT_ON         = BPSDEFAULT2:MONEY_LIMIT_ON
    agqgeneral:MONEY_LIMIT_OFF        = BPSDEFAULT2:MONEY_LIMIT_OFF
    End

If ((L_FORM <> 3 and
   agqgeneral:attach_bu5001 = "N") Or
   (agqgeneral:PROPERTY_LIMIT = 0 and
   agqgeneral:attach_bu5001 = "N")) Then
    Begin
    agqgeneral:MONEY_LIMIT_ON         = 0
    agqgeneral:MONEY_LIMIT_OFF        = 0
    End

agqgeneral:AR_LIMIT                   = BPSDEFAULT2:AR_LIMIT
If SFSLINE_alias:OPTION = "P" Then
    Begin
    L_AR_LIMIT                              = (L_PROPERTY_LIMIT_1 *
                                              (BPSDEFAULT2:AR_PERCENT Divide 100))
    If L_AR_LIMIT > agqgeneral:AR_LIMIT Then
        agqgeneral:AR_LIMIT           = L_AR_LIMIT
    End
if agqgeneral:bop_type = 9 and
   sfscompany:boiler_rating = 1 then
    agqgeneral:ar_limit = 0

agqgeneral:UTILITY_LIMIT              = BPSDEFAULT2:UTILITY_LIMIT
If SFSLINE_alias:OPTION = "P" and
   sfscompany:boiler_rating <> 4 Then
    Begin
    L_UTILITY_LIMIT                         = (L_PROPERTY_LIMIT_1 *
                                              (BPSDEFAULT2:UTILITY_PERCENT Divide 100))
    If L_UTILITY_LIMIT > agqgeneral:UTILITY_LIMIT Then
        agqgeneral:UTILITY_LIMIT      = L_UTILITY_LIMIT
    If agqgeneral:UTILITY_LIMIT > BPSDEFAULT2:UTILITY_MAX and
       bpsdefault2:utility_max <> 0 Then
        agqgeneral:UTILITY_LIMIT      = BPSDEFAULT2:UTILITY_MAX
    End

agqgeneral:MECHANICAL_LIMIT           = BPSDEFAULT2:MECHANICAL_breakdown
If SFSLINE_alias:OPTION = "P" and
   sfscompany:boiler_rating <> 4 Then
    Begin
    L_MECHANICAL_LIMIT                      = (L_PROPERTY_LIMIT_1 *
                                              (BPSDEFAULT2:MECHANICAL_PERCENT Divide 100))
    If L_MECHANICAL_LIMIT > agqgeneral:MECHANICAL_LIMIT Then
        agqgeneral:MECHANICAL_LIMIT   = L_MECHANICAL_LIMIT
    If agqgeneral:MECHANICAL_LIMIT > BPSDEFAULT2:MECHANICAL_MAX and
       bpsdefault2:mechanical_max <> 0 Then
        agqgeneral:MECHANICAL_LIMIT   = BPSDEFAULT2:MECHANICAL_MAX
    End

agqgeneral:CUSTOMER_PROP_LIMIT        = BPSDEFAULT2:CUSTOMERS_PROPERTY_LIMIT
agqgeneral:POLLUTION_LIMIT            = BPSDEFAULT2:POLLUTION_CLEANUP
agqgeneral:debris_removal_limit       = bpsdefault2:debris_removal_limit
agqgeneral:VALUABLE_PAPERS_LIMIT      = BPSDEFAULT2:VALUABLE_PAPERS
If SFSLINE_alias:OPTION = "P" Then
    Begin
    L_VALUABLE_LIMIT                        = (L_PROPERTY_LIMIT_1 *
                                              (BPSDEFAULT2:VALUABLE_PERCENT Divide 100))
    If L_VALUABLE_LIMIT > agqgeneral:VALUABLE_PAPERS_LIMIT Then
        agqgeneral:VALUABLE_PAPERS_LIMIT = L_VALUABLE_LIMIT
    End
agqgeneral:FIRE_LIMIT                 = BPSDEFAULT2:fire_explosion
if agqgeneral:acv_building = "N" and
   agqgeneral:company_id = "FARMERS" then
    begin
    --agqgeneral:BUILDING_CODE_LIMIT        = BPSDEFAULT2:BUILDING_CODE_LIMIT
    agqgeneral:BUILDING_CODE_PERCENT      = BPSDEFAULT2:BUILDING_CODE_FACTOR
    end
else
if agqgeneral:company_id <> "FARMERS" then
    begin
    --agqgeneral:BUILDING_CODE_LIMIT        = BPSDEFAULT2:BUILDING_CODE_LIMIT
    agqgeneral:BUILDING_CODE_PERCENT      = BPSDEFAULT2:BUILDING_CODE_FACTOR
    end
agqgeneral:BOILERS                    = BPSDEFAULT2:BOILERS
if agqgeneral:eff_date >= bpsdefault1:epl_eff_date then
    begin
    if agqgeneral:class_code one of 51 and
       agqgeneral:sub_code one of 60 then
        begin
        access agqepl, set agqepl:app_no = g_app_no, generic

        if agqepl:app_no = g_app_no then
            begin
            change agqepl
                begin
                agqepl:epl_limit      = 0
                agqepl:epl_deductible = 0
                end
            end
        else
            begin
            add agqepl
                begin
                agqepl:app_no       = g_app_no
                agqepl:epl_limit      = 0
                agqepl:epl_deductible = 0
                end
            end
        end
    else
        begin
        access agqepl, set agqepl:app_no = g_app_no, generic

/*        if agqepl:app_no = g_app_no then
            begin
            change agqepl
                begin
                if agqepl:epl_limit = 0 then
                    agqepl:epl_limit      = bpsdefault1:epl_limit
                if agqepl:epl_deductible = 0 then
                    agqepl:epl_deductible = bpsdefault1:epl_deductible
                end
            end
        else
        */
        if agqepl:app_no <> g_app_no then
            begin
            add agqepl
                begin
                agqepl:app_no       = g_app_no
                agqepl:epl_limit      = bpsdefault1:epl_limit
                agqepl:epl_deductible = bpsdefault1:epl_deductible
                end
            end
        else
        if agqepl:app_no = g_app_no and
           agqepl:exclude_epl = 0 then
            begin
            change agqepl
                begin
                agqepl:epl_limit      = bpsdefault1:epl_limit
                agqepl:epl_deductible = bpsdefault1:epl_deductible
                end
            end
        end
    end
agqgeneral:WATER_BACKUP_LIMITED       = "N"
If SFSLINE_alias:OPTION = "P" and
   sfscompany:boiler_rating <> 4 Then
    agqgeneral:WATER_BACKUP_LIMITED   = "Y"
if sfsline_alias:option one of "P", "S" and
   sfscompany:boiler_rating = 4 then
    agqgeneral:water_backup_limited   = "Y"
agqgeneral:WATER_BACKUP_EXCLUSION     = "N"
if sfsline_alias:option <> "P" and
   sfscompany:boiler_rating = 2 then
    agqgeneral:water_backup_limit     = 0
If SFSLINE_alias:OPTION = "P" Then
    Begin
    L_SEWER_LIMIT                           = (L_PROPERTY_LIMIT_1 *
                                              (BPSDEFAULT2:SEWER_BKUP_PERCENT Divide 100))
    If L_SEWER_LIMIT > agqgeneral:WATER_BACKUP_LIMIT Then
        agqgeneral:WATER_BACKUP_LIMIT = L_SEWER_LIMIT
    if agqgeneral:water_backup_limit > 15000 and
       sfscompany:boiler_rating = 2 then
        agqgeneral:water_backup_limit = 15000
    End
agqgeneral:BALIS                      = BPSDEFAULT2:BALIS
agqgeneral:SUPPLIES_LIMIT             = BPSDEFAULT2:SUPPLIES_LIMIT
agqgeneral:WHOLESALER                 = "N"
agqgeneral:WHOLESALER_PERCENT         = 0
agqgeneral:BURGLAR_ALARM_SYSTEM       = "N"

access agqgeneral2, set agqgeneral2:app_no = agqgeneral:app_no,
                        agqgeneral2:prem_no  = agqgeneral:prem_no,
                        agqgeneral2:build_no = agqgeneral:build_no, generic

if agqgeneral2:app_no = agqgeneral:app_no and
   agqgeneral2:prem_no  = agqgeneral:prem_no and
   agqgeneral2:build_no = agqgeneral:build_no then
    begin
    change agqgeneral2
        begin
        agqgeneral2:credit_card        = bpsdefault2:credit_card
        agqgeneral2:electronic_data    = bpsdefault2:electronic_data
        agqgeneral2:dependent_property = bpsdefault2:loss_of_income_dependent
        agqgeneral2:interruption       = bpsdefault2:loss_of_income_interruption
        end
    end
else
    begin
    add agqgeneral2
        begin
        agqgeneral2:app_no           = agqgeneral:app_no
        agqgeneral2:prem_no            = agqgeneral:prem_no
        agqgeneral2:build_no           = agqgeneral:build_no
        agqgeneral2:credit_card        = bpsdefault2:credit_card
        agqgeneral2:electronic_data    = bpsdefault2:electronic_data
        agqgeneral2:dependent_property = bpsdefault2:loss_of_income_dependent
        agqgeneral2:interruption       = bpsdefault2:loss_of_income_interruption
        end
    end

if agqgeneral:special_enhancement = 1 then
    begin
    Access bpssupplemental, Set bpssupplemental:COMPANY_ID       = agqgeneral:company_id,
                                bpssupplemental:state            = agqgeneral:state,
                                bpssupplemental:LINE_OF_BUSINESS = agqgeneral:line_of_business, generic

    while bpssupplemental:company_id       = agqgeneral:company_id and
          bpssupplemental:state            = agqgeneral:state and
          bpssupplemental:line_of_business = agqgeneral:line_of_business
            begin
            if agqgeneral:eff_date >= bpssupplemental:eff_date then
                begin
                if sfsline:option = "P" then
                    begin
                    l_ar_limit = agqgeneral:property_limit * (bpssupplemental:ar_percent divide 100)
                    if l_ar_limit > bpssupplemental:ar_limit then
                        agqgeneral:ar_limit               = l_ar_limit
                    else
                        agqgeneral:AR_LIMIT               = bpssupplemental:ar_limit
                    agqgeneral:SUPPLIES_LIMIT             = bpssupplemental:supplies_limit
                    agqgeneral:BUILDING_CODE_PERCENT      = bpssupplemental:BUILDING_CODE_PERCENT
                    agqgeneral:CUSTOMER_PROP_LIMIT        = bpssupplemental:CUSTOMER_PROP_LIMIT
                    l_utility_limit = agqgeneral:property_limit * (bpssupplemental:utility_percent divide 100)
                    if l_utility_limit > bpssupplemental:utility_limit then
                        agqgeneral:utility_limit          = l_utility_limit
                    else
                        agqgeneral:UTILITY_LIMIT          = bpssupplemental:UTILITY_LIMIT
                    l_mechanical_limit = agqgeneral:property_limit * (bpssupplemental:mechanical_percent divide 100)
                    if l_mechanical_limit > bpssupplemental:mechanical_limit then
                        agqgeneral:mechanical_limit       = l_mechanical_limit
                    else
                        agqgeneral:MECHANICAL_LIMIT       = bpssupplemental:MECHANICAL_LIMIT
                    If agqgeneral:MECHANICAL_LIMIT > BPSDEFAULT2:MECHANICAL_MAX and
                       bpsdefault2:mechanical_max <> 0 Then
                        agqgeneral:MECHANICAL_LIMIT   = BPSDEFAULT2:MECHANICAL_MAX
                    l_signs_limit = agqgeneral:property_limit * (bpssupplemental:signs_percent divide 100)
                    if l_signs_limit > bpssupplemental:signs_limit then
                        agqgeneral:signs_limit            = l_signs_limit
                    else
                        agqgeneral:SIGNS_LIMIT            = bpssupplemental:SIGNS_LIMIT
                    agqgeneral:POLLUTION_LIMIT            = bpssupplemental:POLLUTION_LIMIT
                    l_valuable_papers_limit = agqgeneral:property_limit * (bpssupplemental:valuable_papers_percent divide 100)
                    if l_valuable_papers_limit > bpssupplemental:valuable_papers_limit then
                        agqgeneral:valuable_papers_limit  = l_valuable_papers_limit
                    else
                        agqgeneral:VALUABLE_PAPERS_LIMIT  = bpssupplemental:VALUABLE_PAPERS_LIMIT
                    agqgeneral:MONEY_LIMIT_ON             = bpssupplemental:MONEY_LIMIT_ON
                    agqgeneral:MONEY_LIMIT_OFF            = bpssupplemental:MONEY_LIMIT_OFF
                    agqgeneral:FIRE_LIMIT                 = bpssupplemental:FIRE_LIMIT
                    l_credit_card_limit = agqgeneral:property_limit * (bpssupplemental:credit_card_percent divide 100)
                    if l_credit_card_limit > bpssupplemental:credit_card_limit then
                        agqgeneral:credit_card_limit      = l_credit_card_limit
                    else
                        agqgeneral:credit_card_LIMIT      = bpssupplemental:credit_card_limit
                    agqgeneral:water_backup_limited = "Y"
                    l_water_limit = agqgeneral:property_limit * (bpssupplemental:water_backup_percent divide 100)
                    if l_water_limit > bpssupplemental:water_backup_limit then
                        agqgeneral:water_backup_limit     = l_water_limit
                    else
                        agqgeneral:water_backup_LIMIT     = bpssupplemental:water_backup_limit
                    if agqgeneral:water_backup_limit > 15000 and
                       sfscompany:boiler_rating = 2 then
                        agqgeneral:water_backup_limit = 15000
                    end
                else
                    begin
                    agqgeneral:AR_LIMIT                   = bpssupplemental:ar_limit
                    agqgeneral:SUPPLIES_LIMIT             = bpssupplemental:supplies_limit
                    agqgeneral:BUILDING_CODE_PERCENT      = bpssupplemental:BUILDING_CODE_PERCENT
    --                agqgeneral:building_glass             = bpssupplemental:building_glass
                    agqgeneral:CUSTOMER_PROP_LIMIT        = bpssupplemental:CUSTOMER_PROP_LIMIT
                    agqgeneral:UTILITY_LIMIT              = bpssupplemental:UTILITY_LIMIT
                    agqgeneral:MECHANICAL_LIMIT           = bpssupplemental:MECHANICAL_LIMIT
                    agqgeneral:SIGNS_LIMIT                = bpssupplemental:SIGNS_LIMIT
                    agqgeneral:POLLUTION_LIMIT            = bpssupplemental:POLLUTION_LIMIT
                    agqgeneral:VALUABLE_PAPERS_LIMIT      = bpssupplemental:VALUABLE_PAPERS_LIMIT
                    agqgeneral:MONEY_LIMIT_ON             = bpssupplemental:MONEY_LIMIT_ON
                    agqgeneral:MONEY_LIMIT_OFF            = bpssupplemental:MONEY_LIMIT_OFF
                    agqgeneral:FIRE_LIMIT                 = bpssupplemental:FIRE_LIMIT
                    agqgeneral:water_backup_limited       = "Y"
                    agqgeneral:water_backup_LIMIT         = bpssupplemental:water_backup_limit
                    end

               change agqmaster
                   begin
                   if agqmaster:medical_limit < bpssupplemental:medical_limit then
                       agqmaster:medical_limit           = bpssupplemental:medical_limit
                   agqmaster:off_premises_limit      = bpssupplemental:off_premises_b
                   end
               end

           next bpssupplemental
           end
    end

end

procedure change_optional_coverages_bpsdefault2
begin
Access SFSLINE_ALIAS, Set SFSLINE_alias:COMPANY_ID       = agqgeneral:company_id,
                          SFSLINE_alias:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                          SFSLINE_alias:LOB_SUBLINE      = "00", Generic

if sfsline:lob_code = "CPORTFOLIO" then
    begin
    access agqmastsupp, set agqmastsupp:app_no         = g_app_no,
                            agqmastsupp:line_of_business = g_line_of_business, generic

    l_form               = agqmastsupp:form
    l_off_premises_limit = agqmastsupp:off_premises_limit
    end
else
    begin
    access agqmaster, set agqmaster:app_no = g_app_no, exact

    l_form               = agqmaster:form
    l_off_premises_limit = agqmaster:off_premises_limit
    end

switch(l_form)
  case 1, 3 : begin
              if l_restaurant = 1 then
                  l_supplemental_form = "BU0421"
              else
                  l_supplemental_form = "BU0403"
              end
  default   : begin
              if l_restaurant = 1 then
                  l_supplemental_form = "BU0424"
              else
                  l_supplemental_form = "BU0413"
              end
  end

Access BPSDEFAULT2, Set BPSDEFAULT2:COMPANY_ID        = agqgeneral:company_id,
                        bpsdefault2:state             = agqgeneral:state,
                        BPSDEFAULT2:LINE_OF_BUSINESS  = agqgeneral:line_of_business,
                        BPSDEFAULT2:SUPPLEMENTAL_FORM = l_supplemental_form, Generic

l_bpsdefault2_eff_date = 0
while BPSDEFAULT2:COMPANY_ID        = agqgeneral:company_id and
      bpsdefault2:state             = agqgeneral:state and
      BPSDEFAULT2:LINE_OF_BUSINESS  = agqgeneral:line_of_business and
      BPSDEFAULT2:SUPPLEMENTAL_FORM = l_supplemental_form
        begin
        if (agqgeneral:eff_date >= bpsdefault2:eff_date and
           (agqgeneral:eff_date <= bpsdefault2:exp_date or
           bpsdefault2:exp_date = 0)) then
            l_bpsdefault2_eff_date = bpsdefault2:eff_date

        next bpsdefault2
        end

Access BPSDEFAULT2, Set BPSDEFAULT2:COMPANY_ID        = agqgeneral:company_id,
                        bpsdefault2:state             = agqgeneral:state,
                        BPSDEFAULT2:LINE_OF_BUSINESS  = agqgeneral:line_of_business,
                        BPSDEFAULT2:SUPPLEMENTAL_FORM = l_supplemental_form,
                        bpsdefault2:eff_date          = l_bpsdefault2_eff_date, Generic

Access BPSDEFAULT, Set BPSDEFAULT:COMPANY_ID = agqgeneral:company_id,
                       BPSDEFAULT:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                       BPSDEFAULT:FORM = L_FORM, Generic

Access BPSDEFAULT1, Set BPSDEFAULT1:COMPANY_ID       = agqgeneral:company_id,
                        BPSDEFAULT1:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                        BPSDEFAULT1:FORM             = L_FORM, Generic

if agqmaster:medical_limit < bpsdefault2:medical_limit then
begin
change agqmaster
    begin
    agqmaster:medical_limit           = bpsdefault2:medical_limit
    end
end
If agqgeneral:PROPERTY_LIMIT <> 0 And
   L_FORM = 3 And
   l_form not one of 3 and
   agqgeneral:MONEY_LIMIT_ON = 0 Then
    Begin
    agqgeneral:MONEY_LIMIT_ON = BPSDEFAULT2:MONEY_LIMIT_ON
    agqgeneral:MONEY_LIMIT_OFF = bpsdefault2:MONEY_LIMIT_OFF
    End
If ((L_FORM <> 3 and
   agqgeneral:attach_bu5001 = "N") Or
   (agqgeneral:PROPERTY_LIMIT = 0 and
   agqgeneral:attach_bu5001 = "N")) Then
    Begin
    agqgeneral:MONEY_LIMIT_ON = 0
    agqgeneral:MONEY_LIMIT_OFF = 0
    End
If ((L_FORM = 3 and
   agqgeneral:attach_bu5001 = "N") Or
   (agqgeneral:PROPERTY_LIMIT = 0 and
   agqgeneral:attach_bu5001 = "N")) Then
    Begin
    agqgeneral:BURGLARY_LIMIT_ON = 0
    agqgeneral:BURGLARY_LIMIT_OFF = 0
    End
If agqgeneral:DIFFERENT_OFF_PREMISES = 0 Then
    agqgeneral:OFF_PREMISES_LIMIT = L_OFF_PREMISES_LIMIT
if agqgeneral:eff_date >= bpsdefault1:epl_eff_date then
    begin
    if agqgeneral:class_code one of 51 and
       agqgeneral:sub_code one of 60 then
        begin
        access agqepl, set agqepl:app_no = g_app_no, generic

        if agqepl:app_no = g_app_no then
            begin
            change agqepl
                begin
                agqepl:epl_limit      = 0
                agqepl:epl_deductible = 0
                end
            end
        else
            begin
            add agqepl
                begin
                agqepl:app_no       = g_app_no
                agqepl:epl_limit      = 0
                agqepl:epl_deductible = 0
                end
            end
        end
    else
        begin
        access agqepl, set agqepl:app_no = g_app_no, generic

/*        if agqepl:app_no = g_app_no then
            begin
            change agqepl
                begin
                if agqepl:epl_limit = 0 then
                    agqepl:epl_limit      = bpsdefault1:epl_limit
                if agqepl:epl_deductible = 0 then
                    agqepl:epl_deductible = bpsdefault1:epl_deductible
                end
            end
        else*/
        if agqepl:app_no <> g_app_no and
           agqepl:exclude_epl = 0 then
            begin
            add agqepl
                begin
                agqepl:app_no       = g_app_no
                agqepl:epl_limit      = bpsdefault1:epl_limit
                agqepl:epl_deductible = bpsdefault1:epl_deductible
                end
            end
        end
    end
If SFSLINE_ALIAS:OPTION = "P" And
   L_PROPERTY_LIMIT_CHANGE = "Y" Then
    Begin
    agqgeneral:SIGNS_LIMIT = BPSDEFAULT2:outdoor_signs
    L_EXTERIOR_SIGNS_LIMIT = (L_PROPERTY_LIMIT_1 *
                             (BPSDEFAULT2:EXTERIOR_SIGNS_PERCENT
                             Divide 100))
    If L_EXTERIOR_SIGNS_LIMIT > agqgeneral:SIGNS_LIMIT Then
        agqgeneral:SIGNS_LIMIT = L_EXTERIOR_SIGNS_LIMIT

    agqgeneral:AR_LIMIT = BPSDEFAULT2:AR_LIMIT
    L_AR_LIMIT = (L_PROPERTY_LIMIT_1 *
                (BPSDEFAULT2:AR_PERCENT Divide 100))
    If L_AR_LIMIT > agqgeneral:AR_LIMIT Then
        agqgeneral:AR_LIMIT = L_AR_LIMIT

    if agqgeneral:bop_type = 9 and
       sfscompany:boiler_rating = 1 then
        agqgeneral:ar_limit = 0

    agqgeneral:UTILITY_LIMIT = BPSDEFAULT2:UTILITY_LIMIT
    if sfscompany:boiler_rating <> 4 then
        begin
        L_UTILITY_LIMIT = (L_PROPERTY_LIMIT_1 *
                          (BPSDEFAULT2:UTILITY_PERCENT Divide 100))
        If L_UTILITY_LIMIT > agqgeneral:UTILITY_LIMIT Then
            agqgeneral:UTILITY_LIMIT = L_UTILITY_LIMIT
        If agqgeneral:UTILITY_LIMIT > BPSDEFAULT2:UTILITY_MAX and
           bpsdefault2:utility_max <> 0 Then
            agqgeneral:UTILITY_LIMIT = BPSDEFAULT2:UTILITY_MAX
        end

    agqgeneral:MECHANICAL_LIMIT = BPSDEFAULT2:MECHANICAL_breakdown
    if sfscompany:boiler_rating <> 4 then
        begin
        L_MECHANICAL_LIMIT = (L_PROPERTY_LIMIT_1 *
                             (BPSDEFAULT2:MECHANICAL_PERCENT Divide 100))
        If L_MECHANICAL_LIMIT > agqgeneral:MECHANICAL_LIMIT Then
            agqgeneral:MECHANICAL_LIMIT = L_MECHANICAL_LIMIT
        If agqgeneral:MECHANICAL_LIMIT > BPSDEFAULT2:MECHANICAL_MAX and
           bpsdefault2:mechanical_max <> 0 Then
            agqgeneral:MECHANICAL_LIMIT = BPSDEFAULT2:MECHANICAL_MAX
        end

    agqgeneral:VALUABLE_PAPERS_LIMIT = BPSDEFAULT2:VALUABLE_PAPERS
    L_VALUABLE_LIMIT = (L_PROPERTY_LIMIT_1 *
                       (BPSDEFAULT2:VALUABLE_PERCENT Divide 100))
    If L_VALUABLE_LIMIT > agqgeneral:VALUABLE_PAPERS_LIMIT Then
        agqgeneral:VALUABLE_PAPERS_LIMIT = L_VALUABLE_LIMIT

    if sfsline_alias:option <> "P" and
       sfscompany:boiler_rating = 2 then
        agqgeneral:water_backup_limit     = 0

    L_SEWER_LIMIT = (L_PROPERTY_LIMIT_1 *
                    (BPSDEFAULT2:SEWER_BKUP_PERCENT Divide 100))
    If L_SEWER_LIMIT > agqgeneral:WATER_BACKUP_LIMIT Then
        agqgeneral:WATER_BACKUP_LIMIT = L_SEWER_LIMIT
    if agqgeneral:water_backup_limit > 15000 and
       sfscompany:boiler_rating = 2 then
        agqgeneral:water_backup_limit = 15000
    End

access agqgeneral2, set agqgeneral2:app_no = agqgeneral:app_no,
                        agqgeneral2:prem_no  = agqgeneral:prem_no,
                        agqgeneral2:build_no = agqgeneral:build_no, generic

if agqgeneral2:app_no = agqgeneral:app_no and
   agqgeneral2:prem_no  = agqgeneral:prem_no and
   agqgeneral2:build_no = agqgeneral:build_no then
    begin
    change agqgeneral2
        begin
        agqgeneral2:credit_card        = bpsdefault2:credit_card
        agqgeneral2:electronic_data    = bpsdefault2:electronic_data
        agqgeneral2:dependent_property = bpsdefault2:loss_of_income_dependent
        agqgeneral2:interruption       = bpsdefault2:loss_of_income_interruption
        end
    end
else
    begin
    add agqgeneral2
        begin
        agqgeneral2:app_no           = agqgeneral:app_no
        agqgeneral2:prem_no            = agqgeneral:prem_no
        agqgeneral2:build_no           = agqgeneral:build_no
        agqgeneral2:credit_card        = bpsdefault2:credit_card
        agqgeneral2:electronic_data    = bpsdefault2:electronic_data
        agqgeneral2:dependent_property = bpsdefault2:loss_of_income_dependent
        agqgeneral2:interruption       = bpsdefault2:loss_of_income_interruption
        end
    end

if agqgeneral:special_enhancement = 1 then
    begin
    Access bpssupplemental, Set bpssupplemental:COMPANY_ID       = agqgeneral:company_id,
                                bpssupplemental:state            = agqgeneral:state,
                                bpssupplemental:LINE_OF_BUSINESS = agqgeneral:line_of_business, generic

    while bpssupplemental:company_id       = agqgeneral:company_id and
          bpssupplemental:state            = agqgeneral:state and
          bpssupplemental:line_of_business = agqgeneral:line_of_business
            begin
            if agqgeneral:eff_date >= bpssupplemental:eff_date then
                begin
                if sfsline:option = "P" then
                    begin
                    l_ar_limit = agqgeneral:property_limit * (bpssupplemental:ar_percent divide 100)
                    if l_ar_limit > bpssupplemental:ar_limit then
                        agqgeneral:ar_limit               = l_ar_limit
                    else
                        agqgeneral:AR_LIMIT               = bpssupplemental:ar_limit
                    agqgeneral:SUPPLIES_LIMIT             = bpssupplemental:supplies_limit
                    agqgeneral:BUILDING_CODE_PERCENT      = bpssupplemental:BUILDING_CODE_PERCENT
                    agqgeneral:CUSTOMER_PROP_LIMIT        = bpssupplemental:CUSTOMER_PROP_LIMIT
                    l_utility_limit = agqgeneral:property_limit * (bpssupplemental:utility_percent divide 100)
                    if l_utility_limit > bpssupplemental:utility_limit then
                        agqgeneral:utility_limit          = l_utility_limit
                    else
                        agqgeneral:UTILITY_LIMIT          = bpssupplemental:UTILITY_LIMIT
                    l_mechanical_limit = agqgeneral:property_limit * (bpssupplemental:mechanical_percent divide 100)
                    if l_mechanical_limit > bpssupplemental:mechanical_limit then
                        agqgeneral:mechanical_limit       = l_mechanical_limit
                    else
                        agqgeneral:MECHANICAL_LIMIT       = bpssupplemental:MECHANICAL_LIMIT
                    If agqgeneral:MECHANICAL_LIMIT > BPSDEFAULT2:MECHANICAL_MAX and
                       bpsdefault2:mechanical_max <> 0 Then
                        agqgeneral:MECHANICAL_LIMIT   = BPSDEFAULT2:MECHANICAL_MAX
                    l_signs_limit = agqgeneral:property_limit * (bpssupplemental:signs_percent divide 100)
                    if l_signs_limit > bpssupplemental:signs_limit then
                        agqgeneral:signs_limit            = l_signs_limit
                    else
                        agqgeneral:SIGNS_LIMIT            = bpssupplemental:SIGNS_LIMIT
                    agqgeneral:POLLUTION_LIMIT            = bpssupplemental:POLLUTION_LIMIT
                    l_valuable_papers_limit = agqgeneral:property_limit * (bpssupplemental:valuable_papers_percent divide 100)
                    if l_valuable_papers_limit > bpssupplemental:valuable_papers_limit then
                        agqgeneral:valuable_papers_limit  = l_valuable_papers_limit
                    else
                        agqgeneral:VALUABLE_PAPERS_LIMIT  = bpssupplemental:VALUABLE_PAPERS_LIMIT
                    agqgeneral:MONEY_LIMIT_ON             = bpssupplemental:MONEY_LIMIT_ON
                    agqgeneral:MONEY_LIMIT_OFF            = bpssupplemental:MONEY_LIMIT_OFF
                    agqgeneral:FIRE_LIMIT                 = bpssupplemental:FIRE_LIMIT
                    l_credit_card_limit = agqgeneral:property_limit * (bpssupplemental:credit_card_percent divide 100)
                    if l_credit_card_limit > bpssupplemental:credit_card_limit then
                        agqgeneral:credit_card_limit      = l_credit_card_limit
                    else
                        agqgeneral:credit_card_LIMIT      = bpssupplemental:credit_card_limit
                    agqgeneral:water_backup_limited       = "Y"
                    l_water_limit = agqgeneral:property_limit * (bpssupplemental:water_backup_percent divide 100)
                    if l_water_limit > bpssupplemental:water_backup_limit then
                        agqgeneral:water_backup_limit     = l_water_limit
                    else
                        agqgeneral:water_backup_LIMIT     = bpssupplemental:water_backup_limit
                    if agqgeneral:water_backup_limit > 15000 and
                       sfscompany:boiler_rating = 2 then
                        agqgeneral:water_backup_limit = 15000
                    end
                else
                    begin
                    agqgeneral:AR_LIMIT                   = bpssupplemental:ar_limit
                    agqgeneral:SUPPLIES_LIMIT             = bpssupplemental:supplies_limit
                    agqgeneral:BUILDING_CODE_PERCENT      = bpssupplemental:BUILDING_CODE_PERCENT
    --                agqgeneral:building_glass             = bpssupplemental:building_glass
                    agqgeneral:CUSTOMER_PROP_LIMIT        = bpssupplemental:CUSTOMER_PROP_LIMIT
                    agqgeneral:UTILITY_LIMIT              = bpssupplemental:UTILITY_LIMIT
                    agqgeneral:MECHANICAL_LIMIT           = bpssupplemental:MECHANICAL_LIMIT
                    agqgeneral:SIGNS_LIMIT                = bpssupplemental:SIGNS_LIMIT
                    agqgeneral:POLLUTION_LIMIT            = bpssupplemental:POLLUTION_LIMIT
                    agqgeneral:VALUABLE_PAPERS_LIMIT      = bpssupplemental:VALUABLE_PAPERS_LIMIT
                    agqgeneral:MONEY_LIMIT_ON             = bpssupplemental:MONEY_LIMIT_ON
                    agqgeneral:MONEY_LIMIT_OFF            = bpssupplemental:MONEY_LIMIT_OFF
                    agqgeneral:FIRE_LIMIT                 = bpssupplemental:FIRE_LIMIT
                    agqgeneral:water_backup_limited       = "Y"
                    agqgeneral:water_backup_LIMIT         = bpssupplemental:water_backup_limit

                    end

               change agqmaster
                   begin
                   if agqmaster:medical_limit < bpssupplemental:medical_limit then
                       agqmaster:medical_limit           = bpssupplemental:medical_limit
                   end
                end

           next bpssupplemental
           end
    end

end

procedure add_optional_coverages
begin
access sfsline, set sfsline:company_id       = agqname:company_id,
                    sfsline:line_of_business = agqname:line_of_business,
                    sfsline:lob_subline      = "00", generic

access bpsdefault1, set bpsdefault1:company_id = agqgeneral:company_id,
                        bpsdefault1:line_of_business = agqgeneral:line_of_business,
                        bpsdefault1:form = l_form, generic

if sfsline:lob_code = "CPORTFOLIO" then
    begin
    access agqmastsupp, set agqmastsupp:app_no           = g_app_no,
                            agqmastsupp:line_of_business = l_line_of_business, generic

    l_form               = agqmastsupp:form
    l_off_premises_limit = agqmastsupp:off_premises_limit
    end
else
    begin
    access agqmaster, set agqmaster:app_no = g_app_no, exact

    l_form               = agqmaster:form
    l_off_premises_limit = agqmaster:off_premises_limit
    end

if l_form = 0 then
    begin
    if agqgeneral:property_limit <> 0 then
        l_form = 3
    else
        l_form = 1
    end

Access SFSLINE_ALIAS, Set SFSLINE_alias:COMPANY_ID       = agqgeneral:company_id,
                          SFSLINE_alias:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                          SFSLINE_alias:LOB_SUBLINE      = "00", Generic

Access agsdefault_bop, Set agsdefault_bop:COMPANY_ID       = agqgeneral:COMPANY_ID,
                           agsdefault_bop:state            = agqgeneral:state,
                           agsdefault_bop:agent_no         = agqgeneral:agent_no,
                           agsdefault_bop:LINE_OF_BUSINESS = agqgeneral:LINE_OF_BUSINESS, generic

access sfsinflation, set sfsinflation:company_id       = agqgeneral:company_id,
                         sfsinflation:state            = agqgeneral:state,
                         sfsinflation:line_of_business = agqgeneral:line_of_business, generic

l_percent = 0
while sfsinflation:company_id       = agqgeneral:company_id and
      sfsinflation:state            = agqgeneral:state and
      sfsinflation:line_of_business = agqgeneral:line_of_business
        begin
        if agqgeneral:eff_date >= sfsinflation:eff_date then
            begin
            if sfsinflation:make_default = 1 then
                l_percent = sfsinflation:percent

            end

        next sfsinflation
        end

if l_percent <> 0 then
    agqgeneral:auto_percent           = l_percent
else
    agqGENERAL:AUTO_PERCENT           = agsdefault_bop:AUTO_PERCENT

If agqGENERAL:DIFFERENT_OFF_PREMISES = 0 Then
    agqGENERAL:OFF_PREMISES_LIMIT     = L_OFF_PREMISES_LIMIT
if agqgeneral:wind_deductible = 0 then
    agqGENERAL:WIND_DEDUCTIBLE            = agsdefault_bop:WIND_DEDUCTIBLE
agqGENERAL:LOSS_INCOME_LIMIT          = agsdefault_bop:LOSS_INCOME_LIMIT
If agqGENERAL:TENANT = "Y" Then
    agqGENERAL:LIMIT_LOSS_INCOME      = agsdefault_bop:LIMIT_LOSS_INCOME
Else
    agqGENERAL:LIMIT_LOSS_INCOME      = "N"
If agqGENERAL:LIMIT_LOSS_INCOME = "" Then
    agqGENERAL:LIMIT_LOSS_INCOME      = "N"
agqGENERAL:DELETE_LOSS_INCOME         = "N"
agqGENERAL:SIGNS_LIMIT                = agsdefault_bop:SIGNS_LIMIT
If SFSLINE_ALIAS:OPTION = "P" Then
    Begin
    L_EXTERIOR_SIGNS_LIMIT                  = (L_PROPERTY_LIMIT_1 *
                                              (agsdefault_bop:EXTERIOR_SIGNS_PERCENT
                                              Divide 100))
    If L_EXTERIOR_SIGNS_LIMIT > agqGENERAL:SIGNS_LIMIT Then
        agqGENERAL:SIGNS_LIMIT        = L_EXTERIOR_SIGNS_LIMIT
    End
agqGENERAL:SIGNS_DEDUCTIBLE[1]        = agsdefault_bop:SIGNS_DEDUCTIBLE
agqGENERAL:SIGNS_DEDUCTIBLE[2]        = agsdefault_bop:SIGNS_NOT_ATTACHED_DEDUCT

If agqGENERAL:PROPERTY_LIMIT <> 0 And
   L_FORM <> 3 Then
    Begin
    agqGENERAL:BURGLARY_LIMIT_ON      = agsdefault_bop:BURGLARY_LIMIT_ON
    agqGENERAL:BURGLARY_LIMIT_OFF     = agsdefault_bop:BURGLARY_LIMIT_OFF
    End
If L_FORM = 3 Or
   agqGENERAL:PROPERTY_LIMIT = 0 Then
    Begin
    agqGENERAL:BURGLARY_LIMIT_ON      = 0
    agqGENERAL:BURGLARY_LIMIT_OFF     = 0
    End
If agqGENERAL:PROPERTY_LIMIT <> 0 And
   L_FORM = 3 Then
    Begin
    agqGENERAL:MONEY_LIMIT_ON         = agsdefault_bop:MONEY_LIMIT_ON
    agqGENERAL:MONEY_LIMIT_OFF        = agsdefault_bop:MONEY_LIMIT_OFF
    End
If ((L_FORM <> 3 and
   agqgeneral:attach_bu5001 = "N") Or
   (agqGENERAL:PROPERTY_LIMIT = 0 and
   agqgeneral:attach_bu5001 = "N")) Then
    Begin
    agqGENERAL:MONEY_LIMIT_ON         = 0
    agqGENERAL:MONEY_LIMIT_OFF        = 0
    End

access agqgeneral_alias, set agqgeneral_alias:app_no = g_app_no, generic

l_attorney = "N"
while agqgeneral_alias:app_no = g_app_no
    begin
    if agqgeneral_alias:class_code one of 51 and
       agqgeneral_alias:bpsclass_sub_code one of 60 then
        l_attorney = "Y"

    next agqgeneral_alias
    end

if agqgeneral:eff_date >= bpsdefault1:epl_eff_date then
    begin
    if l_attorney = "Y" then
        begin
        access agqepl, set agqepl:app_no = g_app_no, generic

        if agqepl:app_no = g_app_no then
            begin
            change agqepl
                begin
                agqepl:epl_limit      = 0
                agqepl:epl_deductible = 0
                end
            end
        else
            begin
            add agqepl
                begin
                agqepl:app_no         = g_app_no
                agqepl:epl_limit      = 0
                agqepl:epl_deductible = 0
                end
            end
        end
    else
        begin
        access agqepl, set agqepl:app_no = g_app_no, generic

        if agqepl:app_no = g_app_no then
            begin
            change agqepl
                begin
                if agqepl:epl_limit = 0 then
                    agqepl:epl_limit      = bpsdefault1:epl_limit
                if agqepl:epl_deductible = 0 then
                    agqepl:epl_deductible = bpsdefault1:epl_deductible
                end
            end
        else
            begin
            add agqepl
                begin
                agqepl:app_no         = g_app_no
                agqepl:epl_limit      = bpsdefault1:epl_limit
                agqepl:epl_deductible = bpsdefault1:epl_deductible
                end
            end
        end
    end
agqGENERAL:AR_LIMIT                   = agsdefault_bop:AR_LIMIT
If SFSLINE_alias:OPTION = "P" Then
    Begin
    L_AR_LIMIT                              = (L_PROPERTY_LIMIT_1 *
                                              (agsdefault_bop:AR_PERCENT Divide 100))
    If L_AR_LIMIT > agqGENERAL:AR_LIMIT Then
        agqGENERAL:AR_LIMIT           = L_AR_LIMIT
    End
agqgeneral:debris_removal_limit       = agsdefault_bop:debris_removal
agqGENERAL:UTILITY_LIMIT              = agsdefault_bop:UTILITY_LIMIT
If SFSLINE_alias:OPTION = "P" and
   sfscompany:boiler_rating <> 4 Then
    Begin
    L_UTILITY_LIMIT                         = (L_PROPERTY_LIMIT_1 *
                                              (agsdefault_bop:UTILITY_PERCENT Divide 100))
    If L_UTILITY_LIMIT > agqGENERAL:UTILITY_LIMIT Then
        agqGENERAL:UTILITY_LIMIT      = L_UTILITY_LIMIT
    If agqGENERAL:UTILITY_LIMIT > agsdefault_bop:UTILITY_MAX and
       agsdefault_bop:utility_max <> 0 Then
        agqGENERAL:UTILITY_LIMIT      = agsdefault_bop:UTILITY_MAX
    End
agqGENERAL:MECHANICAL_LIMIT           = agsdefault_bop:MECHANICAL_LIMIT
If agqGENERAL:MECHANICAL_LIMIT > agsdefault_bop:MECHANICAL_MAX and
   agsdefault_bop:mechanical_max <> 0 Then
    agqGENERAL:MECHANICAL_LIMIT   = agsdefault_bop:MECHANICAL_MAX
If SFSLINE_alias:OPTION = "P" and
   sfscompany:boiler_rating <> 4 Then
    Begin
    L_MECHANICAL_LIMIT                      = (L_PROPERTY_LIMIT_1 *
                                              (agsdefault_bop:MECHANICAL_PERCENT Divide 100))
    If L_MECHANICAL_LIMIT > agqGENERAL:MECHANICAL_LIMIT Then
        agqGENERAL:MECHANICAL_LIMIT   = L_MECHANICAL_LIMIT
    If agqGENERAL:MECHANICAL_LIMIT > agsdefault_bop:MECHANICAL_MAX and
       agsdefault_bop:mechanical_max <> 0 Then
        agqGENERAL:MECHANICAL_LIMIT   = agsdefault_bop:MECHANICAL_MAX
    End
agqGENERAL:CUSTOMER_PROP_LIMIT        = agsdefault_bop:CUSTOMER_PROP_LIMIT
agqGENERAL:POLLUTION_LIMIT            = agsdefault_bop:POLLUTION_LIMIT
agqGENERAL:VALUABLE_PAPERS_LIMIT      = agsdefault_bop:VALUABLE_PAPERS_LIMIT
If SFSLINE_alias:OPTION = "P" Then
    Begin
    L_VALUABLE_LIMIT                        = (L_PROPERTY_LIMIT_1 *
                                              (agsdefault_bop:VALUABLE_PERCENT Divide 100))
    If L_VALUABLE_LIMIT > agqGENERAL:VALUABLE_PAPERS_LIMIT Then
        agqGENERAL:VALUABLE_PAPERS_LIMIT = L_VALUABLE_LIMIT
    End
agqGENERAL:FIRE_LIMIT                 = agsdefault_bop:FIRE_LIMIT
if agqgeneral:acv_building = "N" and
   agqgeneral:company_id = "FARMERS" then
    begin
    agqGENERAL:BUILDING_CODE_LIMIT        = agsdefault_bop:BUILDING_CODE_LIMIT
    agqGENERAL:BUILDING_CODE_PERCENT      = agsdefault_bop:BUILDING_CODE_PERCENT
    end
else
if agqgeneral:company_id <> "FARMERS" then
    begin
    agqGENERAL:BUILDING_CODE_LIMIT        = agsdefault_bop:BUILDING_CODE_LIMIT
    agqGENERAL:BUILDING_CODE_PERCENT      = agsdefault_bop:BUILDING_CODE_PERCENT
    end
agqGENERAL:BOILERS                    = agsdefault_bop:BOILERS
agqGENERAL:WATER_BACKUP_LIMITED       = "N"
If SFSLINE_alias:OPTION = "P" and
   sfscompany:boiler_rating <> 4 Then
    agqGENERAL:WATER_BACKUP_LIMITED   = "Y"
if sfsline_alias:option one of "P", "S" and
   sfscompany:boiler_rating = 4 then
    agqgeneral:water_backup_limited   = "Y"
agqGENERAL:WATER_BACKUP_EXCLUSION     = "N"
agqGENERAL:WATER_BACKUP_LIMIT         = agsdefault_bop:WATER_BACKUP_LIMIT
if agqgeneral:company_id one of "FARMERS", "LEBINS" then
    agqgeneral:water_backup_limit = 0

if agqgeneral:company_id = "GGUND" and
   agqgeneral:line_of_business one of 5 then
    agqgeneral:water_backup_limit = 0
if agqgeneral:company_id = "GGUND" and
   agqgeneral:line_of_business not one of 5 then
    agqgeneral:water_backup_limit = agsdefault_bop:water_backup_limit

if sfsline_alias:option <> "P" and
   sfscompany:boiler_rating = 2 then
    agqgeneral:water_backup_limit = 0

if agqgeneral:line_of_business = 51 then
    begin
    agqgeneral:weather_related = 1
    Access BPSRATE, Set BPSRATE:COMPANY_ID       = agqgeneral:company_id,
                        BPSRATE:STATE            = agqgeneral:STATE,
                        BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

    l_code_1 = ""
    Repeat Begin
        Exit If BPSRATE:COMPANY_ID <> agqgeneral:company_id Or
                BPSRATE:STATE <> agqgeneral:STATE Or
                BPSRATE:LINE_OF_BUSINESS <> agqgeneral:line_of_business

        If agqgeneral:EFF_DATE >= BPSRATE:EFF_DATE Then
            Begin
            l_code_1 = bpsrate:weather_code[1] -- with deductible
            End

        Next BPSRATE
        End

    If L_CODE_1 <> "" Then
        Begin
        L_CODE = L_CODE_1
        Do ACCESS_agqEND
        If L_ADD_ENDORSEMENT = "Y" Then
            Do ADD_agqEND
        End
    end
else
    agqgeneral:weather_related = 0

If SFSLINE_alias:OPTION = "P" Then
    Begin
    L_SEWER_LIMIT                           = (L_PROPERTY_LIMIT_1 *
                                              (agsdefault_bop:SEWER_BKUP_PERCENT Divide 100))
    If L_SEWER_LIMIT > agqGENERAL:WATER_BACKUP_LIMIT Then
        agqGENERAL:WATER_BACKUP_LIMIT = L_SEWER_LIMIT
    if agqgeneral:water_backup_limit > 15000 and
       sfscompany:boiler_rating = 2 then
        agqgeneral:water_backup_limit = 15000
    End
agqGENERAL:BALIS                      = agsdefault_bop:BALIS
agqGENERAL:SUPPLIES_LIMIT             = agsdefault_bop:SUPPLIES_LIMIT
agqGENERAL:WHOLESALER                 = "N"
agqGENERAL:WHOLESALER_PERCENT         = 0
agqGENERAL:BURGLAR_ALARM_SYSTEM       = "N"

if g_enhancement = 1 then
    begin
    Access bpssupplemental, Set bpssupplemental:COMPANY_ID       = agqgeneral:company_id,
                                bpssupplemental:state            = agqgeneral:state,
                                bpssupplemental:LINE_OF_BUSINESS = agqgeneral:line_of_business, generic

    while bpssupplemental:company_id       = agqgeneral:company_id and
          bpssupplemental:state            = agqgeneral:state and
          bpssupplemental:line_of_business = agqgeneral:line_of_business
            begin
            if agqgeneral:eff_date >= bpssupplemental:eff_date then
                begin
                if sfsline:option = "P" then
                    begin
                    l_ar_limit = agqgeneral:property_limit * (bpssupplemental:ar_percent divide 100)
                    if l_ar_limit > bpssupplemental:ar_limit then
                        agqgeneral:ar_limit               = l_ar_limit
                    else
                        agqGENERAL:AR_LIMIT               = bpssupplemental:ar_limit
                    agqGENERAL:SUPPLIES_LIMIT             = bpssupplemental:supplies_limit
                    agqGENERAL:BUILDING_CODE_PERCENT      = bpssupplemental:BUILDING_CODE_PERCENT
                    agqGENERAL:CUSTOMER_PROP_LIMIT        = bpssupplemental:CUSTOMER_PROP_LIMIT
                    l_utility_limit = (agqgeneral:property_limit * (bpssupplemental:utility_percent divide 100))
                    if l_utility_limit > bpssupplemental:utility_limit then
                        agqgeneral:utility_limit          = l_utility_limit
                    else
                        agqGENERAL:UTILITY_LIMIT          = bpssupplemental:UTILITY_LIMIT

                    l_mechanical_limit = (agqgeneral:property_limit * (bpssupplemental:mechanical_percent divide 100))
                    if l_mechanical_limit > bpssupplemental:mechanical_limit then
                        agqgeneral:mechanical_limit       = l_mechanical_limit
                    else
                        agqGENERAL:MECHANICAL_LIMIT       = bpssupplemental:MECHANICAL_LIMIT
                    If agqGENERAL:MECHANICAL_LIMIT > agsdefault_bop:MECHANICAL_MAX and
                       agsdefault_bop:mechanical_max <> 0 Then
                        agqGENERAL:MECHANICAL_LIMIT   = agsdefault_bop:MECHANICAL_MAX
                    l_signs_limit = agqgeneral:property_limit * (bpssupplemental:signs_percent divide 100)
                    if l_signs_limit > bpssupplemental:signs_limit then
                        agqgeneral:signs_limit            = l_signs_limit
                    else
                        agqGENERAL:SIGNS_LIMIT            = bpssupplemental:SIGNS_LIMIT
                    agqGENERAL:POLLUTION_LIMIT            = bpssupplemental:POLLUTION_LIMIT
                    l_valuable_papers_limit = agqgeneral:property_limit * (bpssupplemental:valuable_papers_percent divide 100)
                    if l_valuable_papers_limit > bpssupplemental:valuable_papers_limit then
                        agqgeneral:valuable_papers_limit  = l_valuable_papers_limit
                    else
                        agqGENERAL:VALUABLE_PAPERS_LIMIT  = bpssupplemental:VALUABLE_PAPERS_LIMIT
                    agqGENERAL:MONEY_LIMIT_ON             = bpssupplemental:MONEY_LIMIT_ON
                    agqGENERAL:MONEY_LIMIT_OFF            = bpssupplemental:MONEY_LIMIT_OFF
                    agqGENERAL:FIRE_LIMIT                 = bpssupplemental:FIRE_LIMIT
                    l_credit_card_limit = agqgeneral:property_limit * (bpssupplemental:credit_card_percent divide 100)
                    if l_credit_card_limit > bpssupplemental:credit_card_limit then
                        agqgeneral:credit_card_limit      = l_credit_card_limit
                    else
                        agqGENERAL:credit_card_LIMIT      = bpssupplemental:credit_card_limit
                    l_water_limit = agqgeneral:property_limit * (bpssupplemental:water_backup_percent divide 100)
                    if l_water_limit > bpssupplemental:water_backup_limit then
                        agqgeneral:water_backup_limit     = l_water_limit
                    else
                        agqGENERAL:water_backup_LIMIT     = bpssupplemental:water_backup_limit
                    if agqgeneral:water_backup_limit > 15000 and
                       sfscompany:boiler_rating = 2 then
                        agqgeneral:water_backup_limit = 15000
--                    agqgeneral:water_backup_limited = "Y"
                    end
                else
                    begin
                    agqGENERAL:AR_LIMIT                   = bpssupplemental:ar_limit
                    agqGENERAL:SUPPLIES_LIMIT             = bpssupplemental:supplies_limit
                    agqGENERAL:BUILDING_CODE_PERCENT      = bpssupplemental:BUILDING_CODE_PERCENT
    --                agqgeneral:building_glass             = bpssupplemental:building_glass
                    agqGENERAL:CUSTOMER_PROP_LIMIT        = bpssupplemental:CUSTOMER_PROP_LIMIT
                    agqGENERAL:UTILITY_LIMIT              = bpssupplemental:UTILITY_LIMIT
                    agqGENERAL:MECHANICAL_LIMIT           = bpssupplemental:MECHANICAL_LIMIT
                    agqGENERAL:SIGNS_LIMIT                = bpssupplemental:SIGNS_LIMIT
                    agqGENERAL:POLLUTION_LIMIT            = bpssupplemental:POLLUTION_LIMIT
                    agqGENERAL:VALUABLE_PAPERS_LIMIT      = bpssupplemental:VALUABLE_PAPERS_LIMIT
                    agqGENERAL:MONEY_LIMIT_ON             = bpssupplemental:MONEY_LIMIT_ON
                    agqGENERAL:MONEY_LIMIT_OFF            = bpssupplemental:MONEY_LIMIT_OFF
                    agqGENERAL:FIRE_LIMIT                 = bpssupplemental:FIRE_LIMIT
                    agqgeneral:water_backup_limit         = bpssupplemental:water_backup_limit
--                    agqgeneral:water_backup_limited       = "Y"
                    end

                access agqmaster, set agqmaster:app_no = g_app_no, generic

                if agqmaster:app_no = g_app_no then
                    begin
                    change agqmaster
                        begin
                        agqmaster:medical_limit           = bpssupplemental:medical_limit
                        agqmaster:off_premises_limit      = bpssupplemental:off_premises_b
                        end
                    end
                end

           next bpssupplemental
           end
    end

--if agqgeneral:water_backup_limit <> 0 then
--    agqgeneral:water_backup_limited = "Y"
end

procedure change_optional_coverages_special
begin
access sfsline, set sfsline:company_id       = agqname:company_id,
                    sfsline:line_of_business = agqname:line_of_business,
                    sfsline:lob_subline      = "00", generic

l_form = agqmaster:form
access bpsdefault1, set bpsdefault1:company_id = agqgeneral:company_id,
                        bpsdefault1:line_of_business = agqgeneral:line_of_business,
                        bpsdefault1:form = l_form, generic

if sfsline:lob_code = "CPORTFOLIO" then
    begin
    access agqmastsupp, set agqmastsupp:app_no         = g_app_no,
                            agqmastsupp:line_of_business = l_line_of_business, generic

    l_form               = agqmastsupp:form
    l_off_premises_limit = agqmastsupp:off_premises_limit
    end
else
    begin
    access agqmaster, set agqmaster:app_no = g_app_no, exact

    l_form               = agqmaster:form
    l_off_premises_limit = agqmaster:off_premises_limit
    end

Access SFSLINE_ALIAS, Set SFSLINE_alias:COMPANY_ID       = agqgeneral:company_id,
                          SFSLINE_alias:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                          SFSLINE_alias:LOB_SUBLINE      = "00", Generic

Access agsdefault_bop, Set agsdefault_bop:COMPANY_ID       = agqgeneral:COMPANY_ID,
                           agsdefault_bop:state            = agqgeneral:state,
                           agsdefault_bop:agent_no         = agqgeneral:agent_no,
                           agsdefault_bop:LINE_OF_BUSINESS = agqgeneral:LINE_OF_BUSINESS, generic

access sfsinflation, set sfsinflation:company_id       = agqgeneral:company_id,
                         sfsinflation:state            = agqgeneral:state,
                         sfsinflation:line_of_business = agqgeneral:line_of_business, generic

l_percent = 0
while sfsinflation:company_id       = agqgeneral:company_id and
      sfsinflation:state            = agqgeneral:state and
      sfsinflation:line_of_business = agqgeneral:line_of_business
        begin
        if agqgeneral:eff_date >= sfsinflation:eff_date then
            begin
            if sfsinflation:make_default = 1 then
                l_percent = sfsinflation:percent

            end

        next sfsinflation
        end

if l_percent <> 0 then
    agqgeneral:auto_percent           = l_percent
else
    agqGENERAL:AUTO_PERCENT           = agsdefault_bop:AUTO_PERCENT

if g_enhancement = 0 then
    begin
    change agqmaster
        begin
        agqmaster:medical_limit           = agsdefault_bop:medical_limit
        end
    end
--agqgeneral:glass_limit               = 0
If agqGENERAL:DIFFERENT_OFF_PREMISES = 0 Then
    agqGENERAL:OFF_PREMISES_LIMIT     = L_OFF_PREMISES_LIMIT
if agqgeneral:wind_deductible = 0 then
    agqGENERAL:WIND_DEDUCTIBLE            = agsdefault_bop:WIND_DEDUCTIBLE
agqGENERAL:LOSS_INCOME_LIMIT          = agsdefault_bop:LOSS_INCOME_LIMIT
If agqGENERAL:TENANT = "Y" Then
    agqGENERAL:LIMIT_LOSS_INCOME      = agsdefault_bop:LIMIT_LOSS_INCOME
Else
    agqGENERAL:LIMIT_LOSS_INCOME      = "N"
If agqGENERAL:LIMIT_LOSS_INCOME = "" Then
    agqGENERAL:LIMIT_LOSS_INCOME      = "N"
agqGENERAL:DELETE_LOSS_INCOME         = "N"
agqGENERAL:SIGNS_LIMIT                = agsdefault_bop:SIGNS_LIMIT
If SFSLINE_ALIAS:OPTION = "P" Then
    Begin
    L_EXTERIOR_SIGNS_LIMIT                  = (L_PROPERTY_LIMIT_1 *
                                              (agsdefault_bop:EXTERIOR_SIGNS_PERCENT
                                              Divide 100))
    If L_EXTERIOR_SIGNS_LIMIT > agqGENERAL:SIGNS_LIMIT Then
        agqGENERAL:SIGNS_LIMIT        = L_EXTERIOR_SIGNS_LIMIT
    End
agqGENERAL:SIGNS_DEDUCTIBLE[1]        = agsdefault_bop:SIGNS_DEDUCTIBLE
agqGENERAL:SIGNS_DEDUCTIBLE[2]        = agsdefault_bop:SIGNS_NOT_ATTACHED_DEDUCT

If agqGENERAL:PROPERTY_LIMIT <> 0 And
   L_FORM <> 3 Then
    Begin
    agqGENERAL:BURGLARY_LIMIT_ON      = agsdefault_bop:BURGLARY_LIMIT_ON
    agqGENERAL:BURGLARY_LIMIT_OFF     = agsdefault_bop:BURGLARY_LIMIT_OFF
    End
If L_FORM = 3 Or
   agqGENERAL:PROPERTY_LIMIT = 0 Then
    Begin
    agqGENERAL:BURGLARY_LIMIT_ON      = 0
    agqGENERAL:BURGLARY_LIMIT_OFF     = 0
    End
If agqGENERAL:PROPERTY_LIMIT <> 0 And
   L_FORM = 3 Then
    Begin
    agqGENERAL:MONEY_LIMIT_ON         = agsdefault_bop:MONEY_LIMIT_ON
    agqGENERAL:MONEY_LIMIT_OFF        = agsdefault_bop:MONEY_LIMIT_OFF
    End
If ((L_FORM <> 3 and
   agqgeneral:attach_bu5001 = "N") Or
   (agqGENERAL:PROPERTY_LIMIT = 0 and
   agqgeneral:attach_bu5001 = "N")) Then
    Begin
    agqGENERAL:MONEY_LIMIT_ON         = 0
    agqGENERAL:MONEY_LIMIT_OFF        = 0
    End

access agqgeneral_alias, set agqgeneral_alias:app_no = g_app_no, generic

l_attorney = "N"
while agqgeneral_alias:app_no = g_app_no
    begin
    if agqgeneral_alias:class_code one of 51 and
       agqgeneral_alias:bpsclass_sub_code one of 60 then
        l_attorney = "Y"

    next agqgeneral_alias
    end

if agqgeneral:eff_date >= bpsdefault1:epl_eff_date then
    begin
    if l_attorney = "Y" then
        begin
        access agqepl, set agqepl:app_no = g_app_no, generic

        if agqepl:app_no = g_app_no then
            begin
            change agqepl
                begin
                agqepl:epl_limit      = 0
                agqepl:epl_deductible = 0
                end
            end
        else
            begin
            add agqepl
                begin
                agqepl:app_no         = g_app_no
                agqepl:epl_limit      = 0
                agqepl:epl_deductible = 0
                end
            end
        end
    else
        begin
        access agqepl, set agqepl:app_no = g_app_no, generic

        if agqepl:app_no = g_app_no then
            begin
            change agqepl
                begin
                if agqepl:epl_limit = 0 then
                    agqepl:epl_limit      = bpsdefault1:epl_limit
                if agqepl:epl_deductible = 0 then
                    agqepl:epl_deductible = bpsdefault1:epl_deductible
                end
            end
        else
            begin
            add agqepl
                begin
                agqepl:app_no         = g_app_no
                agqepl:epl_limit      = bpsdefault1:epl_limit
                agqepl:epl_deductible = bpsdefault1:epl_deductible
                end
            end
        end
    end
agqGENERAL:AR_LIMIT                   = agsdefault_bop:AR_LIMIT
If SFSLINE_alias:OPTION = "P" Then
    Begin
    L_AR_LIMIT                              = (L_PROPERTY_LIMIT_1 *
                                              (agsdefault_bop:AR_PERCENT Divide 100))
    If L_AR_LIMIT > agqGENERAL:AR_LIMIT Then
        agqGENERAL:AR_LIMIT           = L_AR_LIMIT
    End
agqgeneral:debris_removal_limit       = agsdefault_bop:debris_removal
agqGENERAL:UTILITY_LIMIT              = agsdefault_bop:UTILITY_LIMIT
If SFSLINE_alias:OPTION = "P" and
   sfscompany:boiler_rating <> 4 Then
    Begin
    L_UTILITY_LIMIT                         = (L_PROPERTY_LIMIT_1 *
                                              (agsdefault_bop:UTILITY_PERCENT Divide 100))
    If L_UTILITY_LIMIT > agqGENERAL:UTILITY_LIMIT Then
        agqGENERAL:UTILITY_LIMIT      = L_UTILITY_LIMIT
    If agqGENERAL:UTILITY_LIMIT > agsdefault_bop:UTILITY_MAX and
       agsdefault_bop:utility_max <> 0 Then
        agqGENERAL:UTILITY_LIMIT      = agsdefault_bop:UTILITY_MAX
    End
agqGENERAL:MECHANICAL_LIMIT           = agsdefault_bop:MECHANICAL_LIMIT
If SFSLINE_alias:OPTION = "P" and
   sfscompany:boiler_rating <> 4 Then
    Begin
    L_MECHANICAL_LIMIT                      = (L_PROPERTY_LIMIT_1 *
                                              (agsdefault_bop:MECHANICAL_PERCENT Divide 100))
    If L_MECHANICAL_LIMIT > agqGENERAL:MECHANICAL_LIMIT Then
        agqGENERAL:MECHANICAL_LIMIT   = L_MECHANICAL_LIMIT
    If agqGENERAL:MECHANICAL_LIMIT > agsdefault_bop:MECHANICAL_MAX and
       agsdefault_bop:mechanical_max <> 0 Then
        agqGENERAL:MECHANICAL_LIMIT   = agsdefault_bop:MECHANICAL_MAX
    End
agqGENERAL:CUSTOMER_PROP_LIMIT        = agsdefault_bop:CUSTOMER_PROP_LIMIT
agqGENERAL:POLLUTION_LIMIT            = agsdefault_bop:POLLUTION_LIMIT
agqGENERAL:VALUABLE_PAPERS_LIMIT      = agsdefault_bop:VALUABLE_PAPERS_LIMIT
If SFSLINE_alias:OPTION = "P" Then
    Begin
    L_VALUABLE_LIMIT                        = (L_PROPERTY_LIMIT_1 *
                                              (agsdefault_bop:VALUABLE_PERCENT Divide 100))
    If L_VALUABLE_LIMIT > agqGENERAL:VALUABLE_PAPERS_LIMIT Then
        agqGENERAL:VALUABLE_PAPERS_LIMIT = L_VALUABLE_LIMIT
    End
agqGENERAL:FIRE_LIMIT                 = agsdefault_bop:FIRE_LIMIT
if agqgeneral:acv_building = "N" and
   agqgeneral:company_id = "FARMERS" then
    begin
    agqGENERAL:BUILDING_CODE_LIMIT        = agsdefault_bop:BUILDING_CODE_LIMIT
    agqGENERAL:BUILDING_CODE_PERCENT      = agsdefault_bop:BUILDING_CODE_PERCENT
    end
else
if agqgeneral:company_id <> "FARMERS" then
    begin
    agqGENERAL:BUILDING_CODE_LIMIT        = agsdefault_bop:BUILDING_CODE_LIMIT
    agqGENERAL:BUILDING_CODE_PERCENT      = agsdefault_bop:BUILDING_CODE_PERCENT
    end
agqGENERAL:BOILERS                    = agsdefault_bop:BOILERS
agqGENERAL:WATER_BACKUP_LIMITED       = "N"
If SFSLINE_alias:OPTION = "P" and
   sfscompany:boiler_rating <> 4 Then
    agqGENERAL:WATER_BACKUP_LIMITED   = "Y"
if sfsline_alias:option one of "P", "S" and
   sfscompany:boiler_rating = 4 then
    agqgeneral:water_backup_limited   = "Y"
agqGENERAL:WATER_BACKUP_EXCLUSION     = "N"
agqGENERAL:WATER_BACKUP_LIMIT         = agsdefault_bop:WATER_BACKUP_LIMIT
if sfsline_alias:option <> "P" and
   sfscompany:boiler_rating = 2 then
    agqgeneral:water_backup_limit = 0
if agqgeneral:company_id one of "FARMERS", "LEBINS" then
    agqgeneral:water_backup_limit = 0
If SFSLINE_alias:OPTION = "P" Then
    Begin
    L_SEWER_LIMIT                           = (L_PROPERTY_LIMIT_1 *
                                              (agsdefault_bop:SEWER_BKUP_PERCENT Divide 100))
    If L_SEWER_LIMIT > agqGENERAL:WATER_BACKUP_LIMIT Then
        agqGENERAL:WATER_BACKUP_LIMIT = L_SEWER_LIMIT
    if agqgeneral:water_backup_limit > 15000 and
       sfscompany:boiler_rating = 2 then
        agqgeneral:water_backup_limit = 15000
    End
agqGENERAL:BALIS                      = agsdefault_bop:BALIS
agqGENERAL:SUPPLIES_LIMIT             = agsdefault_bop:SUPPLIES_LIMIT
agqGENERAL:WHOLESALER                 = "N"
agqGENERAL:WHOLESALER_PERCENT         = 0
agqGENERAL:BURGLAR_ALARM_SYSTEM       = "N"

if g_enhancement = 1 then
    begin
    Access bpssupplemental, Set bpssupplemental:COMPANY_ID       = agqgeneral:company_id,
                                bpssupplemental:state            = agqgeneral:state,
                                bpssupplemental:LINE_OF_BUSINESS = agqgeneral:line_of_business, generic

    while bpssupplemental:company_id       = agqgeneral:company_id and
          bpssupplemental:state            = agqgeneral:state and
          bpssupplemental:line_of_business = agqgeneral:line_of_business
            begin
            if agqgeneral:eff_date >= bpssupplemental:eff_date then
                begin
                if sfsline:option = "P" then
                    begin
                    l_ar_limit = agqgeneral:property_limit * (bpssupplemental:ar_percent divide 100)
                    if l_ar_limit > bpssupplemental:ar_limit then
                        agqgeneral:ar_limit               = l_ar_limit
                    else
                        agqGENERAL:AR_LIMIT               = bpssupplemental:ar_limit
                    agqGENERAL:SUPPLIES_LIMIT             = bpssupplemental:supplies_limit
                    agqGENERAL:BUILDING_CODE_PERCENT      = bpssupplemental:BUILDING_CODE_PERCENT
                    agqGENERAL:CUSTOMER_PROP_LIMIT        = bpssupplemental:CUSTOMER_PROP_LIMIT
                    l_utility_limit = (agqgeneral:property_limit * (bpssupplemental:utility_percent divide 100))
                    if l_utility_limit > bpssupplemental:utility_limit then
                        agqgeneral:utility_limit          = l_utility_limit
                    else
                        agqGENERAL:UTILITY_LIMIT          = bpssupplemental:UTILITY_LIMIT
                    l_mechanical_limit = (agqgeneral:property_limit * (bpssupplemental:mechanical_percent divide 100))
                    if l_mechanical_limit > bpssupplemental:mechanical_limit then
                        agqgeneral:mechanical_limit       = l_mechanical_limit
                    else
                        agqGENERAL:MECHANICAL_LIMIT       = bpssupplemental:MECHANICAL_LIMIT
                    If agqGENERAL:MECHANICAL_LIMIT > agsdefault_bop:MECHANICAL_MAX and
                       agsdefault_bop:mechanical_max <> 0 Then
                        agqGENERAL:MECHANICAL_LIMIT   = agsdefault_bop:MECHANICAL_MAX
                    l_signs_limit = agqgeneral:property_limit * (bpssupplemental:signs_percent divide 100)
                    if l_signs_limit > bpssupplemental:signs_limit then
                        agqgeneral:signs_limit            = l_signs_limit
                    else
                        agqGENERAL:SIGNS_LIMIT            = bpssupplemental:SIGNS_LIMIT
                    agqGENERAL:POLLUTION_LIMIT            = bpssupplemental:POLLUTION_LIMIT
                    l_valuable_papers_limit = agqgeneral:property_limit * (bpssupplemental:valuable_papers_percent divide 100)
                    if l_valuable_papers_limit > bpssupplemental:valuable_papers_limit then
                        agqgeneral:valuable_papers_limit  = l_valuable_papers_limit
                    else
                        agqGENERAL:VALUABLE_PAPERS_LIMIT  = bpssupplemental:VALUABLE_PAPERS_LIMIT
                    agqGENERAL:MONEY_LIMIT_ON             = bpssupplemental:MONEY_LIMIT_ON
                    agqGENERAL:MONEY_LIMIT_OFF            = bpssupplemental:MONEY_LIMIT_OFF
                    agqGENERAL:FIRE_LIMIT                 = bpssupplemental:FIRE_LIMIT
                    l_credit_card_limit = agqgeneral:property_limit * (bpssupplemental:credit_card_percent divide 100)
                    if l_credit_card_limit > bpssupplemental:credit_card_limit then
                        agqgeneral:credit_card_limit      = l_credit_card_limit
                    else
                        agqGENERAL:credit_card_LIMIT      = bpssupplemental:credit_card_limit
                    l_water_limit = agqgeneral:property_limit * (bpssupplemental:water_backup_percent divide 100)
                    if l_water_limit > bpssupplemental:water_backup_limit then
                        agqgeneral:water_backup_limit     = l_water_limit
                    else
                        agqGENERAL:water_backup_LIMIT     = bpssupplemental:water_backup_limit
                    if agqgeneral:water_backup_limit > 15000 and
                       sfscompany:boiler_rating = 2 then
                        agqgeneral:water_backup_limit = 15000
                    end
                else
                    begin
                    agqGENERAL:AR_LIMIT                   = bpssupplemental:ar_limit
                    agqGENERAL:SUPPLIES_LIMIT             = bpssupplemental:supplies_limit
                    agqGENERAL:BUILDING_CODE_PERCENT      = bpssupplemental:BUILDING_CODE_PERCENT
                    agqGENERAL:CUSTOMER_PROP_LIMIT        = bpssupplemental:CUSTOMER_PROP_LIMIT
                    agqGENERAL:UTILITY_LIMIT              = bpssupplemental:UTILITY_LIMIT
                    agqGENERAL:MECHANICAL_LIMIT           = bpssupplemental:MECHANICAL_LIMIT
                    agqGENERAL:SIGNS_LIMIT                = bpssupplemental:SIGNS_LIMIT
                    agqGENERAL:POLLUTION_LIMIT            = bpssupplemental:POLLUTION_LIMIT
                    agqGENERAL:VALUABLE_PAPERS_LIMIT      = bpssupplemental:VALUABLE_PAPERS_LIMIT
                    agqGENERAL:MONEY_LIMIT_ON             = bpssupplemental:MONEY_LIMIT_ON
                    agqGENERAL:MONEY_LIMIT_OFF            = bpssupplemental:MONEY_LIMIT_OFF
                    agqGENERAL:FIRE_LIMIT                 = bpssupplemental:FIRE_LIMIT
                    agqgeneral:water_backup_limit         = bpssupplemental:water_backup_limit

                    access agqmaster, set agqmaster:app_no = g_app_no, generic

                    if agqmaster:app_no = g_app_no then
                        begin
                        change agqmaster
                            begin
                            agqmaster:medical_limit           = bpssupplemental:medical_limit
                            end
                        end
                    end

                access agqmaster, set agqmaster:app_no = g_app_no, generic

                if agqgeneral:property_limit <> 0 then
                    l_form = 3
                else
                    l_form = 1

                access sfsliability, set sfsliability:company_id       = agqgeneral:company_id,
                                         sfsliability:state            = agqgeneral:state,
                                         sfsliability:line_of_business = agqgeneral:line_of_business,
                                         sfsliability:liability_code   = agsdefault_bop:liability_code, generic

                change agqmaster
                    begin
                    agqmaster:medical_limit             =       bpssupplemental:medical_limit
                    agqmaster:off_premises_limit        =       bpssupplemental:off_premises_b
                    agqmaster:form                      =       l_form
--                    agqmaster:deductible                =       agsdefault_bop:deductible
--                    agqmaster:liability_code            =       agsdefault_bop:liability_code
                    agqmaster:personal_add_injury       =       sfsliability:limit
                    agqmaster:general_aggregate         =       sfsliability:limit * agsdefault_bop:aggregate_percent
--                    agqmaster:delete_hired_nonowned     =       agsdefault_bop:delete_nonowned
--                    agqmaster:extend_hired_nonowned     =       agsdefault_bop:extended_hired_nonowned
--                    agqmaster:exclude_terrorism         =       agsdefault_bop:exclude_terrorism
                    end
                end

           next bpssupplemental
           end
    end

--if agqgeneral:water_backup_limit <> 0 then
--    agqgeneral:water_backup_limited = "Y"
end

procedure change_optional_coverages
begin
Access SFSLINE_ALIAS, Set SFSLINE_alias:COMPANY_ID       = agqgeneral:company_id,
                          SFSLINE_alias:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                          SFSLINE_alias:LOB_SUBLINE      = "00", Generic

Access SFSLINE, Set SFSLINE:COMPANY_ID       = agqname:company_id,
                    SFSLINE:LINE_OF_BUSINESS = agqname:line_of_business,
                    SFSLINE:LOB_SUBLINE      = "00", Generic

if sfsline:lob_code = "CPORTFOLIO" then
    begin
    access agqmastsupp, set agqmastsupp:app_no         = g_app_no,
                            agqmastsupp:line_of_business = l_line_of_business, generic

    l_form               = agqmastsupp:form
    l_off_premises_limit = agqmastsupp:off_premises_limit
    end
else
    begin
    access agqmaster, set agqmaster:app_no = g_app_no, exact

    l_form               = agqmaster:form
    l_off_premises_limit = agqmaster:off_premises_limit
    end

access bpsdefault1, set bpsdefault1:company_id = agqgeneral:company_id,
                        bpsdefault1:line_of_business = agqgeneral:line_of_business,
                        bpsdefault1:form = l_form, generic

Access agsdefault_bop, Set agsdefault_bop:COMPANY_ID       = agqgeneral:COMPANY_ID,
                           agsdefault_bop:state            = agqgeneral:state,
                           agsdefault_bop:agent_no         = agqgeneral:agent_no,
                           agsdefault_bop:LINE_OF_BUSINESS = agqgeneral:LINE_OF_BUSINESS, generic

if g_enhancement = 0 then
    begin
    if sfsline:lob_code = "CPORTFOLIO" then
        begin
        change agqmastsupp
            begin
            agqmastsupp:medical_limit           = agsdefault_bop:medical_limit
            end
        end
    else
        begin
        change agqmaster
            begin
            agqmaster:medical_limit           = agsdefault_bop:medical_limit
            end
        end
    end
If agqGENERAL:PROPERTY_LIMIT <> 0 And
   L_FORM = 3 And
   agqGENERAL:MONEY_LIMIT_ON = 0 Then
    Begin
    agqGENERAL:MONEY_LIMIT_ON = agsdefault_bop:MONEY_LIMIT_ON
    agqGENERAL:MONEY_LIMIT_OFF = agsdefault_bop:MONEY_LIMIT_OFF
    End
If ((L_FORM <> 3 and
   agqgeneral:attach_bu5001 = "N") Or
   (agqGENERAL:PROPERTY_LIMIT = 0 and
   agqgeneral:attach_bu5001 = "N")) Then
    Begin
    agqGENERAL:MONEY_LIMIT_ON = 0
    agqGENERAL:MONEY_LIMIT_OFF = 0
    End
If ((L_FORM = 3 and
   agqgeneral:attach_bu5001 = "N") Or
   (agqGENERAL:PROPERTY_LIMIT = 0 and
   agqgeneral:attach_bu5001 = "N")) Then
    Begin
    agqGENERAL:BURGLARY_LIMIT_ON = 0
    agqGENERAL:BURGLARY_LIMIT_OFF = 0
    End
If agqGENERAL:DIFFERENT_OFF_PREMISES = 0 Then
    agqGENERAL:OFF_PREMISES_LIMIT = L_OFF_PREMISES_LIMIT

access agqgeneral_alias, set agqgeneral_alias:app_no = g_app_no, generic

l_attorney = "N"
while agqgeneral_alias:app_no = g_app_no
    begin
    if agqgeneral_alias:class_code one of 51 and
       agqgeneral_alias:bpsclass_sub_code one of 60 then
        l_attorney = "Y"

    next agqgeneral_alias
    end

if agqgeneral:eff_date >= bpsdefault1:epl_eff_date then
    begin
    if l_attorney = "Y" then
        begin
        access agqepl, set agqepl:app_no = g_app_no, generic

        if agqepl:app_no = g_app_no then
            begin
            change agqepl
                begin
                agqepl:epl_limit      = 0
                agqepl:epl_deductible = 0
                end
            end
        else
            begin
            add agqepl
                begin
                agqepl:app_no         = g_app_no
                agqepl:epl_limit      = 0
                agqepl:epl_deductible = 0
                end
            end
        end
    else
        begin
        access agqepl, set agqepl:app_no = g_app_no, generic

        if agqepl:app_no = g_app_no then
            begin
            change agqepl
                begin
                if agqepl:epl_limit = 0 then
                    agqepl:epl_limit      = bpsdefault1:epl_limit
                if agqepl:epl_deductible = 0 then
                    agqepl:epl_deductible = bpsdefault1:epl_deductible
                end
            end
        else
            begin
            add agqepl
                begin
                agqepl:app_no         = g_app_no
                agqepl:epl_limit      = bpsdefault1:epl_limit
                agqepl:epl_deductible = bpsdefault1:epl_deductible
                end
            end
        end
    end
If SFSLINE_ALIAS:OPTION = "P" And
   L_PROPERTY_LIMIT_CHANGE = "Y" Then
    Begin
    agqGENERAL:SIGNS_LIMIT = agsdefault_bop:SIGNS_LIMIT
    L_EXTERIOR_SIGNS_LIMIT = (L_PROPERTY_LIMIT_1 *
                             (agsdefault_bop:EXTERIOR_SIGNS_PERCENT
                             Divide 100))
    If L_EXTERIOR_SIGNS_LIMIT > agqGENERAL:SIGNS_LIMIT Then
        agqGENERAL:SIGNS_LIMIT = L_EXTERIOR_SIGNS_LIMIT

    agqGENERAL:AR_LIMIT = agsdefault_bop:AR_LIMIT
    L_AR_LIMIT = (L_PROPERTY_LIMIT_1 *
                (agsdefault_bop:AR_PERCENT Divide 100))
    If L_AR_LIMIT > agqGENERAL:AR_LIMIT Then
        agqGENERAL:AR_LIMIT = L_AR_LIMIT

access agqgeneral_alias, set agqgeneral_alias:app_no = g_app_no, generic

l_attorney = "N"
while agqgeneral_alias:app_no = g_app_no
    begin
    if agqgeneral_alias:class_code one of 51 and
       agqgeneral_alias:bpsclass_sub_code one of 60 then
        l_attorney = "Y"

    next agqgeneral_alias
    end

if agqgeneral:eff_date >= bpsdefault1:epl_eff_date then
    begin
    if l_attorney = "Y" then
        begin
        access agqepl, set agqepl:app_no = g_app_no, generic

        if agqepl:app_no = g_app_no then
            begin
            change agqepl
                begin
                agqepl:epl_limit      = 0
                agqepl:epl_deductible = 0
                end
            end
        else
            begin
            add agqepl
                begin
                agqepl:app_no         = g_app_no
                agqepl:epl_limit      = 0
                agqepl:epl_deductible = 0
                end
            end
        end
    else
        begin
        access agqepl, set agqepl:app_no = g_app_no, generic

        if agqepl:app_no = g_app_no then
            begin
            change agqepl
                begin
                agqepl:epl_limit      = bpsdefault1:epl_limit
                agqepl:epl_deductible = bpsdefault1:epl_deductible
                end
            end
        else
            begin
            add agqepl
                begin
                agqepl:app_no         = g_app_no
                agqepl:epl_limit      = bpsdefault1:epl_limit
                agqepl:epl_deductible = bpsdefault1:epl_deductible
                end
            end
        end
    end
    agqgeneral:debris_removal_limit       = agsdefault_bop:debris_removal
    agqGENERAL:UTILITY_LIMIT = agsdefault_bop:UTILITY_LIMIT
    if sfscompany:boiler_rating <> 4 then
        begin
        L_UTILITY_LIMIT = (L_PROPERTY_LIMIT_1 *
                          (agsdefault_bop:UTILITY_PERCENT Divide 100))
        If L_UTILITY_LIMIT > agqGENERAL:UTILITY_LIMIT Then
            agqGENERAL:UTILITY_LIMIT = L_UTILITY_LIMIT
        If agqGENERAL:UTILITY_LIMIT > agsdefault_bop:UTILITY_MAX and
           agsdefault_bop:utility_max <> 0 Then
            agqGENERAL:UTILITY_LIMIT = agsdefault_bop:UTILITY_MAX
        end

    agqGENERAL:MECHANICAL_LIMIT = agsdefault_bop:MECHANICAL_LIMIT
    if sfscompany:boiler_rating <> 4 then
        begin
        L_MECHANICAL_LIMIT = (L_PROPERTY_LIMIT_1 *
                             (agsdefault_bop:MECHANICAL_PERCENT Divide 100))
        If L_MECHANICAL_LIMIT > agqGENERAL:MECHANICAL_LIMIT Then
            agqGENERAL:MECHANICAL_LIMIT = L_MECHANICAL_LIMIT
        If agqGENERAL:MECHANICAL_LIMIT > agsdefault_bop:MECHANICAL_MAX and
           agsdefault_bop:mechanical_max <> 0 Then
            agqGENERAL:MECHANICAL_LIMIT = agsdefault_bop:MECHANICAL_MAX
        end

    agqGENERAL:VALUABLE_PAPERS_LIMIT = agsdefault_bop:VALUABLE_PAPERS_LIMIT
    L_VALUABLE_LIMIT = (L_PROPERTY_LIMIT_1 *
                       (agsdefault_bop:VALUABLE_PERCENT Divide 100))
    If L_VALUABLE_LIMIT > agqGENERAL:VALUABLE_PAPERS_LIMIT Then
        agqGENERAL:VALUABLE_PAPERS_LIMIT = L_VALUABLE_LIMIT

    agqGENERAL:WATER_BACKUP_LIMIT = agsdefault_bop:WATER_BACKUP_LIMIT
    if sfsline_alias:option <> "P" and
       sfscompany:boiler_rating = 2 then
        agqgeneral:water_backup_limit = 0

    if agqgeneral:company_id one of "FARMERS", "LEBINS" then
       agqgeneral:water_backup_limit = 0

    if agqgeneral:company_id = "GGUND" and
       agqgeneral:line_of_business one of 5 then
        agqgeneral:water_backup_limit = 0
    if agqgeneral:company_id = "GGUND" and
       agqgeneral:line_of_business not one of 5 then
        agqgeneral:water_backup_limit = agsdefault_bop:water_backup_limit

    L_SEWER_LIMIT = (L_PROPERTY_LIMIT_1 *
                    (agsdefault_bop:SEWER_BKUP_PERCENT Divide 100))
    If L_SEWER_LIMIT > agqGENERAL:WATER_BACKUP_LIMIT Then
        agqGENERAL:WATER_BACKUP_LIMIT = L_SEWER_LIMIT
    if agqgeneral:water_backup_limit > 15000 and
       sfscompany:boiler_rating = 2 then
        agqgeneral:water_backup_limit = 15000
    End

if g_enhancement = 1 then
    begin
    Access bpssupplemental, Set bpssupplemental:COMPANY_ID       = agqgeneral:company_id,
                                bpssupplemental:state            = agqgeneral:state,
                                bpssupplemental:LINE_OF_BUSINESS = agqgeneral:line_of_business, generic

    while bpssupplemental:company_id       = agqgeneral:company_id and
          bpssupplemental:state            = agqgeneral:state and
          bpssupplemental:line_of_business = agqgeneral:line_of_business
            begin
            if agqgeneral:eff_date >= bpssupplemental:eff_date then
                begin
                if sfsline:option = "P" then
                    begin
                    l_ar_limit = agqgeneral:property_limit * (bpssupplemental:ar_percent divide 100)
                    if l_ar_limit > bpssupplemental:ar_limit then
                        agqgeneral:ar_limit               = l_ar_limit
                    else
                        agqGENERAL:AR_LIMIT               = bpssupplemental:ar_limit
                    agqGENERAL:SUPPLIES_LIMIT             = bpssupplemental:supplies_limit
                    agqGENERAL:BUILDING_CODE_PERCENT      = bpssupplemental:BUILDING_CODE_PERCENT
                    agqGENERAL:CUSTOMER_PROP_LIMIT        = bpssupplemental:CUSTOMER_PROP_LIMIT
                    l_utility_limit = (agqgeneral:property_limit * (bpssupplemental:utility_percent divide 100))
                    if l_utility_limit > bpssupplemental:utility_limit then
                        agqgeneral:utility_limit          = l_utility_limit
                    else
                        agqGENERAL:UTILITY_LIMIT          = bpssupplemental:UTILITY_LIMIT
                    l_mechanical_limit = (agqgeneral:property_limit * (bpssupplemental:mechanical_percent divide 100))
                    if l_mechanical_limit > bpssupplemental:mechanical_limit then
                        agqgeneral:mechanical_limit       = l_mechanical_limit
                    else
                        agqGENERAL:MECHANICAL_LIMIT       = bpssupplemental:MECHANICAL_LIMIT
                    If agqGENERAL:MECHANICAL_LIMIT > agsdefault_bop:MECHANICAL_MAX and
                       agsdefault_bop:mechanical_max <> 0 Then
                        agqGENERAL:MECHANICAL_LIMIT   = agsdefault_bop:MECHANICAL_MAX
                    l_signs_limit = agqgeneral:property_limit * (bpssupplemental:signs_percent divide 100)
                    if l_signs_limit > bpssupplemental:signs_limit then
                        agqgeneral:signs_limit            = l_signs_limit
                    else
                        agqGENERAL:SIGNS_LIMIT            = bpssupplemental:SIGNS_LIMIT
                    agqGENERAL:POLLUTION_LIMIT            = bpssupplemental:POLLUTION_LIMIT
                    l_valuable_papers_limit = agqgeneral:property_limit * (bpssupplemental:valuable_papers_percent divide 100)
                    if l_valuable_papers_limit > bpssupplemental:valuable_papers_limit then
                        agqgeneral:valuable_papers_limit  = l_valuable_papers_limit
                    else
                        agqGENERAL:VALUABLE_PAPERS_LIMIT  = bpssupplemental:VALUABLE_PAPERS_LIMIT
                    agqGENERAL:MONEY_LIMIT_ON             = bpssupplemental:MONEY_LIMIT_ON
                    agqGENERAL:MONEY_LIMIT_OFF            = bpssupplemental:MONEY_LIMIT_OFF
                    agqGENERAL:FIRE_LIMIT                 = bpssupplemental:FIRE_LIMIT
                    l_credit_card_limit = agqgeneral:property_limit * (bpssupplemental:credit_card_percent divide 100)
                    if l_credit_card_limit > bpssupplemental:credit_card_limit then
                        agqgeneral:credit_card_limit      = l_credit_card_limit
                    else
                        agqGENERAL:credit_card_LIMIT      = bpssupplemental:credit_card_limit
                    l_water_limit = agqgeneral:property_limit * (bpssupplemental:water_backup_percent divide 100)
                    if l_water_limit > bpssupplemental:water_backup_limit then
                        agqgeneral:water_backup_limit     = l_water_limit
                    else
                        agqGENERAL:water_backup_LIMIT     = bpssupplemental:water_backup_limit
                    if agqgeneral:water_backup_limit > 15000 and
                       sfscompany:boiler_rating = 2 then
                        agqgeneral:water_backup_limit = 15000
                    end
                else
                    begin
                    agqGENERAL:AR_LIMIT                   = bpssupplemental:ar_limit
                    agqGENERAL:SUPPLIES_LIMIT             = bpssupplemental:supplies_limit
                    agqGENERAL:BUILDING_CODE_PERCENT      = bpssupplemental:BUILDING_CODE_PERCENT
    --                agqgeneral:building_glass             = bpssupplemental:building_glass
                    agqGENERAL:CUSTOMER_PROP_LIMIT        = bpssupplemental:CUSTOMER_PROP_LIMIT
                    agqGENERAL:UTILITY_LIMIT              = bpssupplemental:UTILITY_LIMIT
                    agqGENERAL:MECHANICAL_LIMIT           = bpssupplemental:MECHANICAL_LIMIT
                    agqGENERAL:SIGNS_LIMIT                = bpssupplemental:SIGNS_LIMIT
                    agqGENERAL:POLLUTION_LIMIT            = bpssupplemental:POLLUTION_LIMIT
                    agqGENERAL:VALUABLE_PAPERS_LIMIT      = bpssupplemental:VALUABLE_PAPERS_LIMIT
                    agqGENERAL:MONEY_LIMIT_ON             = bpssupplemental:MONEY_LIMIT_ON
                    agqGENERAL:MONEY_LIMIT_OFF            = bpssupplemental:MONEY_LIMIT_OFF
                    agqGENERAL:FIRE_LIMIT                 = bpssupplemental:FIRE_LIMIT
                    agqgeneral:water_backup_limit         = bpssupplemental:water_backup_limit

                    access agqmaster, set agqmaster:app_no = g_app_no, generic

                    change agqmaster
                        begin
                        agqmaster:medical_limit           = bpssupplemental:medical_limit
                        end
                    end

                if agqgeneral:property_limit <> 0 then
                    l_form = 3
                else
                    l_form = 1

                access sfsliability, set sfsliability:company_id       = agqgeneral:company_id,
                                         sfsliability:state            = agqgeneral:state,
                                         sfsliability:line_of_business = agqgeneral:line_of_business,
                                         sfsliability:liability_code   = agsdefault_bop:liability_code, generic

                access agqmaster, set agqmaster:app_no = g_app_no, generic

                change agqmaster
                    begin
                    agqmaster:medical_limit             =       bpssupplemental:medical_limit
                    agqmaster:off_premises_limit        =       bpssupplemental:off_premises_b
                    agqmaster:form                      =       l_form
--                    agqmaster:deductible                =       agsdefault_bop:deductible
--                    agqmaster:liability_code            =       agsdefault_bop:liability_code
                    agqmaster:personal_add_injury       =       sfsliability:limit
                    agqmaster:general_aggregate         =       sfsliability:limit * agsdefault_bop:aggregate_percent
--                    agqmaster:delete_hired_nonowned     =       agsdefault_bop:delete_nonowned
--                    agqmaster:extend_hired_nonowned     =       agsdefault_bop:extended_hired_nonowned
--                    agqmaster:exclude_terrorism         =       agsdefault_bop:exclude_terrorism
                    end
                end

           next bpssupplemental
           end
    end

--if agqgeneral:water_backup_limit <> 0 then
--    agqgeneral:water_backup_limited = "Y"
end

Procedure ACCESS_agqEND
Begin
Access agqEND, Set agqEND:app_no = G_app_no ,
                   agqEND:PREM_NO = agqgeneral:PREM_NO,
                   agqEND:BUILD_NO = agqgeneral:BUILD_NO, Generic

L_ADD_ENDORSEMENT = "Y"
Repeat Begin
    Exit If agqEND:app_no <> G_app_no Or
            agqEND:PREM_NO <> agqgeneral:PREM_NO Or
            agqEND:BUILD_NO <> agqgeneral:BUILD_NO

    If agqEND:CODE = L_CODE Then
        L_ADD_ENDORSEMENT = "N"

    Next agqEND
    End

End

Procedure ADD_agqEND
Begin
Access agqEND, Set agqEND:app_no = G_app_no ,
                   agqEND:PREM_NO = agqgeneral:PREM_NO,
                   agqEND:BUILD_NO = agqgeneral:BUILD_NO, Generic

L_SUB_CODE = 0
Repeat Begin
    Exit If agqEND:app_no <> G_app_no Or
            agqEND:PREM_NO <> agqgeneral:PREM_NO Or
            agqEND:BUILD_NO <> agqgeneral:BUILD_NO

    L_SUB_CODE = agqEND:SUB_CODE

    Next agqEND
    End

L_SUB_CODE = L_SUB_CODE + 10

Access agqGENERAL_ALIAS, Set agqGENERAL_ALIAS:app_no = G_app_no,
                             agqGENERAL_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqGENERAL_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

L_STATE = agqGENERAL_ALIAS:STATE
Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID = agqgeneral:company_id,
                      SFSOPTEND:STATE = L_STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                      SFSOPTEND:CODE = L_CODE, Generic

Repeat Begin
    Exit If SFSOPTEND:COMPANY_ID <> agqgeneral:company_id Or
            SFSOPTEND:STATE <> L_STATE Or
            SFSOPTEND:LINE_OF_BUSINESS <> agqgeneral:line_of_business Or
            SFSOPTEND:CODE <> L_CODE

    If (agqgeneral:EFF_DATE >= SFSOPTEND:EFF_DATE and
       (agqgeneral:eff_date <= sfsoptend:exp_date or
       sfsoptend:exp_date = 0)) Then
        Begin
        L_FORM_EDITION = SFSOPTEND:FORM_EDITION
        L_DESCRIPTION = SFSOPTEND:DESCRIPTION
        l_mcp140_limit = sfsoptend:limit[1]
        End

    Next SFSOPTEND
    End

Add agqEND
    Begin
    agqEND:app_no             =       G_app_no
    agqEND:PREM_NO              =       agqgeneral:PREM_NO
    agqEND:BUILD_NO             =       agqgeneral:BUILD_NO
    agqEND:SUB_CODE             =       L_SUB_CODE
    agqEND:CODE                 =       L_CODE
    agqEND:FORM_EDITION         =       L_FORM_EDITION
    agqEND:DESCRIPTION          =       L_DESCRIPTION
    agqEND:PREMIUM              =       0
    agqend:lob_end_code         =       "X"
    End

End

Procedure DELETE_agqEND
Begin
Access agqEND, Set agqEND:app_no = G_app_no ,
                   agqEND:PREM_NO = agqgeneral:PREM_NO,
                   agqEND:BUILD_NO = agqgeneral:BUILD_NO, Generic

Repeat Begin
    Exit If agqEND:app_no <> G_app_no Or
            agqEND:PREM_NO <> agqgeneral:PREM_NO Or
            agqEND:BUILD_NO <> agqgeneral:BUILD_NO

    If agqEND:CODE = L_CODE Then
        Delete agqEND

    Next agqEND
    End

End

Procedure DELETE_agqEND_1
Begin
Access agqEND, Set agqEND:app_no = G_app_no ,
                   agqEND:PREM_NO  = 0,
                   agqEND:BUILD_NO = 0, Generic

while agqEND:app_no = G_app_no and
      agqEND:PREM_NO  = 0 and
      agqEND:BUILD_NO = 0
    begin
    If agqEND:CODE = L_CODE Then
        Delete agqEND

    Next agqEND
    End

End

Procedure SET_RATE_NO
Begin
Switch(agqGENERAL:BOP_TYPE)
  Case 2       :   Begin
                   agqGENERAL:RATE_NO = 9
                   agqGENERAL:RATE_GROUP = 11
                   agqGENERAL:CLASS_CODE = 51
                   End
  Case 3, 6, 7 :   Begin
                   agqGENERAL:RATE_NO = 0
                   agqGENERAL:RATE_GROUP = 1
                   agqGENERAL:CLASS_CODE = 2
                   End
  Default      :   Begin
                   agqGENERAL:RATE_NO = 0
                   agqGENERAL:RATE_GROUP = 1
                   agqGENERAL:CLASS_CODE = 75
                   End
  End

/* end of set_rate_no */
End

Procedure ADD_COMPUTER_INFO
Begin
if g_enhancement = 0 then
    begin
    Add agqCOMPDESC
        Begin
        agqCOMPDESC:app_no                  =       G_app_no
        agqCOMPDESC:PREM_NO                 =       agqgeneral:prem_no
        agqCOMPDESC:BUILD_NO                =       agqgeneral:build_no
        agqCOMPDESC:SUB_CODE                =       10
        agqCOMPDESC:HARDWARE_SOFTWARE       =       "H"
        agqCOMPDESC:DESCRIPTION             =       L_COMPUTER_DESC/raw
        agqCOMPDESC:LIMIT                   =       L_COMPUTER_LIMIT
        end

    if l_computer_limit_1 <> 0 then
        begin
        Add agqCOMPDESC
            Begin
            agqCOMPDESC:app_no                  =       G_app_no
            agqCOMPDESC:PREM_NO                 =       agqgeneral:prem_no
            agqCOMPDESC:BUILD_NO                =       agqgeneral:build_no
            agqCOMPDESC:SUB_CODE                =       20
            agqCOMPDESC:HARDWARE_SOFTWARE       =       "S"
            agqCOMPDESC:DESCRIPTION             =       L_COMPUTER_DESC_1/raw
            agqCOMPDESC:LIMIT                   =       L_COMPUTER_LIMIT_1
            end
        end

    Add agqCOMPUTER
        Begin
        agqCOMPUTER:app_no                  =       G_app_no
        agqCOMPUTER:PREM_NO                 =       agqgeneral:prem_no
        agqCOMPUTER:BUILD_NO                =       agqgeneral:build_no
        agqCOMPUTER:LIMIT[1]                =       L_COMPUTER_LIMIT
        agqCOMPUTER:LIMIT[2]                =       L_COMPUTER_LIMIT_2
        agqcomputer:limit[3]                =       l_computer_limit_1
        End
    End
else
    begin
    Add agqCOMPDESC
        Begin
        agqCOMPDESC:app_no                  =       G_app_no
        agqCOMPDESC:PREM_NO                 =       agqgeneral:prem_no
        agqCOMPDESC:BUILD_NO                =       agqgeneral:build_no
        agqCOMPDESC:SUB_CODE                =       10
        agqCOMPDESC:HARDWARE_SOFTWARE       =       "H"
        agqCOMPDESC:DESCRIPTION             =       L_COMPUTER_DESC/raw
        agqCOMPDESC:LIMIT                   =       L_COMPUTER_LIMIT
        end

    Add agqCOMPDESC
        Begin
        agqCOMPDESC:app_no                  =       G_app_no
        agqCOMPDESC:PREM_NO                 =       agqgeneral:prem_no
        agqCOMPDESC:BUILD_NO                =       agqgeneral:build_no
        agqCOMPDESC:SUB_CODE                =       20
        agqCOMPDESC:HARDWARE_SOFTWARE       =       "S"
        agqCOMPDESC:DESCRIPTION             =       L_COMPUTER_DESC_1/raw
        agqCOMPDESC:LIMIT                   =       L_COMPUTER_LIMIT_1
        end

    Add agqCOMPUTER
        Begin
        agqCOMPUTER:app_no                  =       G_app_no
        agqCOMPUTER:PREM_NO                 =       agqgeneral:prem_no
        agqCOMPUTER:BUILD_NO                =       agqgeneral:build_no
        agqCOMPUTER:LIMIT[1]                =       L_COMPUTER_LIMIT
        agqCOMPUTER:LIMIT[2]                =       l_computer_limit_2
        agqcomputer:limit[3]                =       l_computer_limit_1
        end
    End

End

Procedure CHANGE_COMPUTER_INFO
Begin
Access agqCOMPDESC, Set agqCOMPDESC:app_no   = G_app_no,
                        agqCOMPDESC:PREM_NO  = agqgeneral:prem_no,
                        agqCOMPDESC:BUILD_NO = agqgeneral:build_no, Generic

Access agqCOMPUTER, Set agqCOMPUTER:app_no = G_app_no,
                        agqCOMPUTER:PREM_NO = agqgeneral:prem_no,
                        agqCOMPUTER:BUILD_NO = agqgeneral:build_no, Generic

if g_enhancement = 0 then
    begin
    Change agqCOMPDESC
        Begin
        if l_computer_limit <> agqcomputer:limit[1] then
            begin
            agqCOMPDESC:HARDWARE_SOFTWARE       =       "H"
            agqCOMPDESC:DESCRIPTION             =       L_COMPUTER_DESC/raw
            agqCOMPDESC:LIMIT                   =       L_COMPUTER_LIMIT
            end
        End

    Change agqCOMPUTER
        Begin
        if l_computer_limit <> agqcomputer:limit[1] then
            begin
            agqCOMPUTER:LIMIT[1]                =       l_computer_limit
            agqCOMPUTER:LIMIT[2]                =       l_computer_limit_2
            agqcomputer:limit[3]                =       l_computer_limit_1
            end
        end
    end
else
    begin
    Change agqCOMPDESC
        Begin
        if l_computer_limit + l_computer_limit_1 <> agqcomputer:limit[1] then
            begin
            agqCOMPDESC:HARDWARE_SOFTWARE       =       "HARDWARE"
            agqCOMPDESC:DESCRIPTION             =       L_COMPUTER_DESC/raw
            agqCOMPDESC:LIMIT                   =       L_COMPUTER_LIMIT
            end
        End

    Change agqCOMPUTER
        Begin
        if l_computer_limit + l_computer_limit_1 <> agqcomputer:limit[1] then
            begin
            agqCOMPUTER:LIMIT[1]                =       L_COMPUTER_LIMIT
            agqCOMPUTER:LIMIT[2]                =       L_COMPUTER_LIMIT_2
            agqcomputer:limit[3]                =       l_computer_limit_1
            end
        end
    end

End

Procedure CHANGE_COMPUTER_INFO_FICOF
Begin
Access agqCOMPDESC, Set agqCOMPDESC:app_no   = G_app_no,
                        agqCOMPDESC:PREM_NO  = G_PREM_NO,
                        agqCOMPDESC:BUILD_NO = G_BUILD_NO, Generic

while agqcompdesc:app_no   = g_app_no and
      agqcompdesc:prem_no  = g_prem_no and
      agqcompdesc:build_no = g_build_no
        begin
        Change agqCOMPDESC
            Begin
            if l_computer_limit > agqcompdesc:limit and
               agqcompdesc:hardware_software = "H" then
                begin
                agqCOMPDESC:HARDWARE_SOFTWARE       =       "H"
                agqCOMPDESC:DESCRIPTION             =       L_COMPUTER_DESC/raw
                agqCOMPDESC:LIMIT                   =       L_COMPUTER_LIMIT
               end
            if l_computer_limit_1 > agqcompdesc:limit and
               agqcompdesc:hardware_software = "S" then
                begin
                agqCOMPDESC:HARDWARE_SOFTWARE       =       "S"
                agqCOMPDESC:DESCRIPTION             =       L_COMPUTER_DESC/raw
                agqCOMPDESC:LIMIT                   =       L_COMPUTER_LIMIT_1
               end
            End

        next agqcompdesc
        end

Access agqCOMPUTER, Set agqCOMPUTER:app_no   = G_app_no,
                        agqCOMPUTER:PREM_NO  = G_PREM_NO,
                        agqCOMPUTER:BUILD_NO = G_BUILD_NO, Generic

Change agqCOMPUTER
    Begin
    if l_computer_limit > agqcomputer:limit[1] then
        agqCOMPUTER:LIMIT[1]  = l_computer_limit
    if l_computer_limit_1 > agqcomputer:limit[3] then
        agqcomputer:limit[3]  = l_computer_limit_1
    if l_computer_limit_2 > agqcomputer:limit[2] then
        agqCOMPUTER:LIMIT[2]  = l_computer_limit_2
    end

End

Procedure ADD_EMPLOYEE_DIS_INFO
Begin
Add agqDISHONESTY
    Begin
    agqDISHONESTY:app_no                =       G_app_no
    agqDISHONESTY:PREM_NO               =       0
    agqDISHONESTY:BUILD_NO              =       0
    agqDISHONESTY:LIMIT                 =       L_EMPLOYEE_LIMIT
    agqDISHONESTY:DEDUCTIBLE            =       200
    agqdishonesty:no_employees          =       5
    End

End

Procedure ADD_EMPLOYEE_DIS_INFO_1
Begin
Add agqDISHONESTY
    Begin
    agqDISHONESTY:app_no                =       G_app_no
    agqDISHONESTY:PREM_NO               =       0
    agqDISHONESTY:BUILD_NO              =       0
    agqDISHONESTY:LIMIT                 =       L_EMPLOYEE_LIMIT
    agqDISHONESTY:DEDUCTIBLE            =       200
    agqdishonesty:no_employees          =       5
    End

End

Procedure ADD_INDOOR_GLASS_INFO
Begin
Add agqGLASS
    Begin
    agqGLASS:app_no                     =       G_app_no
    agqGLASS:PREM_NO                    =       agqgeneral:PREM_NO
    agqGLASS:BUILD_NO                   =       agqgeneral:BUILD_NO
    agqGLASS:LIMIT                      =       L_GLASS_LIMIT
    agqGLASS:DEDUCTIBLE                 =       200
    End

End

Procedure ADD_agqendorse
Begin
Add agqendorse
    Begin
    agqendorse:app_no                   =       G_app_no
    agqendorse:PREM_NO                    =       agqgeneral:prem_no
    agqendorse:BUILD_NO                   =       agqgeneral:build_no
    agqendorse:code                       =       l_code
    agqendorse:sub_code                   =       10
    agqendorse:LIMIT[1]                   =       l_mcp140_limit
    End

End

Procedure ADD_agqendorse_1
Begin
Add agqendorse
    Begin
    agqendorse:app_no                     =       G_app_no
    agqendorse:PREM_NO                    =       0
    agqendorse:BUILD_NO                   =       0
    agqendorse:code                       =       l_code
    agqendorse:sub_code                   =       10
    agqendorse:LIMIT[1]                   =       l_mcp140_limit
    End

End

Procedure CHANGE_INDOOR_GLASS_INFO
Begin
Access agqGLASS, Set agqGLASS:app_no   = G_app_no,
                     agqGLASS:PREM_NO  = agqgeneral:PREM_NO,
                     agqGLASS:BUILD_NO = agqgeneral:BUILD_NO, Generic

if l_glass_limit > agqglass:limit then
    begin
    Change agqGLASS
        Begin
        agqGLASS:LIMIT                      =       L_GLASS_LIMIT
        agqGLASS:DEDUCTIBLE                 =       200
        end
    End

End

End
