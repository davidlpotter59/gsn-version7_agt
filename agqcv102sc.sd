%%
Program
        Name = "agqcv102sc" ;
        Type = "File" ;
        Domain = "FLAT" ;
        Padcharacter = Space ;

        Global Unsigned Ascii Number G_QUOTE_NO[8] ,
                                     G_APP_NO[11] ,
                                     g_policy_no[9],
                                     g_year[4],
                                     g_end_sequence[4] ;

        local unsigned ascii number l_sub_code[4],
                                    l_prem_no[4],
                                    l_build_no[4] ;

        Local String L_PROCEDURE[20] ,
                     L_POLICY_NO[9] ,
                     l_code[7],
                     L_QUOTE_NO[8] ;

Initialisation
G_QUOTE_NO     = val(COMMANDLINE[1,8])
g_policy_no    = val(commandline[9,17])
g_year         = val(commandline[18,21])
g_end_sequence = val(commandline[22,25])

Access SFQNAME, Set SFQNAME:QUOTE_NO = g_quote_no, Exact

L_PROCEDURE = "scqcontractor FILE UPDATE"

Access scqCONTRACTOR, Set scqCONTRACTOR:quote_no = g_quote_no, Approximate

Repeat Begin
    Exit If scqCONTRACTOR:quote_no <> g_quote_no

    Add scpCONTRACTOR
        Begin
        scpCONTRACTOR:policy_no                = g_policy_no
        scpcontractor:pol_year                 = g_year
        scpcontractor:end_sequence             = g_end_sequence
        scpCONTRACTOR:PREM_NO                  = scqCONTRACTOR:PREM_NO
        scpCONTRACTOR:BUILD_NO                 = scqCONTRACTOR:BUILD_NO
        scpCONTRACTOR:RECORD_RDF               = scqCONTRACTOR:RECORD_RDF/raw
        End

    Next scqCONTRACTOR
    End

-- scpADDIN FILE UPDATE LOGIC

L_PROCEDURE = "scpADDIN FILE UPDATE"

Access scqaddin, Set scqaddin:quote_no = g_quote_no, Approximate

while scqaddin:quote_no = g_quote_no
    begin
    Add scpADDIN
        Begin
        scpADDIN:policy_no              = g_policy_no
        scpaddin:pol_year               = g_year
        scpaddin:end_sequence           = g_end_sequence
        scpADDIN:PREM_NO                = scqaddin:PREM_NO
        scpADDIN:BUILD_NO               = scqaddin:BUILD_NO
        scpADDIN:CODE                   = scqaddin:CODE/raw
        scpADDIN:SUB_CODE               = scqaddin:SUB_CODE
        scpADDIN:RECORD_RDF             = scqaddin:RECORD_RDF/raw
        End

    Next scqaddin
    End

L_PROCEDURE = "scpclasscode FILE UPDATE"

Access scqCLASSCODE, Set scqCLASSCODE:quote_no = g_quote_no, Approximate

Repeat Begin
    Exit If scqCLASSCODE:quote_no <> g_quote_no

    Add scpCLASSCODE
        Begin
        scpCLASSCODE:policy_no              = g_policy_no
        scpclasscode:pol_year               = g_year
        scpclasscode:end_sequence           = g_end_sequence
        scpCLASSCODE:PREM_NO                = scqCLASSCODE:PREM_NO
        scpCLASSCODE:BUILD_NO               = scqCLASSCODE:BUILD_NO
        scpCLASSCODE:CLASS_CODE             = scqCLASSCODE:CLASS_CODE
        scpCLASSCODE:RECORD_RDF             = scqCLASSCODE:RECORD_RDF/raw
        End

    Next scqCLASSCODE
    End

L_PROCEDURE = "scpliablimits FILE UPDATE"

Access scqLIABLIMITS, Set scqLIABLIMITS:quote_no = g_quote_no, Approximate

Repeat Begin
    Exit If scqLIABLIMITS:quote_no <> g_quote_no

    Add scpLIABLIMITS
        Begin
        scpLIABLIMITS:policy_no              = g_policy_no
        scpliablimits:pol_year               = g_year
        scpliablimits:end_sequence           = g_end_sequence
        scpLIABLIMITS:RECORD_RDF             = scqLIABLIMITS:RECORD_RDF/raw
        End

    Next scqLIABLIMITS
    End

L_PROCEDURE = "scpmoney FILE UPDATE"

Access scqMONEY, Set scqMONEY:quote_no = g_quote_no, Approximate

Repeat Begin
    Exit If scqMONEY:quote_no <> g_quote_no

    Add scpMONEY
        Begin
        scpMONEY:policy_no              = g_policy_no
        scpmoney:pol_year               = g_year
        scpmoney:end_sequence           = g_end_sequence
        scpMONEY:RECORD_RDF             = scqMONEY:RECORD_RDF/raw
        End

    Next scqMONEY
    End

L_PROCEDURE = "scpendorse FILE UPDATE"

Access scqendorse,
    Set scqendorse:quote_no = g_quote_no, Approximate

Repeat Begin
    Exit If scqendorse:quote_no <> g_quote_no

    Add scpENDORSE
        Begin
        scpENDORSE:policy_no              = g_policy_no
        scpendorse:pol_year               = g_year
        scpendorse:end_sequence           = g_end_sequence
        scpENDORSE:PREM_NO                = scqendorse:PREM_NO
        scpENDORSE:BUILD_NO               = scqendorse:BUILD_NO
        scpENDORSE:CODE                   = scqendorse:CODE/raw
        scpENDORSE:SUB_CODE               = scqendorse:SUB_CODE
        scpENDORSE:RECORD_RDF             = scqendorse:RECORD_RDF/raw
        End

    Next scqendorse
    End

L_PROCEDURE = "scpadditionalclass FILE UPDATE"

Access scqadditionalclass,
   Set scqadditionalclass:quote_no = g_quote_no, Approximate

Repeat Begin
    Exit If scqadditionalclass:quote_no <> g_quote_no

    Add scpadditionalclass
      Begin
        scpadditionalclass:policy_no              = g_policy_no
        scpadditionalclass:pol_year               = g_year
        scpadditionalclass:end_sequence           = g_end_sequence
        scpadditionalclass:PREM_NO                = scqadditionalclass:PREM_NO
        scpadditionalclass:BUILD_NO               = scqadditionalclass:BUILD_NO
        scpadditionalclass:class_code             = scqadditionalclass:class_code
        scpadditionalclass:exposure_type          = scqadditionalclass:exposure_type
        scpadditionalclass:RECORD_RDF             = scqadditionalclass:RECORD_RDF/raw
      End

    Next scqadditionalclass
    End

L_PROCEDURE = "scpdesc FILE UPDATE"

Access scqdesc, Set scqdesc:quote_no = g_quote_no, Approximate

Repeat Begin
    Exit If scqdesc:quote_no <> g_quote_no

    Add scpDESC
        Begin
        scpDESC:policy_no              = g_policy_no
        scpdesc:pol_year               = g_year
        scpdesc:end_sequence           = g_end_sequence
        scpDESC:PREM_NO                = scqdesc:PREM_NO
        scpDESC:BUILD_NO               = scqdesc:BUILD_NO
        scpDESC:CODE                   = scqdesc:CODE/raw
        scpDESC:SUB_CODE               = scqdesc:SUB_CODE
        scpDESC:RECORD_RDF             = scqdesc:RECORD_RDF/raw
        End

    Next scqdesc
    End

L_PROCEDURE = "scpprotect FILE UPDATE"

Access scqPROTECT, Set scqPROTECT:quote_no = g_quote_no, Approximate

Repeat Begin
    Exit If scqPROTECT:quote_no <> g_quote_no

    Add scpPROTECT
        Begin
        scpPROTECT:policy_No              = g_policy_no
        scpprotect:pol_year               = g_year
        scpprotect:end_sequence           = g_end_sequence
        scpPROTECT:PREM_NO                = scqPROTECT:PREM_NO
        scpPROTECT:BUILD_NO               = scqPROTECT:BUILD_NO
        scpPROTECT:RECORD_RDF             = scqPROTECT:RECORD_RDF/raw
        End

    Next scqPROTECT
    End

L_PROCEDURE = "scpprotective FILE UPDATE"

Access scqPROTECTIVE, Set scqPROTECTIVE:quote_no = g_quote_no, Approximate

Repeat Begin
    Exit If scqPROTECTIVE:quote_no <> g_quote_no

    Add scpPROTECTIVE
        Begin
        scpPROTECTIVE:policy_no              = g_policy_no
        scpprotective:pol_year               = g_year
        scpprotective:end_sequence           = g_end_sequence
        scpPROTECTIVE:PREM_NO                = scqPROTECTIVE:PREM_NO
        scpPROTECTIVE:BUILD_NO               = scqPROTECTIVE:BUILD_NO
        scpPROTECTIVE:RECORD_RDF             = scqPROTECTIVE:RECORD_RDF/raw
        End

    Next scqPROTECTIVE
    End

Update

Errors
Writefile("agqcv102sc.err","<NL>")
Writefile("agqcv102sc.err","%S",L_PROCEDURE)
Writefile("agqcv102sc.err","<NL>")
Writefile("agqcv102sc.err","%N%S scqcv100.err",ERRORNUMBER, ERRORTEXT)
Writefile("agqcv102sc.err","<NL>")
Writefile("agqcv102sc.err","<NL>")


End
