%%
Program
        Name = "agtup8001a" ;
        Type = "file" ;
        Padcharacter = Space ;
        Domain = "flat";

        Global Unsigned Ascii Number G_APP_NO[11] ,
                                     G_PREM_NO[4] ,
                                     G_BUILD_NO[4] ;

        Local String l_desc[50] ,
                     l_coverage[1] ,
                     L_ADD_ENDORSEMENT[1],
                     L_FORM_EDITION[25],
                     L_DESCRIPTION[50] ,
                     l_monthly_percent[5],
                     l_peril_1[8],
                     l_peril_2[8],
                     l_peril_3[8],
                     l_peril_4[8],
                     l_code[7] ;

        Local Unsigned Ascii Number l_prem_no[4],
                                    l_build_no[4],
                                    l_form[1] ,
                                    l_construction[1],
                                    l_protection[2],
                                    l_territory[3],
                                    l_class_code[5]=0,
                                    l_class_sub_code[4]=0,
                                    l_state[2],
                                    l_line_of_business[4] ,
                                    l_group_i[8]=0/dec=5,
                                    l_no_limit[1],
                                    l_final_total[8]=0,
                                    l_terror_line_of_business[4],
                                    l_payroll_days[3],
                                    l_days[3],
                                    l_time_period[1],
                                    l_electronic_media_factor[5]=0/dec=3,
                                    l_agreed_value_factor[5]=0/dec=3,
                                    l_monthly_limitation[5]=0/dec=3,
                                    l_other_utility_factor[5]=0/dec=3,
                                    l_extended_factor[5]=0/dec=3,
                                    l_maximum_factor[5]=0/dec=3,
                                    l_payroll_factor[5]=0/dec=3,
                                    l_heat_power_factor[5]=0/dec=3,
                                    l_seasonal_factor[4]=0/dec=3,
                                    l_loss_tuition_factor[5]=0/dec=3,
                                    l_loss_tuition_coinsurance[3]=0,
                                    l_dependent_property[1]=0,
                                    l_dependent_factor[5]=0/dec=3,
                                    l_time_factor[5]=0/dec=3,
                                    l_ordinance_law_factor[5]=0/dec=3,
                                    l_utility[1],
                                    l_utility1_group_i[5]=0/dec=4,
                                    l_utility2_group_i[5]=0/dec=4,
                                    l_utility3_group_i[5]=0/dec=4,
                                    l_utility4_group_i[5]=0/dec=4,
                                    l_utility5_group_i[5]=0/dec=4,
                                    l_utility1_group_ii[5]=0/dec=4,
                                    l_utility2_group_ii[5]=0/dec=4,
                                    l_utility3_group_ii[5]=0/dec=4,
                                    l_utility4_group_ii[5]=0/dec=4,
                                    l_utility5_group_ii[5]=0/dec=4,
                                    l_utility1_broad[5]=0/dec=4,
                                    l_utility2_broad[5]=0/dec=4,
                                    l_utility3_broad[5]=0/dec=4,
                                    l_utility4_broad[5]=0/dec=4,
                                    l_utility5_broad[5]=0/dec=4,
                                    l_utility1_special[5]=0/dec=4,
                                    l_utility2_special[5]=0/dec=4,
                                    l_utility3_special[5]=0/dec=4,
                                    l_utility4_special[5]=0/dec=4,
                                    l_utility5_special[5]=0/dec=4,
                                    l_utility1_earthquake[1]=0/dec=4,
                                    l_utility2_earthquake[1]=0/dec=4,
                                    l_utility3_earthquake[1]=0/dec=4,
                                    l_utility4_earthquake[1]=0/dec=4,
                                    l_utility5_earthquake[1]=0/dec=4,
                                    l_bi_factor[6]=0/dec=4,
                                    l_special_bi_factor[6]=0/dec=4,
                                    l_group_ii[6]=0/dec=4,
                                    l_special[5]=0/dec=3,
                                    l_special_office[3]=0,
                                    l_special_relativities[4]=0,
                                    l_special_theft[5]=0/dec=3,
                                    l_theft_rate[8]=0/dec=3,
                                    l_territory_factor[6]=0/dec=4,
                                    l_protection_factor[5]=0/dec=3,
                                    l_coinsurance_factor[5]=0/dec=3,
                                    l_deductible_factor_1[6]=0/dec=4,
                                    l_deductible_factor_2[6]=0/dec=4,
                                    l_deductible_factor_3[6]=0/dec=4,
                                    l_deductible_factor[6]=0/dec=4,
                                    l_limit[8]=0,
                                    l_limit_1[8]=0,
                                    l_limit_2[8]=0,
                                    l_adj_rate_1[6]=0/dec=3,
                                    l_adj_rate_2[6]=0/dec=3,
                                    l_adj_rate_3[6]=0/dec=3,
                                    l_adj_rate_4[6]=0/dec=3,
                                    l_adj_rate_5[6]=0/dec=3,
                                    l_adj_rate_6[6]=0/dec=3,
                                    l_adj_rate_7[6]=0/dec=3,
                                    l_adj_rate_8[6]=0/dec=3,
                                    l_general_total[8]=0,
                                    l_premium[8]=0,
                                    l_premium_1[8]=0,
                                    l_premium_2[8]=0,
                                    l_premium_3[8]=0,
                                    l_premium_4[8]=0,
                                    l_premium_5[8]=0,
                                    l_premium_6[8]=0,
                                    l_premium_7[8]=0,
                                    l_premium_8[8]=0,
                                    l_total_premium_1[8]=0,
                                    l_deductible_limit[8]=0,
                                    l_inflation_factor[4]=0/dec=2,
                                    l_loss_cost[6]=0/dec=4 ,
                                    l_base_rate_1[6]=0/dec=3,
                                    l_total_premium[8]=0,
                                    l_building_total[8]=0,
                                    l_contents_total[8]=0;

        Unsigned Ascii Number L_TERRORISM_PREMIUM[8]/decimals =0;
        Unsigned Ascii Number L_general_TERRORISM_PREMIUM[8]/decimals =0;
        Unsigned Ascii Number L_TERROR_PERCENTAGE[5]/decimals=4;
        Unsigned Ascii Number L_TERROR_MINIMUM[3];
        Unsigned Ascii Number L_FOUND[1];
        Unsigned Ascii Number L_SUB_CODE[4];
        Wdate L_TERROR_EFF_DATE;

initialisation
g_app_no = val(commandline[1,11])
access agqgeneral1, set agqgeneral1:app_no = g_app_no, generic

access agqbusiness, set agqbusiness:app_no = g_app_no, generic

access agqname, set agqname:app_no = g_app_no, generic

access agqmaster, set agqmaster:app_no = g_app_no, generic

access sfsline, set sfsline:company_id       = agqname:company_id,
                    sfsline:line_of_business = agqname:line_of_business,
                    sfsline:lob_subline      = "00", generic

while agqbusiness:app_no = g_app_no
    begin
    access agqgeneral1, set agqgeneral1:app_no   = agqbusiness:app_no,
                            agqgeneral1:prem_no  = agqbusiness:prem_no,
                            agqgeneral1:build_no = agqbusiness:build_no, generic

    access agqbusiness_alias, set agqbusiness_alias:app_no   = agqbusiness:app_no,
                                  agqbusiness_alias:prem_no  = agqbusiness:prem_no,
                                  agqbusiness_alias:build_no = agqbusiness:build_no,
                                  agqbusiness_alias:coverage = agqbusiness:coverage, generic

    do totals
    access agqbusiness_alias, set agqbusiness_alias:app_no   = agqbusiness:app_no,
                                  agqbusiness_alias:prem_no  = agqbusiness:prem_no,
                                  agqbusiness_alias:build_no = agqbusiness:build_no,
                                  agqbusiness_alias:coverage = agqbusiness:coverage, generic

    l_premium = agqbusiness_alias:total_premium
    l_total_premium_1 = l_total_premium_1 + l_premium

    next agqbusiness
    end

access agqbusiness, set agqbusiness:app_no = g_app_no, generic

If agqgeneral1:REMOVE_TERRORISM_FORM = 0 Then
    begin
    L_TERRORISM_PREMIUM = 0
    Do GET_TERRORISM_PREMIUM
    end
Else
    l_terrorism_premium = 0

update

Procedure Definition

Procedure GET_TERRORISM_PREMIUM
begin
access agqgeneral1, set agqgeneral1:app_no = g_app_no, generic

while agqgeneral1:app_no = g_app_no
    begin
    if agqgeneral1:total_premium[2] = 0 then
        l_general_total = agqgeneral1:total_premium[1] +
                          l_general_total
    else
        l_general_total = agqgeneral1:total_premium[2] +
                          l_general_total

    next agqgeneral1
    end

Access agqbusiness_alias, Set agqbusiness_alias:app_no = G_app_no,
                              agqbusiness_alias:PREM_NO  = G_PREM_NO,
                              agqbusiness_alias:BUILD_NO = G_BUILD_NO, generic

L_STATE = agqbusiness_alias:state
Do ACCESS_SFSMSOTERROR
l_general_terrorism_premium = 0
if l_terror_percentage <> 0 then
    begin
    L_TERRORISM_PREMIUM = L_total_premium_1 * l_terror_PERCENTAGE
    l_general_terrorism_premium = ((l_total_premium_1 +
                                  l_general_total) *
                                  l_terror_percentage)

    If L_TERRORISM_PREMIUM <= L_TERROR_MINIMUM Then
        L_TERRORISM_PREMIUM = L_TERROR_MINIMUM
    end

access agqend, set agqend:app_no = agqbusiness:app_no,
                   agqend:prem_no  = 0,
                   agqend:build_no = 0, generic

while agqend:app_no = agqbusiness:app_no and
      agqend:prem_no  = 0 and
      agqend:build_no = 0
        begin
        if agqend:terrorism_form = 1 and
           agqend:code = sfsmsoterror:terrorism_form_to_add then
            begin
            change agqend
                begin
                agqend:premium = l_general_terrorism_premium
                end
            end

        next agqend
        end
end

Procedure ACCESS_SFSMSOTERROR
begin
l_terror_line_of_business = 0011
Access SFSMSOTERROR, Set SFSMSOTERROR:COMPANY_ID       = agqbusiness:company_id,
                         SFSMSOTERROR:STATE            = agqbusiness:STATE,
                         SFSMSOTERROR:LINE_OF_BUSINESS = l_terror_line_of_business, generic

l_terror_percentage = 0
l_terror_minimum = 0
While SFSMSOTERROR:COMPANY_ID       = agqbusiness:company_id And
      SFSMSOTERROR:STATE            = agqbusiness:STATE And
      SFSMSOTERROR:LINE_OF_BUSINESS = l_terror_line_of_business
    begin
    if agqname:eff_date >= sfsmsoterror:eff_date then
        begin
        L_TERROR_EFF_DATE   = SFSMSOTERROR:EFF_DATE
        L_TERROR_PERCENTAGE = SFSMSOTERROR:PERCENTAGE
        L_TERROR_MINIMUM    = SFSMSOTERROR:MINIMUM_PREMIUM
        end

    Next SFSMSOTERROR
    end

Access SFSMSOTERROR, Set SFSMSOTERROR:COMPANY_ID       = agqbusiness:company_id,
                         SFSMSOTERROR:STATE            = agqbusiness:STATE,
                         SFSMSOTERROR:LINE_OF_BUSINESS = l_terror_line_of_business,
                         SFSMSOTERROR:EFF_DATE         = L_TERROR_EFF_DATE, Exact

end

Procedure ACCESS_KEY
Begin
Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID       = agqbusiness:company_id ,
                      SFSOPTEND:STATE            = agqbusiness:STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = agqbusiness:rating_line_of_business,
                      SFSOPTEND:CODE             = L_CODE, Generic


While SFSOPTEND:COMPANY_ID       = agqbusiness:company_id And
      SFSOPTEND:STATE            = agqbusiness:STATE And
      SFSOPTEND:LINE_OF_BUSINESS = agqbusiness:rating_line_of_business And
      SFSOPTEND:CODE             = L_CODE
        Begin
        If (agqNAME:EFF_DATE >= SFSOPTEND:EFF_DATE and
           (agqname:eff_date <= sfsoptend:exp_date or
           sfsoptend:exp_date = 0)) Then
            Begin
            L_DESCRIPTION  = SFSOPTEND:DESCRIPTION
            L_FORM_EDITION = SFSOPTEND:FORM_EDITION
            End

        Next SFSOPTEND
        End

End

Procedure SUBCODE
Begin
Access agqend_alias, Set agqend_alias:app_no = G_app_no,
                         agqend_alias:prem_no  = 0,
                         agqend_alias:build_no = 0, generic

L_SUB_CODE = 0
while agqend_alias:app_no = G_app_no and
      agqend_alias:prem_no  = 0 and
      agqend_alias:build_no = 0
        begin
        L_SUB_CODE = agqend_alias:SUB_CODE

        Next agqend_alias
        End

End

procedure totals
begin
if agqbusiness:monthly_recovery_limitation = 1 then
    do monthly_recovery

if agqbusiness:agreed_value = 1 then
    do access_cpsbusmiscrates

if agqbusiness:electronic_media = 1 then
    begin
    do electronic_media
    do access_cpsbusmiscrates
    end

if agqbusiness:extended_period_indemnity = 1 then
    do extended_period_indemnity

if agqbusiness:max_recovery_period = 1 then
    do access_cpsbusmiscrates

if agqbusiness:payroll_limitation = 1 then
    begin
    do ordinary_payroll
    do access_cpsbusmiscrates
    end

if agqbusiness:max_recovery_period = 1 then
    do access_cpsbusmiscrates

if agqbusiness:seasonal_leases = 1 then
    do access_cpsbusmiscrates

if agqbusiness:loss_tuition_fees = 1 then
    begin
    do loss_tuition_fees
    do access_cpsbusmiscrates
    end

if agqbusiness:building_law = 1 then
    do access_cpsbusmiscrates

if agqbusiness:dependent_property = 1 then
    begin
    do access_dependent_property
    do access_cpsbusmiscrates
    end

if agqbusiness:time_period = 1 then
    begin
    do time_period
    do access_cpsbusmiscrates
    end

if agqbusiness:utility = 1 then
    begin
    do loss_cost
    do utility
    end

l_limit_1 = agqbusiness:limit divide 100
do group_i
l_premium_1 = l_adj_rate_1 * l_limit_1
do group_ii
l_premium_2 = l_adj_rate_2 * l_limit_1
do broad_special
l_premium_3 = l_adj_rate_3 * l_limit_1

access agqbusiness_alias, set agqbusiness_alias:app_no   = agqbusiness:app_no,
                              agqbusiness_alias:prem_no  = agqbusiness:prem_no,
                              agqbusiness_alias:build_no = agqbusiness:build_no,
                              agqbusiness_alias:coverage = agqbusiness:coverage, generic

change agqbusiness_alias
    begin
    agqbusiness_alias:bi_premium[1] = l_premium_1
    agqbusiness_alias:bi_premium[2] = l_premium_2
    agqbusiness_alias:bi_premium[3] = l_premium_3
    agqbusiness_alias:total_premium = l_premium_1 +
                                      l_premium_2 +
                                      l_premium_3
    end

end

procedure loss_tuition_fees
begin
l_code = "CPQ305 "
access agqendorse5, set agqendorse5:app_no = agqbusiness:app_no,
                       agqendorse5:prem_no  = agqbusiness:prem_no,
                       agqendorse5:build_no = agqbusiness:build_no,
                       agqendorse5:code     = l_code, generic

l_loss_tuition_coinsurance = agqendorse5:coinsurance
end

procedure access_dependent_property
begin
l_code = "CPQ301 "
access agqendorse5, set agqendorse5:app_no = agqbusiness:app_no,
                       agqendorse5:prem_no  = agqbusiness:prem_no,
                       agqendorse5:build_no = agqbusiness:build_no,
                       agqendorse5:code     = l_code, generic

if agqendorse5:option[1] = 1 then
    l_dependent_property = 1
if agqendorse5:option[2] = 1 then
    l_dependent_property = 2
if agqendorse5:option1[1] = 1 then
    l_dependent_property = 3
end

procedure time_period
begin
l_code = "CPQ307 "
access agqendorse5, set agqendorse5:app_no = agqbusiness:app_no,
                       agqendorse5:prem_no  = agqbusiness:prem_no,
                       agqendorse5:build_no = agqbusiness:build_no,
                       agqendorse5:code     = l_code, generic

if agqendorse5:option[1] = 1 then
    l_time_period = 1
else
if agqendorse5:option[2] = 1 then
    l_time_period = 0
end

procedure utility
begin
l_code = "CPQ308 "
access agqendorse5, set agqendorse5:app_no = agqbusiness:app_no,
                       agqendorse5:prem_no  = agqbusiness:prem_no,
                       agqendorse5:build_no = agqbusiness:build_no,
                       agqendorse5:code     = l_code, generic

if agqendorse5:option1[1] = 1 then
    begin
    l_utility = 1
    do access_cpsutility
    end

if agqendorse5:option1[2] = 1 then
    begin
    l_utility = 2
    do access_cpsutility
    end

if agqendorse5:option1[3] = 1 then
    begin
    l_utility = 3
    do access_cpsutility
    end

if agqendorse5:option1[4] = 1 then
    begin
    l_utility = 4
    do access_cpsutility
    end

if agqendorse5:option1[5] = 1 then
    begin
    l_utility = 5
    do access_cpsutility
    end

end

procedure monthly_recovery
begin
l_code = "CPQ304 "
access agqendorse5, set agqendorse5:app_no = agqbusiness:app_no,
                       agqendorse5:prem_no  = agqbusiness:prem_no,
                       agqendorse5:build_no = agqbusiness:build_no,
                       agqendorse5:code     = l_code, generic

l_monthly_percent = agqendorse5:monthly_percent
access cpsmonthlimit, set cpsmonthlimit:company_id       = agqbusiness:company_id,
                          cpsmonthlimit:state            = agqbusiness:state ,
                          cpsmonthlimit:line_of_business = agqbusiness:rating_line_of_business,
                          cpsmonthlimit:risk_type        = agqbusiness:risk_type,
                          cpsmonthlimit:monthly_percent  = l_monthly_percent, generic

while cpsmonthlimit:company_id       = agqbusiness:company_id and
      cpsmonthlimit:state            = agqbusiness:state and
      cpsmonthlimit:line_of_business = agqbusiness:rating_line_of_business and
      cpsmonthlimit:risk_type        = agqbusiness:risk_type and
      cpsmonthlimit:monthly_percent  = l_monthly_percent
        begin
        if (agqname:eff_date >= cpsmonthlimit:eff_date and
           (agqname:eff_date <= cpsmonthlimit:exp_date or
           cpsmonthlimit:exp_date = 0)) then
            begin
            switch(agqbusiness:coverage)
              case "D1" : l_monthly_limitation = cpsmonthlimit:factor[2]
              default   : l_monthly_limitation = cpsmonthlimit:factor[1]
              end
            end

        next cpsmonthlimit
        end

end

procedure access_cpsutility
begin
access cpsutility, set cpsutility:company_id       = agqbusiness:company_id,
                       cpsutility:state            = agqbusiness:state ,
                       cpsutility:line_of_business = agqbusiness:rating_line_of_business, generic

while cpsutility:company_id       = agqbusiness:company_id and
      cpsutility:state            = agqbusiness:state and
      cpsutility:line_of_business = agqbusiness:rating_line_of_business
        begin
        if (agqname:eff_date >= cpsutility:eff_date and
           (agqname:eff_date <= cpsutility:exp_date or
           cpsutility:exp_date = 0)) then
            begin
            switch(l_utility)
              case 1  : begin
                        l_utility1_group_i    = cpsutility:group_i[1]
                        l_utility1_group_ii   = cpsutility:group_ii[1]
                        l_utility1_broad      = cpsutility:broad[1]
                        l_utility1_special    = cpsutility:special[1]
                        l_utility1_earthquake = cpsutility:earthquake[1]
                        end
              case 2  : begin
                        l_utility2_group_i    = cpsutility:group_i[2]
                        l_utility2_group_ii   = cpsutility:group_ii[2]
                        l_utility2_broad      = cpsutility:broad[2]
                        l_utility2_special    = cpsutility:special[2]
                        l_utility2_earthquake = cpsutility:earthquake[2]
                        end
              case 3  : begin
                        l_utility3_group_i    = cpsutility:group_i[3]
                        l_utility3_group_ii   = cpsutility:group_ii[3]
                        l_utility3_broad      = cpsutility:broad[3]
                        l_utility3_special    = cpsutility:special[3]
                        l_utility3_earthquake = cpsutility:earthquake[3]
                        end
              case 4  : begin
                        l_utility4_group_i    = cpsutility:group_i[4]
                        l_utility4_group_ii   = cpsutility:group_ii[4]
                        l_utility4_broad      = cpsutility:broad[4]
                        l_utility4_special    = cpsutility:special[4]
                        l_utility4_earthquake = cpsutility:earthquake[4]
                        end
              default : begin
                        l_utility5_group_i    = cpsutility:group_i[5]
                        l_utility5_group_ii   = cpsutility:group_ii[5]
                        l_utility5_broad      = cpsutility:broad[5]
                        l_utility5_special    = cpsutility:special[5]
                        l_utility5_earthquake = cpsutility:earthquake[5]
                        end
              end
            end

        next cpsutility
        end

end

procedure ordinary_payroll
begin
access agqbuspayroll, set agqbuspayroll:app_no   = agqbusiness:app_no,
                          agqbuspayroll:prem_no  = agqbusiness:prem_no,
                          agqbuspayroll:build_no = agqbusiness:build_no, generic

l_payroll_days = agqbuspayroll:no_days

end

procedure extended_period_indemnity
begin
access agqextperiod, set agqextperiod:app_no = agqbusiness:app_no,
                         agqextperiod:prem_no  = agqbusiness:prem_no,
                         agqextperiod:build_no = agqbusiness:build_no, generic

l_days = agqextperiod:no_days
access cpsextended, set cpsextended:company_id       = agqbusiness:company_id,
                        cpsextended:state            = agqbusiness:state ,
                        cpsextended:line_of_business = agqbusiness:rating_line_of_business,
                        cpsextended:days             = l_days, generic

while cpsextended:company_id       = agqbusiness:company_id and
      cpsextended:state            = agqbusiness:state and
      cpsextended:line_of_business = agqbusiness:rating_line_of_business and
      cpsextended:days             = l_days
        begin
        if (agqname:eff_date >= cpsextended:eff_date and
           (agqname:eff_date <= cpsextended:exp_date or
           cpsextended:exp_date = 0)) then
            begin
            l_extended_factor = cpsextended:factor
            end

        next cpsextended
        end

end

procedure electronic_media
begin
access agqelectmedia, set agqelectmedia:app_no   = agqbusiness:app_no,
                          agqelectmedia:prem_no  = agqbusiness:prem_no,
                          agqelectmedia:build_no = agqbusiness:build_no, generic

l_no_limit = agqelectmedia:no_limit

end

procedure access_cpsbusmiscrates
begin
access cpsbusmiscrates, set cpsbusmiscrates:company_id       = agqbusiness:company_id,
                            cpsbusmiscrates:state            = agqbusiness:state ,
                            cpsbusmiscrates:line_of_business = agqbusiness:rating_line_of_business, generic

while cpsbusmiscrates:company_id       = agqbusiness:company_id and
      cpsbusmiscrates:state            = agqbusiness:state and
      cpsbusmiscrates:line_of_business = agqbusiness:rating_line_of_business
        begin
        if (agqname:eff_date >= cpsbusmiscrates:eff_date and
           (agqname:eff_date <= cpsbusmiscrates:exp_date or
           cpsbusmiscrates:exp_date = 0)) then
            begin
            l_agreed_value_factor = cpsbusmiscrates:agreed_value_factor
            switch(l_no_limit)
              case 1  : l_electronic_media_factor = cpsbusmiscrates:electronic_media_factor[2]
              default : l_electronic_media_factor = cpsbusmiscrates:electronic_media_factor[1]
              end
            switch(agqbusiness:coverage)
              case "D" : switch(agqbusiness:risk_type)
                         case "O" : l_maximum_factor = cpsbusmiscrates:max_recovery_factor[3]
                         case "M" : l_maximum_factor = cpsbusmiscrates:max_recovery_factor[2]
                         default  : l_maximum_factor = cpsbusmiscrates:max_recovery_factor[1]
                         end
              default  : switch(agqbusiness:risk_type)
                         case "O" : l_maximum_factor = cpsbusmiscrates:max_recovery_factor[6]
                         case "M" : l_maximum_factor = cpsbusmiscrates:max_recovery_factor[5]
                         default  : l_maximum_factor = cpsbusmiscrates:max_recovery_factor[4]
                         end
              end
            switch(l_payroll_days)
              case 90  : l_payroll_factor = cpsbusmiscrates:payroll_limitation_factor[2]
              case 180 : l_payroll_factor = cpsbusmiscrates:payroll_limitation_factor[3]
              default  : l_payroll_factor = cpsbusmiscrates:payroll_limitation_factor[1]
              end
            l_heat_power_factor = cpsbusmiscrates:heat_power_factor
            switch(agqbusiness:coverage)
              case "D" : l_seasonal_factor = cpsbusmiscrates:seasonal_leases_factor[1]
              default  : l_seasonal_factor = cpsbusmiscrates:seasonal_leases_factor[2]
              end
            switch(agqbusiness:coverage)
              case "D" : switch(l_loss_tuition_coinsurance)
                           case 50  : l_loss_tuition_factor = cpsbusmiscrates:loss_tuition_factor[1]
                           case 60  : l_loss_tuition_factor = cpsbusmiscrates:loss_tuition_factor[2]
                           case 70  : l_loss_tuition_factor = cpsbusmiscrates:loss_tuition_factor[3]
                           case 80  : l_loss_tuition_factor = cpsbusmiscrates:loss_tuition_factor[4]
                           case 90  : l_loss_tuition_factor = cpsbusmiscrates:loss_tuition_factor[5]
                           case 100 : l_loss_tuition_factor = cpsbusmiscrates:loss_tuition_factor[6]
                           case 125 : l_loss_tuition_factor = cpsbusmiscrates:loss_tuition_factor_1[1]
                           end
              default  : switch(l_loss_tuition_coinsurance)
                           case 50  : l_loss_tuition_factor = cpsbusmiscrates:loss_tuition_factor[7]
                           case 60  : l_loss_tuition_factor = cpsbusmiscrates:loss_tuition_factor[8]
                           case 70  : l_loss_tuition_factor = cpsbusmiscrates:loss_tuition_factor[9]
                           case 80  : l_loss_tuition_factor = cpsbusmiscrates:loss_tuition_factor[10]
                           case 90  : l_loss_tuition_factor = cpsbusmiscrates:loss_tuition_factor[11]
                           case 100 : l_loss_tuition_factor = cpsbusmiscrates:loss_tuition_factor[12]
                           case 125 : l_loss_tuition_factor = cpsbusmiscrates:loss_tuition_factor_1[2]
                           end
              end

            l_ordinance_law_factor = cpsbusmiscrates:building_law_factor[1]

            switch(l_time_period)
              case 1  : l_time_factor = cpsbusmiscrates:time_period_factor[1]
              default : l_time_factor = cpsbusmiscrates:time_period_factor[2]
              end

            switch(l_dependent_property)
              case 1  : l_dependent_factor = cpsbusmiscrates:dependant_prop_factor[3]
              case 2  : l_dependent_factor = cpsbusmiscrates:dependant_prop_factor[2]
              default : l_dependent_factor = cpsbusmiscrates:dependant_prop_factor[1]
              end
            end

        next cpsbusmiscrates
        end

end

procedure group_i
begin
switch(agqbusiness:coverage)
  case "D2" : do extra_expense
  default   : do business_income
  end

do loss_cost
do base_rate_1
do protection
do territory
l_group_i = l_group_i * l_protection_factor * l_territory_factor
if agqbusiness:new_rate <> 0 then
    l_group_i = agqbusiness:new_rate
else
if agqgeneral1:new_rate[1] <> 0 then
    l_group_i = agqgeneral1:new_rate[1]

access agqbusiness_alias, set agqbusiness_alias:app_no    = agqbusiness:app_no,
                              agqbusiness_alias:prem_no   = agqbusiness:prem_no,
                              agqbusiness_alias:build_no  = agqbusiness:build_no,
                              agqbusiness_alias:coverage  = agqbusiness:coverage, generic

change agqbusiness_alias
    begin
    agqbusiness_alias:bi_factor[1] = l_group_i
    agqbusiness_alias:base_rate[1] = l_group_i

    if agqbusiness_alias:utility = 1 then
        begin
        if agqbusiness_alias:monthly_recovery_limitation = 1 then
            l_other_utility_factor = l_monthly_limitation
        if agqbusiness_alias:max_recovery_period = 1 then
            l_other_utility_factor = l_maximum_factor
        if agqbusiness_alias:extended_period_indemnity = 1 then
            l_other_utility_factor = l_extended_factor
        if agqbusiness_alias:loss_tuition_fees = 1 then
            l_other_utility_factor = l_loss_tuition_factor
        if agqbusiness_alias:seasonal_leases = 1 then
            l_other_utility_factor = l_seasonal_factor
        if agqbusiness_alias:agreed_value = 1 then
            l_other_utility_factor = l_agreed_value_factor
        if agqbusiness_alias:electronic_media = 1 then
            l_other_utility_factor = l_electronic_media_factor
        if agqbusiness_alias:payroll_limitation = 1 and
           l_payroll_factor <> 1.00 then
            l_other_utility_factor = l_payroll_factor
        if agqbusiness_alias:heat_power_refrig = 1 then
            l_other_utility_factor = l_heat_power_factor
        if agqbusiness_alias:time_period = 1 then
            l_other_utility_factor = l_time_factor
        if agqbusiness_alias:dependent_property = 1 then
            l_other_utility_factor = l_dependent_factor
        if agqbusiness_alias:building_law = 1 then
            l_other_utility_factor = l_ordinance_law_factor

        if l_utility1_group_i <> 0 then
            begin
            agqbusiness_alias:bi_factor[1] = ((l_group_i +
                                             l_utility1_group_i) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            agqbusiness_alias:base_rate[1] = ((agqbusiness_alias:base_rate[1] +
                                             l_utility1_group_i) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            l_adj_rate_1                   = ((agqbusiness_alias:base_rate[1] +
                                             l_utility1_group_i) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            end
        if l_utility2_group_i <> 0 then
            begin
            agqbusiness_alias:bi_factor[1] = ((l_group_i +
                                             l_utility2_group_i) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            agqbusiness_alias:base_rate[1] = ((agqbusiness_alias:base_rate[1] +
                                             l_utility2_group_i) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            l_adj_rate_1                   = ((agqbusiness_alias:base_rate[1] +
                                             l_utility2_group_i) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            end
        if l_utility3_group_i <> 0 then
            begin
            agqbusiness_alias:bi_factor[1] = ((l_group_i +
                                             l_utility3_group_i) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            agqbusiness_alias:base_rate[1] = ((agqbusiness_alias:base_rate[1] +
                                             l_utility3_group_i) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            l_adj_rate_1                   = ((agqbusiness_alias:base_rate[1] +
                                             l_utility3_group_i) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            end
        if l_utility4_group_i <> 0 then
            begin
            agqbusiness_alias:bi_factor[1] = ((l_group_i +
                                             l_utility4_group_i) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            agqbusiness_alias:base_rate[1] = ((agqbusiness_alias:base_rate[1] +
                                             l_utility4_group_i) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            l_adj_rate_1                   = ((agqbusiness_alias:base_rate[1] +
                                             l_utility4_group_i) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            end
        if l_utility5_group_i <> 0 then
            begin
            agqbusiness_alias:bi_factor[1] = ((l_group_i +
                                             l_utility5_group_i) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            agqbusiness_alias:base_rate[1] = ((agqbusiness_alias:base_rate[1] +
                                             l_utility5_group_i) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            l_adj_rate_1                   = ((agqbusiness_alias:base_rate[1] +
                                             l_utility5_group_i) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            end
        end
    else
        begin
        if agqbusiness_alias:monthly_recovery_limitation = 1 then
            begin
            agqbusiness_alias:bi_factor[1] = agqbusiness_alias:bi_factor[1] *
                                             l_monthly_limitation
            agqbusiness_alias:base_rate[1] = agqbusiness_alias:base_rate[1] *
                                             l_monthly_limitation
            l_adj_rate_1                   = agqbusiness_alias:base_rate[1] *
                                             l_monthly_limitation
            end

        if agqbusiness_alias:max_recovery_period = 1 then
            begin
            agqbusiness_alias:bi_factor[1] = agqbusiness_alias:bi_factor[1] *
                                             l_maximum_factor
            agqbusiness_alias:base_rate[1] = agqbusiness_alias:base_rate[1] *
                                             l_maximum_factor
            l_adj_rate_1                   = agqbusiness_alias:base_rate[1] *
                                             l_maximum_factor
            end

        if agqbusiness_alias:extended_period_indemnity = 1 then
            begin
            agqbusiness_alias:bi_factor[1] = agqbusiness_alias:bi_factor[1] *
                                             l_extended_factor
            agqbusiness_alias:base_rate[1] = agqbusiness_alias:base_rate[1] *
                                             l_extended_factor
            l_adj_rate_1                   = agqbusiness_alias:base_rate[1] *
                                             l_extended_factor
            end

        if agqbusiness_alias:loss_tuition_fees = 1 then
            begin
            agqbusiness_alias:bi_factor[1] = agqbusiness_alias:bi_factor[1] *
                                             l_loss_tuition_factor
            agqbusiness_alias:base_rate[1] = agqbusiness_alias:base_rate[1] *
                                             l_loss_tuition_factor
            l_adj_rate_1                   = agqbusiness_alias:base_rate[1] *
                                             l_loss_tuition_factor
            end

        if agqbusiness_alias:seasonal_leases = 1 then
            begin
            agqbusiness_alias:bi_factor[1] = agqbusiness_alias:bi_factor[1] *
                                             l_seasonal_factor
            agqbusiness_alias:base_rate[1] = agqbusiness_alias:base_rate[1] *
                                             l_seasonal_factor
            l_adj_rate_1                   = agqbusiness_alias:base_rate[1] *
                                             l_seasonal_factor
            end

        if agqbusiness_alias:agreed_value = 1 then
            begin
            agqbusiness_alias:bi_factor[1] = (agqbusiness_alias:bi_factor[1] *
                                             (l_bi_factor *
                                             l_agreed_value_factor))
            agqbusiness_alias:base_rate[1] = (agqbusiness_alias:base_rate[1] *
                                             (l_bi_factor *
                                             l_agreed_value_factor))
            l_adj_rate_1                   = (agqbusiness_alias:base_rate[1] *
                                             (l_bi_factor *
                                             l_agreed_value_factor))
            end

        if agqbusiness_alias:electronic_media = 1 then
            begin
            agqbusiness_alias:bi_factor[1] = (agqbusiness_alias:bi_factor[1] *
                                             (l_bi_factor *
                                             l_electronic_media_factor))
            agqbusiness_alias:base_rate[1] = (agqbusiness_alias:base_rate[1] *
                                             (l_bi_factor *
                                             l_electronic_media_factor))
            l_adj_rate_1                   = (agqbusiness_alias:base_rate[1] *
                                             (l_bi_factor *
                                             l_electronic_media_factor))
            end

        if agqbusiness_alias:payroll_limitation = 1 and
           l_payroll_factor <> 1.00 then
            begin
            agqbusiness_alias:bi_factor[1] = (agqbusiness_alias:bi_factor[1] *
                                             (l_bi_factor *
                                             l_payroll_factor))
            agqbusiness_alias:base_rate[1] = (agqbusiness_alias:base_rate[1] *
                                             (l_bi_factor *
                                             l_payroll_factor))
            l_adj_rate_1                   = (agqbusiness_alias:base_rate[1] *
                                             (l_bi_factor *
                                             l_payroll_factor))
            end

        if agqbusiness_alias:heat_power_refrig = 1 then
            begin
            agqbusiness_alias:bi_factor[1] = (agqbusiness_alias:bi_factor[1] *
                                             (l_bi_factor *
                                             l_heat_power_factor))
            agqbusiness_alias:base_rate[1] = (agqbusiness_alias:base_rate[1] *
                                             (l_bi_factor *
                                             l_heat_power_factor))
            l_adj_rate_1                   = (agqbusiness_alias:base_rate[1] *
                                             (l_bi_factor *
                                             l_heat_power_factor))
            end

        if agqbusiness_alias:time_period = 1 then
            begin
            agqbusiness_alias:bi_factor[1] = agqbusiness_alias:bi_factor[1] *
                                             l_time_factor
            agqbusiness_alias:base_rate[1] = agqbusiness_alias:base_rate[1] *
                                             l_time_factor
            l_adj_rate_1                   = agqbusiness_alias:base_rate[1] *
                                             l_time_factor
            end

        if agqbusiness_alias:dependent_property = 1 then
            begin
            agqbusiness_alias:bi_factor[1] = agqbusiness_alias:bi_factor[1] *
                                             l_dependent_factor
            agqbusiness_alias:base_rate[1] = agqbusiness_alias:base_rate[1] *
                                             l_dependent_factor
            l_adj_rate_1                   = agqbusiness_alias:base_rate[1] *
                                             l_dependent_factor
            end

        if agqbusiness_alias:building_law = 1 then
            begin
            agqbusiness_alias:bi_factor[1] = agqbusiness_alias:bi_factor[1] *
                                             l_ordinance_law_factor
            agqbusiness_alias:base_rate[1] = agqbusiness_alias:base_rate[1] *
                                             l_ordinance_law_factor
            l_adj_rate_1                   = agqbusiness_alias:base_rate[1] *
                                             l_ordinance_law_factor
            end
        end

    if agqbusiness_alias:monthly_recovery_limitation = 0 and
       agqbusiness_alias:max_recovery_period         = 0 and
       agqbusiness_alias:loss_tuition_fees           = 0 and
       agqbusiness_alias:seasonal_leases             = 0 and
       agqbusiness_alias:agreed_value                = 0 and
       agqbusiness_alias:electronic_media            = 0 and
       agqbusiness_alias:payroll_limitation          = 0 and
       agqbusiness_alias:heat_power_refrig           = 0 and
       agqbusiness_alias:extended_period_indemnity   = 0 and
       agqbusiness_alias:building_law                = 0 and
       agqbusiness_alias:time_period                 = 0 and
       agqbusiness_alias:dependent_property          = 0 and
       agqbusiness_alias:utility                     = 0 then
        begin
        agqbusiness_alias:bi_factor[1] = l_group_i *
                                         l_bi_factor
        agqbusiness_alias:base_rate[1] = l_group_i *
                                         l_bi_factor
        l_adj_rate_1                   = l_group_i *
                                         l_bi_factor
        end

    if agqbusiness_alias:new_rate = 0 then
        begin
        agqbusiness_alias:adj_rate[1] = agqbusiness_alias:base_rate[1] *
                                        l_loss_cost *
                                        agqbusiness_alias:company_deviation[1] *
                                        agqbusiness_alias:package_mod[1]
        l_adj_rate_1                  = agqbusiness_alias:base_rate[1] *
                                        l_loss_cost *
                                        agqbusiness_alias:company_deviation[1] *
                                        agqbusiness_alias:package_mod[1]
        end
    else
        begin
        agqbusiness_alias:adj_rate[1] = agqbusiness_alias:new_rate *
                                        l_loss_cost *
                                        agqbusiness_alias:company_deviation[1] *
                                        agqbusiness_alias:package_mod[1]
        l_adj_rate_1                  = agqbusiness_alias:new_rate *
                                        l_loss_cost *
                                        agqbusiness_alias:company_deviation[1] *
                                        agqbusiness_alias:package_mod[1]
        end
    end

end

procedure group_ii
begin
switch(agqbusiness:coverage)
  case "D2" : do extra_expense
  default   : do business_income
  end

do loss_cost
access agqbusiness_alias, set agqbusiness_alias:app_no  = agqbusiness:app_no,
                              agqbusiness_alias:prem_no   = agqbusiness:prem_no,
                              agqbusiness_alias:build_no  = agqbusiness:build_no,
                              agqbusiness_alias:coverage  = agqbusiness:coverage, generic

change agqbusiness_alias
    begin
    agqbusiness_alias:bi_factor[2] = agqgeneral1:base_rate[2]
    agqbusiness_alias:base_rate[2] = agqgeneral1:base_rate[2]
    if agqbusiness_alias:utility = 1 then
        begin
        if agqbusiness_alias:monthly_recovery_limitation = 1 then
            l_other_utility_factor = l_monthly_limitation
        if agqbusiness_alias:max_recovery_period = 1 then
            l_other_utility_factor = l_maximum_factor
        if agqbusiness_alias:extended_period_indemnity = 1 then
            l_other_utility_factor = l_extended_factor
        if agqbusiness_alias:loss_tuition_fees = 1 then
            l_other_utility_factor = l_loss_tuition_factor
        if agqbusiness_alias:seasonal_leases = 1 then
            l_other_utility_factor = l_seasonal_factor
        if agqbusiness_alias:agreed_value = 1 then
            l_other_utility_factor = l_agreed_value_factor
        if agqbusiness_alias:electronic_media = 1 then
            l_other_utility_factor = l_electronic_media_factor
        if agqbusiness_alias:payroll_limitation = 1 and
           l_payroll_factor <> 1.00 then
            l_other_utility_factor = l_payroll_factor
        if agqbusiness_alias:heat_power_refrig = 1 then
            l_other_utility_factor = l_heat_power_factor
        if agqbusiness_alias:time_period = 1 then
            l_other_utility_factor = l_time_factor
        if agqbusiness_alias:dependent_property = 1 then
            l_other_utility_factor = l_dependent_factor
        if agqbusiness_alias:building_law = 1 then
            l_other_utility_factor = l_ordinance_law_factor

        if l_utility1_group_ii <> 0 then
            begin
            agqbusiness_alias:bi_factor[2] = ((agqgeneral1:base_rate[2] +
                                             l_utility1_group_ii) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            agqbusiness_alias:base_rate[2] = ((agqgeneral1:base_rate[2] +
                                             l_utility1_group_ii) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            l_adj_rate_2                   = ((agqgeneral1:base_rate[2] +
                                             l_utility1_group_ii) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            end
        if l_utility2_group_ii <> 0 then
            begin
            agqbusiness_alias:bi_factor[2] = ((agqgeneral1:base_rate[2] +
                                             l_utility2_group_ii) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            agqbusiness_alias:base_rate[2] = ((agqgeneral1:base_rate[2] +
                                             l_utility2_group_ii) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            l_adj_rate_2                   = ((agqgeneral1:base_rate[2] +
                                             l_utility2_group_ii) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            end
        if l_utility3_group_ii <> 0 then
            begin
            agqbusiness_alias:bi_factor[2] = ((agqgeneral1:base_rate[2] +
                                             l_utility3_group_ii) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            agqbusiness_alias:base_rate[2] = ((agqgeneral1:base_rate[2] +
                                             l_utility3_group_ii) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            l_adj_rate_2                   = ((agqgeneral1:base_rate[2] +
                                             l_utility3_group_ii) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            end
        if l_utility4_group_ii <> 0 then
            begin
            agqbusiness_alias:bi_factor[2] = ((agqgeneral1:base_rate[2] +
                                             l_utility4_group_ii) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            agqbusiness_alias:base_rate[2] = ((agqgeneral1:base_rate[2] +
                                             l_utility4_group_ii) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            l_adj_rate_2                   = ((agqgeneral1:base_rate[2] +
                                             l_utility4_group_ii) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            end
        if l_utility5_group_ii <> 0 then
            begin
            agqbusiness_alias:bi_factor[2] = ((agqgeneral1:base_rate[2] +
                                             l_utility5_group_ii) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            agqbusiness_alias:base_rate[2] = ((agqgeneral1:base_rate[2] +
                                             l_utility5_group_ii) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            l_adj_rate_2                   = ((agqgeneral1:base_rate[2] +
                                             l_utility5_group_ii) *
                                             agqgeneral1:theft_territory_factor *
                                             l_other_utility_factor)
            end
        end
    else
        begin
        if agqbusiness_alias:monthly_recovery_limitation = 1 then
            begin
            agqbusiness_alias:bi_factor[2] = agqbusiness_alias:bi_factor[2] *
                                             l_monthly_limitation
            agqbusiness_alias:base_rate[2] = agqbusiness_alias:base_rate[2] *
                                             l_monthly_limitation
            l_adj_rate_2                   = agqbusiness_alias:base_rate[2] *
                                             l_monthly_limitation
            end

        if agqbusiness_alias:max_recovery_period = 1 then
            begin
            agqbusiness_alias:bi_factor[2] = agqbusiness_alias:bi_factor[2] *
                                             l_maximum_factor
            agqbusiness_alias:base_rate[2] = agqbusiness_alias:base_rate[2] *
                                             l_maximum_factor
            l_adj_rate_2                   = agqbusiness_alias:base_rate[2] *
                                             l_maximum_factor
            end

        if agqbusiness_alias:loss_tuition_fees = 1 then
            begin
            agqbusiness_alias:bi_factor[2] = agqbusiness_alias:bi_factor[2] *
                                             l_loss_tuition_factor
            agqbusiness_alias:base_rate[2] = agqbusiness_alias:base_rate[2] *
                                             l_loss_tuition_factor
            l_adj_rate_2                   = agqbusiness_alias:base_rate[2] *
                                             l_loss_tuition_factor
            end

        if agqbusiness_alias:seasonal_leases = 1 then
            begin
            agqbusiness_alias:bi_factor[2] = agqbusiness_alias:bi_factor[2] *
                                             l_seasonal_factor
            agqbusiness_alias:base_rate[2] = agqbusiness_alias:base_rate[2] *
                                             l_seasonal_factor
            l_adj_rate_2                   = agqbusiness_alias:base_rate[2] *
                                             l_seasonal_factor
            end

        if agqbusiness_alias:agreed_value = 1 then
            begin
            agqbusiness_alias:bi_factor[2] = (agqbusiness_alias:bi_factor[2] *
                                             (l_bi_factor *
                                             l_agreed_value_factor))
            agqbusiness_alias:base_rate[2] = (agqbusiness_alias:base_rate[2] *
                                             (l_bi_factor *
                                             l_agreed_value_factor))
            l_adj_rate_2                   = (agqbusiness_alias:base_rate[2] *
                                             (l_bi_factor *
                                             l_agreed_value_factor))
            end

        if agqbusiness_alias:electronic_media = 1 then
            begin
            agqbusiness_alias:bi_factor[2] = (agqbusiness_alias:bi_factor[2] *
                                             (l_bi_factor *
                                             l_electronic_media_factor))
            agqbusiness_alias:base_rate[2] = (agqbusiness_alias:base_rate[2] *
                                             (l_bi_factor *
                                             l_electronic_media_factor))
            l_adj_rate_2                   = (agqbusiness_alias:base_rate[2] *
                                             (l_bi_factor *
                                             l_electronic_media_factor))
            end

        if agqbusiness_alias:payroll_limitation = 1 and
           l_payroll_factor <> 1.00 then
            begin
            agqbusiness_alias:bi_factor[2] = (agqbusiness_alias:bi_factor[2] *
                                             (l_bi_factor *
                                             l_payroll_factor))
            agqbusiness_alias:base_rate[2] = (agqbusiness_alias:base_rate[2] *
                                             (l_bi_factor *
                                             l_payroll_factor))
            l_adj_rate_2                   = (agqbusiness_alias:base_rate[2] *
                                             (l_bi_factor *
                                             l_payroll_factor))
            end

        if agqbusiness_alias:heat_power_refrig = 1 then
            begin
            agqbusiness_alias:bi_factor[2] = (agqbusiness_alias:bi_factor[2] *
                                             (l_bi_factor *
                                             l_heat_power_factor))
            agqbusiness_alias:base_rate[2] = (agqbusiness_alias:base_rate[2] *
                                             (l_bi_factor *
                                             l_heat_power_factor))
            l_adj_rate_2                   = (agqbusiness_alias:base_rate[2] *
                                             (l_bi_factor *
                                             l_heat_power_factor))
            end

        if agqbusiness_alias:extended_period_indemnity = 1 then
            begin
            agqbusiness_alias:bi_factor[2] = agqbusiness_alias:bi_factor[2] *
                                             l_extended_factor
            agqbusiness_alias:base_rate[2] = agqbusiness_alias:base_rate[2] *
                                             l_extended_factor
            l_adj_rate_2                   = agqbusiness_alias:base_rate[2] *
                                             l_extended_factor
            end


        if agqbusiness_alias:time_period = 1 then
            begin
            agqbusiness_alias:bi_factor[2] = agqbusiness_alias:bi_factor[2] *
                                             l_time_factor
            agqbusiness_alias:base_rate[2] = agqbusiness_alias:base_rate[2] *
                                             l_time_factor
            l_adj_rate_2                   = agqbusiness_alias:base_rate[2] *
                                             l_time_factor
            end

        if agqbusiness_alias:dependent_property = 1 then
            begin
            agqbusiness_alias:bi_factor[2] = agqbusiness_alias:bi_factor[2] *
                                             l_dependent_factor
            agqbusiness_alias:base_rate[2] = agqbusiness_alias:base_rate[2] *
                                             l_dependent_factor
            l_adj_rate_2                   = agqbusiness_alias:base_rate[2] *
                                             l_dependent_factor
            end

        if agqbusiness_alias:building_law = 1 then
            begin
            agqbusiness_alias:bi_factor[2] = agqbusiness_alias:bi_factor[2] *
                                             l_ordinance_law_factor
            agqbusiness_alias:base_rate[2] = agqbusiness_alias:base_rate[2] *
                                             l_ordinance_law_factor
            l_adj_rate_2                   = agqbusiness_alias:base_rate[2] *
                                             l_ordinance_law_factor
            end
        end

    if agqbusiness_alias:monthly_recovery_limitation = 0 and
       agqbusiness_alias:max_recovery_period         = 0 and
       agqbusiness_alias:loss_tuition_fees           = 0 and
       agqbusiness_alias:seasonal_leases             = 0 and
       agqbusiness_alias:agreed_value                = 0 and
       agqbusiness_alias:electronic_media            = 0 and
       agqbusiness_alias:payroll_limitation          = 0 and
       agqbusiness_alias:heat_power_refrig           = 0 and
       agqbusiness_alias:extended_period_indemnity   = 0 and
       agqbusiness_alias:building_law                = 0 and
       agqbusiness_alias:time_period                 = 0 and
       agqbusiness_alias:dependent_property          = 0 and
       agqbusiness_alias:utility                     = 0 then
        begin
        agqbusiness_alias:bi_factor[2] = agqgeneral1:base_rate[2] *
                                         l_bi_factor
        agqbusiness_alias:base_rate[2] = agqgeneral1:base_rate[2] *
                                         l_bi_factor
        l_adj_rate_2                   = agqgeneral1:base_rate[2] *
                                         l_bi_factor
        end

    if agqbusiness_alias:new_rate_1[1] = 0 then
        begin
        agqbusiness_alias:adj_rate[2] = agqbusiness_alias:base_rate[2] *
                                        l_loss_cost *
                                        agqbusiness:company_deviation[1] *
                                        agqbusiness:package_mod[1]
        l_adj_rate_2                  = agqbusiness_alias:base_rate[2] *
                                        l_loss_cost *
                                        agqbusiness:company_deviation[1] *
                                        agqbusiness:package_mod[1]
        end
    else
        begin
        agqbusiness_alias:adj_rate[2] = agqbusiness_alias:new_rate_1[1] *
                                        l_loss_cost *
                                        agqbusiness:company_deviation[1] *
                                        agqbusiness:package_mod[1]
        l_adj_rate_2                  = agqbusiness_alias:new_rate_1[1] *
                                        l_loss_cost *
                                        agqbusiness:company_deviation[1] *
                                        agqbusiness:package_mod[1]
        end
    end

end

procedure base_rate_1
begin
if agqgeneral1:perpetual_rated = 0 then
    begin
    l_class_code = agqgeneral1:class_code
    l_coverage = "B"
    access cpsgroupi, set cpsgroupi:company_id       = agqbusiness:company_id,
                          cpsgroupi:state            = agqbusiness:state,
                          cpsgroupi:line_of_business = agqbusiness:rating_line_of_business,
                          cpsgroupi:class_code       = l_class_code, generic

    while cpsgroupi:company_id       = agqbusiness:company_id and
          cpsgroupi:state            = agqbusiness:state and
          cpsgroupi:line_of_business = agqbusiness:rating_line_of_business and
          cpsgroupi:class_code       = l_class_code
            begin
            if agqname:eff_date >= cpsgroupi:rate_date then
                begin
                switch(l_coverage)
                  case "B" : switch(agqgeneral1:construction)
                               case 1  : l_group_i = cpsgroupi:rate[1]
                               case 2  : l_group_i = cpsgroupi:rate[2]
                               case 3  : l_group_i = cpsgroupi:rate[3]
                               case 4  : l_group_i = cpsgroupi:rate[4]
                               default : l_group_i = cpsgroupi:rate[5]
                               end
                  default  : switch(agqgeneral1:construction)
                               case 1  : l_group_i = cpsgroupi:rate[6]
                               case 2  : l_group_i = cpsgroupi:rate[7]
                               case 3  : l_group_i = cpsgroupi:rate[8]
                               case 4  : l_group_i = cpsgroupi:rate[9]
                               default : l_group_i = cpsgroupi:rate[10]
                               end
                  end
                end

            next cpsgroupi
            end
    end
else
    begin
    l_class_code = agqgeneral1:class_code
    l_class_sub_code = agqgeneral1:sub_code
    access cpsperpetual, set cpsperpetual:company_id       = agqbusiness:company_id,
                             cpsperpetual:state            = agqbusiness:state,
                             cpsperpetual:line_of_business = agqbusiness:rating_line_of_business,
                             cpsperpetual:class_code       = l_class_code,
                             cpsperpetual:sub_code         = l_class_sub_code, generic

    while cpsperpetual:company_id       = agqbusiness:company_id and
          cpsperpetual:state            = agqbusiness:state and
          cpsperpetual:line_of_business = agqbusiness:rating_line_of_business and
          cpsperpetual:class_code       = l_class_code and
          cpsperpetual:sub_code         = l_class_sub_code
            begin
            if agqname:eff_date >= cpsperpetual:eff_date then
                begin
                switch(agqgeneral1:protection)
                  case 1, 2, 3, 4 : l_group_i = cpsperpetual:fire_factor
                  case 5, 6, 7, 8 : l_group_i = cpsperpetual:ec_factor
                  default         : l_group_i = cpsperpetual:vmm_factor
                  end
                end

            next cpsperpetual
            end
    end

end

procedure protection
begin
l_protection = agqgeneral1:protection
access cpsprotfact, set cpsprotfact:company_id       = agqbusiness:company_id,
                        cpsprotfact:state            = agqbusiness:state,
                        cpsprotfact:line_of_business = agqbusiness:rating_line_of_business,
                        cpsprotfact:protection       = l_protection, generic

while cpsprotfact:company_id       = agqbusiness:company_id and
      cpsprotfact:state            = agqbusiness:state and
      cpsprotfact:line_of_business = agqbusiness:rating_line_of_business and
      cpsprotfact:protection       = l_protection
        begin
        if agqname:eff_date >= cpsprotfact:rate_date then
            begin
            switch(agqgeneral1:construction)
              case 1, 2, 3 : l_protection_factor = cpsprotfact:rate[1]
              default      : l_protection_factor = cpsprotfact:rate[2]
              end
            end

        next cpsprotfact
        end
end

procedure territory
begin
l_territory = agqgeneral1:territory
access sfsterrfactors, set sfsterrfactors:company_id       = agqbusiness:company_id,
                           sfsterrfactors:state            = agqbusiness:state,
                           sfsterrfactors:line_of_business = agqbusiness:rating_line_of_business,
                           sfsterrfactors:territory        = l_territory, generic

while sfsterrfactors:company_id       = agqbusiness:company_id and
      sfsterrfactors:state            = agqbusiness:state and
      sfsterrfactors:line_of_business = agqbusiness:rating_line_of_business and
      sfsterrfactors:territory        = l_territory
        begin
        if agqname:eff_date >= sfsterrfactors:eff_date then
            begin
            l_territory_factor = sfsterrfactors:factor[1]
            end

        next sfsterrfactors
        end

end

procedure broad_special
begin
if agqgeneral1:form = 2 then
    begin
    switch(agqbusiness:coverage)
      case "D2" : do extra_expense
      default   : do business_income
      end
    end
else
    begin
    do special_business_income
    l_bi_factor = l_special_bi_factor
    end

do loss_cost
access agqbusiness_alias, set agqbusiness_alias:app_no  = agqbusiness:app_no,
                              agqbusiness_alias:prem_no   = agqbusiness:prem_no,
                              agqbusiness_alias:build_no  = agqbusiness:build_no,
                              agqbusiness_alias:coverage  = agqbusiness:coverage, generic

change agqbusiness_alias
    begin
    if agqbusiness_alias:utility = 1 then
        begin
        if l_utility1_broad <> 0 and
           agqgeneral1:form = 2 then
            begin
            agqbusiness_alias:bi_factor[3] = agqgeneral1:base_rate[3] +
                                             l_utility1_broad
            agqbusiness_alias:base_rate[3] = agqgeneral1:base_rate[3] +
                                             l_utility1_broad
            l_adj_rate_3                   = agqgeneral1:base_rate[3] +
                                             l_utility1_broad
            end
        else
        if l_utility1_special <> 0 and
           agqgeneral1:form = 3 then
            begin
            agqbusiness_alias:bi_factor[3] = agqgeneral1:base_rate[3] +
                                             l_utility1_special
            agqbusiness_alias:base_rate[3] = agqgeneral1:base_rate[3] +
                                             l_utility1_special
            l_adj_rate_3                   = agqgeneral1:base_rate[3] +
                                             l_utility1_special
            end
        if l_utility2_broad <> 0 and
           agqgeneral1:form = 2 then
            begin
            agqbusiness_alias:bi_factor[3] = agqgeneral1:base_rate[3] +
                                             l_utility2_broad
            agqbusiness_alias:base_rate[3] = agqgeneral1:base_rate[3] +
                                             l_utility2_broad
            l_adj_rate_3                   = agqgeneral1:base_rate[3] +
                                             l_utility2_broad
            end
        else
        if l_utility2_special <> 0 and
           agqgeneral1:form = 3 then
            begin
            agqbusiness_alias:bi_factor[3] = agqgeneral1:base_rate[3] +
                                             l_utility2_special
            agqbusiness_alias:base_rate[3] = agqgeneral1:base_rate[3] +
                                             l_utility2_special
            l_adj_rate_3                   = agqgeneral1:base_rate[3] +
                                             l_utility2_special
            end
        if l_utility3_broad <> 0 and
           agqgeneral1:form = 2 then
            begin
            agqbusiness_alias:bi_factor[3] = agqgeneral1:base_rate[3] +
                                             l_utility3_broad
            agqbusiness_alias:base_rate[3] = agqgeneral1:base_rate[3] +
                                             l_utility3_broad
            l_adj_rate_3                   = agqgeneral1:base_rate[3] +
                                             l_utility3_broad
            end
        else
        if l_utility3_special <> 0 and
           agqgeneral1:form = 3 then
            begin
            agqbusiness_alias:bi_factor[3] = agqgeneral1:base_rate[3] +
                                             l_utility3_special
            agqbusiness_alias:base_rate[3] = agqgeneral1:base_rate[3] +
                                             l_utility3_special
            l_adj_rate_3                   = agqgeneral1:base_rate[3] +
                                             l_utility3_special
            end
        if l_utility4_broad <> 0 and
           agqgeneral1:form = 2 then
            begin
            agqbusiness_alias:bi_factor[3] = agqgeneral1:base_rate[3] +
                                             l_utility4_broad
            agqbusiness_alias:base_rate[3] = agqgeneral1:base_rate[3] +
                                             l_utility4_broad
            l_adj_rate_3                   = agqgeneral1:base_rate[3] +
                                             l_utility4_broad
            end
        else
        if l_utility4_special <> 0 and
           agqgeneral1:form = 3 then
            begin
            agqbusiness_alias:bi_factor[3] = agqgeneral1:base_rate[3] +
                                             l_utility4_special
            agqbusiness_alias:base_rate[3] = agqgeneral1:base_rate[3] +
                                             l_utility4_special
            l_adj_rate_3                   = agqgeneral1:base_rate[3] +
                                             l_utility4_special
            end
        if l_utility5_broad <> 0 and
           agqgeneral1:form = 2 then
            begin
            agqbusiness_alias:bi_factor[3] = agqgeneral1:base_rate[3] +
                                             l_utility5_broad
            agqbusiness_alias:base_rate[3] = agqgeneral1:base_rate[3] +
                                             l_utility5_broad
            l_adj_rate_3                   = agqgeneral1:base_rate[3] +
                                             l_utility5_broad
            end
        else
        if l_utility5_special <> 0 and
           agqgeneral1:form = 3 then
            begin
            agqbusiness_alias:bi_factor[3] = agqgeneral1:base_rate[3] +
                                             l_utility5_special
            agqbusiness_alias:base_rate[3] = agqgeneral1:base_rate[3] +
                                             l_utility5_special
            l_adj_rate_3                   = agqgeneral1:base_rate[3] +
                                             l_utility5_special
            end
        end
    else
        begin
        agqbusiness_alias:bi_factor[3] = agqgeneral1:base_rate[3]
        agqbusiness_alias:base_rate[3] = agqgeneral1:base_rate[3]
        l_adj_rate_3                   = agqgeneral1:base_rate[3]
        end

    if agqbusiness_alias:new_rate_1[2] = 0 then
        begin
        agqbusiness_alias:adj_rate[3] = agqbusiness_alias:base_rate[3] *
                                        l_loss_cost *
                                        agqbusiness:company_deviation[1] *
                                        agqbusiness:package_mod[1]
        l_adj_rate_3                  = agqbusiness_alias:base_rate[3] *
                                        l_loss_cost *
                                        agqbusiness:company_deviation[1] *
                                        agqbusiness:package_mod[1]
        end
    else
        begin
        agqbusiness_alias:adj_rate[3] = agqbusiness_alias:new_rate_1[2] *
                                        l_loss_cost *
                                        agqbusiness:company_deviation[1] *
                                        agqbusiness:package_mod[1]
        l_adj_rate_3                  = agqbusiness_alias:new_rate_1[2] *
                                        l_loss_cost *
                                        agqbusiness:company_deviation[1] *
                                        agqbusiness:package_mod[1]
        end
    end

end

procedure extra_expense
begin
access agqgeneral1, set agqgeneral1:app_no   = agqbusiness:app_no,
                        agqgeneral1:prem_no  = agqbusiness:prem_no,
                        agqgeneral1:build_no = agqbusiness:build_no, generic

access cpsbusextra, set cpsbusextra:company_id       = agqbusiness:company_id,
                        cpsbusextra:state            = agqbusiness:state,
                        cpsbusextra:line_of_business = agqbusiness:rating_line_of_business, generic

while cpsbusextra:company_id       = agqbusiness:company_id and
      cpsbusextra:state            = agqbusiness:state and
      cpsbusextra:line_of_business = agqbusiness:rating_line_of_business
        begin
        if agqname:eff_date >= cpsbusextra:eff_date then
            begin
            switch(agqbusiness:recovery_set)
              case 1 : l_bi_factor = cpsbusextra:no_monthly_factor
              case 2 : l_bi_factor = cpsbusextra:monthly_3_factor[1]
              case 3 : l_bi_factor = cpsbusextra:monthly_3_factor[2]
              case 4 : l_bi_factor = cpsbusextra:monthly_4_factor[1]
              case 5 : l_bi_factor = cpsbusextra:monthly_4_factor[2]
              case 6 : l_bi_factor = cpsbusextra:monthly_4_factor[3]
              end
            end


        next cpsbusextra
        end

end

procedure business_income
begin
access agqgeneral1, set agqgeneral1:app_no = agqbusiness:app_no,
                       agqgeneral1:prem_no  = agqbusiness:prem_no,
                       agqgeneral1:build_no = agqbusiness:build_no, generic

switch(agqbusiness:coverage)
  case "D" : l_form = 1
  default  : l_form = 2
  end

access cpsbusratefact, set cpsbusratefact:company_id       = agqbusiness:company_id,
                           cpsbusratefact:state            = agqbusiness:state,
                           cpsbusratefact:line_of_business = agqbusiness:rating_line_of_business,
                           cpsbusratefact:form             = l_form,
                           cpsbusratefact:coinsurance      = agqbusiness:coinsurance, generic

while cpsbusratefact:company_id       = agqbusiness:company_id and
      cpsbusratefact:state            = agqbusiness:state and
      cpsbusratefact:line_of_business = agqbusiness:rating_line_of_business and
      cpsbusratefact:form             = l_form and
      cpsbusratefact:coinsurance      = agqbusiness:coinsurance
        begin
        if agqname:eff_date >= cpsbusratefact:eff_date then
            begin
            switch(agqbusiness:risk_type)
              case "R" : l_bi_factor = cpsbusratefact:factor[3]
              case "M" : l_bi_factor = cpsbusratefact:factor[2]
              default  : l_bi_factor = cpsbusratefact:factor[1]
              end
            end

        next cpsbusratefact
        end

end

procedure special_business_income
begin
access agqgeneral1, set agqgeneral1:app_no = agqbusiness:app_no,
                        agqgeneral1:prem_no  = agqbusiness:prem_no,
                        agqgeneral1:build_no = agqbusiness:build_no, generic

l_form         = agqgeneral1:form
l_construction = agqgeneral1:construction
access cpsbusbaserate, set cpsbusbaserate:company_id       = agqbusiness:company_id,
                           cpsbusbaserate:state            = agqbusiness:state,
                           cpsbusbaserate:line_of_business = agqbusiness:rating_line_of_business,
                           cpsbusbaserate:option           = l_form,
                           cpsbusbaserate:construction     = l_construction, generic

while cpsbusbaserate:company_id       = agqbusiness:company_id and
      cpsbusbaserate:state            = agqbusiness:state and
      cpsbusbaserate:line_of_business = agqbusiness:rating_line_of_business and
      cpsbusbaserate:option           = l_form and
      cpsbusbaserate:construction     = l_construction
        begin
        if agqname:eff_date >= cpsbusbaserate:eff_date then
            begin
            switch(agqbusiness:apartment_condo)
              case 1   : switch(agqbusiness:coverage)
                           case "D1" : l_special_bi_factor = cpsbusbaserate:factor[1]
                           default   : l_special_bi_factor = cpsbusbaserate:factor[2]
                           end
              default  : switch(agqbusiness:coverage)
                           case "D1" : l_special_bi_factor = cpsbusbaserate:factor[3]
                           default   : l_special_bi_factor = cpsbusbaserate:factor[4]
                           end
              end
            end

        next cpsbusbaserate
        end

end

procedure loss_cost
begin
access sfslosscost, set sfslosscost:company_id       = agqbusiness:company_id,
                        sfslosscost:state            = agqbusiness:state,
                        sfslosscost:line_of_business = agqbusiness:rating_line_of_business, generic

l_loss_cost = 0
while sfslosscost:company_id       = agqbusiness:company_id and
      sfslosscost:state            = agqbusiness:state and
      sfslosscost:line_of_business = agqbusiness:rating_line_of_business
        begin
        if agqname:eff_date >= sfslosscost:eff_date then
            l_loss_cost = sfslosscost:rate

        next sfslosscost
        end

end

End
