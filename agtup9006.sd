%%
Program
        Name         = "agtup9006" ;
        Type         = "File" ;
        Padcharacter = Space ;
        domain       = "sfsdefault" ;

        Global Unsigned Ascii Number g_app_no[11] ,
                                     g_prem_no[4],
                                     g_build_no[4],
                                     g_deductible[5] ;

        global string g_zipcode_change[1] ;

        local signed ascii number l_windstorm_surcharge[4]=0 ,
                                  l_premium_1[8]=0/dec=4,
                                  l_premium_2[8]=0/dec=4,
                                  l_premium_3[8]=0/dec=4,
                                  l_premium_4[8]=0/dec=4,
                                  l_premium_5[8]=0/dec=4,
                                  l_premium_6[8]=0/dec=4,
                                  l_premium_7[8]=0/dec=4,
                                  l_premium_8[8]=0/dec=4,
                                  l_premium_9[8]=0/dec=4,
                                  l_premium_10[8]=0/dec=4,
                                  l_premium_11[8]=0/dec=4,
                                  l_premium_12[8]=0/dec=4,
                                  l_capped_total[8]=0,
                                  l_capped_total_more[8]=0,
                                  l_capped_total_less[8]=0,
                                  l_capped_total_1[8]=0,
                                  l_total[8]=0,
                                  l_total_end[8],
                                  l_installment[4]=0,
                                  l_irpm[8]=0/dec=4,
                                  l_misc_premium[8]=0,
                                  l_end_premium[8]=0,
                                  l_inland_total[8]=0,
                                  l_umbrella_total[8]=0,
                                  l_workers_comp_total[8]=0,
                                  l_liability_total[8]=0,
                                  l_irpm_total[6]=0,
                                  l_irpm_total_1[6]=0,
                                  l_loc_total[8]=0,
                                  l_final_total[8]=0,
                                  l_final_total1[8]=0;

        Local Unsigned Ascii Number L_ZERO_LIMIT[8]=0,
                                    l_tier_surcharge[4],
                                    l_hardship[1],
                                    l_group[2]=0,
                                    l_sub[2]=0,
                                    l_increase_cov_c[8]=0/dec=4,
                                    l_feet[3]=0,
                                    l_county[3]=0,
                                    l_minimum[4]=0,
                                    l_watercraft_rate_to_use[2]=0,
                                    l_agqtotals_minimum[6]=0,
                                    l_inservants_employees_prem[6]=0,
                                    l_outservants_residence_prem[6]=0,
                                    l_outservants_estate_prem[6]=0,
                                    l_basic_prem[6]=0,
                                    l_surcharge[6]=0,
                                    l_surcharge_minimum[2]=0,
                                    l_surcharge_factor[8]=0/dec=6,
                                    l_policy_surcharge[3]=0/dec=2,
                                    l_policy_surcharge_total[5]=0,
                                    l_hurricane_rate[6]=0/dec=3,
                                    l_windstorm_factor[2],
                                    l_terrorism_premium[8],
                                    l_terror_percentage[5]=0/dec=4,
                                    l_terror_minimum[3],
                                    l_inland_marine_minimum[4]=0,
                                    l_boiler_premium[4]=0,
                                    l_boiler_limit[6]=0,
                                    l_boiler_form[1]=0,
                                    l_total_all_locations[8]=0,
                                    l_im_minimum_total[4]=0,
                                    l_sub_code[4],
                                    l_found[1],
                                    l_claim_year[2],
                                    l_limit_2[8],
                                    l_limit_3[8],
                                    l_limit_4[8],
                                    l_limit_5[8],
                                    l_limit_6[8],
                                    l_limit_7[8],
                                    l_limit_8[8],
                                    l_limit_9[8],
                                    l_limit_10[8],
                                    l_limit_11[8],
                                    l_limit_12[8],
                                    l_no_years[3],
                                    l_val_zipcode[9],
                                    l_hurricane_deductible[5]=0,
                                    l_credit_score[4],
                                    l_credit_score_2[4],
                                    l_refused_credit_score[1],
                                    l_trampoline[1],
                                    l_swimming_pool[1],
                                    l_swimming_pool_fenced[1],
                                    l_oil_heat[1],
                                    l_no_claims[2],
                                    l_loss_factor[5]=0/dec=3,
                                    l_expense_fee[3],
                                    l_new_home_discount_factor[4]=0/dec=3,
                                    l_major_loss_found[1],
                                    l_minor_loss_found[1],
                                    l_new_year_2[2],
                                    l_tier[2]=0,
                                    l_tier_1[2]=0 ,
                                    l_tier_factor[6]=0/dec=4 ;

        local string l_co_name[50] ,
                     l_rate_endorsement[1],
                     l_minimum_applies[1]="N",
                     l_continue[1],
                     l_sal01_rated[1]="N",
                     l_credit_score_file[12] = "credit_score",
                     l_credit_score_error_message[18] = "error_credit_score",
                     l_credit_score_1[4],
                     l_credit_error_message[300] ,
                     l_correct[1]="N",
                     l_article[20],
                     l_misc[1]="N",
                     l_mpl80_exists[1]="N",
                     l_agqend_minimum_premium[1]="N",
                     l_remove_terror_code[7],
                     l_mpl80="N",
                     l_hurricane_code[7],
                     l_new_home_discount_1[1]="N",
                     l_claim_type[14]="" ,
                     l_inland_marine_code[1]="N",
                     l_inland_marine_updated[1]="N",
                     l_dont_update_agqtotals[1]="N",
                     l_add_endorsement[1],
                     l_form_edition[25],
                     l_description[75],
                     l_str_zipcode[9]="",
                     l_mpl13[1]="N",
                     l_add_terror_code[7],
                     l_watercraft_type[1]="",
                     l_enter ;

        local wdate l_rate_eff_date;

        local wdate l_terror_eff_date ,
                    l_surcharge_date ;

        Local Mmddyyyy Date L_CORRECT_DATE[8] ;

        Include "plprate3.var"


initialisation
g_app_no         = val(commandline[1,11])
g_deductible     = val(commandline[12,16])
g_zipcode_change = commandline[17,17]
do location_total

access agqpersonal, set agqpersonal:app_no = g_app_no, generic

do policy_total

update

Procedure Definition

procedure location_total
begin
access agqpersonal, set agqpersonal:app_no = g_app_no, generic

while agqpersonal:app_no = g_app_no
    begin
    Access agqmaster, Set agqmaster:app_no = agqpersonal:app_no, exact

    access agqname, set agqname:app_no = agqpersonal:app_no, exact

    access agqlocation, set agqlocation:app_no   = agqpersonal:app_no, generic

    l_state = agqpersonal:state
    l_form  = agqpersonal:form
    access sfscompany, set sfscompany:company_id = agqname:company_id, generic

    access plsdefault, set plsdefault:company_id       = agqname:company_id,
                           plsdefault:line_of_business = agqname:line_of_business,
                           plsdefault:form             = l_form, generic

    access agqpersonal2, set agqpersonal2:app_no = agqpersonal:app_no,
                             agqpersonal2:prem_no  = agqpersonal:prem_no,
                             agqpersonal2:build_no = agqpersonal:build_no, generic

    access agqpersonal1, set agqpersonal1:app_no = agqpersonal:app_no,
                             agqpersonal1:prem_no  = agqpersonal:prem_no,
                             agqpersonal1:build_no = agqpersonal:build_no, generic

    g_prem_no    = agqpersonal:prem_no
    g_build_no   = agqpersonal:build_no
    l_deductible = g_deductible
    do minimum_premiums
    Do LOC_TOTAL
    do update_totals

    next agqpersonal
    end

do check_endorsement_edition_dates
end

procedure check_endorsement_edition_dates
begin
access agqpersonal, set agqpersonal:app_no = g_app_no, generic

access agqname, set agqname:app_no = agqpersonal:app_no, exact

Access agqend, Set agqend:app_no = g_app_no, generic

while agqend:app_no = g_app_no
    begin
    l_code = agqend:code
    access sfsoptend, set sfsoptend:company_id       = agqpersonal:company_id,
                          sfsoptend:state            = agqpersonal:state,
                          sfsoptend:line_of_business = agqpersonal:line_of_business,
                          sfsoptend:code             = l_code, generic

    l_form_edition = ""
    l_description  = ""
    while sfsoptend:company_id       = agqpersonal:company_id and
          sfsoptend:state            = agqpersonal:state and
          sfsoptend:line_of_business = agqpersonal:line_of_business and
          sfsoptend:code             = l_code
            begin
            if (agqname:eff_date >= sfsoptend:eff_date and
               (agqname:eff_date <= sfsoptend:exp_date or
               sfsoptend:exp_date = 0)) then
                begin
                l_form_edition = sfsoptend:form_edition
                l_description  = sfsoptend:description
                end

            next sfsoptend
            end

    if l_form_edition <> "" then
        begin
        change agqend
            Begin
            agqend:form_edition         =       l_form_edition/raw
            agqend:description          =       l_description/raw
            end
        End
    else
        begin
        delete agqend
        end

    Next agqend
    End

end

Procedure MINIMUM_PREMIUMS
Begin
Access SFSCONTROL, Set SFSCONTROL:COMPANY_ID       = agqname:company_id,
                       SFSCONTROL:STATE            = l_STATE,
                       SFSCONTROL:LINE_OF_BUSINESS = agqname:line_of_business, Approximate

while SFSCONTROL:COMPANY_ID       = agqname:company_id and
      SFSCONTROL:STATE            = L_STATE and
      SFSCONTROL:LINE_OF_BUSINESS = agqname:line_of_business
    begin
    If (agqname:eff_date >= SFSCONTROL:EFF_DATE and
       (agqname:eff_date <= sfscontrol:exp_date or
       sfscontrol:exp_date = 0)) Then
        Begin
        L_INLAND_MARINE_MINIMUM = SFSCONTROL:INLAND_MARINE_PREMIUM
        End

    Next SFSCONTROL
    End

End

procedure policy_total
begin
do loss_surcharge
Do TOTALS
Do FINAL_TOTAL
if l_irpm_total = 0 then
    l_final_total1 = l_final_total
else
    l_final_total1 = l_irpm_total
If (agqpersonal:REMOVE_TERROR_FORM = 0 and
   (agqpersonal:owner_occupied = "N" or
   (agqpersonal:owner_occupied = "Y" and
   agqpersonal:no_families > 1))) Then  --they may want to r
    begin
    L_TERRORISM_PREMIUM = 0
    Do GET_TERRORISM_PREMIUM
    if l_irpm_total = 0 then
        L_FINAL_TOTAL1 = L_FINAL_TOTAL + L_TERRORISM_PREMIUM
    else
        L_FINAL_TOTAL1 = L_IRPM_TOTAL + L_TERRORISM_PREMIUM
    end
Else
If (agqpersonal:REMOVE_TERROR_FORM = 1 and
   (agqpersonal:owner_occupied = "N" or
   (agqpersonal:owner_occupied = "Y" and
   agqpersonal:no_families > 1))) Then  --they may want to r
    Begin
    if l_irpm_total = 0 then
        L_FINAL_TOTAL1 = L_FINAL_TOTAL
    else
        l_final_total1 = l_irpm_total
    Access agqMASTER, Set agqMASTER:app_no = G_app_no, Generic

    if agqmaster:app_no = g_app_no then
        begin
        Change agqMASTER
            Begin
            agqMASTER:TERRORISM_PREMIUM = 0
            end
        End
    else
        begin
        add agqmaster
            begin
            agqmaster:app_no            = g_app_no
            agqmaster:terrorism_premium = 0
            end
        end

    if agqpersonal:no_families = 1 and
       agqpersonal:owner_occupied = "Y" then
        do remove_terrorism
    End

--do update_endorsements
do update_policy_totals
end

procedure update_totals
begin
access agqtotals, set agqtotals:app_no     = agqpersonal:app_no,
                      agqtotals:prem_no    = agqpersonal:prem_no,
                      agqtotals:build_no   = agqpersonal:build_no,
                      agqtotals:deductible = l_deductible, generic


if agqtotals:app_no     = agqpersonal:app_no and
   agqtotals:prem_no    = agqpersonal:prem_no and
   agqtotals:build_no   = agqpersonal:build_no and
   agqtotals:deductible = l_deductible then
    begin
    change agqtotals
        begin
        if l_dont_update_agqtotals = "N" then
            agqtotals:deductible_premium          = l_loc_total
        else
            agqtotals:deductible_premium          = 0
        end
    end
else
    begin
    add agqtotals
        begin
        agqtotals:app_no                      = agqpersonal:app_no
        agqtotals:prem_no                     = agqpersonal:prem_no
        agqtotals:build_no                    = agqpersonal:build_no
        agqtotals:deductible                  = l_deductible
        if l_dont_update_agqtotals = "N" then
            agqtotals:deductible_premium      = l_loc_total
        else
            agqtotals:deductible_premium      = 0
        end
    end

l_total_all_locations = l_loc_total +
                        l_total_all_locations
End

Procedure UPDATE_ENDORSEMENTS
Begin
Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = G_app_no, Generic

l_form = agqpersonal_alias:form
access agsdefault_plp, set agsdefault_plp:company_id       = agqpersonal:company_id,
                           agsdefault_plp:state            = agqpersonal:state,
                           agsdefault_plp:agent_no         = agqpersonal:agent_no,
                           agsdefault_plp:line_of_business = agqpersonal:line_of_business,
                           agsdefault_plp:form             = l_form, generic

L_STATE = agqPERSONAL_ALIAS:STATE
If agqPERSONAL_ALIAS:app_no = G_app_no Then
    Begin
    Access PLSPREPRINTED, Set PLSPREPRINTED:COMPANY_ID       = agqpersonal:COMPANY_ID,
                              PLSPREPRINTED:STATE            = L_STATE,
                              PLSPREPRINTED:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS, Generic

    l_code_1  = ""
    while PLSPREPRINTED:COMPANY_ID       = agqpersonal:COMPANY_ID and
          PLSPREPRINTED:STATE            = L_STATE and
          PLSPREPRINTED:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
        begin
        If agqpersonal:EFF_DATE >= PLSPREPRINTED:rEFF_DATE Then
            Begin
            L_CODE_1  = PLSPREPRINTED:CODE[6] -- new home discount
            end

        Next PLSPREPRINTED
        End

    Access SFSLINE, Set SFSLINE:COMPANY_ID       = agqpersonal:COMPANY_ID,
                        SFSLINE:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                        SFSLINE:LOB_SUBLINE      = "00", Generic

    If L_CODE_1 <> "" Then
        Begin
        L_CODE = L_CODE_1
        If agqPERSONAL_ALIAS:YEAR_CONSTRUCTION <> 0 Then
            Begin
            Do CHECK_FOR_UNDER_CONSTRUCTION
            L_NEW_HOME_YEAR_1 = Year(agqpersonal:EFF_DATE) -
                                agqPERSONAL_ALIAS:YEAR_CONSTRUCTION

            If L_NEW_HOME_YEAR_1 > 99 Then
                L_NEW_HOME_YEAR_1 = 99
            If Year(agqpersonal:EFF_DATE) = agqPERSONAL_ALIAS:YEAR_CONSTRUCTION Then
                L_NEW_HOME_YEAR_1 = 1
            L_NEW_YEAR_2 = L_NEW_HOME_YEAR_1
            L_RECORD_KEY = "NH"
            Access PLSNEWHOMEDISC, Set PLSNEWHOMEDISC:COMPANY_ID = agqpersonal:COMPANY_ID,
                                       PLSNEWHOMEDISC:STATE = L_STATE,
                                       PLSNEWHOMEDISC:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                                       PLSNEWHOMEDISC:YEAR = L_NEW_YEAR_2, Generic

            L_NEW_HOME_DISCOUNT_1 = "N"
            Repeat Begin
                Exit If PLSNEWHOMEDISC:RECORD_KEY <> L_RECORD_KEY Or
                        PLSNEWHOMEDISC:COMPANY_ID <> agqpersonal:COMPANY_ID Or
                        PLSNEWHOMEDISC:STATE <> L_STATE Or
                        PLSNEWHOMEDISC:LINE_OF_BUSINESS <> agqpersonal:LINE_OF_BUSINESS Or
                        PLSNEWHOMEDISC:YEAR <> L_NEW_YEAR_2

                If agqpersonal:EFF_DATE >= PLSNEWHOMEDISC:rEFF_DATE Then
                    Begin
                    L_NEW_HOME_DISCOUNT_1 = "Y"
                    L_NEW_HOME_DISCOUNT_FACTOR = PLSNEWHOMEDISC:FACTOR
                    End
                Else
                    Begin
                    L_NEW_HOME_DISCOUNT_1 = "N"
                    L_NEW_HOME_DISCOUNT_FACTOR = 0
                    End

                Next PLSNEWHOMEDISC
                End
            End
        Else
            L_NEW_HOME_DISCOUNT_1 = "N"

        Do ACCESS_agqEND
        If (L_ADD_ENDORSEMENT = "Y" And
           L_NEW_HOME_DISCOUNT_1 = "Y" And
           L_NEW_HOME_DISCOUNT_FACTOR < 1.00 And
           L_NEW_HOME_DISCOUNT_FACTOR <> 0 And
           agqPERSONAL_ALIAS:FORM <> 4 And
           agqPERSONAL_ALIAS:FORM <> 6 And
           (L_MPL13 = "N" Or
           (L_MPL13 = "Y" And
           agsdefault_plp:MPL13_AND_NEW_HOME_DISCOUNT = 1))) Then
            begin
            Do ADD_agqEND
            end
        If (L_ADD_ENDORSEMENT = "N" And
           (L_NEW_HOME_DISCOUNT_1 = "N" Or
           L_NEW_HOME_DISCOUNT_FACTOR = 0 Or
           L_NEW_HOME_DISCOUNT_FACTOR > 1.00 Or
           (L_MPL13 = "Y" And
           agsdefault_plp:MPL13_AND_NEW_HOME_DISCOUNT = 0) Or
           agqPERSONAL_ALIAS:FORM = 4 Or
           agqPERSONAL_ALIAS:FORM = 6)) Then
            Do DELETE_agqEND
        End

    end

end

Procedure CHECK_FOR_UNDER_CONSTRUCTION
Begin
Access agqEND, Set agqEND:app_no   = agqPERSONAL:app_no ,
                   agqEND:PREM_NO  = agqPERSONAL:PREM_NO,
                   agqEND:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

L_MPL13 = "N"
Repeat Begin
    Exit If agqEND:app_no <> agqPERSONAL:app_no Or
            agqEND:PREM_NO <> agqPERSONAL:PREM_NO Or
            agqEND:BUILD_NO <> agqPERSONAL:BUILD_NO

    If agqEND:CODE = "MPL13" Then
        L_MPL13 = "Y"

    Next agqEND
    End

End

Procedure ACCESS_agqEND
Begin
Access agqEND, Set agqEND:app_no = agqPERSONAL:app_no ,
                   agqEND:PREM_NO = agqPERSONAL:PREM_NO,
                   agqEND:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

L_ADD_ENDORSEMENT = "Y"
Repeat Begin
    Exit If agqEND:app_no <> agqPERSONAL:app_no Or
            agqEND:PREM_NO <> agqPERSONAL:PREM_NO Or
            agqEND:BUILD_NO <> agqPERSONAL:BUILD_NO

    if agqend:code = l_code then
        l_rate_endorsement = "Y"

    If agqEND:CODE = L_CODE Then
        L_ADD_ENDORSEMENT = "N"

    if l_code = "FPL20" and
       agqend:code = "FPL21" then
        delete agqend

    if l_code = "FPL21" and
       agqend:code = "FPL20" then
        delete agqend

    if l_code = "" and
       agqend:code one of "FPL20", "FPL21" then
        delete agqend

    Next agqEND
    End

End

Procedure ADD_agqEND
Begin
Access agqEND, Set agqEND:app_no = agqPERSONAL:app_no ,
                   agqEND:PREM_NO = agqPERSONAL:PREM_NO,
                   agqEND:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

L_SUB_CODE = 0
Repeat Begin
    Exit If agqEND:app_no <> agqPERSONAL:app_no Or
            agqEND:PREM_NO <> agqPERSONAL:PREM_NO Or
            agqEND:BUILD_NO <> agqPERSONAL:BUILD_NO

    L_SUB_CODE = agqEND:SUB_CODE

    Next agqEND
    End

L_SUB_CODE = L_SUB_CODE + 10

Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID = agqpersonal:COMPANY_ID,
                      SFSOPTEND:STATE = agqPERSONAL:STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                      SFSOPTEND:CODE = L_CODE, Generic

Repeat Begin
    Exit If SFSOPTEND:COMPANY_ID <> agqpersonal:COMPANY_ID Or
            SFSOPTEND:STATE <> agqPERSONAL:STATE Or
            SFSOPTEND:LINE_OF_BUSINESS <> agqpersonal:LINE_OF_BUSINESS Or
            SFSOPTEND:CODE <> L_CODE

    If (agqpersonal:EFF_DATE >= SFSOPTEND:EFF_DATE and
       (agqpersonal:eff_date <= sfsoptend:exp_date or
       sfsoptend:exp_date = 0)) Then
        Begin
        L_FORM_EDITION = SFSOPTEND:FORM_EDITION
        L_DESCRIPTION = SFSOPTEND:DESCRIPTION
        End

    Next SFSOPTEND
    End

Add agqEND
    Begin
    agqEND:app_no             =       agqPERSONAL:app_no
    agqEND:PREM_NO              =       agqPERSONAL:PREM_NO
    agqEND:BUILD_NO             =       agqPERSONAL:BUILD_NO
    agqEND:SUB_CODE             =       L_SUB_CODE
    agqEND:CODE                 =       L_CODE
    agqEND:FORM_EDITION         =       L_FORM_EDITION
    agqEND:DESCRIPTION          =       L_DESCRIPTION
    agqEND:PREMIUM              =       0
    End

End

Procedure DELETE_agqEND
Begin
Access agqEND, Set agqEND:app_no = agqPERSONAL:app_no ,
                   agqEND:PREM_NO = agqPERSONAL:PREM_NO,
                   agqEND:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

Repeat Begin
    Exit If agqEND:app_no <> agqPERSONAL:app_no Or
            agqEND:PREM_NO <> agqPERSONAL:PREM_NO Or
            agqEND:BUILD_NO <> agqPERSONAL:BUILD_NO

    If agqEND:CODE = L_CODE Then
        Delete agqEND

    Next agqEND
    End

End

Procedure remove_terrorism
begin
l_state = agqpersonal:state
Access SFSMSOTERROR, Set SFSMSOTERROR:COMPANY_ID       = agqpersonal:COMPANY_ID,
                         SFSMSOTERROR:STATE            = L_STATE,
                         SFSMSOTERROR:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS, Generic

While SFSMSOTERROR:COMPANY_ID       = agqpersonal:COMPANY_ID And
      SFSMSOTERROR:STATE            = L_STATE And
      SFSMSOTERROR:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
        Begin
        If agqpersonal:EFF_DATE >= SFSMSOTERROR:EFF_DATE Then
            Begin
            l_remove_terror_code = sfsmsoterror:terrorism_form_to_remove
            l_add_terror_code = sfsmsoterror:terrorism_form_to_add
            end
        next sfsmsoterror
        end

access agqend, Set agqend:app_no = G_app_no, generic

L_FOUND = 0
While agqend:app_no = g_app_no
        begin
        If agqend:CODE = l_remove_terror_code then
            begin
            Delete agqend
            end
        If agqend:CODE = l_add_terror_code then
            begin
            Delete agqend
            end

        Next agqend
        end

end

Procedure GET_TERRORISM_PREMIUM
Begin
Do ACCESS_SFSMSOTERROR
If L_TERROR_PERCENTAGE <> 0 Then
    Begin
    if l_irpm_total = 0 then
        L_TERRORISM_PREMIUM = L_FINAL_TOTAL * L_TERROR_PERCENTAGE
    else
        L_TERRORISM_PREMIUM = L_IRPM_TOTAL * L_TERROR_PERCENTAGE
    If L_TERRORISM_PREMIUM <= L_TERROR_MINIMUM Then
        Begin
        L_TERRORISM_PREMIUM = L_TERROR_MINIMUM
        End

    Do ADD_TERRORISM_ENDORSEMENT
    End
End

Procedure ADD_TERRORISM_ENDORSEMENT
Begin
Access agqEND, Set agqEND:app_no = G_app_no, Generic

L_FOUND = 0
While agqEND:app_no = G_app_no
        Begin
        If agqEND:CODE = SFSMSOTERROR:TERRORISM_FORM_TO_ADD Then
            Begin
            L_FOUND = L_FOUND + 1
            If L_FOUND > 1 Then
                Begin
                Delete agqEND
                L_FOUND = L_FOUND - 1
                End
            End

        Next agqEND
        End

Access agqEND, Set agqEND:app_no = G_app_no, Generic

If L_FOUND <> 1 And
   agqpersonal:REMOVE_TERROR_FORM = 0 Then
    Begin
    Do SUBCODE
    L_CODE = SFSMSOTERROR:TERRORISM_FORM_TO_ADD
    Do ACCESS_KEY

    Add agqEND  --ADDS ENDORSEMENTS TO sfpend
        Begin
        agqEND:app_no     = G_app_no
        agqEND:PREM_NO      = agqpersonal:PREM_NO
        agqEND:BUILD_NO     = agqpersonal:BUILD_NO
        agqEND:SUB_CODE     = L_SUB_CODE
        agqEND:CODE         = SFSMSOTERROR:TERRORISM_FORM_TO_ADD
        agqEND:FORM_EDITION = L_FORM_EDITION
        agqEND:PREMIUM      = L_TERRORISM_PREMIUM
        agqEND:DESCRIPTION  = L_DESCRIPTION
        End
    End
Else
    Begin
    Access agqEND, Set agqEND:app_no = G_app_no, Generic

    While agqEND:app_no = G_app_no
            Begin
            If agqEND:CODE = SFSMSOTERROR:TERRORISM_FORM_TO_ADD Then
                Change agqEND
                    Begin
                    agqEND:PREMIUM = L_TERRORISM_PREMIUM
                    End
            Next agqEND
            End
   End

Access agqMASTER, Set agqMASTER:app_no = G_app_no, Generic

Change agqMASTER
    Begin
    agqMASTER:TERRORISM_PREMIUM = L_TERRORISM_PREMIUM
    End
End

Procedure ACCESS_SFSMSOTERROR
Begin
L_STATE = agqpersonal:STATE
Access SFSMSOTERROR, Set SFSMSOTERROR:COMPANY_ID       = agqpersonal:COMPANY_ID,
                         SFSMSOTERROR:STATE            = L_STATE,
                         SFSMSOTERROR:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS, Generic

While SFSMSOTERROR:COMPANY_ID       = agqpersonal:COMPANY_ID And
      SFSMSOTERROR:STATE            = L_STATE And
      SFSMSOTERROR:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
        Begin
        If agqpersonal:EFF_DATE >= SFSMSOTERROR:EFF_DATE Then
            Begin
            L_TERROR_EFF_DATE   = SFSMSOTERROR:EFF_DATE
            L_TERROR_PERCENTAGE = SFSMSOTERROR:PERCENTAGE
            L_TERROR_MINIMUM    = SFSMSOTERROR:MINIMUM_PREMIUM
            End

        Next SFSMSOTERROR
        End

Access SFSMSOTERROR, Set SFSMSOTERROR:COMPANY_ID       = agqpersonal:COMPANY_ID,
                         SFSMSOTERROR:STATE            = L_STATE,
                         SFSMSOTERROR:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                         SFSMSOTERROR:EFF_DATE         = L_TERROR_EFF_DATE, Exact
End

Procedure ACCESS_KEY
Begin
L_STATE = agqpersonal:STATE
Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID       = agqpersonal:COMPANY_ID ,
                      SFSOPTEND:STATE            = L_STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                      SFSOPTEND:CODE             = L_CODE, Generic

While SFSOPTEND:COMPANY_ID = agqpersonal:COMPANY_ID And
      SFSOPTEND:STATE = L_STATE And
      SFSOPTEND:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS And
      SFSOPTEND:CODE = L_CODE
        Begin
        If (agqpersonal:EFF_DATE >= SFSOPTEND:EFF_DATE and
           (agqpersonal:eff_date <= sfsoptend:exp_date or
           sfsoptend:exp_date = 0)) Then
            Begin
            L_FORM_EDITION = SFSOPTEND:FORM_EDITION
            L_DESCRIPTION = SFSOPTEND:DESCRIPTION
            End

        Next SFSOPTEND
        End

End

Procedure SUBCODE
Begin
Access agqEND_ALIAS, Set agqEND_ALIAS:app_no    = g_app_no ,
                         agqEND_ALIAS:PREM_NO   = agqpersonal:PREM_NO,
                         agqEND_ALIAS:BUILD_NO   = agqpersonal:BUILD_NO, Generic

L_SUB_CODE = 0
Repeat Begin
    Exit If agqEND_ALIAS:app_no    <> g_app_no Or
            agqEND_ALIAS:PREM_NO <> agqpersonal:PREM_NO Or
            agqEND_ALIAS:BUILD_NO <> agqpersonal:BUILD_NO

   L_SUB_CODE = agqEND_ALIAS:SUB_CODE + 10

   Next agqEND_ALIAS
   End

end

Procedure LOC_TOTAL
Begin
access sfscompany, set sfscompany:company_id = agqpersonal:company_id, generic

access agsdefault_plp, set agsdefault_plp:company_id       = agqpersonal:company_id,
                           agsdefault_plp:state            = agqpersonal:state,
                           agsdefault_plp:agent_no         = agqpersonal:agent_no,
                           agsdefault_plp:line_of_business = agqpersonal:line_of_business,
                           agsdefault_plp:form             = agqpersonal:form, generic

access agqlocation, set agqlocation:app_no = g_app_no, generic

l_val_zipcode = agqlocation:zipcode
l_str_zipcode = agqlocation:str_zipcode[1,5] + "0000"
access sfszipcode, set sfszipcode:company_id       = agqpersonal:company_id,
                       sfszipcode:state            = agqpersonal:state,
                       sfszipcode:line_of_business = agqpersonal:line_of_business,
                       sfszipcode:str_zipcode      = l_str_zipcode, generic

l_tier = 0
while sfszipcode:company_Id       = agqpersonal:company_id and
      sfszipcode:state            = agqpersonal:state and
      sfszipcode:line_of_business = agqpersonal:line_of_business and
      sfszipcode:str_zipcode      = l_str_zipcode
        begin
        if (agqpersonal:eff_date >= sfszipcode:eff_date and
           (agqpersonal:eff_date <= sfszipcode:exp_date or
           sfszipcode:exp_date = 0)) then
            begin
            l_tier            = sfszipcode:tier
            end

        next sfszipcode
        end

l_tier_1 = l_tier
if l_tier_1 = 0 then
    l_tier_1 = 3
if agsdefault_plp:dont_use_tier_rating = 1 then
    l_tier_1 = 3
access sfstier, set sfstier:company_id       = agqpersonal:company_id,
                    sfstier:state            = agqpersonal:state,
                    sfstier:line_of_business = agqpersonal:line_of_business,
                    sfstier:tier             = l_tier_1, generic

l_wind_deductible      = 0
l_hurricane_deductible = 0
while sfstier:company_Id       = agqpersonal:company_id and
      sfstier:state            = agqpersonal:state and
      sfstier:line_of_business = agqpersonal:line_of_business and
      sfstier:tier             = l_tier_1
        begin
        if (agqpersonal:eff_date >= sfstier:eff_date and
           (agqpersonal:eff_date <= sfstier:exp_date or
           sfstier:exp_date = 0)) then
            begin
            l_wind_deductible      = sfstier:wind_deductible
            l_hurricane_deductible = sfstier:hurricane_deductible
            l_hurricane_code       = sfstier:hurricane_code
            end

        next sfstier
        end

if l_hurricane_code <> "" then
    begin
    l_code = l_hurricane_code
    do access_agqend
    if l_add_endorsement = "Y" and
       agqpersonal:hurricane_deductible <> 0 then
        do add_agqend
    if l_add_endorsement = "N" and
       agqpersonal:hurricane_deductible = 0 then
        do delete_agqend
    end
else
if l_hurricane_code = "" then
    do access_agqend

access agqpersonal_alias, set agqpersonal_alias:app_no = agqpersonal:app_no,
                              agqpersonal_alias:prem_no  = agqpersonal:prem_no,
                              agqpersonal_alias:build_no = agqpersonal:build_no, generic

if agqpersonal_alias:app_no = agqpersonal:app_no and
   agqpersonal_alias:prem_no  = agqpersonal:prem_no and
   agqpersonal_alias:build_no = agqpersonal:build_no then
    begin
    change agqpersonal_alias
        begin
        if l_wind_deductible <> 0 then
            agqpersonal_alias:wind_deductible      = l_wind_deductible
        agqpersonal_alias:tier                     = l_tier_1
        if l_tier_1 = 1 then
            begin
            agqpersonal_alias:companion_discount   = 0
            end
        if (l_hurricane_deductible <> 0 and
           (agqpersonal_alias:hurricane_changed = 0 or
           g_zipcode_change = "Y" or
           agqpersonal_alias:tier one of 1, 2)) then
            begin
            g_zipcode_change = "N"
            agqpersonal_alias:hurricane_deductible = l_hurricane_deductible
            if agqpersonal_alias:company_id <> "FLEMINGTON" then
                agqpersonal_alias:wind_deductible      = 0
            end
        end
    end

    Access PLSPREPRINTED, Set PLSPREPRINTED:COMPANY_ID       = agqpersonal:COMPANY_ID,
                              PLSPREPRINTED:STATE            = agqpersonal:STATE,
                              PLSPREPRINTED:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS, Generic

    l_code_1  = ""
    while PLSPREPRINTED:COMPANY_ID       = agqpersonal:COMPANY_ID and
          PLSPREPRINTED:STATE            = agqpersonal:STATE and
          PLSPREPRINTED:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
        begin
        If agqpersonal:EFF_DATE >= PLSPREPRINTED:rEFF_DATE Then
            Begin
            L_CODE_1  = PLSPREPRINTED:CODE[7] -- wind deductible
            end

        Next PLSPREPRINTED
        End

    if l_code_1 <> "" then
        begin
        l_code = l_code_1
        do access_agqend
        if l_add_endorsement = "Y" and
           agqpersonal:wind_deductible <> 0 then
            do add_agqend
        if l_add_endorsement = "N" and
           agqpersonal:wind_deductible = 0 then
            do delete_agqend
        end

l_tier_factor = 0
Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no,
                              agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                              agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

Change agqPERSONAL_ALIAS
    Begin
--    If agqPERSONAL_ALIAS:LINE_OF_BUSINESS <> agqpersonal:LINE_OF_BUSINESS Then
        agqPERSONAL_ALIAS:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
--    If agqPERSONAL_ALIAS:COMPANY_ID <> agqpersonal:COMPANY_ID Then
        agqPERSONAL_ALIAS:COMPANY_ID = agqpersonal:COMPANY_ID
    End

if agqpersonal:form = 3 then
    Do BASE_PREMIUM_HO3
else
if agqpersonal:form = 4 then
    do base_premium_ho4
else
if agqpersonal:form = 6 then
    do base_premium_ho6
Do INCREASE_LIMITS_PREMIUM
Do LIABILITY_PREMIUM

Access agqend_alt, Set agqend_alt:app_no = agqPERSONAL:app_no,
                       agqend_alt:PREM_NO = agqPERSONAL:PREM_NO,
                       agqend_alt:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

L_WORKERS_COMP_TOTAL = 0
L_UMBRELLA_TOTAL = 0
L_INLAND_TOTAL = 0
L_END_PREMIUM = 0
L_agqEND_MINIMUM_PREMIUM = "N"
L_INLAND_MARINE_CODE = ""
while agqend_alt:app_no    = agqPERSONAL:app_no and
      agqend_alt:PREM_NO   = agqPERSONAL:PREM_NO and
      agqend_alt:BUILD_NO  = agqPERSONAL:BUILD_NO
    begin
    L_agqEND_MINIMUM_PREMIUM = "N"
    L_INLAND_MARINE_CODE = "N"
    L_UPDATE_SFPEND_PREMIUM = 0
    L_CODE = agqEND_alt:CODE
    Do RATE_ENDORSEMENTS
    if agqend_alt:code one of "MPL80", "MPL180", "SAL80" then
        l_mpl80_exists = "Y"

    Change agqend_alt
        Begin
        agqend_alt:PREMIUM = L_UPDATE_SFPEND_PREMIUM
        agqend_alt:INLAND_MARINE_CODE = L_INLAND_MARINE_CODE
        if l_boiler_form = 1 then
            agqend_alt:boiler_form = 1
        else
            agqend_alt:boiler_form = 0
        If L_agqEND_MINIMUM_PREMIUM = "Y" Then
            agqend_alt:MINIMUM_PREMIUM = "Y"
        Else
            agqend_alt:MINIMUM_PREMIUM = "N"
--        if l_mpl80 = "Y" then
--            agqend:mpl80_subline_breakout = 1
        End
    L_END_PREMIUM = L_END_PREMIUM + L_UPDATE_SFPEND_PREMIUM

Next agqend_alt
End

If L_INLAND_TOTAL >= L_INLAND_MARINE_MINIMUM And
   L_INLAND_TOTAL <> 0 Then
    Begin
    Access agqEND, Set agqEND:app_no   = agqPERSONAL:app_no,
                       agqEND:PREM_NO  = agqPERSONAL:PREM_NO,
                       agqEND:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

    Repeat Begin
        Exit If agqEND:app_no <> agqPERSONAL:app_no Or
                agqEND:PREM_NO <> agqPERSONAL:PREM_NO Or
                agqEND:BUILD_NO <> agqPERSONAL:BUILD_NO

        If agqEND:INLAND_MARINE_CODE = "Y" And
           agqEND:MINIMUM_PREMIUM = "Y" Then
            Begin
            Change agqEND
                Begin
                agqEND:MINIMUM_PREMIUM = "N"
                End
            End
        Next agqEND
        End
    End

If L_INLAND_TOTAL < L_INLAND_MARINE_MINIMUM And
   L_INLAND_TOTAL <> 0 Then
    Begin
    L_INLAND_MARINE_UPDATED = "N"
    Access agqEND, Set agqEND:app_no = agqPERSONAL:app_no,
                       agqEND:PREM_NO = agqPERSONAL:PREM_NO,
                       agqEND:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

    Repeat Begin
        Exit If agqEND:app_no <> agqPERSONAL:app_no Or
                agqEND:PREM_NO <> agqPERSONAL:PREM_NO Or
                agqEND:BUILD_NO <> agqPERSONAL:BUILD_NO

        If agqEND:INLAND_MARINE_CODE = "Y" And
           L_INLAND_MARINE_UPDATED = "N" Then
            Begin
            Change agqEND
                Begin
                L_END_PREMIUM = L_END_PREMIUM - agqEND:PREMIUM
                L_INLAND_MARINE_UPDATED = "Y"
                agqEND:PREMIUM = ((L_INLAND_MARINE_MINIMUM - L_INLAND_TOTAL) +
                                 agqEND:PREMIUM)
                L_END_PREMIUM = L_END_PREMIUM + agqEND:PREMIUM
                agqEND:MINIMUM_PREMIUM = "Y"

                End
            End

        Next agqEND
        End

    L_INLAND_TOTAL = L_INLAND_MARINE_MINIMUM
    End

Access agqMISC, Set agqMISC:app_no = G_app_no, Generic

L_MISC_PREMIUM = 0
If L_MISC <> "Y" Then
    Begin
    Repeat Begin
        Exit If agqMISC:app_no <> G_app_no

        L_MISC_PREMIUM = L_MISC_PREMIUM + agqMISC:PREMIUM
        L_MISC = "Y"

    Next agqMISC
    End
    End

Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no,
                              agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                              agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

change agqpersonal_alias
    begin
    agqpersonal_alias:boiler_premium = l_boiler_premium
    agqpersonal_alias:boiler_limit   = l_boiler_limit
    end

If SFSLINE:LOB_CODE = "DWELLING" Then
    Begin
    If agqPERSONAL_ALIAS:DWELLING_LIMIT <> 0 Then
        Begin
        L_BUILDING_PREMIUM = L_BUILDING_PREMIUM +
                             agqPERSONAL_ALIAS:DWELLING_PREMIUM[1] +
                             agqPERSONAL_ALIAS:STRUCTURES_PREMIUM_1[1] +
                             agqPERSONAL_ALIAS:LOSS_RENTS_PREMIUM[1] +
                             agqPERSONAL_ALIAS:DF_DEDUCT_PREMIUM +
                             L_MISC_PREMIUM +
                             L_END_PREMIUM -
                             L_INLAND_TOTAL -
                             L_WORKERS_COMP_TOTAL -
                             L_UMBRELLA_TOTAL
        L_CONTENTS_PREMIUM = L_CONTENTS_PREMIUM +
                             agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1]
        End

    If agqPERSONAL_ALIAS:DWELLING_LIMIT = 0 And
       agqPERSONAL_ALIAS:CONTENTS_LIMIT <> 0 Then
        begin
        L_CONTENTS_PREMIUM = L_CONTENTS_PREMIUM +
                             agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1] +
                             agqPERSONAL_ALIAS:LOSS_RENTS_PREMIUM[1] +
                             agqPERSONAL_ALIAS:DF_DEDUCT_PREMIUM +
                             L_MISC_PREMIUM +
                             L_END_PREMIUM -
                             L_INLAND_TOTAL -
                             L_WORKERS_COMP_TOTAL -
                             L_UMBRELLA_TOTAL
        end
    End

access agqpersonal_alias, set agqpersonal_alias:app_no   = agqpersonal:app_no,
                              agqpersonal_alias:prem_no  = agqpersonal:prem_no,
                              agqpersonal_alias:build_no = agqpersonal:build_no, generic

if agqpersonal_alias:app_no   = agqpersonal:app_no and
   agqpersonal_alias:prem_no  = agqpersonal:prem_no and
   agqpersonal_alias:build_no = agqpersonal:build_no then
    begin
    Change agqPERSONAL_ALIAS
        Begin
        agqpersonal_alias:tier_surcharge      = l_tier_surcharge
        agqpersonal_alias:windstorm_surcharge = l_windstorm_surcharge
        agqpersonal_alias:windstorm_factor    = l_windstorm_factor
        agqpersonal_alias:palisades_credit    = l_palisades_credit
        Switch(agqpersonal:form)
          Case 4, 6 : Begin
                      agqpersonal_alias:CONTENTS_PREMIUM[1]     = l_base_rate_1
                      agqpersonal_alias:DWELLING_PREMIUM[1]     = 0
                      agqpersonal_alias:STRUCTURES_PREMIUM_1[1] = 0
                      agqpersonal_alias:STRUCTURES_PREMIUM_2[1] = 0
                      End
          Default   : Begin
                      agqpersonal_alias:DWELLING_PREMIUM[1]     = l_base_rate_1
                      End
          End
        end
    End

L_LOC_TOTAL = agqPERSONAL_ALIAS:DWELLING_PREMIUM[1] +
              agqPERSONAL_ALIAS:STRUCTURES_PREMIUM_1[1] +
              agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1] +
              agqPERSONAL_ALIAS:LOSS_RENTS_PREMIUM[1] +
              agqPERSONAL_ALIAS:LIAB_MEDICAL_PREMIUM +
              agqPERSONAL_ALIAS:DF_DEDUCT_PREMIUM +
--              agqpersonal_alias:palisades_credit +
              L_MISC_PREMIUM +
              L_END_PREMIUM

Do GET_RATE

access agqpersonal2_alias, set agqpersonal2_alias:app_no = agqpersonal:app_no,
                               agqpersonal2_alias:prem_no  = agqpersonal:prem_no,
                               agqpersonal2_alias:build_no = agqpersonal:build_no, generic

if agqpersonal2_alias:app_no = agqpersonal:app_no and
   agqpersonal2_alias:prem_no  = agqpersonal:prem_no and
   agqpersonal2_alias:build_no = agqpersonal:build_no then
    begin
    change agqpersonal2_alias
        begin
        agqpersonal2_alias:territory_factor            = l_territory_factor
        agqpersonal2_alias:rating_group                = l_rating_group
        agqpersonal2_alias:base_rate                   = l_base_premium
        agqpersonal2_alias:key_factor                  = l_key_factor
        agqpersonal2_alias:seasonal_factor             = l_seasonal_factor
        agqpersonal2_alias:form_factor                 = l_form_factor
        agqpersonal2_alias:credit_score_factor         = l_credit_score_factor
        agqpersonal2_alias:deductible_factor           = l_deductible_factor
        agqpersonal2_alias:wind_deductible_factor      = l_wind_deductible_factor
        agqpersonal2_alias:hurricane_factor            = l_hurricane_rate
        agqpersonal2_alias:tier_factor                 = l_tier_factor
        agqpersonal2_alias:construction_factor         = l_construction_factor
        agqpersonal2_alias:fire_resistive_factor       = l_fire_resistive_factor
        agqpersonal2_alias:fire_safe_factor            = l_fire_safe_factor
        agqpersonal2_alias:alarm_factor[1]             = l_alarm_factor_1
        agqpersonal2_alias:alarm_factor[2]             = l_alarm_factor_2
        agqpersonal2_alias:alarm_factor[3]             = l_alarm_factor_3
        agqpersonal2_alias:alarm_factor[4]             = l_alarm_factor_4
        agqpersonal2_alias:alarm_factor[5]             = l_alarm_factor_5
        agqpersonal2_alias:alarm_factor[6]             = l_alarm_factor_6
        agqpersonal2_alias:alarm_factor[7]             = l_alarm_factor_7
        agqpersonal2_alias:alarm_factor[8]             = l_alarm_factor_8
        agqpersonal2_alias:age_factor                  = l_age_factor
        agqpersonal2_alias:bathroom_factor             = l_bathroom_factor
        agqpersonal2_alias:stories_factor              = l_stories_factor
        agqpersonal2_alias:wood_stove_factor           = l_wood_stove_factor
        agqpersonal2_alias:roof_type_factor            = l_roof_type_factor
        agqpersonal2_alias:no_families_factor          = l_no_families_factor
        agqpersonal2_alias:leed_certified_factor       = l_leed_certified_factor
        agqpersonal2_alias:loss_exp_factor             = l_loss_factor
        agqpersonal2_alias:loss_each_addl_major_factor = l_loss_major_factor
        agqpersonal2_alias:loss_each_addl_minor_factor = l_loss_minor_factor
        agqpersonal2_alias:tenure_factor               = l_tenure_factor
        agqpersonal2_alias:original_owner_factor       = l_original_owner_factor
        if l_original_owner_factor not one of 0, 1.00 then
            agqpersonal2_alias:original_owner          = 1
        else
            agqpersonal2_alias:original_owner          = 0
        agqpersonal2_alias:loyalty_factor              = l_loyalty_factor
        agqpersonal2_alias:loyalty_Years               = 0
        agqpersonal2_alias:new_cust_dis_factor         = l_new_cust_dis_factor
        agqpersonal2_alias:companion_discount_factor   = l_companion_discount_factor
        agqpersonal2_alias:replacement_code_factor     = l_replacement_factor
        agqpersonal2_alias:mpl18_factor                = l_mpl18_factor
        agqpersonal2_alias:mpl79_factor                = l_mpl79_factor
        agqpersonal2_alias:mpl44_building_code_factor  = l_mpl44_building_code_factor
        agqpersonal2_alias:expense_fee                 = l_expense_fee
        agqpersonal2_alias:rented_condo_factor         = l_rented_condo_factor
        agqpersonal2_alias:no_units_factor             = l_no_units_factor
        agqpersonal2_alias:years_with_co               = l_no_years
        agqpersonal2_alias:credit_score_tier           = l_credit_score_tier
        agqpersonal2_alias:credit_score_tier_initial   = l_credit_score_tier_1
        end
    end

End

Procedure BASE_PREMIUM_HO3
Begin
l_company_Id           = agqpersonal:company_id
l_state                = agqpersonal:state
l_line_of_business     = agqpersonal:line_of_business
l_eff_date             = agqpersonal:eff_date
if l_eff_date = 0 then
    l_eff_date         = agqname:eff_date
l_trampoline           = agqpersonal2:trampoline
l_swimming_pool        = agqpersonal2:swimming_pool
l_swimming_pool_fenced = agqpersonal2:swimming_pool_fenced
l_oil_heat             = agqpersonal2:oil_heat

do read_hracreditscore

-- Step 8 i need to do this first to get the rating group for the other steps
l_zipcode_5 = agqlocation:zipcode[1,5]
l_form = agqpersonal:form
do territory

-- Step 1
do base_rate

-- Step 2
switch(agqpersonal:form)
  case 4, 6 : l_limit = agqpersonal:contents_limit
  default   : l_limit = agqpersonal:dwelling_limit
  end
do relativity
l_base_rate_1 = l_base_premium * l_key_factor

-- Step 6
if agqpersonal:seasonal = "Y" then
    l_seasonal = 1
else
    l_seasonal = 0
do seasonal
l_base_rate_1 = l_base_rate_1 * l_seasonal_factor

-- Step 7
do form
l_base_rate_1 = l_base_rate_1 * l_form_factor

-- Step 8
l_base_rate_1 = l_base_rate_1 * l_territory_factor

-- Step 9
do credit_score
l_base_rate_1 = l_base_rate_1 * l_credit_score_factor

-- Step 10
do deductible
l_base_rate_1 = l_base_rate_1 * l_deductible_factor

-- Step 11
l_wind_deductible = agqpersonal:wind_deductible
do wind_deductible
l_base_rate_1 = l_base_rate_1 * l_wind_deductible_factor

-- Step 12
l_tier                 = agqpersonal:tier
l_hurricane_deductible = agqpersonal:hurricane_deductible
do hurricane
l_base_rate_1 = l_base_rate_1 * l_hurricane_rate

-- Step 13
do coastal_rating
l_base_rate_1 = l_base_rate_1 * l_tier_factor

-- Step 14
l_construction = agqpersonal:construction
do construction
l_base_rate_1 = l_base_rate_1 * l_construction_factor

-- Step 15
l_fire_safe_score = agqpersonal2:fire_safe_score
do fire_safe
l_base_rate_1 = l_base_rate_1 * l_fire_safe_factor

-- Step 16 and 17
if agqpersonal:alarm_option[1] = 1 then
    begin
    l_alarm_option = 1
    do protective_device
    l_alarm_factor_1 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_1
    end

if agqpersonal:alarm_option[2] = 1 then
    begin
    l_alarm_option = 2
    do protective_device
    l_alarm_factor_2 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_2
    end

if agqpersonal:alarm_option[3] = 1 then
    begin
    l_alarm_option = 3
    do protective_device
    l_alarm_factor_3 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_3
    end

if agqpersonal:alarm_option[4] = 1 then
    begin
    l_alarm_option = 4
    do protective_device
    l_alarm_factor_4 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_4
    end

if agqpersonal:alarm_option[5] = 1 then
    begin
    l_alarm_option = 5
    do protective_device
    l_alarm_factor_5 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_5
    end

if agqpersonal:alarm_option[6] = 1 then
    begin
    l_alarm_option = 6
    do protective_device
    l_alarm_factor_6 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_6
    end

if agqpersonal:alarm_option[7] = 1 then
    begin
    l_alarm_option = 7
    do protective_device
    l_alarm_factor_7 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_7
    end

if agqpersonal:alarm_option_8 = 1 then
    begin
    l_alarm_option = 8
    do protective_device
    l_alarm_factor_8 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_8
    end

-- Step 18
l_new_home_year_3 = Year(agqname:eff_date) - agqPERSONAL:YEAR_CONSTRUCTION
do age_of_home
l_base_rate_1 = l_base_rate_1 * l_age_factor

-- Step 19a
l_no_bathrooms = agqpersonal2:no_bathrooms
do no_bathrooms
l_base_rate_1 = l_base_rate_1 * l_bathroom_factor

-- Step 19b
l_no_stories = agqpersonal2:no_stories
do no_stories
l_base_rate_1 = l_base_rate_1 * l_stories_factor

-- Step 20
l_wood_stove = agqpersonal2:wood_stove
do wood_stove
l_base_rate_1 = l_base_rate_1 * l_wood_stove_factor

-- Step 21
l_roof_type = agqpersonal2:roof_type
do roof_type
l_base_rate_1 = l_base_rate_1 * l_roof_type_factor

-- Step 22
l_leed_certified = agqpersonal2:leed_certified
do leed_certified
l_base_rate_1 = l_base_rate_1 * l_leed_certified_factor

-- Step 23
l_co_name = agqpersonal:other_companion_co_name
do companion_credit
l_base_rate_1 = l_base_rate_1 * l_companion_discount_factor

-- Step 24
--do update_major_minor_loss
l_major_loss = agqpersonal2:major_loss_found + agqpersonal2:major_loss
l_minor_loss = agqpersonal2:minor_loss_found + agqpersonal2:minor_loss
do loss_experience
l_base_rate_1 = l_base_rate_1 * l_loss_factor

-- Step 25
l_years = year(agqname:eff_date) -
          year(agqname:original_eff_date)
l_no_years = l_years
if l_years > 5 then
    l_years = 5
do tenure
l_base_rate_1 = l_base_rate_1 * l_tenure_factor

-- Step 26
if agqpersonal:owner_occupied = "Y" then
    begin
    l_years = year(agqname:eff_date) -
              agqpersonal:year_construction
    if l_years = 1 then
        l_years = 0
    if l_years >= 2 then
        l_years = 5
    do original_owner
    l_base_rate_1 = l_base_rate_1 * l_original_owner_factor
    end
else
    l_original_owner_factor = 1.000

-- Step 27
if agqpersonal2:loyalty = 1 then
    begin
    do loyalty
    l_base_rate_1 = l_base_rate_1 * l_loyalty_factor
    end
else
    l_loyalty_factor = 1.000

if agqpersonal2:remove_new_cust_dis = 0 and
   agqpersonal2:loyalty = 0 then
    begin
    do new_customer_discount
    l_base_rate_1 = l_base_rate_1 * l_new_cust_dis_factor
    end
else
    l_new_cust_dis_factor = 1.00

-- Step 28
l_code             = "MPL47"
l_rate_endorsement = "N"
do access_agqend
if l_rate_endorsement = "Y" then
    begin
    do replacement_coverage
    l_mpl47_factor = l_replacement_factor
    l_base_rate_1 = l_base_rate_1 * l_replacement_factor
    end
else
    begin
    l_mpl47_factor       = 1.00
    l_replacement_factor = 1.00
    end

if l_replacement_factor = 1.00 then
    begin
    l_code             = "MPL49"
    l_rate_endorsement = "N"
    do access_agqend
    if l_rate_endorsement = "Y" then
        begin
        do replacement_coverage
        l_mpl49_factor = l_replacement_factor
        l_base_rate_1 = l_base_rate_1 * l_replacement_factor
        end
    else
        begin
        l_replacement_factor = 1.00
        l_mpl49_factor       = 1.00
        end
    end

-- Step 29
l_code             = "MPL18"
l_rate_endorsement = "N"
do access_agqend
if l_rate_endorsement = "Y" then
    begin
    do access_sfsoptend
    l_mpl18_factor = l_premium_1
    l_base_rate_1 = l_base_rate_1 * l_premium_1
    end
else
    l_mpl18_factor = 1.00

-- Step 30
l_code             = "MPL79"
l_rate_endorsement = "N"
do access_agqend
if l_rate_endorsement = "Y" then
    begin
    do access_agqendorse1
    do access_sfsoptend
    switch(agqendorse1:replacement_percent)
      case 70 : l_endorsement_factor = l_premium_1
      case 60 : l_endorsement_factor = l_premium_2
      case 50 : l_endorsement_factor = l_premium_3
      end
    l_mpl79_factor = l_endorsement_factor
    l_base_rate_1 = l_base_rate_1 * l_endorsement_factor
    end
else
    l_mpl79_factor = 1.00

-- Step 31
l_code             = "MPL44"
l_rate_endorsement = "N"
do access_agqend
if l_rate_endorsement = "Y" then
    begin
    do access_agqendorse1
    if agqendorse1:building_code_percent <> 0 then
        begin
        do access_plsspeciallmts
        if l_building_code_factor = 1.10 then
            l_endorsement_factor = ((agqendorse1:building_code_percent divide
                                   100) + 1.00)
        else
            l_endorsement_factor = (((agqendorse1:building_code_percent divide
                                   l_building_code_per) *
                                   l_building_code_factor) +
                                   1)
        l_mpl44_building_code_factor = l_endorsement_factor
        l_base_rate_1 = l_base_rate_1 * l_endorsement_factor
        end
    else
        l_mpl44_building_code_factor = 1.00
    end
else
    l_mpl44_building_code_factor = 1.00

do expense_fee
l_base_rate_1 = l_base_rate_1 + l_expense_fee

access agqpersonal_alias, set agqpersonal_alias:app_no = agqpersonal:app_no, generic

if agqpersonal_alias:app_no = agqpersonal:app_no then
    begin
    change agqpersonal_alias
        begin
        agqpersonal_alias:dwelling_premium[1] = l_base_rate_1
        end
    end

end

Procedure BASE_PREMIUM_HO4
Begin
l_company_Id           = agqpersonal:company_id
l_state                = agqpersonal:state
l_line_of_business     = agqpersonal:line_of_business
l_eff_date             = agqpersonal:eff_date
if l_eff_date = 0 then
    l_eff_date         = agqname:eff_date
do read_hracreditscore

-- Step 4 i need to do this first to get the rating group for the other steps
l_zipcode_5 = agqlocation:zipcode[1,5]
l_form = agqpersonal:form
do territory

-- Step 1
do base_rate

l_form_factor = 1.00
-- Step 2
switch(agqpersonal:form)
  case 4, 6 : l_limit = agqpersonal:contents_limit
  default   : l_limit = agqpersonal:dwelling_limit
  end
do relativity
l_base_rate_1 = l_base_premium * l_key_factor

-- Step 4
l_base_rate_1 = l_base_rate_1 * l_territory_factor

-- Step 5
do credit_score
l_base_rate_1 = l_base_rate_1 * l_credit_score_factor

-- Step 6
do deductible
l_base_rate_1 = l_base_rate_1 * l_deductible_factor

-- Step 7
l_wind_deductible = agqpersonal:wind_deductible
do wind_deductible
l_base_rate_1 = l_base_rate_1 * l_wind_deductible_factor

-- Step 8
l_tier                 = agqpersonal:tier
l_hurricane_deductible = agqpersonal:hurricane_deductible
do hurricane
l_base_rate_1 = l_base_rate_1 * l_hurricane_rate

-- Step 9
do coastal_rating
l_base_rate_1 = l_base_rate_1 * l_tier_factor

-- Step 10
l_construction = agqpersonal:construction
do construction
l_base_rate_1 = l_base_rate_1 * l_construction_factor

-- Step 11
l_fire_safe_score = agqpersonal2:fire_safe_score
do fire_safe
l_base_rate_1 = l_base_rate_1 * l_fire_safe_factor

-- Step 12 and 13
if agqpersonal:alarm_option[1] = 1 then
    begin
    l_alarm_option = 1
    do protective_device
    l_alarm_factor_1 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_1
    end

if agqpersonal:alarm_option[2] = 1 then
    begin
    l_alarm_option = 2
    do protective_device
    l_alarm_factor_2 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_2
    end

if agqpersonal:alarm_option[3] = 1 then
    begin
    l_alarm_option = 3
    do protective_device
    l_alarm_factor_3 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_3
    end

if agqpersonal:alarm_option[4] = 1 then
    begin
    l_alarm_option = 4
    do protective_device
    l_alarm_factor_4 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_4
    end

if agqpersonal:alarm_option[5] = 1 then
    begin
    l_alarm_option = 5
    do protective_device
    l_alarm_factor_5 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_5
    end

if agqpersonal:alarm_option[6] = 1 then
    begin
    l_alarm_option = 6
    do protective_device
    l_alarm_factor_6 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_6
    end

if agqpersonal:alarm_option[7] = 1 then
    begin
    l_alarm_option = 7
    do protective_device
    l_alarm_factor_7 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_7
    end

if agqpersonal:alarm_option_8 = 1 then
    begin
    l_alarm_option = 8
    do protective_device
    l_alarm_factor_8 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_8
    end

-- step 14
l_no_units = agqpersonal2:no_units
do no_units
l_base_rate_1 = l_base_rate_1 * l_no_units_factor

-- Step 15
l_co_name = agqpersonal:other_companion_co_name
do companion_credit
l_base_rate_1 = l_base_rate_1 * l_companion_discount_factor

-- Step 16
--do update_major_minor_loss
l_major_loss = l_major_loss_found + agqpersonal2:major_loss
l_minor_loss = l_minor_loss_found + agqpersonal2:minor_loss
do loss_experience
l_base_rate_1 = l_base_rate_1 * l_loss_factor

-- Step 17
l_years = year(agqname:eff_date) -
          year(agqname:original_eff_date)
l_no_years = l_years
if l_years > 5 then
    l_years = 5
do tenure
l_base_rate_1 = l_base_rate_1 * l_tenure_factor

-- Step 18
if agqpersonal2:loyalty = 1 then
    begin
    do loyalty
    l_base_rate_1 = l_base_rate_1 * l_loyalty_factor
    end
else
    l_loyalty_factor = 1.000

if agqpersonal2:remove_new_cust_dis = 0 then
    begin
    do new_customer_discount
    l_base_rate_1 = l_base_rate_1 * l_new_cust_dis_factor
    end
else
    l_new_cust_dis_factor = 1.00

if agqpersonal2:loyalty = 1 then
    begin
    l_new_cust_dis_factor = 1.00
    l_base_rate_1 = l_base_rate_1 * l_new_cust_dis_factor
    end

-- Step 19
l_code             = "MPL47"
l_rate_endorsement = "N"
do access_agqend
if l_rate_endorsement = "Y" then
    begin
    do replacement_coverage
    l_mpl47_factor = l_replacement_factor
    l_base_rate_1 = l_base_rate_1 * l_replacement_factor
    end
else
    begin
    l_mpl47_factor       = 1.00
    l_replacement_factor = 1.00
    end

if l_replacement_factor = 1.00 then
    begin
    l_code             = "MPL49"
    l_rate_endorsement = "N"
    do access_agqend
    if l_rate_endorsement = "Y" then
        begin
        do replacement_coverage
        l_mpl49_factor = l_replacement_factor
        l_base_rate_1 = l_base_rate_1 * l_replacement_factor
        end
    else
        begin
        l_replacement_factor = 1.00
        l_mpl49_factor       = 1.00
        end
    end

do expense_fee
l_base_rate_1 = l_base_rate_1 + l_expense_fee

end

Procedure BASE_PREMIUM_HO6
Begin
l_company_Id           = agqpersonal:company_id
l_state                = agqpersonal:state
l_line_of_business     = agqpersonal:line_of_business
l_eff_date             = agqpersonal:eff_date
if l_eff_date = 0 then
    l_eff_date         = agqname:eff_date
do read_hracreditscore

-- Step 5 i need to do this first to get the rating group for the other steps
l_zipcode_5 = agqlocation:zipcode[1,5]
l_form = agqpersonal:form
do territory

-- Step 1
do base_rate

-- Step 2
switch(agqpersonal:form)
  case 4, 6 : l_limit = agqpersonal:contents_limit
  default   : l_limit = agqpersonal:dwelling_limit
  end
do relativity
l_base_rate_1 = l_base_premium * l_key_factor

l_form_factor = 1.00

-- Step 4
if agqpersonal:seasonal = "Y" then
    l_seasonal = 1
else
    l_seasonal = 0
do seasonal
l_base_rate_1 = l_base_rate_1 * l_seasonal_factor

-- Step 5
l_base_rate_1 = l_base_rate_1 * l_territory_factor

-- Step 6
do credit_score
l_base_rate_1 = l_base_rate_1 * l_credit_score_factor

-- Step 7
do deductible
l_base_rate_1 = l_base_rate_1 * l_deductible_factor

-- Step 8
l_wind_deductible = agqpersonal:wind_deductible
do wind_deductible
l_base_rate_1 = l_base_rate_1 * l_wind_deductible_factor

-- Step 9
l_tier                 = agqpersonal:tier
l_hurricane_deductible = agqpersonal:hurricane_deductible
do hurricane
l_base_rate_1 = l_base_rate_1 * l_hurricane_rate

-- step 10
l_rented_condo = agqpersonal2:rented_condo
do rented_condo
l_base_rate_1 = l_base_rate_1 * l_rented_condo_factor

-- Step 11
do coastal_rating
l_base_rate_1 = l_base_rate_1 * l_tier_factor

-- Step 12
l_construction = agqpersonal:construction
do construction
l_base_rate_1 = l_base_rate_1 * l_construction_factor

-- Step 13
l_fire_safe_score = agqpersonal2:fire_safe_score
do fire_safe
l_base_rate_1 = l_base_rate_1 * l_fire_safe_factor

-- Step 14 and 15
if agqpersonal:alarm_option[1] = 1 then
    begin
    l_alarm_option = 1
    do protective_device
    l_alarm_factor_1 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_1
    end

if agqpersonal:alarm_option[2] = 1 then
    begin
    l_alarm_option = 2
    do protective_device
    l_alarm_factor_2 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_2
    end

if agqpersonal:alarm_option[3] = 1 then
    begin
    l_alarm_option = 3
    do protective_device
    l_alarm_factor_3 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_3
    end

if agqpersonal:alarm_option[4] = 1 then
    begin
    l_alarm_option = 4
    do protective_device
    l_alarm_factor_4 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_4
    end

if agqpersonal:alarm_option[5] = 1 then
    begin
    l_alarm_option = 5
    do protective_device
    l_alarm_factor_5 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_5
    end

if agqpersonal:alarm_option[6] = 1 then
    begin
    l_alarm_option = 6
    do protective_device
    l_alarm_factor_6 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_6
    end

if agqpersonal:alarm_option[7] = 1 then
    begin
    l_alarm_option = 7
    do protective_device
    l_alarm_factor_7 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_7
    end

if agqpersonal:alarm_option_8 = 1 then
    begin
    l_alarm_option = 8
    do protective_device
    l_alarm_factor_8 = l_alarm_factor
    l_base_rate_1 = l_base_rate_1 * l_alarm_factor_8
    end

-- Step 16
l_new_home_year_3 = Year(agqname:eff_date) - agqPERSONAL:YEAR_CONSTRUCTION
do age_of_home
l_base_rate_1 = l_base_rate_1 * l_age_factor

-- step 17
l_no_units = agqpersonal2:no_units
do no_units
l_base_rate_1 = l_base_rate_1 * l_no_units_factor

-- Step 18
l_co_name = agqpersonal:other_companion_co_name
do companion_credit
l_base_rate_1 = l_base_rate_1 * l_companion_discount_factor

-- Step 19
--do update_major_minor_loss
l_major_loss = l_major_loss_found + agqpersonal2:major_loss
l_minor_loss = l_minor_loss_found + agqpersonal2:minor_loss
do loss_experience
l_base_rate_1 = l_base_rate_1 * l_loss_factor

-- Step 20
l_years = year(agqname:eff_date) -
          year(agqname:original_eff_date)
l_no_years = l_years
if l_years > 5 then
    l_years = 5
do tenure
l_base_rate_1 = l_base_rate_1 * l_tenure_factor

-- Step 21
if agqpersonal:owner_Occupied = "Y" then
    begin
    l_years = year(agqname:eff_date) -
              agqpersonal:year_construction
    if l_years = 1 then
        l_years = 0
    if l_years >= 2 then
        l_years = 5
    do original_owner
    l_new_home_year = Year(agqname:original_eff_date) - agqPERSONAL:YEAR_CONSTRUCTION
    if l_new_home_year <= 1 then
        l_base_rate_1 = l_base_rate_1 * l_original_owner_factor
    end
else
   l_original_owner_factor = 1.000

-- Step 22
if agqpersonal2:loyalty = 1 then
    begin
    do loyalty
    l_base_rate_1 = l_base_rate_1 * l_loyalty_factor
    end
else
    l_loyalty_factor = 1.000

if agqpersonal2:remove_new_cust_dis = 0 then
    begin
    do new_customer_discount
    l_base_rate_1 = l_base_rate_1 * l_new_cust_dis_factor
    end
else
    l_new_cust_dis_factor = 1.00

if agqpersonal2:loyalty = 1 then
    begin
    l_new_cust_dis_factor = 1.00
    l_base_rate_1 = l_base_rate_1 * l_new_cust_dis_factor
    end

-- Step 23
l_code             = "MPL47"
l_rate_endorsement = "N"
do access_agqend
if l_rate_endorsement = "Y" then
    begin
    do replacement_coverage
    l_mpl47_factor = l_replacement_factor
    l_base_rate_1 = l_base_rate_1 * l_replacement_factor
    end
else
    begin
    l_mpl47_factor       = 1.00
    l_replacement_factor = 1.00
    end

if l_replacement_factor = 1.00 then
    begin
    l_code             = "MPL49"
    l_rate_endorsement = "N"
    do access_agqend
    if l_rate_endorsement = "Y" then
        begin
        do replacement_coverage
        l_mpl49_factor = l_replacement_factor
        l_base_rate_1 = l_base_rate_1 * l_replacement_factor
        end
    else
        begin
        l_replacement_factor = 1.00
        l_mpl49_factor       = 1.00
        end
    end

-- Step 24
l_code             = "MPL44"
l_rate_endorsement = "N"
do access_agqend
if l_rate_endorsement = "Y" then
    begin
    do access_agqendorse1
    if agqendorse1:building_code_percent <> 0 then
        begin
        do access_plsspeciallmts
        if l_building_code_factor = 1.10 then
            l_endorsement_factor = ((agqendorse1:building_code_percent divide
                                   100) + 1.00)
        else
            l_endorsement_factor = (((agqendorse1:building_code_percent divide
                                   l_building_code_per) *
                                   l_building_code_factor) +
                                   1)
        l_mpl44_building_code_factor = l_endorsement_factor
        l_base_rate_1 = l_base_rate_1 * l_endorsement_factor
        end
    else
        l_mpl44_building_code_factor = 1.00
    end
else
    l_mpl44_building_code_factor = 1.00

-- Step 25
l_code             = "MPL18"
l_rate_endorsement = "N"
do access_agqend
if l_rate_endorsement = "Y" then
    begin
    do access_sfsoptend
    l_mpl18_factor = l_premium_1
    l_base_rate_1 = l_base_rate_1 * l_premium_1
    end
else
    l_mpl18_factor = 1.00

do expense_fee
l_base_rate_1 = l_base_rate_1 + l_expense_fee

end

procedure read_hracreditscore
begin
access agqcreditscore, set agqcreditscore:app_no = g_app_no, generic

l_credit_score         = agqcreditscore:credit_score
l_refused_credit_score = agqcreditscore:refused_credit_score
l_hardship             = agqcreditscore:hardship
access hracreditscore, set hracreditscore:company_id       = agqname:company_id,
                           hracreditscore:state            = l_state,
                           hracreditscore:line_of_business = agqname:line_of_business,
                           hracreditscore:credit_score     = l_credit_score, approximate

l_credit_score_2 = hracreditscore:credit_score
l_credit_score_tier = 0
l_credit_score_tier_1 = 0
while hracreditscore:company_id       = agqname:company_id and
      hracreditscore:state            = l_state and
      hracreditscore:line_of_business = agqname:line_of_business and
      hracreditscore:credit_score     = l_credit_score_2
        begin
        if (agqname:eff_date >= hracreditscore:eff_date and
           (agqname:eff_date <= hracreditscore:exp_date or
           hracreditscore:exp_date = 0)) then
            begin
            if l_credit_score <> 0 then
                l_credit_score_tier_1 = hracreditscore:tier
            end

        next hracreditscore
        end

access hratierassign, set hratierassign:company_id       = agqname:company_id,
                          hratierassign:state            = l_state,
                          hratierassign:line_of_business = agqname:line_of_business, generic

while hratierassign:company_id       = agqname:company_id and
      hratierassign:state            = l_state and
      hratierassign:line_of_business = agqname:line_of_business
        begin
        if (agqname:eff_date >= hratierassign:eff_date and
           (agqname:eff_date <= hratierassign:exp_date or
           hratierassign:exp_date = 0)) then
            begin
            if l_credit_score = 0 or
               l_credit_score = 999 then
                l_credit_score_tier_1 = hratierassign:no_hits
            else
            if l_refused_credit_score = 1 then
                l_credit_score_tier_1 = hratierassign:refusals

            if l_hardship = 1 then
                begin
                l_credit_score_tier = hratierassign:hardship
                l_credit_score_tier_1 = l_credit_score_tier
                end

            l_credit_score_tier = l_credit_score_tier_1
            if l_trampoline = 1 then
                l_credit_score_tier = l_credit_score_tier +
                                      hratierassign:trampoline

            if l_swimming_pool = 1 then
                l_credit_score_tier = l_credit_score_tier +
                                      hratierassign:non_fenced_swimming_pool

            if l_swimming_pool_fenced = 1 then
                l_credit_score_tier = l_credit_score_tier +
                                      hratierassign:fenced_swimming_pool

            if l_oil_heat = 1 and
               agqpersonal:form not one of 4, 6 then
                l_credit_score_tier = l_credit_score_tier +
                                      hratierassign:oil_heat

            end

        next hratierassign
        end

end

procedure territory
begin
access hraterritory, set hraterritory:company_id       = agqname:company_id,
                         hraterritory:state            = l_state,
                         hraterritory:line_of_business = agqname:line_of_business,
                         hraterritory:form             = l_form,
                         hraterritory:zipcode_5        = l_zipcode_5, generic

l_territory_factor = 0
l_rating_group     = ""
while hraterritory:company_id       = agqname:company_id and
      hraterritory:state            = l_state and
      hraterritory:line_of_business = agqname:line_of_business and
      hraterritory:form             = l_form and
      hraterritory:zipcode_5        = l_zipcode_5
        begin
        if (agqname:eff_date >= hraterritory:eff_date and
           (agqname:eff_date <= hraterritory:exp_date or
           hraterritory:exp_date = 0)) then
            begin
            l_territory_factor = hraterritory:territory_factor
            l_rating_group     = hraterritory:rating_group
            end

        next hraterritory
        end

if l_territory_factor = 0 then
    l_territory_factor = 1.00
end

procedure base_rate
begin
access hrabaserate, set hrabaserate:company_id       = agqname:company_id,
                        hrabaserate:state            = l_state,
                        hrabaserate:line_of_business = agqname:line_of_business,
                        hrabaserate:form             = l_form, generic

l_base_premium = 0
while hrabaserate:company_id       = agqname:company_id and
      hrabaserate:state            = l_state and
      hrabaserate:line_of_business = agqname:line_of_business and
      hrabaserate:form             = l_form
        begin
        if (agqname:eff_date >= hrabaserate:eff_date and
           (agqname:eff_date <= hrabaserate:exp_date or
           hrabaserate:exp_date = 0)) then
            begin
            l_base_premium = hrabaserate:charge
            end

        next hrabaserate
        end

end

procedure relativity
begin
l_key_factor = 0
Access hrarelativity, Set hrarelativity:COMPANY_ID       = agqname:COMPANY_ID,
                          hrarelativity:STATE            = L_STATE,
                          hrarelativity:LINE_OF_BUSINESS = agqname:LINE_OF_BUSINESS,
                          hrarelativity:Form             = l_form,
                          hrarelativity:LIMIT            = L_LIMIT,  approximate

If hrarelativity:LIMIT = 0 then
   begin
   L_LIMIT_ZERO = "Y"
   Previous hrarelativity
   if agqname:eff_date < hrarelativity:eff_date then
       previous hrarelativity
   End
L_RATE_LIMIT = hrarelativity:LIMIT
while hrarelativity:COMPANY_ID       = agqname:COMPANY_ID and
      hrarelativity:STATE            = L_STATE and
      hrarelativity:LINE_OF_BUSINESS = agqname:LINE_OF_BUSINESS and
      hrarelativity:form             = l_form and
      hrarelativity:LIMIT            = L_RATE_LIMIT
    begin
    If (agqname:EFF_DATE >= hrarelativity:EFF_DATE and
       (agqname:eff_date <= hrarelativity:exp_date or
       hrarelativity:exp_date = 0)) Then
        Begin
        l_rate_eff_date = hrarelativity:eff_date
        If hrarelativity:LIMIT = L_LIMIT Then
            begin
            switch(l_rating_group)
              case "A" : l_key_factor = hrarelativity:group_factor[1]
              case "B" : l_key_factor = hrarelativity:group_factor[2]
              case "C" : l_key_factor = hrarelativity:group_factor[3]
              case "D" : l_key_factor = hrarelativity:group_factor[4]
              case "E" : l_key_factor = hrarelativity:group_factor[5]
              end
            end

        If hrarelativity:LIMIT <> L_LIMIT Then
            Begin
            -- not equal to limit entered but not over limit entered into rates
            L_CORRECT_DATE = hrarelativity:EFF_DATE
            If hrarelativity:COMPANY_ID       = agqname:COMPANY_ID And
               hrarelativity:STATE            = L_STATE And
               hrarelativity:LINE_OF_BUSINESS = agqname:LINE_OF_BUSINESS And
               hrarelativity:form             = l_Form and
               L_LIMIT_ZERO                   = "N" Then
                Begin
                Previous hrarelativity
                L_CORRECT = "N"
                While L_CORRECT = "N"
                    Begin
                    If hrarelativity:EFF_DATE <> L_CORRECT_DATE Then
                        Begin
                        L_CORRECT = "N"
                        Previous hrarelativity
                        End
                    Else
                        Begin
                        L_PREVIOUS_LIMIT      = hrarelativity:LIMIT
                        switch(l_rating_group)
                          case "A" : l_previous_key_factor = hrarelativity:group_factor[1]
                          case "B" : l_previous_key_factor = hrarelativity:group_factor[2]
                          case "C" : l_previous_key_factor = hrarelativity:group_factor[3]
                          case "D" : l_previous_key_factor = hrarelativity:group_factor[4]
                          case "E" : l_previous_key_factor = hrarelativity:group_factor[5]
                          end
                        L_CORRECT             = "Y"
                        End
                    End

                Next hrarelativity
                L_CORRECT = "N"
                While L_CORRECT = "N"
                    Begin
                    If hrarelativity:EFF_DATE <> L_CORRECT_DATE Then
                        Begin
                        L_CORRECT = "N"
                        Next hrarelativity
                        End
                    Else
                        Begin
                        L_NEXT_LIMIT      = hrarelativity:LIMIT
                        switch(l_rating_group)
                          case "A" : l_next_key_factor = hrarelativity:group_factor[1]
                          case "B" : l_next_key_factor = hrarelativity:group_factor[2]
                          case "C" : l_next_key_factor = hrarelativity:group_factor[3]
                          case "D" : l_next_key_factor = hrarelativity:group_factor[4]
                          case "E" : l_next_key_factor = hrarelativity:group_factor[5]
                          end
                        L_CORRECT         = "Y"
                        End
                    End

                L_SUBTRACT_LIMIT      = L_NEXT_LIMIT - L_PREVIOUS_LIMIT
                L_SUBTRACT_FACTOR     = l_next_key_factor - l_previous_key_factor
                L_SUBTRACT_DIFF_LIMIT = L_LIMIT - L_PREVIOUS_LIMIT
                L_key_factor          = ((L_SUBTRACT_FACTOR *
                                        (L_SUBTRACT_DIFF_LIMIT Divide
                                        L_SUBTRACT_LIMIT)) + l_previous_key_factor)
                End

            Else
                -- not equal to limit entered and over limit entered into rates
                Begin
                L_PREVIOUS_LIMIT      = hrarelativity:LIMIT
                switch(l_rating_group)
                  case "A" : l_previous_key_factor = hrarelativity:group_factor[1]
                  case "B" : l_previous_key_factor = hrarelativity:group_factor[2]
                  case "C" : l_previous_key_factor = hrarelativity:group_factor[3]
                  case "D" : l_previous_key_factor = hrarelativity:group_factor[4]
                  case "E" : l_previous_key_factor = hrarelativity:group_factor[5]
                  end
                L_ZERO_LIMIT          = 0

                Access hrarelativity, Set hrarelativity:COMPANY_ID       = agqname:COMPANY_ID,
                                          hrarelativity:STATE            = L_STATE,
                                          hrarelativity:LINE_OF_BUSINESS = agqname:LINE_OF_BUSINESS,
                                          hrarelativity:form             = l_form,
                                          hrarelativity:LIMIT            = L_ZERO_LIMIT,
                                          hrarelativity:eff_date         = l_rate_eff_date, generic

                switch(l_rating_group)
                  case "A" : l_additional_key_factor = hrarelativity:group_factor[1]
                  case "B" : l_additional_key_factor = hrarelativity:group_factor[2]
                  case "C" : l_additional_key_factor = hrarelativity:group_factor[3]
                  case "D" : l_additional_key_factor = hrarelativity:group_factor[4]
                  case "E" : l_additional_key_factor = hrarelativity:group_factor[5]
                  end
                l_additional_limit      = hrarelativity:each_addl_limit
                L_NEXT_INCREASE_LIMIT   = ((L_LIMIT - L_PREVIOUS_LIMIT) Divide
                                          L_ADDITIONAL_LIMIT)
                l_key_factor            = ((L_NEXT_INCREASE_LIMIT *
                                          l_additional_key_factor) +
                                          l_previous_key_Factor)
                End

            End

        End

    Next hrarelativity
    End

if l_key_factor = 0 then
    l_key_factor = 1.00
end

procedure seasonal
begin
access hraseasonal, set hraseasonal:company_id       = agqname:company_id,
                        hraseasonal:state            = l_state,
                        hraseasonal:line_of_business = agqname:line_of_business,
                        hraseasonal:form             = l_form,
                        hraseasonal:seasonal         = l_seasonal, generic

l_seasonal_factor = 0
while hraseasonal:company_id       = agqname:company_id and
      hraseasonal:state            = l_state and
      hraseasonal:line_of_business = agqname:line_of_business and
      hraseasonal:form             = l_form and
      hraseasonal:seasonal         = l_seasonal
        begin
        if (agqname:eff_date >= hraseasonal:eff_date and
           (agqname:eff_date <= hraseasonal:exp_date or
           hraseasonal:exp_date = 0)) then
            begin
            switch(l_rating_group)
              case "A" : l_seasonal_factor = hraseasonal:seasonal_factor[1]
              case "B" : l_seasonal_factor = hraseasonal:seasonal_factor[2]
              case "C" : l_seasonal_factor = hraseasonal:seasonal_factor[3]
              case "D" : l_seasonal_factor = hraseasonal:seasonal_factor[4]
              case "E" : l_seasonal_factor = hraseasonal:seasonal_factor[5]
              end
            end

        next hraseasonal
        end

if l_seasonal_factor = 0 then
    l_seasonal_factor = 1.00
end

procedure form
begin
access hraform, set hraform:company_id       = agqname:company_id,
                    hraform:state            = l_state,
                    hraform:line_of_business = agqname:line_of_business,
                    hraform:form             = l_form, generic

l_form_factor = 0
while hraform:company_id       = agqname:company_id and
      hraform:state            = l_state and
      hraform:line_of_business = agqname:line_of_business and
      hraform:form             = l_form
        begin
        if (agqname:eff_date >= hraform:eff_date and
           (agqname:eff_date <= hraform:exp_date or
           hraform:exp_date = 0)) then
            begin
            l_form_factor = hraform:factor
            end

        next hraform
        end

if l_form_factor = 0 then
    l_form_factor = 1.00
end

procedure credit_score
begin
access hratier, set hratier:company_id       = agqname:company_id,
                    hratier:state            = l_state,
                    hratier:line_of_business = agqname:line_of_business,
                    hratier:form             = l_form,
                    hratier:tier             = l_credit_score_tier, generic

l_credit_score_factor = 0
while hratier:company_id       = agqname:company_id and
      hratier:state            = l_state and
      hratier:line_of_business = agqname:line_of_business and
      hratier:form             = l_form and
      hratier:tier             = l_credit_score_tier
        begin
        if (agqname:eff_date >= hratier:eff_date and
           (agqname:eff_date <= hratier:exp_date or
           hratier:exp_date = 0)) then
            begin
            switch(l_rating_group)
              case "A" : l_credit_score_factor = hratier:factor[1]
              case "B" : l_credit_score_factor = hratier:factor[2]
              case "C" : l_credit_score_factor = hratier:factor[3]
              case "D" : l_credit_score_factor = hratier:factor[4]
              case "E" : l_credit_score_factor = hratier:factor[5]
              end
            end

        next hratier
        end


if l_credit_score_factor = 0 then
    l_credit_score_factor = 1.00
end

procedure deductible
begin
access hradeductible, set hradeductible:company_id       = agqname:company_id,
                          hradeductible:state            = l_state,
                          hradeductible:line_of_business = agqname:line_of_business,
                          hradeductible:form             = l_form,
                          hradeductible:deductible       = l_deductible,
                          hradeductible:limit            = l_limit, approximate

l_deductible_factor = 0
l_deductible_limit = hradeductible:limit
while hradeductible:company_id       = agqname:company_id and
      hradeductible:state            = l_state and
      hradeductible:line_of_business = agqname:line_of_business and
      hradeductible:form             = l_form and
      hradeductible:deductible       = l_deductible and
      hradeductible:limit            = l_deductible_limit
        begin
        if (agqname:eff_date >= hradeductible:eff_date and
           (agqname:eff_date <= hradeductible:exp_date or
           hradeductible:exp_date = 0)) then
            begin
            switch(l_rating_group)
              case "A" : l_deductible_factor = hradeductible:factor[1]
              case "B" : l_deductible_factor = hradeductible:factor[2]
              case "C" : l_deductible_factor = hradeductible:factor[3]
              case "D" : l_deductible_factor = hradeductible:factor[4]
              case "E" : l_deductible_factor = hradeductible:factor[5]
              end
            end

        next hradeductible
        end

if l_deductible_factor = 0 then
    l_deductible_factor = 1.00
end

procedure wind_deductible
begin
access hrawinddeduct, set hrawinddeduct:company_id       = agqname:company_id,
                          hrawinddeduct:state            = l_state,
                          hrawinddeduct:line_of_business = agqname:line_of_business,
                          hrawinddeduct:form             = l_form,
                          hrawinddeduct:deductible       = l_deductible,
                          hrawinddeduct:wind_deductible  = l_wind_deductible,
                          hrawinddeduct:limit            = l_limit, approximate

l_wind_deductible_factor = 0
l_deductible_limit = hrawinddeduct:limit
while hrawinddeduct:company_id       = agqname:company_id and
      hrawinddeduct:state            = l_state and
      hrawinddeduct:line_of_business = agqname:line_of_business and
      hrawinddeduct:form             = l_form and
      hrawinddeduct:deductible       = l_deductible and
      hrawinddeduct:wind_deductible  = l_wind_deductible and
      hrawinddeduct:limit            = l_deductible_limit
        begin
        if (agqname:eff_date >= hrawinddeduct:eff_date and
           (agqname:eff_date <= hrawinddeduct:exp_date or
           hrawinddeduct:exp_date = 0)) then
            begin
            switch(l_rating_group)
              case "A" : l_wind_deductible_factor = hrawinddeduct:factor[1]
              case "B" : l_wind_deductible_factor = hrawinddeduct:factor[2]
              case "C" : l_wind_deductible_factor = hrawinddeduct:factor[3]
              case "D" : l_wind_deductible_factor = hrawinddeduct:factor[4]
              case "E" : l_wind_deductible_factor = hrawinddeduct:factor[5]
              end
            end

        next hrawinddeduct
        end

if l_wind_deductible_factor = 0 then
    l_wind_deductible_factor = 1.00
end

procedure rented_condo
begin
l_form = agqpersonal:form
access hrarentedcondo, set hrarentedcondo:company_id       = agqname:company_id,
                           hrarentedcondo:state            = l_state,
                           hrarentedcondo:line_of_business = agqname:line_of_business,
                           hrarentedcondo:form             = l_form,
                           hrarentedcondo:rented_to_others = l_rented_condo, generic

l_rented_condo_factor = 0
while hrarentedcondo:company_id       = agqname:company_id and
      hrarentedcondo:state            = l_state and
      hrarentedcondo:line_of_business = agqname:line_of_business and
      hrarentedcondo:form             = l_form and
      hrarentedcondo:rented_to_others = l_rented_condo
        begin
        if (agqname:eff_date >= hrarentedcondo:eff_date and
           (agqname:eff_date <= hrarentedcondo:exp_date or
           hrarentedcondo:exp_date = 0)) then
            begin
            switch(l_rating_group)
              case "A" : l_rented_condo_factor = hrarentedcondo:factor[1]
              case "B" : l_rented_condo_factor = hrarentedcondo:factor[2]
              case "C" : l_rented_condo_factor = hrarentedcondo:factor[3]
              case "D" : l_rented_condo_factor = hrarentedcondo:factor[4]
              case "E" : l_rented_condo_factor = hrarentedcondo:factor[5]
              end
            end

        next hrarentedcondo
        end

if l_rented_condo_factor = 0 then
    l_rented_condo_factor = 1.00
end

procedure hurricane
begin
Access sfshurricane, Set sfshurricane:COMPANY_ID           = agqname:COMPANY_ID,
                         sfshurricane:STATE                = L_STATE,
                         sfshurricane:LINE_OF_BUSINESS     = agqname:LINE_OF_BUSINESS,
                         sfshurricane:tier                 = l_tier,
                         sfshurricane:hurricane_DEDUCTIBLE = L_HURRICANE_DEDUCTIBLE, generic

l_hurricane_rate = 0
while sfshurricane:COMPANY_ID           = agqname:COMPANY_ID and
      sfshurricane:STATE                = L_STATE and
      sfshurricane:LINE_OF_BUSINESS     = agqname:LINE_OF_BUSINESS and
      sfshurricane:tier                 = l_tier and
      sfshurricane:hurricane_DEDUCTIBLE = L_hurricane_DEDUCTIBLE
    begin
    If (agqname:EFF_DATE >= sfshurricane:EFF_DATE and
       (agqname:eff_date <= sfshurricane:exp_date or
       sfshurricane:exp_date = 0)) Then
        l_hurricane_rate = sfshurricane:rate

    Next sfshurricane
    End

if l_hurricane_rate = 0 then
    l_hurricane_rate = 1.00
end

procedure coastal_rating
begin
access sfstier, set sfstier:company_id       = agqname:company_id,
                    sfstier:state            = l_state,
                    sfstier:line_of_business = agqname:line_of_business,
                    sfstier:tier             = l_tier, generic

l_tier_factor = 0
while sfstier:company_id       = agqname:company_id and
      sfstier:state            = l_state and
      sfstier:line_of_business = agqname:line_of_business and
      sfstier:tier             = l_tier
        begin
        if (agqname:eff_date >= sfstier:eff_date and
           (agqname:eff_date <= sfstier:exp_date or
           sfstier:exp_date = 0)) then
            begin
            l_tier_factor = sfstier:factor
            end

        next sfstier
        end

if l_tier_factor = 0 then
    l_tier_factor = 1.00
l_tier_surcharge = ((l_base_rate_1 * l_tier_factor) - l_base_rate_1)
end

procedure construction
begin
access hraconstruction, set hraconstruction:company_id       = agqname:company_id,
                            hraconstruction:state            = l_state,
                            hraconstruction:line_of_business = agqname:line_of_business,
                            hraconstruction:form             = l_form,
                            hraconstruction:construction     = l_construction, generic

l_construction_factor = 0
while hraconstruction:company_id       = agqname:company_id and
      hraconstruction:state            = l_state and
      hraconstruction:line_of_business = agqname:line_of_business and
      hraconstruction:form             = l_form and
      hraconstruction:construction     = l_construction
        begin
        if (agqname:eff_date >= hraconstruction:eff_date and
           (agqname:eff_date <= hraconstruction:exp_date or
           hraconstruction:exp_date = 0)) then
            begin
            switch(l_rating_group)
              case "A" : l_construction_factor = hraconstruction:factor[1]
              case "B" : l_construction_factor = hraconstruction:factor[2]
              case "C" : l_construction_factor = hraconstruction:factor[3]
              case "D" : l_construction_factor = hraconstruction:factor[4]
              case "E" : l_construction_factor = hraconstruction:factor[5]
              end
            end

        next hraconstruction
        end

if l_construction_factor = 0 then
    l_construction_factor = 1.00
end

procedure fire_safe
begin
access hrafiresafe, set hrafiresafe:company_id       = agqname:company_id,
                        hrafiresafe:state            = l_state,
                        hrafiresafe:line_of_business = agqname:line_of_business,
                        hrafiresafe:form             = l_form,
                        hrafiresafe:riskscore        = l_fire_safe_score, approximate

l_fire_safe_factor = 0
l_fire_safe_score_1 = hrafiresafe:riskscore
while hrafiresafe:company_id       = agqname:company_id and
      hrafiresafe:state            = l_state and
      hrafiresafe:line_of_business = agqname:line_of_business and
      hrafiresafe:form             = l_form and
      hrafiresafe:riskscore        = l_fire_safe_score_1
        begin
        if (agqname:eff_date >= hrafiresafe:eff_date and
           (agqname:eff_date <= hrafiresafe:exp_date or
           hrafiresafe:exp_date = 0)) then
            begin
            switch(l_rating_group)
              case "A" : l_fire_safe_factor = hrafiresafe:factor[1]
              case "B" : l_fire_safe_factor = hrafiresafe:factor[2]
              case "C" : l_fire_safe_factor = hrafiresafe:factor[3]
              case "D" : l_fire_safe_factor = hrafiresafe:factor[4]
              case "E" : l_fire_safe_factor = hrafiresafe:factor[5]
              end
            end

        next hrafiresafe
        end

if l_fire_safe_factor = 0 or
   l_fire_safe_score = 0 then
    l_fire_safe_factor = 1.00
end

procedure protective_device
begin
access hraprotectdevice, set hraprotectdevice:company_id       = agqname:company_id,
                             hraprotectdevice:state            = l_state,
                             hraprotectdevice:line_of_business = agqname:line_of_business,
                             hraprotectdevice:form             = l_form,
                             hraprotectdevice:alarm_option     = l_alarm_option, generic

l_alarm_factor = 0
while hraprotectdevice:company_id       = agqname:company_id and
      hraprotectdevice:state            = l_state and
      hraprotectdevice:line_of_business = agqname:line_of_business and
      hraprotectdevice:form             = l_form and
      hraprotectdevice:alarm_option     = l_alarm_option
        begin
        if (agqname:eff_date >= hraprotectdevice:eff_date and
           (agqname:eff_date <= hraprotectdevice:exp_date or
           hraprotectdevice:exp_date = 0)) then
            begin
            switch(l_rating_group)
              case "A" : l_alarm_factor = hraprotectdevice:alarm_factor[1]
              case "B" : l_alarm_factor = hraprotectdevice:alarm_factor[2]
              case "C" : l_alarm_factor = hraprotectdevice:alarm_factor[3]
              case "D" : l_alarm_factor = hraprotectdevice:alarm_factor[4]
              case "E" : l_alarm_factor = hraprotectdevice:alarm_factor[5]
              end
            end

        next hraprotectdevice
        end

if l_alarm_factor = 0 then
    l_alarm_factor = 1.00
end

procedure age_of_home
begin
access hraage, set hraage:company_id       = agqname:company_id,
                   hraage:state            = l_state,
                   hraage:line_of_business = agqname:line_of_business,
                   hraage:form             = l_form,
                   hraage:age              = l_new_home_year_3, approximate

l_age_factor = 0
l_new_home_year_1 = hraage:age
while hraage:company_id       = agqname:company_id and
      hraage:state            = l_state and
      hraage:line_of_business = agqname:line_of_business and
      hraage:form             = l_form and
      hraage:age              = l_new_home_year_1
        begin
        if (agqname:eff_date >= hraage:eff_date and
           (agqname:eff_date <= hraage:exp_date or
           hraage:exp_date = 0)) then
            begin
            switch(l_rating_group)
              case "A" : l_age_factor = hraage:factor[1]
              case "B" : l_age_factor = hraage:factor[2]
              case "C" : l_age_factor = hraage:factor[3]
              case "D" : l_age_factor = hraage:factor[4]
              case "E" : l_age_factor = hraage:factor[5]
              end
            end

        next hraage
        end

if l_age_factor = 0 then
    l_age_factor = 1.00
end

procedure no_units
begin
access hraunits, set hraunits:company_id       = agqname:company_id,
                     hraunits:state            = l_state,
                     hraunits:line_of_business = agqname:line_of_business,
                     hraunits:form             = l_form,
                     hraunits:no_units         = l_no_units, approximate

l_no_units_factor = 0
while hraunits:company_id       = agqname:company_id and
      hraunits:state            = l_state and
      hraunits:line_of_business = agqname:line_of_business and
      hraunits:form             = l_form and
      hraunits:no_units         = l_no_units
        begin
        if (agqname:eff_date >= hraunits:eff_date and
           (agqname:eff_date <= hraunits:exp_date or
           hraunits:exp_date = 0)) then
            begin
            switch(l_rating_group)
              case "A" : l_no_units_factor = hraunits:factor[1]
              case "B" : l_no_units_factor = hraunits:factor[2]
              case "C" : l_no_units_factor = hraunits:factor[3]
              case "D" : l_no_units_factor = hraunits:factor[4]
              case "E" : l_no_units_factor = hraunits:factor[5]
              end
            end

        next hraunits
        end

if l_no_units_factor = 0 then
    l_no_units_factor = 1.00
end

procedure no_bathrooms
begin
access hrabathrooms, set hrabathrooms:company_id       = agqname:company_id,
                         hrabathrooms:state            = l_state,
                         hrabathrooms:line_of_business = agqname:line_of_business,
                         hrabathrooms:no_bathrooms     = l_no_bathrooms, approximate

l_no_bathrooms_1  = hrabathrooms:no_bathrooms
l_bathroom_factor = 0
while hrabathrooms:company_id       = agqname:company_id and
      hrabathrooms:state            = l_state and
      hrabathrooms:line_of_business = agqname:line_of_business and
      hrabathrooms:no_bathrooms     = l_no_bathrooms_1
        begin
        if (agqname:eff_date >= hrabathrooms:eff_date and
           (agqname:eff_date <= hrabathrooms:exp_date or
           hrabathrooms:exp_date = 0)) then
            begin
            switch(l_rating_group)
              case "A" : l_bathroom_factor = hrabathrooms:factor[1]
              case "B" : l_bathroom_factor = hrabathrooms:factor[2]
              case "C" : l_bathroom_factor = hrabathrooms:factor[3]
              case "D" : l_bathroom_factor = hrabathrooms:factor[4]
              case "E" : l_bathroom_factor = hrabathrooms:factor[5]
              end
            end

        next hrabathrooms
        end

if l_bathroom_factor = 0 then
    l_bathroom_factor = 1.00
end

procedure no_stories
begin
access hrastories, set hrastories:company_id       = agqname:company_id,
                       hrastories:state            = l_state,
                       hrastories:line_of_business = agqname:line_of_business,
                       hrastories:no_stories       = l_no_stories, generic

l_stories_factor = 0
l_no_stories_1 = hrastories:no_stories
while hrastories:company_id       = agqname:company_id and
      hrastories:state            = l_state and
      hrastories:line_of_business = agqname:line_of_business and
      hrastories:no_stories       = l_no_stories_1
        begin
        if (agqname:eff_date >= hrastories:eff_date and
           (agqname:eff_date <= hrastories:exp_date or
           hrastories:exp_date = 0)) then
            begin
            switch(l_rating_group)
              case "A" : l_stories_factor = hrastories:factor[1]
              case "B" : l_stories_factor = hrastories:factor[2]
              case "C" : l_stories_factor = hrastories:factor[3]
              case "D" : l_stories_factor = hrastories:factor[4]
              case "E" : l_stories_factor = hrastories:factor[5]
              end
            end

        next hrastories
        end

if l_stories_factor = 0 then
    l_stories_factor = 1.00
end

procedure wood_stove
begin
access hrawoodstove, set hrawoodstove:company_id       = agqname:company_id,
                         hrawoodstove:state            = l_state,
                         hrawoodstove:line_of_business = agqname:line_of_business,
                         hrawoodstove:wood_stove       = l_wood_stove, generic

l_wood_stove_factor = 0
while hrawoodstove:company_id       = agqname:company_id and
      hrawoodstove:state            = l_state and
      hrawoodstove:line_of_business = agqname:line_of_business and
      hrawoodstove:wood_stove       = l_wood_stove
        begin
        if (agqname:eff_date >= hrawoodstove:eff_date and
           (agqname:eff_date <= hrawoodstove:exp_date or
           hrawoodstove:exp_date = 0)) then
            begin
            switch(l_rating_group)
              case "A" : l_wood_stove_factor = hrawoodstove:factor[1]
              case "B" : l_wood_stove_factor = hrawoodstove:factor[2]
              case "C" : l_wood_stove_factor = hrawoodstove:factor[3]
              case "D" : l_wood_stove_factor = hrawoodstove:factor[4]
              case "E" : l_wood_stove_factor = hrawoodstove:factor[5]
              end
            end

        next hrawoodstove
        end

if l_wood_stove_factor = 0 then
    l_wood_stove_factor = 1.00
end

procedure roof_type
begin
access hrarooftype, set hrarooftype:company_id       = agqname:company_id,
                        hrarooftype:state            = l_state,
                        hrarooftype:line_of_business = agqname:line_of_business,
                        hrarooftype:roof_type        = l_roof_type, generic

l_roof_type_factor = 0
while hrarooftype:company_id       = agqname:company_id and
      hrarooftype:state            = l_state and
      hrarooftype:line_of_business = agqname:line_of_business and
      hrarooftype:roof_type        = l_roof_type
        begin
        if (agqname:eff_date >= hrarooftype:eff_date and
           (agqname:eff_date <= hrarooftype:exp_date or
           hrarooftype:exp_date = 0)) then
            begin
            switch(l_rating_group)
              case "A" : l_roof_type_factor = hrarooftype:factor[1]
              case "B" : l_roof_type_factor = hrarooftype:factor[2]
              case "C" : l_roof_type_factor = hrarooftype:factor[3]
              case "D" : l_roof_type_factor = hrarooftype:factor[4]
              case "E" : l_roof_type_factor = hrarooftype:factor[5]
              end
            end

        next hrarooftype
        end

if l_roof_type_factor = 0 then
    l_roof_type_factor = 1.00
end

procedure no_families
begin
access hranofamilies, set hranofamilies:company_id       = agqname:company_id,
                          hranofamilies:state            = l_state,
                          hranofamilies:line_of_business = agqname:line_of_business,
                          hranofamilies:no_families      = l_no_families, generic

l_no_families_factor = 0
while hranofamilies:company_id       = agqname:company_id and
      hranofamilies:state            = l_state and
      hranofamilies:line_of_business = agqname:line_of_business and
      hranofamilies:no_families      = l_no_families
        begin
        if (agqname:eff_date >= hranofamilies:eff_date and
           (agqname:eff_date <= hranofamilies:exp_date or
           hranofamilies:exp_date = 0)) then
            begin
            switch(l_rating_group)
              case "A" : l_no_families_factor = hranofamilies:factor[1]
              case "B" : l_no_families_factor = hranofamilies:factor[2]
              case "C" : l_no_families_factor = hranofamilies:factor[3]
              case "D" : l_no_families_factor = hranofamilies:factor[4]
              case "E" : l_no_families_factor = hranofamilies:factor[5]
              end
            end

        next hranofamilies
        end

if l_no_families_factor = 0 then
    l_no_families_factor = 1.00
end

procedure leed_certified
begin
access hragreenconst, set hragreenconst:company_id       = agqname:company_id,
                          hragreenconst:state            = l_state,
                          hragreenconst:line_of_business = agqname:line_of_business,
                          hragreenconst:leed_certified   = l_leed_certified, generic

l_leed_certified_factor = 0
while hragreenconst:company_id       = agqname:company_id and
      hragreenconst:state            = l_state and
      hragreenconst:line_of_business = agqname:line_of_business and
      hragreenconst:leed_certified   = l_leed_certified
        begin
        if (agqname:eff_date >= hragreenconst:eff_date and
           (agqname:eff_date <= hragreenconst:exp_date or
           hragreenconst:exp_date = 0)) then
            begin
            switch(l_rating_group)
              case "A" : l_leed_certified_factor = hragreenconst:factor[1]
              case "B" : l_leed_certified_factor = hragreenconst:factor[2]
              case "C" : l_leed_certified_factor = hragreenconst:factor[3]
              case "D" : l_leed_certified_factor = hragreenconst:factor[4]
              case "E" : l_leed_certified_factor = hragreenconst:factor[5]
              end
            end

        next hragreenconst
        end

if l_leed_certified_factor = 0 then
    l_leed_certified_factor = 1.00
end

procedure companion_credit
begin
Access plscompanionco, Set plscompanionco:COMPANY_ID       = agqname:COMPANY_ID,
                           plscompanionco:STATE            = L_STATE,
                           plscompanionco:LINE_OF_BUSINESS = agqname:LINE_OF_BUSINESS,
                           plscompanionco:company_name     = l_co_name, generic

l_companion_discount_factor = 0
while plscompanionco:COMPANY_ID       = agqNAME:COMPANY_ID and
      plscompanionco:STATE            = L_STATE and
      plscompanionco:LINE_OF_BUSINESS = agqNAME:LINE_OF_BUSINESS and
      plscompanionco:company_name     = l_co_name
        begin
        If (agqNAME:EFF_DATE >= plscompanionco:EFF_DATE and
           (agqname:eff_date <= plscompanionco:exp_date or
           plscompanionco:exp_date = 0)) then
            begin
            l_companion_discount_factor = plscompanionco:rate
            end

        Next plscompanionco
        End

if l_companion_discount_factor = 0 then
    l_companion_discount_factor = 1.00

if l_companion_discount_factor <> 1.00 then
    begin
    l_palisades_credit = (l_base_rate_1 -
                         (l_base_rate_1 *
                         l_companion_discount_factor))
    l_palisades_credit = l_palisades_credit * -1
    end
else
    l_palisades_credit = 0

end

procedure update_major_minor_loss
begin
access agqclaim, set agqclaim:app_no = g_app_no, generic

l_major_loss_found = 0
l_minor_loss_found = 0
while agqclaim:app_no = g_app_no
    begin
    l_claim_year = year(agqname:eff_date) - year(agqclaim:loss_date)
    if ((l_claim_year < 3 or
       (l_claim_year = 3 and
       month(agqclaim:loss_date) >= month(agqname:eff_date))) and
       agqclaim:name <> "INSURED NAME DIFFERENT" and
       agqclaim:policy_type one of "HO", "H" and
       agqclaim:loss_amount not one of "", "0", "$0") then
        begin
        l_continue = "N"
        if l_claim_year = 3 and
           month(agqclaim:loss_date) = month(agqname:eff_date) and
           day(agqclaim:loss_date) >= day(agqname:eff_date) then
            l_continue = "Y"

        if l_claim_year = 3 and
           month(agqclaim:loss_date) > month(agqname:eff_date) then
            l_continue = "Y"

        if l_claim_year < 3 then
            l_continue = "Y"

        if l_continue = "Y" then
            begin
            l_claim_type = agqclaim:claim_type
            l_state = agqpersonal:state

            access sfsclaimtypes, set sfsclaimtypes:company_id       = agqname:company_id,
                                      sfsclaimtypes:state            = l_state,
                                      sfsclaimtypes:line_of_business = agqname:line_of_business,
                                      sfsclaimtypes:claim_type       = l_claim_type, generic

            while sfsclaimtypes:company_id       = agqname:company_id and
                  sfsclaimtypes:state            = agqpersonal:state and
                  sfsclaimtypes:line_of_business = agqname:line_of_business and
                  sfsclaimtypes:claim_type       = l_claim_type
                begin
                if (agqname:eff_date >= hratenure:eff_date and
                   (agqname:eff_date <= hratenure:exp_date or
                   hratenure:exp_date = 0)) then
                    begin
                    if sfsclaimtypes:major_loss = 1 then
                        l_major_loss_found = l_major_loss_found + 1
                    else
                        l_minor_loss_found = l_minor_loss_found + 1
                    end

                next sfsclaimtypes
                end
            end
        end

    next agqclaim
    end

end

procedure loss_experience
begin
l_major_loss_1 = l_major_loss
l_minor_loss_1 = l_minor_Loss
if l_major_loss_1 > 4 then
    l_major_loss_1 = 4
if l_minor_loss_1 > 4 then
    l_minor_loss_1 = 4
access hralossexp, set hralossexp:company_id       = agqname:company_id,
                       hralossexp:state            = l_state,
                       hralossexp:line_of_business = agqname:line_of_business,
                       hralossexp:form             = l_form,
                       hralossexp:major_loss       = l_major_loss_1,
                       hralossexp:minor_loss       = l_minor_loss_1, generic

l_loss_factor       = 0
l_loss_major_factor = 0
l_loss_minor_factor = 0
while hralossexp:company_id       = agqname:company_id and
      hralossexp:state            = l_state and
      hralossexp:line_of_business = agqname:line_of_business and
      hralossexp:form             = l_form and
      hralossexp:major_loss       = l_major_loss_1 and
      hralossexp:minor_loss       = l_minor_loss_1
        begin
        if (agqname:eff_date >= hralossexp:eff_date and
           (agqname:eff_date <= hralossexp:exp_date or
           hralossexp:exp_date = 0)) then
            begin
            switch(l_rating_group)
              case "A" : begin
                         l_loss_factor       = hralossexp:factor[1]
                         l_loss_major_factor = (hralossexp:each_addl_major[1] * (l_major_loss - 4))
                         l_loss_minor_factor = (hralossexp:each_addl_minor[1] * (l_minor_loss - 4))
                         end
              case "B" : begin
                         l_loss_factor       = hralossexp:factor[2]
                         l_loss_major_factor = (hralossexp:each_addl_major[2] * (l_major_loss - 4))
                         l_loss_minor_factor = (hralossexp:each_addl_minor[2] * (l_minor_loss - 4))
                         end
              case "C" : begin
                         l_loss_factor       = hralossexp:factor[3]
                         l_loss_major_factor = (hralossexp:each_addl_major[3] * (l_major_loss - 4))
                         l_loss_minor_factor = (hralossexp:each_addl_minor[3] * (l_minor_loss - 4))
                         end
              case "D" : begin
                         l_loss_factor       = hralossexp:factor[4]
                         l_loss_major_factor = (hralossexp:each_addl_major[4] * (l_major_loss - 4))
                         l_loss_minor_factor = (hralossexp:each_addl_minor[4] * (l_minor_loss - 4))
                         end
              case "E" : begin
                         l_loss_factor       = hralossexp:factor[5]
                         l_loss_major_factor = (hralossexp:each_addl_major[5] * (l_major_loss - 4))
                         l_loss_minor_factor = (hralossexp:each_addl_minor[5] * (l_minor_loss - 4))
                         end
              end
            end

        next hralossexp
        end

if l_loss_factor = 0 then
    l_loss_factor = 1.00
if l_loss_major_factor = 0 then
    l_loss_major_factor = 1.00
if l_loss_minor_factor = 0 then
    l_loss_minor_factor = 1.00
end

procedure tenure
begin
access hratenure, set hratenure:company_id       = agqname:company_id,
                      hratenure:state            = l_state,
                      hratenure:line_of_business = agqname:line_of_business,
                      hratenure:form             = l_form,
                      hratenure:years            = l_years, generic

l_tenure_factor = 0
while hratenure:company_id       = agqname:company_id and
      hratenure:state            = l_state and
      hratenure:line_of_business = agqname:line_of_business and
      hratenure:form             = l_form and
      hratenure:years            = l_years
        begin
        if (agqname:eff_date >= hratenure:eff_date and
           (agqname:eff_date <= hratenure:exp_date or
           hratenure:exp_date = 0)) then
            begin
            switch(l_rating_group)
              case "A" : l_tenure_factor = hratenure:factor[1]
              case "B" : l_tenure_factor = hratenure:factor[2]
              case "C" : l_tenure_factor = hratenure:factor[3]
              case "D" : l_tenure_factor = hratenure:factor[4]
              case "E" : l_tenure_factor = hratenure:factor[5]
              end
            end

        next hratenure
        end

if l_tenure_factor = 0 then
    l_tenure_factor = 1.00
end

procedure original_owner
begin
access hraoriginalowner, set hraoriginalowner:company_id       = agqname:company_id,
                             hraoriginalowner:state            = l_state,
                             hraoriginalowner:line_of_business = agqname:line_of_business,
                             hraoriginalowner:form             = l_form,
                             hraoriginalowner:age              = l_years, generic

l_original_owner_factor = 0
while hraoriginalowner:company_id       = agqname:company_id and
      hraoriginalowner:state            = l_state and
      hraoriginalowner:line_of_business = agqname:line_of_business and
      hraoriginalowner:form             = l_form and
      hraoriginalowner:age              = l_years
        begin
        if (agqname:eff_date >= hraoriginalowner:eff_date and
           (agqname:eff_date <= hraoriginalowner:exp_date or
           hraoriginalowner:exp_date = 0)) then
            begin
            l_original_owner_factor = hraoriginalowner:factor
            end

        next hraoriginalowner
        end

if l_original_owner_factor = 0 then
    l_original_owner_factor = 1.00
end

procedure loyalty
begin
access hraloyalty, set hraloyalty:company_id       = agqname:company_id,
                       hraloyalty:state            = l_state,
                       hraloyalty:line_of_business = agqname:line_of_business,
                       hraloyalty:form             = l_form,
                       hraloyalty:age              = 0, generic

l_loyalty_factor = 0
while hraloyalty:company_id       = agqname:company_id and
      hraloyalty:state            = l_state and
      hraloyalty:line_of_business = agqname:line_of_business and
      hraloyalty:form             = l_form and
      hraloyalty:age              = 0
        begin
        if (agqname:eff_date >= hraloyalty:eff_date and
           (agqname:eff_date <= hraloyalty:exp_date or
           hraloyalty:exp_date = 0)) then
            begin
            l_loyalty_factor = hraloyalty:factor
            end

        next hraloyalty
        end

if l_loyalty_factor = 0 then
    l_loyalty_factor = 1.00
end

procedure new_customer_discount
begin
access hranewcustdis, set hranewcustdis:company_id       = agqname:company_id,
                          hranewcustdis:state            = l_state,
                          hranewcustdis:line_of_business = agqname:line_of_business,
                          hranewcustdis:form             = l_form,
                          hranewcustdis:age              = 0, generic

l_new_cust_dis_factor = 0
while hranewcustdis:company_id       = agqname:company_id and
      hranewcustdis:state            = l_state and
      hranewcustdis:line_of_business = agqname:line_of_business and
      hranewcustdis:form             = l_form and
      hranewcustdis:age              = 0
        begin
        if (agqname:eff_date >= hranewcustdis:eff_date and
           (agqname:eff_date <= hranewcustdis:exp_date or
           hranewcustdis:exp_date = 0)) then
            begin
            switch(l_rating_group)
              case "A" : l_new_cust_dis_factor = hranewcustdis:factor[1]
              case "B" : l_new_cust_dis_factor = hranewcustdis:factor[2]
              case "C" : l_new_cust_dis_factor = hranewcustdis:factor[3]
              case "D" : l_new_cust_dis_factor = hranewcustdis:factor[4]
              case "E" : l_new_cust_dis_factor = hranewcustdis:factor[5]
              end
            end

        next hranewcustdis
        end

if l_new_cust_dis_factor = 0 then
    l_new_cust_dis_factor = 1.00
end

procedure replacement_coverage
begin
access hrareplacement, set hrareplacement:company_id       = agqname:company_id,
                           hrareplacement:state            = l_state,
                           hrareplacement:line_of_business = agqname:line_of_business,
                           hrareplacement:form             = l_form,
                           hrareplacement:code             = l_code, generic

while hrareplacement:company_id       = agqname:company_id and
      hrareplacement:state            = l_state and
      hrareplacement:line_of_business = agqname:line_of_business and
      hrareplacement:form             = l_form and
      hrareplacement:code             = l_code
    begin
    switch(l_rating_group)
      case "A" : l_replacement_factor = hrareplacement:factor[1]
      case "B" : l_replacement_factor = hrareplacement:factor[2]
      case "C" : l_replacement_factor = hrareplacement:factor[3]
      case "D" : l_replacement_factor = hrareplacement:factor[4]
      case "E" : l_replacement_factor = hrareplacement:factor[5]
      end

    next hrareplacement
    end

if l_replacement_factor = 0 then
    l_replacement_factor = 1.00
end

procedure expense_fee
begin
access hraexpensefee, set hraexpensefee:company_id       = agqname:company_id,
                          hraexpensefee:state            = l_state,
                          hraexpensefee:line_of_business = agqname:line_of_business,
                          hraexpensefee:form             = l_form, generic

l_expense_fee = 0
while hraexpensefee:company_id       = agqname:company_id and
      hraexpensefee:state            = l_state and
      hraexpensefee:line_of_business = agqname:line_of_business and
      hraexpensefee:form             = l_form
        begin
        if (agqname:eff_date >= hraexpensefee:eff_date and
           (agqname:eff_date <= hraexpensefee:exp_date or
           hraexpensefee:exp_date = 0)) then
            begin
            l_expense_fee = hraexpensefee:fee
            end

        next hraexpensefee
        end

end

procedure access_sfsoptend
begin
l_company_id = agqname:company_id
l_line_of_business = agqname:line_of_business
access sfsoptend, set sfsoptend:company_id       = l_company_id,
                      sfsoptend:state            = l_state,
                      sfsoptend:line_of_business = l_line_of_business,
                      sfsoptend:code             = l_code, generic

l_limit_1    = 0
l_limit_2    = 0
l_limit_3    = 0
l_limit_4    = 0
l_limit_5    = 0
l_limit_6    = 0
l_limit_7    = 0
l_limit_8    = 0
l_limit_9    = 0
l_limit_10   = 0
l_limit_11   = 0
l_limit_12   = 0
l_premium_1  = 0
l_premium_2  = 0
l_premium_3  = 0
l_premium_4  = 0
l_premium_5  = 0
l_premium_6  = 0
l_premium_7  = 0
l_premium_8  = 0
l_premium_9  = 0
l_premium_10 = 0
l_premium_11 = 0
l_premium_12 = 0
while sfsoptend:company_id       = l_company_id and
      sfsoptend:state            = l_state and
      sfsoptend:line_of_business = l_line_of_business and
      sfsoptend:code             = l_code
        begin
        if (agqname:eff_date >= sfsoptend:eff_date and
           (agqname:eff_date <= sfsoptend:exp_date or
           sfsoptend:exp_date = 0)) then
            begin
            l_limit_1    = sfsoptend:limit[1]
            l_limit_2    = sfsoptend:limit[2]
            l_limit_3    = sfsoptend:limit[3]
            l_limit_4    = sfsoptend:limit[4]
            l_limit_5    = sfsoptend:limit[5]
            l_limit_6    = sfsoptend:limit[6]
            l_limit_7    = sfsoptend:limit[7]
            l_limit_8    = sfsoptend:limit[8]
            l_limit_9    = sfsoptend:limit[9]
            l_limit_10   = sfsoptend:limit[10]
            l_limit_11   = sfsoptend:limit[11]
            l_limit_12   = sfsoptend:limit[12]
            l_premium_1  = sfsoptend:premium_1[1]
            l_premium_2  = sfsoptend:premium_1[2]
            l_premium_3  = sfsoptend:premium_1[3]
            l_premium_4  = sfsoptend:premium_1[4]
            l_premium_5  = sfsoptend:premium_1[5]
            l_premium_6  = sfsoptend:premium_1[6]
            l_premium_7  = sfsoptend:premium_1[7]
            l_premium_8  = sfsoptend:premium_1[8]
            l_premium_9  = sfsoptend:premium_1[9]
            l_premium_10 = sfsoptend:premium_1[10]
            l_premium_11 = sfsoptend:premium_1[11]
            l_premium_12 = sfsoptend:premium_1[12]
            end

        next sfsoptend
        end

End

procedure access_agqendorse1
begin
access agqendorse1, set agqendorse1:app_no = g_app_no,
                        agqendorse1:prem_no  = g_prem_no,
                        agqendorse1:build_no = g_build_no,
                        agqendorse1:code     = l_code, generic

end

procedure access_plsspeciallmts
begin
l_record_key = "SL"
Access PLSSPECIALLMTS, Set PLSSPECIALLMTS:COMPANY_ID       = L_COMPANY_ID,
                           PLSSPECIALLMTS:STATE            = L_STATE,
                           PLSSPECIALLMTS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

While PLSSPECIALLMTS:RECORD_KEY       = L_RECORD_KEY and
      PLSSPECIALLMTS:COMPANY_ID       = L_COMPANY_ID and
      PLSSPECIALLMTS:STATE            = L_STATE and
      PLSSPECIALLMTS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
    begin
    If agqNAME:EFF_DATE >= PLSSPECIALLMTS:rEFF_DATE Then
        Begin
        L_COMPUTER_BASIC = PLSSPECIALLMTS:COMPUTER_BASIC
        L_COMPUTER_PER = PLSSPECIALLMTS:COMPUTER_PER
        L_COMPUTER_CHARGE = PLSSPECIALLMTS:COMPUTER_CHARGE
        L_COMPUTER_BASIC_2 = PLSSPECIALLMTS:COMPUTER_2_BASIC
        L_COMPUTER_PER_2 = PLSSPECIALLMTS:COMPUTER_2_PER
        L_COMPUTER_CHARGE_2 = PLSSPECIALLMTS:COMPUTER_2_CHARGE
        L_CREDIT_CARD_BASIC = PLSSPECIALLMTS:CREDIT_CARD_BASIC
        L_CREDIT_CARD_PER = PLSSPECIALLMTS:CREDIT_CARD_PER
        L_CREDIT_CARD_CHARGE = PLSSPECIALLMTS:CREDIT_CARD_CHARGE
        L_GUNS_BASIC = PLSSPECIALLMTS:GUNS_BASIC
        L_GUNS_PER = PLSSPECIALLMTS:GUNS_PER
        L_GUNS_CHARGE = PLSSPECIALLMTS:GUNS_CHARGE
        L_LANDLORDS_BASIC = PLSSPECIALLMTS:LANDLORDS_BASIC
        L_LANDLORDS_PER = PLSSPECIALLMTS:LANDLORDS_PER
        L_LANDLORDS_CHARGE = PLSSPECIALLMTS:LANDLORDS_CHARGE
        L_LOSS_ASSESSMENT_BASIC = PLSSPECIALLMTS:LOSS_ASSESSMENT_BASIC
        L_LOSS_ASSESSMENT_PER = PLSSPECIALLMTS:LOSS_ASSESSMENT_PER
        L_LOSS_ASSESSMENT_CHARGE = PLSSPECIALLMTS:LOSS_ASSESSMENT_CHARGE
        L_MONEY_BASIC = PLSSPECIALLMTS:MONEY_BASIC
        L_MONEY_PER = PLSSPECIALLMTS:MONEY_PER
        L_MONEY_CHARGE = PLSSPECIALLMTS:MONEY_CHARGE
        L_ON_RESIDENCE_BASIC = PLSSPECIALLMTS:ON_RESIDENCE_BASIC
        L_ON_RESIDENCE_PER = PLSSPECIALLMTS:ON_RESIDENCE_PER
        L_ON_RESIDENCE_CHARGE = PLSSPECIALLMTS:ON_RESIDENCE_CHARGE
        L_TENANTS_BASIC = PLSSPECIALLMTS:TENANTS_BASIC
        L_TENANTS_PER = PLSSPECIALLMTS:TENANTS_PER
        L_TENANTS_CHARGE = PLSSPECIALLMTS:TENANTS_CHARGE
        L_WORK_INTER_BASIC = PLSSPECIALLMTS:WORK_INTER_BASIC
        L_WORK_INTER_PER =PLSSPECIALLMTS:WORK_INTER_PER
        L_WORK_INTER_CHARGE = PLSSPECIALLMTS:WORK_INTER_CHARGE
        L_BUILDING_CODE_BASIC = PLSSPECIALLMTS:BUILDING_CODE_PERCENT
        L_BUILDING_CODE_PER = PLSSPECIALLMTS:BUILDING_CODE_PER
        L_BUILDING_CODE_FACTOR = PLSSPECIALLMTS:BUILDING_CODE_FACTOR
        End

    Next PLSSPECIALLMTS
    End

end

procedure loss_surcharge
begin
access sfsloss, set sfsloss:company_id       = agqpersonal:company_id,
                    sfsloss:state            = agqpersonal:state,
                    sfsloss:line_of_business = agqpersonal:line_of_business, generic

l_loss_factor = 0
while sfsloss:company_id       = agqpersonal:company_id and
      sfsloss:state            = agqpersonal:state and
      sfsloss:line_of_business = agqpersonal:line_of_business
        begin
        if (agqpersonal:eff_date >= sfsloss:eff_date and
           (agqpersonal:eff_date < sfsloss:exp_date or
           sfsloss:exp_date = 0)) then
            begin
            if agqpersonal:no_claims >= sfsloss:no_losses then
                l_loss_factor = sfsloss:factor
            end

        next sfsloss
        end

Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no,
                              agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                              agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

If agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no And
   agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO And
   agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO Then
    Change agqPERSONAL_ALIAS
        Begin
        agqPERSONAL_ALIAS:loss_surcharge = l_loss_factor
        End

end

Procedure TOTALS
Begin
L_MINIMUM_APPLIES = "N"
if l_loss_factor <> 0 then
    l_total = l_total * l_loss_factor

If L_TOTAL < L_MINIMUM Then
    Begin
    L_TOTAL = L_MINIMUM
    L_MINIMUM_APPLIES = "Y"
    End
Else
    L_MINIMUM_APPLIES = "N"

End

Procedure FINAL_TOTAL
Begin
l_total = l_total + l_boiler_premium
L_EFF_DATE_1 = Dateadd(agqpersonal:EFF_DATE,0,1)
If agqpersonal:EXP_DATE < L_EFF_DATE_1 Then
    Begin
    L_DAYS_RATE = L_TOTAL Divide 365
    L_DAYS = agqpersonal:EXP_DATE - agqpersonal:EFF_DATE
    L_PRO_RATA_PREMIUM = L_DAYS * L_DAYS_RATE
    L_TOTAL = L_PRO_RATA_PREMIUM
    End

access agqpersonal2, set agqpersonal2:app_no   = agqpersonal:app_no,
                         agqpersonal2:prem_no  = agqpersonal:prem_no,
                         agqpersonal2:build_no = agqpersonal:build_no, generic

if agqpersonal2:book_roll_premium <> 0 then
    begin
    l_capped_total_less = agqpersonal2:book_roll_premium * 0.85
    l_capped_total_more = agqpersonal2:book_roll_premium * 1.15

    if l_total > l_capped_total_more or
       l_total < l_capped_total_less then
        begin
        if l_total > l_capped_total_more then
            begin
            l_capped_total_1 = l_capped_total_more - l_total
            l_total = l_capped_total_more
            end
        else
            begin
            l_capped_total_1 = l_capped_total_less - l_total
            l_total = l_capped_total_less
            end
        end
    else
        begin
        l_capped_total_1 = 0
        end
    end

If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
    L_FINAL_TOTAL = L_TOTAL + L_INSTALLMENT
Else
    L_FINAL_TOTAL = L_TOTAL

if (l_policy_surcharge <> 0 and
   (agqpersonal:seasonal = "Y" or
   agqpersonal:owner_occupied = "Y")) then
    begin
    if agqpersonal:override_seasonal_surcharge = 0 then
        begin
        l_policy_surcharge_total = ((l_final_total * l_policy_surcharge) -
                                   l_final_total)
        l_final_total = l_final_total * l_policy_surcharge
        end
    else
        begin
        l_policy_surcharge_total = 0
        end
    end

Access agqMASTER, Set agqMASTER:app_no = agqpersonal:app_no, generic

l_irpm = agqmaster:irpm
L_IRPM = (1 + (L_IRPM * 0.01))
If L_IRPM = 0 Then
    L_IRPM = 1

if l_irpm not one of 1 then
    begin
    L_IRPM_TOTAL   = ((L_FINAL_TOTAL - l_boiler_premium) * L_IRPM)
    l_irpm_total_1 = (l_irpm_total - (l_final_total - l_boiler_premium))
    l_irpm_total   = l_irpm_total + l_boiler_premium
    end
else
    begin
    l_irpm_total   = 0
    l_irpm_total_1 = 0
    end

access sfssurcharge, set sfssurcharge:company_id = agqpersonal:company_id,
                         sfssurcharge:state = agqpersonal:state,
                         sfssurcharge:line_of_business = agqpersonal:line_of_business, generic

l_surcharge_date = 0
while sfssurcharge:company_id = agqpersonal:company_id and
      sfssurcharge:state = agqpersonal:state and
      sfssurcharge:line_of_business = agqpersonal:line_of_business
        begin
        if (agqpersonal:eff_date >= sfssurcharge:eff_date and
           (l_surcharge_date < sfssurcharge:eff_date or
           l_surcharge_date = 0)) then
            begin
            l_surcharge_date    = sfssurcharge:eff_date
            l_surcharge_factor  = sfssurcharge:surcharge_factor
            l_surcharge_minimum = sfssurcharge:minimum_premium
            end
        next sfssurcharge
        end

if l_irpm_total = 0 then
    L_SURCHARGE = L_FINAL_TOTAL * l_SURCHARGE_FACTOR
else
    L_SURCHARGE = L_IRPM_TOTAL * l_SURCHARGE_FACTOR

If L_SURCHARGE < l_SURCHARGE_MINIMUM Then
    L_SURCHARGE = l_SURCHARGE_MINIMUM

L_COMPANY_ID = agqPERSONAL:COMPANY_ID
Access agqMASTER, Set agqMASTER:app_no = agqPERSONAL:app_no, Exact

if agqmaster:app_no <> agqpersonal:app_no then
    begin
    add agqmaster
        begin
        agqmaster:app_no = agqpersonal:app_no
        end

    Access agqMASTER, Set agqMASTER:app_no = agqPERSONAL:app_no, Exact
    end

If agqMASTER:app_no = agqPERSONAL:app_no Then
    begin
    Change agqMASTER
        Begin
        -- need these totals for inquiry purposes
        agqmaster:total[2]  = l_boiler_premium
        agqMASTER:TOTAL[3]  = L_INLAND_TOTAL
        agqMASTER:TOTAL[4]  = L_basic_prem
        agqMASTER:TOTAL[5]  = L_UMBRELLA_TOTAL
        agqMASTER:TOTAL[6]  = 0 -- workers comp med
        agqMASTER:TOTAL[8]  = L_LIABILITY_TOTAL
        agqmaster:total[9]  = l_policy_surcharge_total
        agqmaster:total[10] = l_irpm_total_1
        agqmaster:other_totals[10] = l_basic_prem
        agqmaster:other_totals[11] = l_inservants_employees_prem
        agqmaster:other_totals[12] = l_outservants_residence_prem
        agqmaster:other_totals[13] = l_outservants_estate_prem
        agqmaster:other_totals[17] = l_capped_total_1
        if l_mpl80_exists = "N" then
            begin
            agqmaster:other_totals[1] = 0
            agqmaster:other_totals[2] = 0
            agqmaster:other_totals[3] = 0
            agqmaster:other_totals[4] = 0
            agqmaster:other_totals[5] = 0
            end
        agqMASTER:TOTAL[11] = 0
        agqMASTER:TOTAL[12] = 0
        agqMASTER:TOTAL[13] = 0
        agqMASTER:TOTAL[14] = 0
        If SFSLINE:LOB_CODE = "DWELLING" Then
            Begin
            If L_MINIMUM_APPLIES = "Y" Then
                Begin
                If agqPERSONAL:DWELLING_LIMIT <> 0 Then
                    L_BUILDING_PREMIUM = L_FINAL_TOTAL - L_INSTALLMENT
                Else
                    L_CONTENTS_PREMIUM = L_FINAL_TOTAL - L_INSTALLMENT
                End
            else
                Begin
                If agqPERSONAL:DWELLING_LIMIT <> 0 Then
                    L_BUILDING_PREMIUM = l_building_premium + l_policy_surcharge_total
                Else
                    L_CONTENTS_PREMIUM = L_contents_premium + l_policy_surcharge_total
                End
            If L_BUILDING_PREMIUM <> 0 Then
                Begin
                If agqPERSONAL:FORM = 1 And
                   agqPERSONAL:EC = "Y" Then
                    Begin
                    agqMASTER:TOTAL[11] = L_BUILDING_PREMIUM
                    agqmaster:total[12] = 0
                    End
                Else
                    Begin
                    L_BUILDING_FIRE = (L_BUILDING_PREMIUM *
                                      (agsdefault_plp:BUILDING_PERCENT_FIRE
                                      Divide 100))
                    agqMASTER:TOTAL[11] = L_BUILDING_FIRE

                    L_BUILDING_ALLIED = (L_BUILDING_PREMIUM *
                                        (agsdefault_plp:BUILDING_PERCENT_ALLIED
                                         Divide 100))
                    agqMASTER:TOTAL[12] = L_BUILDING_ALLIED
                    End
                End
            else
            if l_building_premium = 0 then
                begin
                agqmaster:total[11] = 0
                agqmaster:total[12] = 0
                end

            If L_CONTENTS_PREMIUM <> 0 Then
                Begin
                If agqPERSONAL:FORM = 1 And
                   agqPERSONAL:EC = "Y" Then
                    Begin
                    agqMASTER:TOTAL[13] = L_CONTENTS_PREMIUM
                    agqmaster:total[14] = 0
                    End
                Else
                    Begin
                    L_CONTENTS_FIRE = (L_CONTENTS_PREMIUM *
                                      (agsdefault_plp:CONTENTS_PERCENT_FIRE
                                      Divide 100))
                    agqMASTER:TOTAL[13] = L_CONTENTS_FIRE
                    L_CONTENTS_ALLIED = (L_CONTENTS_PREMIUM *
                                        (agsdefault_plp:CONTENTS_PERCENT_ALLIED
                                        Divide 100))
                    agqMASTER:TOTAL[14] = L_CONTENTS_ALLIED
                    End
                End
            else
            if l_contents_premium = 0 then
                begin
                agqmaster:total[13] = 0
                agqmaster:total[14] = 0
                end

            L_DWELLING_FIRE_TOTAL = L_BUILDING_FIRE + L_BUILDING_ALLIED +
                                    L_CONTENTS_FIRE + L_CONTENTS_ALLIED +
                                    L_INLAND_TOTAL + L_WORKERS_COMP_TOTAL +
                                    L_UMBRELLA_TOTAL + L_LIABILITY_TOTAL
            L_DWELLING_FIRE_DIFF = ((L_TOTAL + l_policy_surcharge_total) - L_DWELLING_FIRE_TOTAL)
            If L_DWELLING_FIRE_TOTAL <> (L_TOTAL + l_policy_surcharge_total) Then
                Begin
                If L_BUILDING_FIRE <> 0 Then
                    agqMASTER:TOTAL[11] = agqMASTER:TOTAL[11] + L_DWELLING_FIRE_DIFF
                Else
                If L_CONTENTS_FIRE <> 0 Then
                    agqMASTER:TOTAL[13] = agqMASTER:TOTAL[13] + L_DWELLING_FIRE_DIFF
                End
            End

        agqMASTER:TOTAL[17] = L_TOTAL
        agqMASTER:TOTAL[18] = L_FINAL_TOTAL
        agqmaster:total[19] = l_irpm_total
--        agqmaster:expense_fee = l_expense_fee
        if l_irpm_total = 0 then
            begin
            If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                Begin
                agqMASTER:TOTAL[1] = L_FINAL_TOTAL - L_INSTALLMENT -
                                     l_boiler_premium
                End
            Else
                Begin
                agqMASTER:TOTAL[1] = L_FINAL_TOTAL - l_boiler_premium
                End
            end
        else
            begin
            If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                Begin
                agqMASTER:TOTAL[1] = L_IRPM_TOTAL - L_INSTALLMENT -
                                     l_boiler_premium
                End
            Else
                Begin
                agqMASTER:TOTAL[1] = L_IRPM_TOTAL - l_boiler_premium
                End
            end
        agqMASTER:INSTALLMENT_CHARGE = L_INSTALLMENT
        If L_MINIMUM_APPLIES = "Y" Then
            agqMASTER:MINIMUM_PREM_APPLIES = "Y"
        else
            agqmaster:minimum_prem_applies = "N"
        agqMASTER:SURCHARGE = L_SURCHARGE
        if l_irpm_total = 0 then
            agqMASTER:RAW_PREMIUM_AMT_DUE = L_FINAL_TOTAL - l_boiler_premium
        else
            agqMASTER:RAW_PREMIUM_AMT_DUE = L_IRPM_TOTAL - l_boiler_premium
        agqmaster:terrorism_premium = l_terrorism_premium
        if l_irpm_total = 0 then
            begin
            If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                Begin
                agqMASTER:TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE +
                                      L_INSTALLMENT
                agqMASTER:AMT_DUE_TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE +
                                              L_INSTALLMENT
                End
            Else
                Begin
                agqMASTER:TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE
                agqMASTER:AMT_DUE_TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE
                end
            End
        else
            begin
            If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                Begin
                agqMASTER:TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE +
                                      L_INSTALLMENT
                agqMASTER:AMT_DUE_TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE +
                                              L_INSTALLMENT
                End
            Else
                Begin
                agqMASTER:TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE
                agqMASTER:AMT_DUE_TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE
                end
            End

        End
    end
End

procedure update_policy_totals
begin
access agqtotals, set agqtotals:app_no     = agqpersonal:app_no,
                      agqtotals:prem_no    = 0,
                      agqtotals:build_no   = 0,
                      agqtotals:deductible = l_deductible, generic

if agqtotals:app_no     = agqpersonal:app_no and
   agqtotals:prem_no    = 0 and
   agqtotals:build_no   = 0 and
   agqtotals:deductible = l_deductible then
    begin
    change agqtotals
        begin
        if l_dont_update_agqtotals = "N" then
            begin
            agqtotals:deductible_premium            = l_total_all_locations
            agqtotals:terrorism_premium             = l_terrorism_premium
            agqtotals:pliga                         = l_surcharge
            agqtotals:boiler_premium                = l_boiler_premium
            agqtotals:minimum_premium               = l_agqtotals_minimum
            agqtotals:irpm_total                    = l_irpm_total_1
--            agqtotals:expense_fee                   = l_expense_fee
            agqtotals:capped_premium                = l_capped_total_1
            end
        else
            begin
            agqtotals:deductible_premium            = 0
            agqtotals:terrorism_premium             = 0
            agqtotals:pliga                         = 0
            agqtotals:boiler_premium                = 0
            agqtotals:minimum_premium               = 0
            agqtotals:irpm_total                    = 0
--            agqtotals:expense_fee                   = 0
            agqtotals:capped_premium                = 0
            end
        end
    end
else
    begin
    add agqtotals
        begin
        agqtotals:app_no                        = agqpersonal:app_no
        agqtotals:prem_no                       = 0
        agqtotals:build_no                      = 0
        agqtotals:deductible                    = l_deductible
        if l_dont_update_agqtotals = "N" then
            begin
            agqtotals:deductible_premium            = l_total_all_locations
            agqtotals:terrorism_premium             = l_terrorism_premium
            agqtotals:pliga                         = l_surcharge
            agqtotals:boiler_premium                = l_boiler_premium
            agqtotals:minimum_premium               = l_agqtotals_minimum
            agqtotals:irpm_total                    = l_irpm_total_1
            agqtotals:capped_premium                = l_capped_total_1
--            agqtotals:expense_fee                   = l_expense_fee
            end
        else
            begin
            agqtotals:deductible_premium            = 0
            agqtotals:terrorism_premium             = 0
            agqtotals:pliga                         = 0
            agqtotals:boiler_premium                = 0
            agqtotals:minimum_premium               = 0
            agqtotals:irpm_total                    = 0
            agqtotals:capped_premium                = 0
--            agqtotals:expense_fee                   = 0
            end
        end
    end

end

Procedure GET_WATERCRAFT_RATES
Begin
L_RECORD_KEY = "LR"
L_COMPANY_ID = agqPERSONAL:COMPANY_ID
L_STATE = agqPERSONAL:STATE
L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
L_LIABILITY_LIMIT = agqPERSONAL:LIABILITY_LIMIT
L_MEDICAL_LIMIT = agqPERSONAL:MEDICAL_LIMIT

Include "plsliabrates.pro"

End

Procedure INCREASE_LIMITS_PREMIUM
Begin
L_RECORD_KEY = "CI"
L_COMPANY_ID = agqPERSONAL:COMPANY_ID
L_STATE = agqPERSONAL:STATE
L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
L_FORM = agqPERSONAL:FORM
L_EFF_DATE = agqpersonal:EFF_DATE

If agqPERSONAL:FORM = 4 Or
   agqPERSONAL:FORM = 6 Then
    Begin
    L_COVERAGE = "D"
    L_LIMIT = (agqPERSONAL:CONTENTS_LIMIT * (agsdefault_plp:COVERAGE_D_PERCENT
               Divide 100))
    If agqPERSONAL:LOSS_RENTS_LIMIT <> L_LIMIT Then
        Begin
        Include "plscovincrease.pro"

        Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no,
                                      agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

        If agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no And
           agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO And
           agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO Then
            Change agqPERSONAL_ALIAS
                Begin
                agqPERSONAL_ALIAS:LOSS_RENTS_PREMIUM[1] = (((agqPERSONAL_ALIAS:LOSS_RENTS_LIMIT -
                                                          L_LIMIT) Divide
                                                          L_INCREASE_PER) *
                                                          L_INCREASE_CHARGE)
                End
        End
    Else
        Begin
        Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no,
                                      agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

        If agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no And
           agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO And
           agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO Then
            Change agqPERSONAL_ALIAS
                Begin
                agqPERSONAL_ALIAS:LOSS_RENTS_PREMIUM[1] = 0
                End
        End
    End
Else
    Begin
    L_COVERAGE = "B"
    L_LIMIT = (agqPERSONAL:DWELLING_LIMIT * (agsdefault_plp:COVERAGE_B_PERCENT Divide
              100))
    If agqPERSONAL:STRUCTURES_LIMIT[1] <> L_LIMIT Then
        Begin
        Include "plscovincrease.pro"

        Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no,
                                      agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

        If agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no And
           agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO And
           agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO Then
            Change agqPERSONAL_ALIAS
                Begin
                agqPERSONAL_ALIAS:STRUCTURES_PREMIUM_1[1] = (((agqPERSONAL_ALIAS:STRUCTURES_LIMIT[1] -
                                                            L_LIMIT) Divide
                                                            L_INCREASE_PER) *
                                                            L_INCREASE_CHARGE)
                End
        End
    Else
        Begin
        Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no,
                                      agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

        If agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no And
           agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO And
           agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO Then
            Change agqPERSONAL_ALIAS
                Begin
                agqPERSONAL_ALIAS:STRUCTURES_PREMIUM_1[1] = 0
                End

        End

    L_COVERAGE = "C"
    Access agqEND, Set agqEND:app_no = agqPERSONAL:app_no,
                       agqEND:PREM_NO = agqPERSONAL:PREM_NO,
                       agqEND:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

    L_CODE = ""
    Repeat Begin
        Exit If agqEND:app_no <> agqPERSONAL:app_no Or
                agqEND:PREM_NO <> agqPERSONAL:PREM_NO Or
                agqEND:BUILD_NO <> agqPERSONAL:BUILD_NO

        If agqEND:CODE = "MPL47" Then
            L_CODE = "MPL47"
        Else
        If agqEND:CODE = "MPL49" Then
            L_CODE = "MPL49"

        Next agqEND
        End

    L_INCREASE_COV_C = 0
    If L_CODE = "MPL47" Or
       L_CODE = "MPL49" Then
        Begin
        Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID = agqPERSONAL:COMPANY_ID,
                              SFSOPTEND:STATE = agqPERSONAL:STATE,
                              SFSOPTEND:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS ,
                              SFSOPTEND:CODE = L_CODE, Generic

        Repeat Begin
            Exit If SFSOPTEND:COMPANY_ID <> agqPERSONAL:COMPANY_ID Or
                    SFSOPTEND:STATE <> agqPERSONAL:STATE Or
                    SFSOPTEND:LINE_OF_BUSINESS <> agqpersonal:LINE_OF_BUSINESS Or
                    SFSOPTEND:CODE <> L_CODE

            L_INCREASE_COV_C = SFSOPTEND:PREMIUM_1[5]

            Next SFSOPTEND
            End
        End

    If L_INCREASE_COV_C <> 0 Then
        L_LIMIT = (agqPERSONAL:DWELLING_LIMIT * (L_INCREASE_COV_C Divide 100))
    Else
        L_LIMIT = (agqPERSONAL:DWELLING_LIMIT * (agsdefault_plp:COVERAGE_C_PERCENT
                  Divide 100))

    If agqPERSONAL:CONTENTS_LIMIT <> L_LIMIT Then
        Begin
        Include "plscovincrease.pro"

        Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no,
                                      agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

        If agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no And
           agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO And
           agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO Then
            Change agqPERSONAL_ALIAS
                Begin
                agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1] = (((agqPERSONAL_ALIAS:CONTENTS_LIMIT -
                                                         L_LIMIT) Divide
                                                         L_INCREASE_PER) *
                                                         L_INCREASE_CHARGE)
                End
        End
    Else
        Begin
        Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no,
                                      agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

        If agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no And
           agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO And
           agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO Then
            Change agqPERSONAL_ALIAS
                Begin
                agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1] = 0
                End

        End

    L_COVERAGE = "D"
    L_LIMIT = (agqPERSONAL:DWELLING_LIMIT * (agsdefault_plp:COVERAGE_D_PERCENT
               Divide 100))
    If agqPERSONAL:LOSS_RENTS_LIMIT <> L_LIMIT Then
        Begin
        Include "plscovincrease.pro"

        Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no,
                                      agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

        If agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no And
           agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO And
           agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO Then
            Change agqPERSONAL_ALIAS
                Begin
                agqPERSONAL_ALIAS:LOSS_RENTS_PREMIUM[1] = (((agqPERSONAL_ALIAS:LOSS_RENTS_LIMIT -
                                                          L_LIMIT) Divide
                                                          L_INCREASE_PER) *
                                                          L_INCREASE_CHARGE)
                End
        End
    Else
        Begin
        Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no,
                                      agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

        If agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no And
           agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO And
           agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO Then
            Change agqPERSONAL_ALIAS
                Begin
                agqPERSONAL_ALIAS:LOSS_RENTS_PREMIUM[1] = 0
                End
        End

    End

End

Procedure LIABILITY_PREMIUM
Begin
If SFSLINE:LOB_CODE <> "DWELLING" Then
    Begin
    L_RECORD_KEY = "LR"
    L_COMPANY_ID = agqPERSONAL:COMPANY_ID
    L_STATE = agqPERSONAL:STATE
    L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
    L_EFF_DATE = agqpersonal:EFF_DATE
    L_CODE = ""/raw
    L_LIABILITY_LIMIT = agqPERSONAL:LIABILITY_LIMIT
    L_MEDICAL_LIMIT = agqPERSONAL:MEDICAL_LIMIT

    Include "plsliabrates.pro"

    Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no,
                                  agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                  agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

    If agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no And
       agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO And
       agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO Then
        Change agqPERSONAL_ALIAS
            Begin
            agqPERSONAL_ALIAS:LIAB_MEDICAL_PREMIUM = L_LIABILITY_CHARGE_1
            End
    L_LIABILITY_TOTAL = 0
    End
Else
    Begin
    L_RECORD_KEY = "LR"
    L_COMPANY_ID = agqPERSONAL:COMPANY_ID
    L_STATE = agqPERSONAL:STATE
    L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
    L_EFF_DATE = agqpersonal:EFF_DATE
    Switch(agqPERSONAL:LIABILITY_FORM)
      Case 1  : L_CODE = "MDL1"
      Default : L_CODE = "MDL2"
      End
    L_LIABILITY_LIMIT = agqPERSONAL:LIABILITY_LIMIT
    L_MEDICAL_LIMIT = agqPERSONAL:MEDICAL_LIMIT

    Include "plsliabrates.pro"

    If L_STATE = 37 Then
        Begin
        -- MDL territory multipliers
        If agqPERSONAL:LIABILITY_FORM = 1 Then  -- MDL1
            Begin
            L_RECORD_KEY = "TF"
            L_COMPANY_ID = agqpersonal:COMPANY_ID
            L_STATE = agqPERSONAL:STATE
            L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
            L_FORM = 2
            L_GROUP = agqPERSONAL:GROUP
            L_EFF_DATE = agqpersonal:EFF_DATE

            Include "plsterrfactor.pro"
            End
        Else
            L_TERRITORY_FACTOR = 1.00
        End
    Else
        L_TERRITORY_FACTOR = 1.00

    Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no,
                                  agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                  agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

    If agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no And
       agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO And
       agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO Then
        Begin
        If agqPERSONAL:LIABILITY_LIMIT <> 0 Then
            Begin
            Change agqPERSONAL_ALIAS
                Begin
                Switch(agqPERSONAL_ALIAS:NO_FAMILIES)
                  Case 1  : agqPERSONAL_ALIAS:LIAB_MEDICAL_PREMIUM =
                                 L_LIABILITY_CHARGE_1 * L_TERRITORY_FACTOR
                  Case 2  : agqPERSONAL_ALIAS:LIAB_MEDICAL_PREMIUM =
                                 L_LIABILITY_CHARGE_2 * L_TERRITORY_FACTOR
                  Case 3  : agqPERSONAL_ALIAS:LIAB_MEDICAL_PREMIUM =
                                 L_LIABILITY_CHARGE_3 * L_TERRITORY_FACTOR
                  Default : agqPERSONAL_ALIAS:LIAB_MEDICAL_PREMIUM =
                                 L_LIABILITY_CHARGE_4 * L_TERRITORY_FACTOR
                  End
                End
            End
        Else
            Change agqPERSONAL_ALIAS
                Begin
                agqPERSONAL_ALIAS:LIAB_MEDICAL_PREMIUM = 0
                End
        End

    Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no,
                                  agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                  agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

    L_LIABILITY_TOTAL = agqPERSONAL_ALIAS:LIAB_MEDICAL_PREMIUM
    End

End

Procedure GET_RATE
Begin
Access agqLOCATION, Set agqLOCATION:app_no = agqPERSONAL:app_no,
                        agqLOCATION:PREM_NO = agqPERSONAL:PREM_NO,
                        agqLOCATION:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

If agqLOCATION:app_no = agqPERSONAL:app_no And
   agqLOCATION:PREM_NO = agqPERSONAL:PREM_NO And
   agqLOCATION:BUILD_NO = agqPERSONAL:BUILD_NO Then
    Change agqLOCATION
        Begin
        agqLOCATION:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
        agqLOCATION:STATE = agqPERSONAL:STATE
        agqLOCATION:COUNTY = agqPERSONAL:COUNTY
        agqLOCATION:TRANS_CODE = 10
        agqlocation:trans_date = todaysdate
        agqLOCATION:EFF_DATE = agqpersonal:EFF_DATE
        agqLOCATION:EXP_DATE = agqpersonal:EXP_DATE
        agqLOCATION:LIMIT_CODE[1] = "A"
        agqLOCATION:LIMIT[1] = agqPERSONAL:DWELLING_LIMIT
        agqLOCATION:LIMIT_CODE[2] = "B"
        agqLOCATION:LIMIT[2] = agqPERSONAL:STRUCTURES_LIMIT[1] + STRUCTURES_LIMIT[2]
        agqLOCATION:LIMIT_CODE[3] = "C"
        agqLOCATION:LIMIT[3] = agqPERSONAL:CONTENTS_LIMIT
        agqLOCATION:LIMIT_CODE[4] = "D"
        agqLOCATION:LIMIT[4] = agqPERSONAL:LOSS_RENTS_LIMIT
        agqLOCATION:LIMIT_CODE[5] = "E"
        agqLOCATION:LIMIT[5] = agqPERSONAL:LIABILITY_LIMIT
        agqLOCATION:LIMIT_CODE[6] = "F"
        agqLOCATION:LIMIT[6] = agqPERSONAL:MEDICAL_LIMIT
        agqLOCATION:LIMIT_CODE[10] = "T"
        agqLOCATION:LIMIT[10] = agqPERSONAL:DWELLING_LIMIT +
                                agqPERSONAL:CONTENTS_LIMIT +
                                agqPERSONAL:STRUCTURES_LIMIT[1] +
                                agqPERSONAL:STRUCTURES_LIMIT[2] +
                                agqPERSONAL:LOSS_RENTS_LIMIT
        agqLOCATION:PREMIUM[10] = L_LOC_TOTAL
        End

Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no,
                              agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                              agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

If agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no And
   agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO And
   agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO Then
    Change agqPERSONAL_ALIAS
        Begin
        agqPERSONAL_ALIAS:plp_TOTAL = L_LOC_TOTAL
        End

L_TOTAL = L_LOC_TOTAL + L_TOTAL

End

Procedure RATE_ENDORSEMENTS
Begin
Access SFSLINE, Set SFSLINE:COMPANY_ID       = agqpersonal:COMPANY_ID,
                    SFSLINE:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                    SFSLINE:LOB_SUBLINE      = "00", Generic

Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID = agqPERSONAL:COMPANY_ID,
                      SFSOPTEND:STATE = agqPERSONAL:STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                      SFSOPTEND:CODE = L_CODE, Generic

l_boiler_form = 0
Repeat Begin
    Exit If SFSOPTEND:COMPANY_ID <> agqPERSONAL:COMPANY_ID Or
            SFSOPTEND:STATE <> agqPERSONAL:STATE Or
            SFSOPTEND:LINE_OF_BUSINESS <> agqpersonal:LINE_OF_BUSINESS Or
            SFSOPTEND:CODE <> L_CODE

    If (agqpersonal:EFF_DATE >= SFSOPTEND:EFF_DATE and
       (agqpersonal:eff_date <= sfsoptend:Exp_date or
       sfsoptend:exp_date = 0)) Then
        Begin
        L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
        L_END_LIMIT = SFSOPTEND:LIMIT[1]
        L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]

        if l_code = "FPL02"  then
            begin
            if agqpersonal:form one of 3, 5 then
                l_boiler_premium = ((agqpersonal:dwelling_limit divide
                                   sfsoptend:limit[1]) *
                                   sfsoptend:premium_1[1])
            else
            if agqpersonal:form one of 6 then
                l_boiler_premium = ((agqpersonal:contents_limit divide
                                   sfsoptend:limit[1]) *
                                   sfsoptend:premium_1[1])

            if l_boiler_premium < sfsoptend:premium_1[2] then
                l_boiler_premium = sfsoptend:premium_1[2]
            else
            if l_boiler_premium > sfsoptend:premium_1[3] then
                l_boiler_premium = sfsoptend:premium_1[3]

            if agqpersonal:form not one of 6 then
                l_boiler_limit = agqpersonal:dwelling_limit *
                                 sfsoptend:premium_1[4]
            else
                l_boiler_limit = agqpersonal:contents_limit *
                                 sfsoptend:premium_1[4]
            if l_boiler_limit < sfsoptend:limit[4] then
                l_boiler_limit = sfsoptend:limit[4]

            l_boiler_form = 1
            end

        if l_code = "MPL720"  then
            begin
            if agqpersonal:form one of 3 then
                l_boiler_premium = ((agqpersonal:dwelling_limit divide
                                   sfsoptend:limit[1]) *
                                   sfsoptend:premium_1[1])
            else
            if agqpersonal:form one of 6 then
                l_boiler_premium = ((agqpersonal:contents_limit divide
                                   sfsoptend:limit[1]) *
                                   sfsoptend:premium_1[1])

            if l_boiler_premium < sfsoptend:premium_1[2] then
                l_boiler_premium = sfsoptend:premium_1[2]
            else
            if l_boiler_premium > sfsoptend:premium_1[3] then
                l_boiler_premium = sfsoptend:premium_1[3]

            l_boiler_form = 1
            end

        If L_CODE = "FPL01" Then
            Begin
            Switch(agqPERSONAL:FORM)
              Case 3, 5  : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
              Case 6     : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
              Default    : L_END_PREMIUM1 = 0
              End
            end

        if l_code = "MPL03" then
            begin
            switch(agqpersonal:liability_limit)
              case 300000 : l_end_premium1 = sfsoptend:premium_1[1] * -1
              case 500000 : l_end_premium1 = sfsoptend:premium_1[2] * -1
              default     : l_end_premium1 = sfsoptend:premium_1[3] * -1
              end
            end

        If L_CODE = "SAL01" Then
            Begin
            Access agqendorse1, Set agqendorse1:app_no   = agqpersonal:app_no,
                                    agqendorse1:PREM_NO  = agqpersonal:PREM_NO,
                                    agqendorse1:BUILD_NO = agqpersonal:BUILD_NO,
                                    agqendorse1:CODE     = L_CODE, Generic

            if agqpersonal:eff_date >= 09.01.2012 and
               agqendorse1:limit[1] = 0 and
               agqpersonal:line_of_business one of 4 then
                begin
                if agqendorse1:app_no <> agqpersonal:app_no then
                    begin
                    add agqendorse1
                        begin
                        agqendorse1:app_no   = agqpersonal:app_no
                        agqendorse1:prem_no  = agqpersonal:prem_no
                        agqendorse1:build_no = agqpersonal:build_no
                        agqendorse1:code     = l_code/raw
                        agqendorse1:sub_code = 10
                        agqendorse1:limit[1] = sfsoptend:limit[1]
                        end
                    end
                else
                    begin
                    change agqendorse1
                        begin
                        agqendorse1:limit[1] = sfsoptend:limit[1]
                        end
                    end
                end

            l_limit = agqendorse1:limit[1]
            access plssal01, set plssal01:company_id       = agqpersonal:company_id,
                                 plssal01:state            = agqpersonal:state,
                                 plssal01:line_of_business = agqpersonal:line_of_business,
                                 plssal01:form             = agqpersonal:form,
                                 plssal01:limit            = l_limit, generic

            l_sal01_rated = "N"
            while plssal01:company_id       = agqpersonal:company_id and
                  plssal01:state            = agqpersonal:state and
                  plssal01:line_of_business = agqpersonal:line_of_business and
                  plssal01:form             = agqpersonal:form and
                  plssal01:limit            = l_limit
                begin
                if (agqpersonal:eff_date >= plssal01:eff_date and
                   (agqpersonal:eff_date <= plssal01:exp_date or
                   plssal01:exp_date = 0)) then
                    begin
                    l_end_premium1 = plssal01:charge
                    l_sal01_rated  = "Y"
                    end

                next plssal01
                end

            if l_sal01_rated = "N" then
                begin
                Switch(agqpersonal:FORM)
                  Case 4  : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
                  Case 6  : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[3]
                  Default : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
                  End

                If agqendorse1:LIMIT[1] > SFSOPTEND:LIMIT[1] Then
                    l_end_premium1 = (l_end_premium1 +
                                     (((agqendorse1:limit[1] -
                                     sfsoptend:limit[1]) divide
                                     sfsoptend:limit[4]) *
                                     sfsoptend:premium_1[4]))
                end

            End

        If L_CODE one of "SAL02", "SAL04" then
            L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]

        if l_code = "MPL122" then
            begin
            if sfsoptend:limit[1] = agqpersonal:liability_limit then
                l_end_premium1 = sfsoptend:premium_1[1]
            if sfsoptend:limit[2] = agqpersonal:liability_limit then
                l_end_premium1 = sfsoptend:premium_1[2]
            end

        If L_CODE one of "MPL18", "FPL18", "MPL53", "MPL54", "MPL13" then
            L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]

        If L_CODE = "MDL62" Then
            Begin
            Switch(agqPERSONAL:MEDICAL_LIMIT)
              Case 2000 : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
              Case 3000 : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
              Case 5000 : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[3]
              End
            End

        If L_CODE one of "MPL17", "MPL96", "MPL46" Then
            Begin
            Access agqendorse1, Set agqendorse1:app_no = agqPERSONAL:app_no,
                                   agqendorse1:PREM_NO =agqPERSONAL:PREM_NO,
                                   agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                                   agqendorse1:CODE = L_CODE, Generic

            If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[1] Then
                L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
            Else
            If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[2] Then
                L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
            Else
            If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[3] Then
                L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[3]
            Else
            If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[4] Then
                L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[4]
            End

        If L_CODE = "MPL123" Then
            Begin
            Access agqDAYCARE, Set agqDAYCARE:app_no = agqPERSONAL:app_no,
                                   agqDAYCARE:PREM_NO =agqPERSONAL:PREM_NO,
                                   agqDAYCARE:BUILD_NO = agqPERSONAL:BUILD_NO, generic

            If agqDAYCARE:liability_limit = SFSOPTEND:LIMIT[1] Then
                L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
            Else
            If agqDAYCARE:liability_limit = SFSOPTEND:LIMIT[2] Then
                L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
            end

        If L_CODE = "MPL97" Then
            Begin
            Access agqendorse1, Set agqendorse1:app_no   = agqPERSONAL:app_no,
                                    agqendorse1:PREM_NO  = agqPERSONAL:PREM_NO,
                                    agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                                    agqendorse1:CODE     = L_CODE, Generic

            switch(agqpersonal:form)
              case 4    : If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[4] Then
                              L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[4]
                          Else
                          If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[5] Then
                              L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[5]
                          Else
                          If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[6] Then
                              L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[6]
              default   : If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[1] Then
                              L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
                          Else
                          If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[2] Then
                              L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
                          Else
                          If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[3] Then
                              L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[3]
              end
            End

        If L_CODE = "MPL125" Then
            Begin
            Access agqendorse1, Set agqendorse1:app_no = agqPERSONAL:app_no,
                                   agqendorse1:PREM_NO =agqPERSONAL:PREM_NO,
                                   agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                                   agqendorse1:CODE = L_CODE, Generic

            switch(agqpersonal:form)
              case 4    : If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[2] Then
                              L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
              default   : If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[1] Then
                              L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
              end
            End

        If L_CODE one of "MPL127", "SAL127" Then
            Begin
            Access agqendorse1, Set agqendorse1:app_no = agqPERSONAL:app_no,
                                   agqendorse1:PREM_NO =agqPERSONAL:PREM_NO,
                                   agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                                   agqendorse1:CODE = L_CODE, Generic

            l_end_premium1 = 0
            If agqendorse1:option[1] = 1 Then
                begin
                if agqendorse1:no_of_items[1] = 0 then
                    l_end_premium1 = l_end_premium1 +
                                     sfsoptend:premium_1[1]
                else
                    L_END_PREMIUM1 = (l_end_premium1 +
                                     (SFSOPTEND:PREMIUM_1[1] *
                                     agqendorse1:no_of_items[1]))
                end

            If agqendorse1:option[2] = 1 Then
                begin
                if agqendorse1:no_of_items[2] = 0 then
                    l_end_premium1 = l_end_premium1 +
                                     sfsoptend:premium_1[2]
                else
                    L_END_PREMIUM1 = (l_end_premium1 +
                                     (SFSOPTEND:PREMIUM_1[2] *
                                     agqendorse1:no_of_items[2]))
                end

            If agqendorse1:option[3] = 1 Then
                begin
                if agqendorse1:no_of_items[3] = 0 then
                    l_end_premium1 = l_end_premium1 +
                                     sfsoptend:premium_1[3]
                else
                    L_END_PREMIUM1 = (l_end_premium1 +
                                     (SFSOPTEND:PREMIUM_1[3] *
                                     agqendorse1:no_of_items[3]))
                end

            If agqendorse1:option[4] = 1 Then
                begin
                if agqendorse1:no_of_items[4] = 0 then
                    l_end_premium1 = l_end_premium1 +
                                     sfsoptend:premium_1[4]
                else
                    L_END_PREMIUM1 = (l_end_premium1 +
                                     (SFSOPTEND:PREMIUM_1[4] *
                                     agqendorse1:no_of_items[4]))
                end

            If agqendorse1:option[5] = 1 Then
                begin
                if agqendorse1:no_of_items[5] = 0 then
                    l_end_premium1 = l_end_premium1 +
                                     sfsoptend:premium_1[5]
                else
                    L_END_PREMIUM1 = (l_end_premium1 +
                                     (SFSOPTEND:PREMIUM_1[5] *
                                     agqendorse1:no_of_items[5]))
                end

            If agqendorse1:option[6] = 1 Then
                begin
                if agqendorse1:no_of_items[6] = 0 then
                    l_end_premium1 = l_end_premium1 +
                                     sfsoptend:premium_1[6]
                else
                    L_END_PREMIUM1 = (l_end_premium1 +
                                     (SFSOPTEND:PREMIUM_1[6] *
                                     agqendorse1:no_of_items[6]))
                end

            If agqendorse1:option[7] = 1 Then
                begin
                if agqendorse1:no_of_items[7] = 0 then
                    l_end_premium1 = l_end_premium1 +
                                     sfsoptend:premium_1[7]
                else
                    L_END_PREMIUM1 = (l_end_premium1 +
                                     (SFSOPTEND:PREMIUM_1[7] *
                                     agqendorse1:no_of_items[7]))
                end

            If agqendorse1:option[8] = 1 Then
                begin
                if agqendorse1:no_of_items[8] = 0 then
                    l_end_premium1 = l_end_premium1 +
                                     sfsoptend:premium_1[8]
                else
                L_END_PREMIUM1 = (l_end_premium1 +
                                 (SFSOPTEND:PREMIUM_1[8] *
                                 agqendorse1:no_of_items[8]))
                end

            If agqendorse1:option[9] = 1 Then
                begin
                if agqendorse1:no_of_items[9] = 0 then
                    l_end_premium1 = l_end_premium1 +
                                     sfsoptend:premium_1[9]
                else
                L_END_PREMIUM1 = (l_end_premium1 +
                                 (SFSOPTEND:PREMIUM_1[9] *
                                 agqendorse1:no_of_items[9]))
                end

            End

        If L_CODE = "MPL16" Then
            Begin
            Access agqdesc1, Set agqdesc1:app_no = agqPERSONAL:app_no,
                                agqdesc1:PREM_NO =agqPERSONAL:PREM_NO,
                                agqdesc1:BUILD_NO = agqPERSONAL:BUILD_NO,
                                agqdesc1:CODE = L_CODE, Generic

            L_END_PREMIUM1 = 0
            Repeat Begin
                Exit If agqdesc1:app_no <> agqPERSONAL:app_no Or
                        agqdesc1:PREM_NO <> agqPERSONAL:PREM_NO Or
                        agqdesc1:BUILD_NO <> agqPERSONAL:BUILD_NO Or
                        agqdesc1:CODE <> L_CODE

            L_MPL16_PREMIUM = 0
--            If agqdesc1:OPTION = "A" And
--               L_END_PREMIUM1 <> 0 Then
--                L_MPL16_PREMIUM = ((agqdesc1:LIMIT Divide L_END_LIMIT) *
--                                  L_END_PREMIUM1)
            If agqdesc1:TOTAL_PREMIUM <> 0 Then
                L_END_PREMIUM1 = L_END_PREMIUM1 + agqdesc1:TOTAL_PREMIUM +
                                 L_MPL16_PREMIUM
            Next agqdesc1
            End

            End

        If L_CODE = "MPL58" Then
            Begin
            Access agqendorse1, Set agqendorse1:app_no = agqPERSONAL:app_no,
                                   agqendorse1:PREM_NO =agqPERSONAL:PREM_NO,
                                   agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                                   agqendorse1:CODE = L_CODE, Generic

            If agqendorse1:PREMIUM[1] <> 0 Then
                L_END_PREMIUM1 = agqendorse1:PREMIUM[1]
            End

        If L_CODE = "MPL19" Then
            Begin
            Access agqOUTBOARD, Set agqOUTBOARD:app_no = agqPERSONAL:app_no,
                                    agqOUTBOARD:PREM_NO = agqPERSONAL:PREM_NO,
                                    agqOUTBOARD:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

            If agqOUTBOARD:DEDUCTIBLE_TYPE = 1 Then
                L_END_PREMIUM1 = (SFSOPTEND:PREMIUM_1[1] * ((agqOUTBOARD:LIMIT[1]
                                 + agqOUTBOARD:LIMIT[2] + agqOUTBOARD:LIMIT[3] +
                                 agqOUTBOARD:LIMIT[4]) Divide 1000))
            If agqOUTBOARD:DEDUCTIBLE_TYPE = 2 Then
                L_END_PREMIUM1 = (SFSOPTEND:PREMIUM_1[2] * ((agqOUTBOARD:LIMIT[1]
                                 + agqOUTBOARD:LIMIT[2] + agqOUTBOARD:LIMIT[3] +
                                 agqOUTBOARD:LIMIT[4]) Divide 1000))
            If agqOUTBOARD:LAKES = 1 Then
                L_END_PREMIUM1 = L_END_PREMIUM1 * SFSOPTEND:PREMIUM_1[3]
            End

        If L_CODE = "MPL32" Then
            Begin
            Access agqSTRUCTURES, Set agqSTRUCTURES:app_no = agqPERSONAL:app_no,
                                      agqSTRUCTURES:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqSTRUCTURES:BUILD_NO = agqPERSONAL:BUILD_NO,
                                      agqSTRUCTURES:CODE = L_CODE, Generic

            L_LIMIT = agqSTRUCTURES:LIMIT[1] + agqSTRUCTURES:LIMIT[2] +
                      agqSTRUCTURES:LIMIT[3] + agqSTRUCTURES:LIMIT[4]

            L_END_PREMIUM1 = ((L_LIMIT Divide SFSOPTEND:LIMIT[1])
                             * SFSOPTEND:PREMIUM_1[1])
            End

        If L_CODE = "MPL33" Then
            Begin
            Access agqSTRUCTURES, Set agqSTRUCTURES:app_no = agqPERSONAL:app_no,
                                      agqSTRUCTURES:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqSTRUCTURES:BUILD_NO = agqPERSONAL:BUILD_NO,
                                      agqSTRUCTURES:CODE = L_CODE, Generic

            L_END_PREMIUM1 = 0
            Switch(agqSTRUCTURES:BARNS[1])
              Case "B" : Switch(agqSTRUCTURES:OPTION[1])
                           Case "A" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[1]
                                                       Divide SFSOPTEND:LIMIT[1])
                                                       * SFSOPTEND:PREMIUM_1[1]))
                           Case "B" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[1]
                                                       Divide SFSOPTEND:LIMIT[2])
                                                       * SFSOPTEND:PREMIUM_1[2]))
                           Case "C" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[1]
                                                       Divide SFSOPTEND:LIMIT[3])
                                                       * SFSOPTEND:PREMIUM_1[3]))
                           End
              Default  :   Switch(agqSTRUCTURES:OPTION[1])
                           Case "A" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[1]
                                                       Divide SFSOPTEND:LIMIT[4])
                                                       * SFSOPTEND:PREMIUM_1[4]))
                           Case "B" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[1]
                                                       Divide SFSOPTEND:LIMIT[5])
                                                       * SFSOPTEND:PREMIUM_1[5]))
                           Case "C" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[1]
                                                       Divide SFSOPTEND:LIMIT[6])
                                                       * SFSOPTEND:PREMIUM_1[6]))
                           End
              End
            Switch(agqSTRUCTURES:BARNS[2])
              Case "B" : Switch(agqSTRUCTURES:OPTION[2])
                           Case "A" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[2]
                                                       Divide SFSOPTEND:LIMIT[1])
                                                       * SFSOPTEND:PREMIUM_1[1]))
                           Case "B" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[2]
                                                       Divide SFSOPTEND:LIMIT[2])
                                                       * SFSOPTEND:PREMIUM_1[2]))
                           Case "C" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[2]
                                                       Divide SFSOPTEND:LIMIT[3])
                                                       * SFSOPTEND:PREMIUM_1[3]))
                           End
              Default  :   Switch(agqSTRUCTURES:OPTION[2])
                           Case "A" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[2]
                                                       Divide SFSOPTEND:LIMIT[4])
                                                       * SFSOPTEND:PREMIUM_1[4]))
                           Case "B" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[2]
                                                       Divide SFSOPTEND:LIMIT[5])
                                                       * SFSOPTEND:PREMIUM_1[5]))
                           Case "C" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[2]
                                                       Divide SFSOPTEND:LIMIT[6])
                                                       * SFSOPTEND:PREMIUM_1[6]))
                           End
              End
            Switch(agqSTRUCTURES:BARNS[3])
              Case "B" : Switch(agqSTRUCTURES:OPTION[3])
                           Case "A" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[3]
                                                       Divide SFSOPTEND:LIMIT[1])
                                                       * SFSOPTEND:PREMIUM_1[1]))
                           Case "B" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[3]
                                                       Divide SFSOPTEND:LIMIT[2])
                                                       * SFSOPTEND:PREMIUM_1[2]))
                           Case "C" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[3]
                                                       Divide SFSOPTEND:LIMIT[3])
                                                       * SFSOPTEND:PREMIUM_1[3]))
                           End
              Default  :   Switch(agqSTRUCTURES:OPTION[3])
                           Case "A" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[3]
                                                       Divide SFSOPTEND:LIMIT[4])
                                                       * SFSOPTEND:PREMIUM_1[4]))
                           Case "B" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[3]
                                                       Divide SFSOPTEND:LIMIT[5])
                                                       * SFSOPTEND:PREMIUM_1[5]))
                           Case "C" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[3]
                                                       Divide SFSOPTEND:LIMIT[6])
                                                       * SFSOPTEND:PREMIUM_1[6]))
                           End
              End
            Switch(agqSTRUCTURES:BARNS[4])
              Case "B" : Switch(agqSTRUCTURES:OPTION[4])
                           Case "A" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[4]
                                                       Divide SFSOPTEND:LIMIT[1])
                                                       * SFSOPTEND:PREMIUM_1[1]))
                           Case "B" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[4]
                                                       Divide SFSOPTEND:LIMIT[2])
                                                       * SFSOPTEND:PREMIUM_1[2]))
                           Case "C" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[4]
                                                       Divide SFSOPTEND:LIMIT[3])
                                                       * SFSOPTEND:PREMIUM_1[3]))
                           End
              Default  :   Switch(agqSTRUCTURES:OPTION[4])
                           Case "A" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[4]
                                                       Divide SFSOPTEND:LIMIT[4])
                                                       * SFSOPTEND:PREMIUM_1[4]))
                           Case "B" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[4]
                                                       Divide SFSOPTEND:LIMIT[5])
                                                       * SFSOPTEND:PREMIUM_1[5]))
                           Case "C" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[4]
                                                       Divide SFSOPTEND:LIMIT[6])
                                                       * SFSOPTEND:PREMIUM_1[6]))
                           End
              End

            End

        If L_CODE = "MPL41" Then
            Begin
            L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
            End

/*        If L_CODE = "MPL47" Then
            Begin
            If SFSLINE:LOB_CODE = "DWELLING" Then
                L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
            Else
                Begin
                Switch(agqPERSONAL:FORM)
                  Case 4  : L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
                  Case 6  : L_END_FACTOR = SFSOPTEND:PREMIUM_1[2]
                  Case 2  : L_END_FACTOR = SFSOPTEND:PREMIUM_1[3]
                  Default : L_END_FACTOR = SFSOPTEND:PREMIUM_1[4]
                  End
                End
            End*/

        If L_CODE = "MPL48" Then
            Begin
            L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
            L_END_FACTOR = SFSOPTEND:PREMIUM_1[3]
            L_END_LIMIT = SFSOPTEND:LIMIT[1]
            End

        If L_CODE one of "MDW28", "MDW85" Then
            Begin
            L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
            End

        If L_CODE = "MDW25" Then
            Begin
            L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
            End

/*        If L_CODE = "MPL49" Then
            Begin
            If SFSLINE:LOB_CODE = "DWELLING" Then
               L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
            Else
                Begin
                Switch(agqPERSONAL:FORM)
                  Case 4  : L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
                  Case 6  : L_END_FACTOR = SFSOPTEND:PREMIUM_1[2]
                  Case 2  : L_END_FACTOR = SFSOPTEND:PREMIUM_1[3]
                  Default : L_END_FACTOR = SFSOPTEND:PREMIUM_1[4]
                  End
                End
            End*/

        If L_CODE = "MBO80" Then
            L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]

        If L_CODE = "MBO82" Or
           L_CODE = "MBO84" Or
           L_CODE = "MBO81" Then
            L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]

        If L_CODE = "MPL52" Then
            Begin
            Access agqSTRUCTURES, Set agqSTRUCTURES:app_no = agqPERSONAL:app_no,
                                      agqSTRUCTURES:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqSTRUCTURES:BUILD_NO = agqPERSONAL:BUILD_NO,
                                      agqSTRUCTURES:CODE = L_CODE, Generic

            L_LIMIT = agqSTRUCTURES:LIMIT[1] + agqSTRUCTURES:LIMIT[2]

            L_END_PREMIUM1 = ((L_LIMIT Divide SFSOPTEND:LIMIT[1])
                             * SFSOPTEND:PREMIUM_1[1])

            L_RECORD_KEY = "LR"
            L_COMPANY_ID = agqpersonal:COMPANY_ID
            L_STATE = agqPERSONAL:STATE
            L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
            L_LIABILITY_LIMIT = agqPERSONAL:LIABILITY_LIMIT
            L_MEDICAL_LIMIT = agqPERSONAL:MEDICAL_LIMIT

            Include "plsliabrates.pro"

            If agqSTRUCTURES:DESCRIPTION[1] <> "" Then
                L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_1
            If agqSTRUCTURES:DESCRIPTION[2] <> "" Then
                L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_1
            If agqSTRUCTURES:DESCRIPTION[3] <> "" Then
                L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_2
            If agqSTRUCTURES:DESCRIPTION[4] <> "" Then
                L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_3
            If agqSTRUCTURES:NAME[2] <> "" Then
                L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_4

            Access agqSTRUCTLOC, Set agqSTRUCTLOC:app_no = agqPERSONAL:app_no,
                                     agqSTRUCTLOC:PREM_NO = agqPERSONAL:PREM_NO,
                                     agqSTRUCTLOC:BUILD_NO = agqPERSONAL:BUILD_NO,
                                     agqSTRUCTLOC:CODE = L_CODE, Generic

            Repeat Begin
                Exit If agqSTRUCTLOC:app_no <> agqPERSONAL:app_no Or
                        agqSTRUCTLOC:PREM_NO <> agqPERSONAL:PREM_NO Or
                        agqSTRUCTLOC:BUILD_NO <> agqPERSONAL:BUILD_NO Or
                        agqSTRUCTLOC:CODE <> L_CODE

                Switch(agqSTRUCTLOC:NO_UNITS)
                  Case 1  : L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_5
                  Case 2  : L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_6
                  Case 3  : L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_7
                  Default : L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_8
                  End

                Next agqSTRUCTLOC
                End
            End

       If L_CODE = "MPL38" Then
            Begin
            L_END_PREMIUM1 = 0
            Access agqHOMEBUS, Set agqHOMEBUS:app_no = agqPERSONAL:app_no,
                                   agqHOMEBUS:PREM_NO = agqPERSONAL:PREM_NO,
                                   agqHOMEBUS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

            Repeat Begin
                Exit If agqHOMEBUS:app_no <> agqPERSONAL:app_no Or
                        agqHOMEBUS:PREM_NO <> agqPERSONAL:PREM_NO Or
                        agqHOMEBUS:BUILD_NO <> agqPERSONAL:BUILD_NO

                Change agqHOMEBUS
                    Begin
                    agqHOMEBUS:HOME_BUS_TOTAL = 0
                    End

                L_RECORD_KEY = "HB"
                L_COMPANY_ID = agqpersonal:COMPANY_ID
                L_STATE = agqPERSONAL:STATE
                L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
                L_PROTECTION = agqPERSONAL:PROTECTION
                if l_protection = 4 and
                   sfscompany:boiler_rating = 1 then
                    l_protection = 1
                access agqpersonal2, set agqpersonal2:app_no = g_app_no, generic

                if agqpersonal2:fire_safe_score <= 5 then
                    l_protection = 1
                else
                if agqpersonal2:fire_safe_score => 6 and
                   agqpersonal2:fire_safe_score <= 9 then
                    l_protection = 2
                else
                if agqpersonal2:fire_safe_score = 10 then
                    l_protection = 3
                else
                if agqpersonal2:fire_safe_score = 11 then
                    l_protection = 1

                L_CONSTRUCTION = agqPERSONAL:CONSTRUCTION
                L_HOME_RES_PROP = agqHOMEBUS:RESIDENCE_PREMISES_LIMIT
                L_HOME_PROP_OTHERS = agqHOMEBUS:PERSONAL_PROPERTY_LIMIT
                L_LOSS_INCOME_LIMIT = agqHOMEBUS:LOSS_INCOME_LIMIT
                L_MPL56 = agqHOMEBUS:MPL56

                Include "plshomebus.pro"

                -- related structures used for home business
                If agqHOMEBUS:STRUCTURE_LIMIT <> 0 Then
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:STRUCTURES_PREMIUM = ((agqHOMEBUS:STRUCTURE_LIMIT
                                                        Divide
                                                        L_HOME_STRUCT_PER)
                                                        * L_HOME_STRUCT_RATE)
                        agqHOMEBUS:HOME_BUS_TOTAL = agqHOMEBUS:HOME_BUS_TOTAL +
                                                    agqHOMEBUS:STRUCTURES_PREMIUM
                        L_END_PREMIUM1 = L_END_PREMIUM1 +
                                         agqHOMEBUS:STRUCTURES_PREMIUM
                        End
                    Else
                        Change agqHOMEBUS
                            Begin
                            agqHOMEBUS:STRUCTURES_PREMIUM = 0
                            End

                -- property while at residence premises
                If agqHOMEBUS:RESIDENCE_PREMISES_LIMIT <> 0 And
                   agqHOMEBUS:RESIDENCE_PREMISES_LIMIT <= L_HOME_PROPERTY_OVER_LIMIT Then
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:RESIDENCE_PREM_PREMIUM  = (((agqHOMEBUS:RESIDENCE_PREMISES_LIMIT
                                                             Divide
                                                             L_HOME_PER_PROP_PER)
                                                             * L_HOME_PER_PROP_RATE)
                                                             + L_HOME_RES_PROP_CHARGE)
                        agqHOMEBUS:HOME_BUS_TOTAL = agqHOMEBUS:HOME_BUS_TOTAL +
                                                    agqHOMEBUS:RESIDENCE_PREM_PREMIUM
                        L_END_PREMIUM1 = L_END_PREMIUM1 +
                                         agqHOMEBUS:RESIDENCE_PREM_PREMIUM
                       End
                Else
                If agqHOMEBUS:RESIDENCE_PREMISES_LIMIT <> 0 And
                   agqHOMEBUS:RESIDENCE_PREMISES_LIMIT > L_HOME_PROPERTY_OVER_LIMIT Then
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:HOME_BUS_TOTAL = agqHOMEBUS:HOME_BUS_TOTAL +
                                                    agqHOMEBUS:RESIDENCE_PREM_PREMIUM
                        L_END_PREMIUM1 = L_END_PREMIUM1 +
                                         agqHOMEBUS:RESIDENCE_PREM_PREMIUM
                        End
                Else
                If agqHOMEBUS:RESIDENCE_PREMISES_LIMIT = 0 Then
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:RESIDENCE_PREM_PREMIUM = 0
                        End
                -- personal property of others
                If agqHOMEBUS:PERSONAL_PROPERTY_LIMIT <> L_HOME_PER_PROP_BASIC And
                   agqHOMEBUS:PERSONAL_PROPERTY_LIMIT <= L_HOME_PROPERTY_OVER_LIMIT Then
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:PERSONAL_PROP_PREMIUM = ((((agqHOMEBUS:PERSONAL_PROPERTY_LIMIT -
                                                           L_HOME_PER_PROP_BASIC)
                                                           Divide
                                                           L_HOME_PER_PROP_PER)
                                                           * L_HOME_PER_PROP_RATE)
                                                           + L_HOME_PER_PROP_CHARGE)
                        agqHOMEBUS:HOME_BUS_TOTAL = agqHOMEBUS:HOME_BUS_TOTAL +
                                                    agqHOMEBUS:PERSONAL_PROP_PREMIUM
                        L_END_PREMIUM1 = L_END_PREMIUM1 +
                                         agqHOMEBUS:PERSONAL_PROP_PREMIUM
                        End
                Else
                If agqHOMEBUS:PERSONAL_PROPERTY_LIMIT > L_HOME_PROPERTY_OVER_LIMIT Then
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:HOME_BUS_TOTAL = agqHOMEBUS:HOME_BUS_TOTAL +
                                                    agqHOMEBUS:PERSONAL_PROP_PREMIUM
                        L_END_PREMIUM1 = L_END_PREMIUM1 +
                                         agqHOMEBUS:PERSONAL_PROP_PREMIUM
                        End
                Else
                If agqHOMEBUS:PERSONAL_PROPERTY_LIMIT = L_HOME_PER_PROP_BASIC Then
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:PERSONAL_PROP_PREMIUM = 0
                        End

               -- deductible and wind deductible factors
                If L_DEDUCTIBLE <> PLSHOMEBUS:DEDUCTIBLE Or
                   agqPERSONAL:WIND_DEDUCTIBLE <> 0 Then
                    Change agqHOMEBUS
                        Begin
                        If L_WIND_DEDUCT_CHARGE = 0 Then
                            L_WIND_DEDUCT_CHARGE = 1.00
                        agqHOMEBUS:DEDUCTIBLE_PREMIUM = ((agqHOMEBUS:HOME_BUS_TOTAL *
                                                        L_DEDUCTIBLE_CHARGE *
                                                        L_WIND_DEDUCT_CHARGE) -
                                                        agqHOMEBUS:HOME_BUS_TOTAL)
                        L_END_PREMIUM1 = L_END_PREMIUM1 +
                                         agqHOMEBUS:DEDUCTIBLE_PREMIUM
                        agqHOMEBUS:HOME_BUS_TOTAL = agqHOMEBUS:HOME_BUS_TOTAL +
                                                    agqHOMEBUS:DEDUCTIBLE_PREMIUM
                        End
                    Else
                        Change agqHOMEBUS
                            Begin
                            agqHOMEBUS:DEDUCTIBLE_PREMIUM = 0
                            End

                -- loss of income and extra expense
                Change agqHOMEBUS
                    Begin
                    agqHOMEBUS:LOSS_INCOME_PREMIUM = ((agqHOMEBUS:HOME_BUS_TOTAL *
                                                     L_LOSS_INCOME_FACTOR) -
                                                     agqHOMEBUS:HOME_BUS_TOTAL)
                    agqHOMEBUS:HOME_BUS_TOTAL =  agqHOMEBUS:HOME_BUS_TOTAL +
                                                 agqHOMEBUS:LOSS_INCOME_PREMIUM
                    L_END_PREMIUM1 = L_END_PREMIUM1 +
                                     agqHOMEBUS:LOSS_INCOME_PREMIUM
                    End
                -- accounts receivable
                If agqHOMEBUS:AR_LIMIT <> L_HOME_AR_LIMIT Then
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:AR_PREMIUM = (((agqHOMEBUS:AR_LIMIT -
                                                L_HOME_AR_LIMIT) Divide
                                                L_HOME_AR_PER) * L_HOME_PER_PROP_RATE
                                                * L_HOME_AR_FACTOR)
                        L_END_PREMIUM1 = L_END_PREMIUM1 +
                                         agqHOMEBUS:AR_PREMIUM
                        agqHOMEBUS:HOME_BUS_TOTAL = agqHOMEBUS:HOME_BUS_TOTAL
                                                    + agqHOMEBUS:AR_PREMIUM
                        End
                    Else
                        Change agqHOMEBUS
                            Begin
                            agqHOMEBUS:AR_PREMIUM = 0
                            End
                -- valuable papers
                If agqHOMEBUS:VALUABLE_PAPERS_LIMIT <> L_HOME_VALUE_LIMIT Then
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:VALUABLE_PAPERS_PREMIUM =
                                               (((agqHOMEBUS:VALUABLE_PAPERS_LIMIT -
                                                L_HOME_VALUE_LIMIT) Divide
                                                L_HOME_VALUE_PER) * L_HOME_PER_PROP_RATE
                                                * L_HOME_VALUE_FACTOR)
                        L_END_PREMIUM1 = L_END_PREMIUM1 +
                                         agqHOMEBUS:VALUABLE_PAPERS_PREMIUM
                        agqHOMEBUS:HOME_BUS_TOTAL = agqHOMEBUS:HOME_BUS_TOTAL +
                                                    agqHOMEBUS:VALUABLE_PAPERS_PREMIUM
                        End
                    Else
                        Change agqHOMEBUS
                            Begin
                            agqHOMEBUS:VALUABLE_PAPERS_PREMIUM = 0
                            End

                -- money on/off
                If agqHOMEBUS:MONEY_ON_LIMIT <> L_HOME_MONEY_LIMIT_1 Then
                    Change agqHOMEBUS
                        Begin
                        If agqHOMEBUS:MONEY_ON_LIMIT = L_HOME_MONEY_LIMIT_3 Then
                            agqHOMEBUS:MONEY_PREMIUM = L_HOME_MONEY_CHARGE_1
                        Else
                        If agqHOMEBUS:MONEY_ON_LIMIT = L_HOME_MONEY_LIMIT_4 Then
                            agqHOMEBUS:MONEY_PREMIUM = L_HOME_MONEY_CHARGE_2
                        L_END_PREMIUM1 = L_END_PREMIUM1 +
                                         agqHOMEBUS:MONEY_PREMIUM
                        agqHOMEBUS:HOME_BUS_TOTAL = agqHOMEBUS:HOME_BUS_TOTAL +
                                                    agqHOMEBUS:MONEY_PREMIUM
                        End
                    Else
                        Change agqHOMEBUS
                            Begin
                            agqHOMEBUS:MONEY_PREMIUM = 0
                            End

                -- liability charge
                If agqPERSONAL:LIABILITY_LIMIT = L_HOME_LIABILITY_1 Or
                   agqPERSONAL:LIABILITY_LIMIT = L_HOME_LIABILITY_2 Then
                    Change agqHOMEBUS
                        Begin
                        If agqPERSONAL:LIABILITY_LIMIT = L_HOME_LIABILITY_1 Then
                            agqHOMEBUS:LIABILITY_PREMIUM = (L_HOME_LIABILITY_CHARGE_1 +
                                                           ((agqHOMEBUS:HOME_BUS_TOTAL *
                                                           L_HOME_LIABILITY_FACTOR_1) -
                                                           agqHOMEBUS:HOME_BUS_TOTAL))
                        Else
                        If agqPERSONAL:LIABILITY_LIMIT = L_HOME_LIABILITY_2 Then
                            agqHOMEBUS:LIABILITY_PREMIUM = (L_HOME_LIABILITY_CHARGE_2 +
                                                           ((agqHOMEBUS:HOME_BUS_TOTAL *
                                                           L_HOME_LIABILITY_FACTOR_2) -
                                                           agqHOMEBUS:HOME_BUS_TOTAL))
                        agqHOMEBUS:HOME_BUS_TOTAL = agqHOMEBUS:HOME_BUS_TOTAL +
                                                    agqHOMEBUS:LIABILITY_PREMIUM
                        L_END_PREMIUM1 = L_END_PREMIUM1 +
                                         agqHOMEBUS:LIABILITY_PREMIUM
                        End
                Else
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:LIABILITY_PREMIUM = 0
                        End

                -- minimum premium
                If L_END_PREMIUM1 < L_HOME_MIN_PREM Then
                    Begin
                    L_END_PREMIUM1 = L_HOME_MIN_PREM
                    L_agqEND_MINIMUM_PREMIUM = "Y"
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:HOME_BUS_TOTAL = L_HOME_MIN_PREM
                        agqHOMEBUS:MINIMUM_PREMIUM_APPLIES = "Y"
                        End

                    End
                Else
                    Begin
                    L_agqEND_MINIMUM_PREMIUM = "N"
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:MINIMUM_PREMIUM_APPLIES = "N"
                        End
                    End

                Next agqHOMEBUS
                End
            End

        If L_CODE = "MPL26" Then
            Begin
            L_RECORD_KEY = "LR"
            L_COMPANY_ID = agqPERSONAL:COMPANY_ID
            L_STATE = agqPERSONAL:STATE
            L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
            L_LIABILITY_LIMIT = agqPERSONAL:LIABILITY_LIMIT
            L_MEDICAL_LIMIT = agqPERSONAL:MEDICAL_LIMIT

            Include "plsliabrates.pro"

            Access agqADDPREM, Set agqADDPREM:app_no = agqPERSONAL:app_no,
                                   agqADDPREM:PREM_NO = agqPERSONAL:PREM_NO,
                                   agqADDPREM:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

            L_END_PREMIUM1 = 0
            Repeat Begin
                Exit If agqADDPREM:app_no <> agqPERSONAL:app_no Or
                        agqADDPREM:PREM_NO <> agqPERSONAL:PREM_NO Or
                        agqADDPREM:BUILD_NO <> agqPERSONAL:BUILD_NO

                Switch(agqADDPREM:NO_UNITS)
                  Case 1  : L_END_PREMIUM1 = L_LIABILITY_CHARGE_1 + L_END_PREMIUM1
                  Case 2  : L_END_PREMIUM1 = L_LIABILITY_CHARGE_2 + L_END_PREMIUM1
                  Case 3  : L_END_PREMIUM1 = L_LIABILITY_CHARGE_3 + L_END_PREMIUM1
                  Default : L_END_PREMIUM1 = L_LIABILITY_CHARGE_4 + L_END_PREMIUM1
                  End

                Next agqADDPREM
                End
            End

        If L_CODE = "MPL30" Then
            Begin
            L_RECORD_KEY = "LR"
            L_COMPANY_ID = agqPERSONAL:COMPANY_ID
            L_STATE = agqPERSONAL:STATE
            L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
            L_LIABILITY_LIMIT = agqPERSONAL:LIABILITY_LIMIT
            L_MEDICAL_LIMIT = agqPERSONAL:MEDICAL_LIMIT

            Include "plsliabrates.pro"

            Access agqFARMLIAB, Set agqFARMLIAB:app_no = agqPERSONAL:app_no,
                                    agqFARMLIAB:PREM_NO = agqPERSONAL:PREM_NO,
                                    agqFARMLIAB:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

            If agqFARMLIAB:INITIAL_ACREAGE <> 0 Then
                Begin
                If agqFARMLIAB:INITIAL_ACREAGE >= 1 And
                   agqFARMLIAB:INITIAL_ACREAGE < 161 Then
                    L_END_PREMIUM1 = L_LIABILITY_CHARGE_1
                Else
                If agqFARMLIAB:INITIAL_ACREAGE < 501 Then
                    L_END_PREMIUM1 = L_LIABILITY_CHARGE_2
                Else
                    L_END_PREMIUM1 = L_LIABILITY_CHARGE_3
                End
            If agqFARMLIAB:ADDITIONAL_ACREAGE <> 0 Then
                L_END_PREMIUM1 = (L_END_PREMIUM1 + (L_LIABILITY_CHARGE_4 *
                                 agqFARMLIAB:ADDITIONAL_ACREAGE))
            If agqFARMLIAB:RENTED_WITH_BUILDINGS <> 0 Then
                L_END_PREMIUM1 = (L_END_PREMIUM1 + (L_LIABILITY_CHARGE_5 *
                                 agqFARMLIAB:RENTED_WITH_BUILDINGS))
            If agqFARMLIAB:RENTED_WITHOUT_BUILDINGS <> 0 Then
                L_END_PREMIUM1 = (L_END_PREMIUM1 + (L_LIABILITY_CHARGE_6 *
                                  agqFARMLIAB:RENTED_WITHOUT_BUILDINGS))
            If agqFARMLIAB:GROSS_RECEIPTS <> 0 Then
                L_END_PREMIUM1 = (L_END_PREMIUM1 + ((agqFARMLIAB:GROSS_RECEIPTS
                                Divide 1000) * L_LIABILITY_FACTOR))
            End

        If L_CODE = "MPL35" Then
            Begin
            L_RECORD_KEY = "LR"
            L_COMPANY_ID = agqPERSONAL:COMPANY_ID
            L_STATE = agqPERSONAL:STATE
            L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
            L_LIABILITY_LIMIT = agqPERSONAL:LIABILITY_LIMIT
            L_MEDICAL_LIMIT = agqPERSONAL:MEDICAL_LIMIT

            Include "plsliabrates.pro"

            Access agqFARMLIAB, Set agqFARMLIAB:app_no = agqPERSONAL:app_no,
                                    agqFARMLIAB:PREM_NO = agqPERSONAL:PREM_NO,
                                    agqFARMLIAB:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

            If agqFARMLIAB:ANIMAL_COLLISION = 1 Then
                Begin
                If agqFARMLIAB:NO_ANIMALS >= 1 And
                   agqFARMLIAB:NO_ANIMALS < 101 Then
                    L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_8
                Else
                If agqFARMLIAB:NO_ANIMALS < 251 Then
                    L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_9
                Else
                    L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_10
                End
            End

        If L_CODE = "MPL55" Then
            Begin
            L_RECORD_KEY = "LR"
            L_COMPANY_ID = agqPERSONAL:COMPANY_ID
            L_STATE = agqPERSONAL:STATE
            L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
            L_LIABILITY_LIMIT = agqPERSONAL:LIABILITY_LIMIT
            L_MEDICAL_LIMIT = agqPERSONAL:MEDICAL_LIMIT

            Include "plsliabrates.pro"

            L_END_PREMIUM1 = L_LIABILITY_CHARGE_1
            End

        If L_CODE = "MPL20" Then
            Begin
            L_STATE = agqPERSONAL:STATE
            Access agqWATERCRAFT, Set agqWATERCRAFT:app_no = agqPERSONAL:app_no,
                                      agqWATERCRAFT:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqWATERCRAFT:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

            While agqWATERCRAFT:app_no = agqPERSONAL:app_no And
                  agqWATERCRAFT:PREM_NO = agqPERSONAL:PREM_NO And
                  agqWATERCRAFT:BUILD_NO = agqPERSONAL:BUILD_NO
                    Begin
                    L_WATERCRAFT_TYPE = "O"
                    L_FEET = agqWATERCRAFT:OUTBOARD_FEET
                    Access PLSWATERCRAFT, Set PLSWATERCRAFT:COMPANY_ID = agqpersonal:COMPANY_ID,
                                              PLSWATERCRAFT:STATE = L_STATE ,
                                              PLSWATERCRAFT:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                                              PLSWATERCRAFT:INBOARD_OUTBOARD = L_WATERCRAFT_TYPE,
                                              PLSWATERCRAFT:FEET = L_FEET, Approximate

                    L_FEET = PLSWATERCRAFT:FEET
                    While PLSWATERCRAFT:COMPANY_ID = agqpersonal:COMPANY_ID And
                          PLSWATERCRAFT:STATE = L_STATE And
                          PLSWATERCRAFT:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS And
                          PLSWATERCRAFT:INBOARD_OUTBOARD = L_WATERCRAFT_TYPE And
                          PLSWATERCRAFT:FEET = L_FEET
                            Begin
                            If agqpersonal:EFF_DATE >= PLSWATERCRAFT:EFF_DATE Then
                                Begin
-- outboard motors
                                L_WATERCRAFT = 0
                                L_SUB = 1
                                While L_SUB < 5
                                    Begin
                                    If agqWATERCRAFT:HORSE_POWER[1] >= PLSWATERCRAFT:HORSE_POWER_FROM[L_SUB] And
                                       agqWATERCRAFT:HORSE_POWER[1] <= PLSWATERCRAFT:HORSE_POWER_TO[L_SUB] And
                                       agqWATERCRAFT:HORSE_POWER[1] <> 0 Then
                                        Begin
                                        L_WATERCRAFT_RATE_TO_USE = PLSWATERCRAFT:RATE_TO_USE[L_SUB]
                                        Do GET_WATERCRAFT_RATES
                                        L_WATERCRAFT = L_WATERCRAFT + L_LIABILITY_CHARGE
                                        End
                                    L_SUB = L_SUB + 1
                                    End
                                End
                            Next PLSWATERCRAFT
                            End

                    L_END_PREMIUM1 = L_END_PREMIUM1 + L_WATERCRAFT
                    L_WATERCRAFT_TYPE = "I"
                    L_FEET = agqWATERCRAFT:INBOARD_FEET
                    Access PLSWATERCRAFT, Set PLSWATERCRAFT:COMPANY_ID = agqpersonal:COMPANY_ID,
                                              PLSWATERCRAFT:STATE = L_STATE ,
                                              PLSWATERCRAFT:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                                              PLSWATERCRAFT:INBOARD_OUTBOARD = L_WATERCRAFT_TYPE,
                                              PLSWATERCRAFT:FEET = L_FEET, Approximate

                    L_FEET = PLSWATERCRAFT:FEET
                    While PLSWATERCRAFT:COMPANY_ID = agqpersonal:COMPANY_ID And
                          PLSWATERCRAFT:STATE = L_STATE And
                          PLSWATERCRAFT:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS And
                          PLSWATERCRAFT:INBOARD_OUTBOARD = L_WATERCRAFT_TYPE And
                          PLSWATERCRAFT:FEET = L_FEET
                            Begin
                            If agqpersonal:EFF_DATE >= PLSWATERCRAFT:EFF_DATE Then
                                Begin
-- inboard/inboard-outdrive
                                L_WATERCRAFT = 0
                                L_SUB = 1
                                While L_SUB < 5
                                    Begin
                                    If agqWATERCRAFT:HORSE_POWER[2] >= PLSWATERCRAFT:HORSE_POWER_FROM[L_SUB] And
                                       agqWATERCRAFT:HORSE_POWER[2] <= PLSWATERCRAFT:HORSE_POWER_TO[L_SUB] And
                                       agqWATERCRAFT:HORSE_POWER[2] <> 0 Then
                                        Begin
                                        L_WATERCRAFT_RATE_TO_USE = PLSWATERCRAFT:RATE_TO_USE[L_SUB]
                                        Do GET_WATERCRAFT_RATES
                                        L_WATERCRAFT = L_WATERCRAFT + L_LIABILITY_CHARGE
                                        End

                                    L_SUB = L_SUB + 1
                                    End
                                End

                            Next PLSWATERCRAFT
                            End

                    L_END_PREMIUM1 = L_END_PREMIUM1 + L_WATERCRAFT
                    L_WATERCRAFT_TYPE = "S"
                    L_FEET = agqWATERCRAFT:SAILBOAT_FEET
                    Access PLSWATERCRAFT, Set PLSWATERCRAFT:COMPANY_ID = agqpersonal:COMPANY_ID,
                                              PLSWATERCRAFT:STATE = L_STATE ,
                                              PLSWATERCRAFT:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                                              PLSWATERCRAFT:INBOARD_OUTBOARD = L_WATERCRAFT_TYPE,
                                              PLSWATERCRAFT:FEET = L_FEET, Approximate

                    L_FEET = PLSWATERCRAFT:FEET
                    While PLSWATERCRAFT:COMPANY_ID = agqpersonal:COMPANY_ID And
                          PLSWATERCRAFT:STATE = L_STATE And
                          PLSWATERCRAFT:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS And
                          PLSWATERCRAFT:INBOARD_OUTBOARD = L_WATERCRAFT_TYPE And
                          PLSWATERCRAFT:FEET = L_FEET
                            Begin
                            If agqpersonal:EFF_DATE >= PLSWATERCRAFT:EFF_DATE Then
                                Begin
-- sailboat
                                L_WATERCRAFT = 0
                                If agqWATERCRAFT:DESCRIPTION[5] <> "" Then
                                    Begin
                                    If agqWATERCRAFT:SAILBOAT_POWERED = 1 Then
                                        L_WATERCRAFT_RATE_TO_USE = PLSWATERCRAFT:RATE_TO_USE[1]
                                    Else
                                        L_WATERCRAFT_RATE_TO_USE = PLSWATERCRAFT:RATE_TO_USE[2]
                                    Do GET_WATERCRAFT_RATES
                                    L_WATERCRAFT = L_WATERCRAFT + L_LIABILITY_CHARGE
                                    End
                                End
                            Next PLSWATERCRAFT
                            End

                    L_END_PREMIUM1 = L_END_PREMIUM1 + L_WATERCRAFT
                    L_WATERCRAFT_TYPE = "H"
                    L_FEET = 0
                    Access PLSWATERCRAFT, Set PLSWATERCRAFT:COMPANY_ID = agqpersonal:COMPANY_ID,
                                              PLSWATERCRAFT:STATE = L_STATE ,
                                              PLSWATERCRAFT:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                                              PLSWATERCRAFT:INBOARD_OUTBOARD = L_WATERCRAFT_TYPE,
                                              PLSWATERCRAFT:FEET = L_FEET, Approximate

                    L_FEET = PLSWATERCRAFT:FEET
                    While PLSWATERCRAFT:COMPANY_ID = agqpersonal:COMPANY_ID And
                          PLSWATERCRAFT:STATE = L_STATE And
                          PLSWATERCRAFT:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS And
                          PLSWATERCRAFT:INBOARD_OUTBOARD = L_WATERCRAFT_TYPE And
                          PLSWATERCRAFT:FEET = L_FEET
                            Begin
                            If agqpersonal:EFF_DATE >= PLSWATERCRAFT:EFF_DATE Then
                                Begin
-- houseboat
                                L_WATERCRAFT = 0
                                If agqWATERCRAFT:DESCRIPTION[7] <> "" Then
                                    Begin
                                    If agqWATERCRAFT:HOUSEBOAT_SELF_PROPELLED = 0 Then
                                        L_WATERCRAFT_RATE_TO_USE = PLSWATERCRAFT:RATE_TO_USE[1]
                                    Else
                                        L_WATERCRAFT_RATE_TO_USE = PLSWATERCRAFT:RATE_TO_USE[2]
                                    Do GET_WATERCRAFT_RATES
                                    L_WATERCRAFT = L_WATERCRAFT + L_LIABILITY_CHARGE
                                    End
                                End

                            Next PLSWATERCRAFT
                            End

                    L_END_PREMIUM1 = L_END_PREMIUM1 + L_WATERCRAFT

                    Next agqWATERCRAFT
                    End

            End

        If L_CODE one of "MPL61" Then
            Begin
            Access agqendorse1, Set agqendorse1:app_no = agqPERSONAL:app_no,
                                   agqendorse1:PREM_NO = agqPERSONAL:PREM_NO,
                                   agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                                   agqendorse1:CODE = L_CODE, Generic

            L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
            If agqendorse1:MISC_PREMIUM <> 0 Then
                L_END_PREMIUM1 = agqendorse1:MISC_PREMIUM
            End

        If L_CODE one of "SAL61", "SAL62" Then
            Begin
            Access agqendorse1, Set agqendorse1:app_no = agqPERSONAL:app_no,
                                   agqendorse1:PREM_NO = agqPERSONAL:PREM_NO,
                                   agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                                   agqendorse1:CODE = L_CODE, Generic

            l_end_premium1 = sfsoptend:premium_1[1]
            if agqendorse1:limit[1] > sfsoptend:limit[1] then
                L_END_PREMIUM1 = (l_end_premium1 +
                                 (((agqendorse1:limit[1] -
                                 sfsoptend:limit[1]) divide
                                 sfsoptend:limit[2]) *
                                 sfsoptend:premium_1[2]))
            end

        If L_CODE = "MPL64" Then
            L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]

        If L_CODE = "MPL79" Then
            Begin
            Access agqendorse1, Set agqendorse1:app_no = agqPERSONAL:app_no,
                                   agqendorse1:PREM_NO = agqPERSONAL:PREM_NO,
                                   agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                                   agqendorse1:CODE = L_CODE, Generic

            Switch(agqendorse1:REPLACEMENT_PERCENT)
              Case 70 : L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
              Case 60 : L_END_FACTOR = SFSOPTEND:PREMIUM_1[2]
              Case 50 : L_END_FACTOR = SFSOPTEND:PREMIUM_1[3]
              End
            End

/*        If L_CODE = "MHO45" Or
           L_CODE = "MPL45" Then
            Begin
            L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
            End*/

        If L_CODE = "MPL83" Or
           L_CODE = "MPL78" Then
            Begin
            Access agqWORKERSCOMP, Set agqWORKERSCOMP:app_no = agqPERSONAL:app_no,
                                       agqWORKERSCOMP:PREM_NO = agqPERSONAL:PREM_NO,
                                       agqWORKERSCOMP:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

            L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
            End

        If L_CODE = "MPL89" Then
            Begin
            if sfsline:lob_code one of "HOME" then
                begin
                Switch(agqPERSONAL:CONSTRUCTION)
                  Case 1  : switch(agqpersonal:form)
                              case 4, 6 : begin
                                          L_END_FACTOR = SFSOPTEND:PREMIUM_1[3]
                                          L_END_LIMIT  = SFSOPTEND:LIMIT[3]
                                          end
                              default   : Begin
                                          L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
                                          L_END_LIMIT  = SFSOPTEND:LIMIT[1]
                                          end
                              End
                  Default : switch(agqpersonal:form)
                              case 4, 6 : begin
                                          L_END_FACTOR = SFSOPTEND:PREMIUM_1[4]
                                          L_END_LIMIT  = SFSOPTEND:LIMIT[4]
                                          end
                              default   : Begin
                                          L_END_FACTOR = SFSOPTEND:PREMIUM_1[2]
                                          L_END_LIMIT = SFSOPTEND:LIMIT[2]
                                          end
                              End
                  End
                end
            else
                begin
                Switch(agqPERSONAL:CONSTRUCTION)
                  Case 1  : begin
                            l_end_factor   = sfsoptend:premium_1[1]
                            l_end_factor_1 = sfsoptend:premium_1[3]
                            l_end_limit    = sfsoptend:limit[1]
                            End
                  Default : begin
                            l_end_factor   = sfsoptend:premium_1[2]
                            l_end_factor_1 = sfsoptend:premium_1[4]
                            l_end_limit    = sfsoptend:limit[1]
                            End
                  End
                end

            end

        end

    Next SFSOPTEND
    End

if l_code = "MPL89" then
    begin
    if sfsline:lob_code one of "HOME" then
        begin
        if agqpersonal:form one of 4, 6 then
            l_update_sfpend_premium = ((agqpersonal:contents_limit divide l_end_limit) *
                                      l_end_factor)
        else
            l_update_sfpend_premium = ((agqpersonal:dwelling_limit divide l_end_limit) *
                                      l_end_factor)
        end
    else
        begin
        l_update_sfpend_premium = 0
        if agqpersonal:dwelling_limit <> 0 then
            l_update_sfpend_premium = ((agqpersonal:dwelling_limit divide
                                      l_end_limit) *
                                      l_end_factor)
        if agqpersonal:contents_limit <> 0 then
            l_update_sfpend_premium = (l_update_sfpend_premium +
                                      ((agqpersonal:contents_limit divide
                                      l_end_limit) *
                                      l_end_factor_1))
        end
    end

If L_CODE one of "MPL12", "MPL122", "SAL01", "SAL02", "SAL04", "MPL38", "MDL62", "SAL61", "SAL62", "FPL01", "MPL03" Then
    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1

If L_CODE = "MPL70" Then
    Begin
    L_UPDATE_SFPEND_PREMIUM = L_ALARM_PREMIUM
   End

If L_CODE = "MHO31" Then
    Begin
    L_RECORD_KEY = "LR"
    L_COMPANY_ID = agqPERSONAL:COMPANY_ID
    L_STATE = agqPERSONAL:STATE
    L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
    L_LIABILITY_LIMIT = agqPERSONAL:LIABILITY_LIMIT
    L_MEDICAL_LIMIT = agqPERSONAL:MEDICAL_LIMIT
    L_EFF_DATE = agqpersonal:EFF_DATE

    Include "plsliabrates.pro"

    Access agqendorse1, Set agqendorse1:app_no = agqPERSONAL:app_no,
                            agqendorse1:PREM_NO = agqPERSONAL:PREM_NO,
                            agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                            agqendorse1:CODE = L_CODE, Generic

    Switch(agqendorse1:OPTION[1])
      Case 0  : L_UPDATE_SFPEND_PREMIUM = L_LIABILITY_CHARGE_1
      Default : L_UPDATE_SFPEND_PREMIUM = L_LIABILITY_CHARGE_2
      End

    End

If L_CODE = "MPL15" Then
    Begin
    L_RECORD_KEY = "SP"
    L_COMPANY_ID = agqPERSONAL:COMPANY_ID
    L_STATE = agqPERSONAL:STATE
    L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
    L_EFF_DATE = agqpersonal:EFF_DATE

    Include "plsschedprop.pro"

    Access agqendorse1, Set agqendorse1:app_no = agqPERSONAL:app_no,
                           agqendorse1:PREM_NO = agqPERSONAL:PREM_NO,
                           agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                           agqendorse1:CODE = L_CODE, Generic

    -- cameras
    If agqendorse1:LIMIT[1] <> 0 Then
        Begin
        L_CAMERA_PREMIUM = ((agqendorse1:LIMIT[1] Divide 1000) * L_CAMERAS)
        Change agqendorse1
            Begin
            agqendorse1:PREMIUM[1] = L_CAMERA_PREMIUM
            End
        End

    -- coins
    If agqendorse1:LIMIT[2] <> 0 Then
        Begin
        If agqendorse1:COIN_THEFT = 0 Then
            L_COIN_PREMIUM = ((agqendorse1:LIMIT[2] Divide 1000)
                                       * L_COINS)
        If agqendorse1:COIN_THEFT = 1 Then
            L_COIN_PREMIUM = ((agqendorse1:LIMIT[2] Divide 1000)
                                       * L_COINS_THEFT)
        Change agqendorse1
            Begin
            agqendorse1:PREMIUM[2] = L_COIN_PREMIUM
            End
        End

    -- furs
    If agqendorse1:LIMIT[3] <> 0 Then
        Begin
        L_FURS_PREMIUM = ((agqendorse1:LIMIT[3] Divide 1000) * L_FURS)
        Change agqendorse1
            Begin
            agqendorse1:PREMIUM[3] = L_FURS_PREMIUM
            End
        End

    -- golf equipment
    If agqendorse1:LIMIT[4] <> 0 Then
        Begin
        L_GOLF_PREMIUM = ((agqendorse1:LIMIT[4] Divide 1000) *
                                  L_GOLF_EQUIPMENT)
        Change agqendorse1
            Begin
            agqendorse1:PREMIUM[4] = L_GOLF_PREMIUM
            End
        End

    -- jewelry
    If agqendorse1:LIMIT[5] <> 0 Then
        Begin
        L_ARTICLE = "JEWELRY"
        Access agqdesc1, Set agqdesc1:app_no = agqPERSONAL:app_no,
                             agqdesc1:PREM_NO = agqPERSONAL:PREM_NO,
                             agqdesc1:BUILD_NO = agqPERSONAL:BUILD_NO,
                             agqdesc1:CODE = L_CODE,
                             agqdesc1:ARTICLE = L_ARTICLE, Generic

        L_JEWELRY_PREMIUM = 0
        Repeat Begin
            Exit If agqdesc1:app_no <> agqPERSONAL:app_no Or
                    agqdesc1:PREM_NO <> agqPERSONAL:PREM_NO Or
                    agqdesc1:BUILD_NO <> agqPERSONAL:BUILD_NO Or
                    agqdesc1:CODE <> L_CODE Or
                    agqdesc1:ARTICLE <> L_ARTICLE

            -- not vaulted
            If agqdesc1:JEWELRY_PREMIUM <> 0 Then
                L_JEWELRY_PREMIUM = L_JEWELRY_PREMIUM +
                                    agqdesc1:JEWELRY_PREMIUM

            If agqdesc1:JEWELRY_VAULTED = 0 and
               agqdesc1:jewelry_premium = 0 Then
                Begin
                If agqdesc1:LIMIT < L_JEWELRY_VALUED_LIMIT_1 Then
                    L_JEWELRY_PREMIUM = (L_JEWELRY_PREMIUM + ((agqdesc1:LIMIT
                                        Divide 1000) * L_JEWELRY))
                Else
                if l_jewelry_valued_1 = 0 and
                   l_jewelry_valued_2 = 0 and
                   l_jewelry_valued_3 = 0 and
                   l_jewelry_valued_4 = 0 then
                    L_JEWELRY_PREMIUM = (L_JEWELRY_PREMIUM + ((agqdesc1:LIMIT
                                        Divide 1000) * L_JEWELRY))
                else
                If agqdesc1:LIMIT < L_JEWELRY_VALUED_LIMIT_2 and
                   l_jewelry_valued_limit_2 <> 0 Then
                    L_JEWELRY_PREMIUM = (L_JEWELRY_PREMIUM + ((agqdesc1:LIMIT
                                        Divide 1000) * L_JEWELRY_VALUED_1))
                Else
                If agqdesc1:LIMIT < L_JEWELRY_VALUED_LIMIT_3 and
                   l_jewelry_valued_limit_3 <> 0 Then
                    L_JEWELRY_PREMIUM = (L_JEWELRY_PREMIUM + ((agqdesc1:LIMIT
                                        Divide 1000) * L_JEWELRY_VALUED_2))
                Else
                If agqdesc1:LIMIT < L_JEWELRY_VALUED_LIMIT_4 and
                   l_jewelry_valued_limit_4 <> 0 Then
                    L_JEWELRY_PREMIUM = (L_JEWELRY_PREMIUM + ((agqdesc1:LIMIT
                                        Divide 1000) * L_JEWELRY_VALUED_3))
                Else
                if l_jewelry_valued_4 <> 0 then
                    begin
                    L_JEWELRY_PREMIUM = (L_JEWELRY_PREMIUM + ((agqdesc1:LIMIT
                                        Divide 1000) * L_JEWELRY_VALUED_4))
                    end

                End

            -- vaulted
            If agqdesc1:JEWELRY_VAULTED = 1 and
               agqdesc1:jewelry_premium = 0 Then
                Begin
                L_JEWELRY_PREMIUM = (L_JEWELRY_PREMIUM + ((agqdesc1:LIMIT
                                    Divide 1000) * L_JEWELRY_VAULTS))
                End

            Next agqdesc1
            End

        If L_JEWELRY_PREMIUM <> 0 Then
            Change agqendorse1
                Begin
                agqendorse1:PREMIUM[5] = L_JEWELRY_PREMIUM
                End
        Else
            Change agqendorse1
                Begin
                agqendorse1:PREMIUM[5] = agqdesc1:JEWELRY_PREMIUM
                L_JEWELRY_PREMIUM = agqdesc1:JEWELRY_PREMIUM
                End

        End

    -- musical instruments
    If agqendorse1:LIMIT[6] <> 0 Then
        Begin
        L_ARTICLE = "MUSICAL INSTRUMENTS"
        Access agqdesc1, Set agqdesc1:app_no = agqPERSONAL:app_no,
                            agqdesc1:PREM_NO = agqPERSONAL:PREM_NO,
                            agqdesc1:BUILD_NO = agqPERSONAL:BUILD_NO,
                            agqdesc1:CODE = L_CODE,
                            agqdesc1:ARTICLE = L_ARTICLE, Generic

        L_MUSICAL_PREMIUM = 0
        Repeat Begin
            Exit If agqdesc1:app_no <> agqPERSONAL:app_no Or
                    agqdesc1:PREM_NO <> agqPERSONAL:PREM_NO Or
                    agqdesc1:BUILD_NO <> agqPERSONAL:BUILD_NO Or
                    agqdesc1:CODE <> L_CODE Or
                    agqdesc1:ARTICLE <> L_ARTICLE

            -- not vaulted
            If agqdesc1:ORGANS = 0 Then
                Begin
                If agqendorse1:PROFESSIONAL_USE = 0 Then
                    L_MUSICAL_PREMIUM = (L_MUSICAL_PREMIUM + ((agqdesc1:LIMIT
                                         Divide 1000) * L_MUSICAL_INSTRUMENTS_1))
                Else
                    L_MUSICAL_PREMIUM = (L_MUSICAL_PREMIUM + ((agqdesc1:LIMIT
                                         Divide 1000) * L_MUSICAL_INSTRUMENTS_2))
                End
            Else
                Begin
                If agqdesc1:LIMIT <= L_MUSICAL_INSTRUMENTS_LIMIT_1 Then
                    L_MUSICAL_PREMIUM = (L_MUSICAL_PREMIUM + ((agqdesc1:LIMIT
                                        Divide L_MUSICAL_INSTRUMENTS_PER) *
                                        L_MUSICAL_INSTRUMENTS_3))
                Else
                    If agqdesc1:LIMIT > L_MUSICAL_INSTRUMENTS_LIMIT_1 Then
                        L_MUSICAL_PREMIUM = (L_MUSICAL_PREMIUM +
                                            ((((agqdesc1:LIMIT -
                                            L_MUSICAL_INSTRUMENTS_LIMIT_1)
                                            Divide L_MUSICAL_INSTRUMENTS_PER) *
                                            L_MUSICAL_INSTRUMENTS_4) +
                                            L_MUSICAL_INSTRUMENTS_PLUS))

                End

            Next agqdesc1
            End

        If agqendorse1:ELECTRONIC_DAMAGE = 1 Then
            L_MUSICAL_PREMIUM = L_MUSICAL_PREMIUM * L_MUSICAL_INSTRUMENTS_DAMAGE

        Change agqendorse1
            Begin
            agqendorse1:PREMIUM[6] = L_MUSICAL_PREMIUM
            End

        End

    -- silverware
    If agqendorse1:LIMIT[7] <> 0 Then
        Begin
        L_SILVERWARE_PREMIUM = ((agqendorse1:LIMIT[7] Divide 1000) * L_SILVERWARE)
        Change agqendorse1
            Begin
            agqendorse1:PREMIUM[7] = L_SILVERWARE_PREMIUM
            End

        End

    -- sporting equipment
    If agqendorse1:LIMIT[8] <> 0 Then
        Begin
        L_ARTICLE = "SPORTING EQUIPMENT"
        Access agqdesc1, Set agqdesc1:app_no = agqPERSONAL:app_no,
                            agqdesc1:PREM_NO = agqPERSONAL:PREM_NO,
                            agqdesc1:BUILD_NO = agqPERSONAL:BUILD_NO,
                            agqdesc1:CODE = L_CODE,
                            agqdesc1:ARTICLE = L_ARTICLE, Generic

        l_equipment_premium = 0
        Repeat Begin
            Exit If agqdesc1:app_no <> agqPERSONAL:app_no Or
                    agqdesc1:PREM_NO <> agqPERSONAL:PREM_NO Or
                    agqdesc1:BUILD_NO <> agqPERSONAL:BUILD_NO Or
                    agqdesc1:CODE <> L_CODE Or
                    agqdesc1:ARTICLE <> L_ARTICLE

        L_EQUIPMENT_PREMIUM = agqdesc1:TOTAL_PREMIUM + l_equipment_premium

        next agqdesc1
        end

        Change agqendorse1
            Begin
            agqendorse1:PREMIUM[8] = L_EQUIPMENT_PREMIUM
            End

        End

    -- stamps
    If agqendorse1:LIMIT[9] <> 0 Then
        Begin
        If agqendorse1:STAMP_THEFT = 0 Then
            L_STAMPS_PREMIUM = ((agqendorse1:LIMIT[9] Divide 1000) * L_STAMPS)
        If agqendorse1:STAMP_THEFT = 1 Then
            L_STAMPS_PREMIUM = ((agqendorse1:LIMIT[9] Divide 1000) * L_STAMPS_THEFT)
        Change agqendorse1
            Begin
            agqendorse1:PREMIUM[9] = L_STAMPS_PREMIUM
            End

        End

    -- fine arts
    If agqendorse1:LIMIT[10] <> 0 Then
        Begin
        L_ARTICLE = "FINE ARTS"
        Access agqdesc1, Set agqdesc1:app_no = agqPERSONAL:app_no,
                            agqdesc1:PREM_NO = agqPERSONAL:PREM_NO,
                            agqdesc1:BUILD_NO = agqPERSONAL:BUILD_NO,
                            agqdesc1:CODE = L_CODE,
                            agqdesc1:ARTICLE = L_ARTICLE, Generic

        L_FINE_ARTS_PREMIUM = 0
        Repeat Begin
            Exit If agqdesc1:app_no <> agqPERSONAL:app_no Or
                    agqdesc1:PREM_NO <> agqPERSONAL:PREM_NO Or
                    agqdesc1:BUILD_NO <> agqPERSONAL:BUILD_NO Or
                    agqdesc1:CODE <> L_CODE Or
                    agqdesc1:ARTICLE <> L_ARTICLE

        l_protection = agqpersonal:protection
        if l_protection = 4 and
           sfscompany:boiler_rating = 1 then
            l_protection = 1

        access agqpersonal2, set agqpersonal2:app_no = g_app_no, generic

        if agqpersonal2:fire_safe_score <= 5 then
            l_protection = 1
        else
        if agqpersonal2:fire_safe_score => 6 and
           agqpersonal2:fire_safe_score <= 9 then
            l_protection = 2
        else
        if agqpersonal2:fire_safe_score = 10 then
            l_protection = 3
        else
        if agqpersonal2:fire_safe_score = 11 then
            l_protection = 1

        Switch(agqPERSONAL:NO_FAMILIES)
          Case 1, 2, 3, 4 : Switch(L_PROTECTION)
                              Case 1 : L_FINE_ARTS_PREMIUM = (L_FINE_ARTS_PREMIUM
                                                             + ((agqdesc1:LIMIT
                                                             Divide 1000)
                                                             * L_FINE_ARTS_1_PROT_1))
                              Case 2 : L_FINE_ARTS_PREMIUM = (L_FINE_ARTS_PREMIUM
                                                             + ((agqdesc1:LIMIT
                                                             Divide 1000)
                                                             * L_FINE_ARTS_1_PROT_2))
                              Case 3 : L_FINE_ARTS_PREMIUM = (L_FINE_ARTS_PREMIUM
                                                             + ((agqdesc1:LIMIT
                                                             Divide 1000)
                                                             * L_FINE_ARTS_1_PROT_3))
                              End
          Default         : Switch(L_PROTECTION)
                              Case 1 : L_FINE_ARTS_PREMIUM = (L_FINE_ARTS_PREMIUM
                                                             + ((agqdesc1:LIMIT
                                                             Divide 1000)
                                                             * L_FINE_ARTS_2_PROT_1))
                              Case 2 : L_FINE_ARTS_PREMIUM = (L_FINE_ARTS_PREMIUM
                                                             + ((agqdesc1:LIMIT
                                                             Divide 1000)
                                                             * L_FINE_ARTS_2_PROT_2))
                              Case 3 : L_FINE_ARTS_PREMIUM = (L_FINE_ARTS_PREMIUM
                                                             + ((agqdesc1:LIMIT
                                                             Divide 1000)
                                                             * L_FINE_ARTS_2_PROT_3))
                              End
          End

        -- masonry credit for protection 1 and 2
        Switch(agqPERSONAL:CONSTRUCTION)
          Case 3 : Switch(agqPERSONAL:NO_FAMILIES)
                     Case 1, 2, 3, 4 : Switch(L_PROTECTION)
                                         Case 1, 2 : L_FINE_ARTS_PREMIUM =
                                                     L_FINE_ARTS_PREMIUM *
                                                     L_FINE_ARTS_CREDITS_1
                                         End
                     Default         : Switch(L_PROTECTION)
                                         Case 1, 2 : L_FINE_ARTS_PREMIUM =
                                                     L_FINE_ARTS_PREMIUM *
                                                     L_FINE_ARTS_CREDITS_2
                                         End
                     End
          End

        If agqdesc1:FINE_ARTS_BREAKAGE = 1 Then
            L_FINE_ARTS_PREMIUM = (L_FINE_ARTS_PREMIUM + ((agqdesc1:LIMIT
                                  Divide 1000) * L_FINE_ARTS_BREAKAGE))

        Next agqdesc1
        End

        Change agqendorse1
            Begin
            agqendorse1:PREMIUM[10] = L_FINE_ARTS_PREMIUM
            End

        End

    L_UPDATE_SFPEND_PREMIUM = L_CAMERA_PREMIUM + L_COIN_PREMIUM + L_FURS_PREMIUM +
                              L_GOLF_PREMIUM + L_JEWELRY_PREMIUM + L_MUSICAL_PREMIUM +
                              L_SILVERWARE_PREMIUM + L_EQUIPMENT_PREMIUM +
                              L_STAMPS_PREMIUM + L_FINE_ARTS_PREMIUM
    L_INLAND_TOTAL = L_INLAND_TOTAL + L_UPDATE_SFPEND_PREMIUM
    L_INLAND_MARINE_CODE = "Y"
    End

if l_code one of "MPL127", "SAL127" then
    l_update_sfpend_premium = l_end_premium1

If L_CODE = "MPL16" Then
    Begin
    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1
    L_INLAND_TOTAL = L_INLAND_TOTAL + L_UPDATE_SFPEND_PREMIUM
    L_INLAND_MARINE_CODE = "Y"
    End

If L_CODE one of "MPL58", "MPL96", "MPL97", "MPL46", "MPL123", "MPL125" Then
    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1

If L_CODE = "MPL17" Then
    Begin
    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1
    L_INLAND_TOTAL = L_INLAND_TOTAL + L_UPDATE_SFPEND_PREMIUM
    L_INLAND_MARINE_CODE = "Y"
    End

If L_CODE one of "FPL18" and
   sfscompany:boiler_rating = 2 Then
    Begin
    L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM_2 * L_END_FACTOR) -
                              L_BASE_PREMIUM_2)

End

If L_CODE one of "MPL54", "MPL53" and
   sfscompany:boiler_rating not one of 2 Then
    begin
    if agqpersonal:state one of 29, 37 then
        begin
        L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM * L_END_FACTOR) -
                                  L_BASE_PREMIUM)
        end
    else
    if agqpersonal:state one of 19 then
        begin
        L_UPDATE_SFPEND_PREMIUM = ((L_endorsement_base_3 * L_END_FACTOR) -
                                  L_endorsement_base_3)
        end
    end

If L_CODE = "MPL13" And
   L_END_FACTOR <> 0 Then
    Begin
    If SFSLINE:LOB_CODE = "DWELLING" Then
        Begin
        Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no,
                                      agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

        If agqPERSONAL_ALIAS:DWELLING_PREMIUM[1] <> 0 Then
            L_UPDATE_SFPEND_PREMIUM = (((agqPERSONAL_ALIAS:DWELLING_PREMIUM[1] +
                                      agqPERSONAL_ALIAS:DF_DEDUCT_PREMIUM) *
                                      L_END_FACTOR) -
                                      (agqPERSONAL_ALIAS:DWELLING_PREMIUM[1] +
                                      agqPERSONAL_ALIAS:DF_DEDUCT_PREMIUM))
        Else
            L_UPDATE_SFPEND_PREMIUM = (((agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1] +
                                      agqPERSONAL_ALIAS:DF_DEDUCT_PREMIUM) *
                                      L_END_FACTOR) -
                                      (agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1] +
                                      agqPERSONAL_ALIAS:DF_DEDUCT_PREMIUM))
        End
    Else
        L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM * L_END_FACTOR) - L_BASE_PREMIUM)
    End

If L_CODE = "MPL19" Then
    Begin
    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1
    L_INLAND_TOTAL = L_INLAND_TOTAL + L_UPDATE_SFPEND_PREMIUM
    L_INLAND_MARINE_CODE = "Y"
    End

If L_CODE = "MPL32" Then
    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1

If L_CODE = "MPL33" Then
    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1

If L_CODE = "MPL41" Then
    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1

If L_CODE = "MPL44" Then
    Begin
    L_RECORD_KEY = "SL"
    L_COMPANY_ID = agqPERSONAL:COMPANY_ID
    L_STATE = agqPERSONAL:STATE
    L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
    L_EFF_DATE = agqpersonal:EFF_DATE

    Include "plspeciallmts.pro"

    Access agqendorse1, Set agqendorse1:app_no = agqPERSONAL:app_no,
                           agqendorse1:PREM_NO = agqPERSONAL:PREM_NO,
                           agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                           agqendorse1:CODE = L_CODE, Generic

    -- computer 1
    If agqendorse1:LIMIT[1] <> 0 Then
        L_COMPUTER_PREMIUM_2 = ((agqendorse1:LIMIT[1] Divide
                               L_COMPUTER_PER_2) * L_COMPUTER_CHARGE_2)

    -- guns
    If agqendorse1:LIMIT[2] <> 0 Then
        L_GUNS_PREMIUM = ((agqendorse1:LIMIT[2] Divide
                         L_GUNS_PER) * L_GUNS_CHARGE)

    -- money
    If agqendorse1:LIMIT[3] <> 0 Then
        L_MONEY_PREMIUM = ((agqendorse1:LIMIT[3] Divide
                          L_MONEY_PER) * L_MONEY_CHARGE)

    -- property used in business
    If agqendorse1:LIMIT[4] <> 0 Then
        L_ON_RESIDENCE_PREMIUM = ((agqendorse1:LIMIT[4] Divide
                                 L_ON_RESIDENCE_PER) * L_ON_RESIDENCE_CHARGE)

    -- landlords
    If agqendorse1:LIMIT[5] <> 0 Then
        L_LANDLORDS_PREMIUM = ((agqendorse1:LIMIT[5] Divide
                              L_LANDLORDS_PER) * L_LANDLORDS_CHARGE)

    -- computer 2
    If agqendorse1:LIMIT[6] <> 0 Then
        L_COMPUTER_PREMIUM = ((agqendorse1:LIMIT[6] Divide
                             L_COMPUTER_PER) * L_COMPUTER_CHARGE)

    -- credit card
    If agqendorse1:LIMIT[7] <> 0 Then
        L_CREDIT_CARD_PREMIUM = ((agqendorse1:LIMIT[7] Divide
                                L_CREDIT_CARD_PER)
                                * L_CREDIT_CARD_CHARGE)

    -- loss assessment
    If agqendorse1:LIMIT[8] <> 0 Then
        L_LOSS_ASSESSMENT_PREMIUM = ((agqendorse1:LIMIT[8] Divide
                                    L_LOSS_ASSESSMENT_PER)
                                    * L_LOSS_ASSESSMENT_CHARGE)

    -- work interruption
    If agqendorse1:LIMIT[9] <> 0 Then
        L_WORK_PREMIUM = ((agqendorse1:LIMIT[9] Divide
                         L_WORK_INTER_PER) * L_WORK_INTER_CHARGE)

    -- building code
    If agqendorse1:BUILDING_CODE_PERCENT <> 0 Then
        begin
        if l_building_code_factor = 1.10 then
            L_BUILDING_CODE_PREMIUM = ((agqENDORSE1:BUILDING_CODE_PERCENT Divide
                                      100) + 1.00)
        else
            l_building_code_premium = (((agqendorse1:building_code_percent divide
                                      l_building_code_per) * l_building_code_factor) +
                                      1)

        end

    -- tenants
    If agqendorse1:LIMIT[10] <> 0 Then
        L_TENANT_PREMIUM = ((agqendorse1:LIMIT[10] Divide
                           L_TENANTS_PER) * L_TENANTS_CHARGE)

    L_UPDATE_SFPEND_PREMIUM = L_GUNS_PREMIUM + L_MONEY_PREMIUM +
                              L_ON_RESIDENCE_PREMIUM + L_LANDLORDS_PREMIUM +
                              L_COMPUTER_PREMIUM + L_CREDIT_CARD_PREMIUM +
                              L_LOSS_ASSESSMENT_PREMIUM + L_WORK_PREMIUM +
                              L_TENANT_PREMIUM + L_COMPUTER_PREMIUM_2

/*    If L_BUILDING_CODE_PREMIUM <> 0 Then
        begin
        if sfscompany:computer_rating = 2 then
            L_UPDATE_SFPEND_PREMIUM = (L_UPDATE_SFPEND_PREMIUM +
                                      ((L_BASE_PREMIUM_2 * L_BUILDING_CODE_PREMIUM)
                                      - L_BASE_PREMIUM_2))
        else
            L_UPDATE_SFPEND_PREMIUM = (L_UPDATE_SFPEND_PREMIUM +
                                      ((L_BASE_PREMIUM * L_BUILDING_CODE_PREMIUM)
                                      - L_BASE_PREMIUM))
        end*/

    End

If L_CODE = "MDW30" and
   l_end_factor <> 0 Then
    Begin
    Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no,
                                  agqPERSONAL_ALIAS:PREM_NO  = agqPERSONAL:PREM_NO,
                                  agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

    if agqpersonal:state one of 29, 37 then
        begin
        L_UPDATE_SFPEND_PREMIUM = ((agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1] *
                                  L_END_FACTOR) -
                                  agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1])
        end
    else
    if agqpersonal:state one of 19 then
        begin
        L_UPDATE_SFPEND_PREMIUM = ((l_endorsement_base_2 *
                                  L_END_FACTOR) -
                                  l_endorsement_base_2)
        end
write("%c%s",1005,"")
    End

/*If L_CODE = "MPL47" Then
    Begin
    If SFSLINE:LOB_CODE = "DWELLING" Then
        Begin
        Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no,
                                      agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

        if agqpersonal:state one of 29, 37 then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1] *
                                      L_END_FACTOR) -
                                      agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1])
            end
        else
        if agqpersonal:state one of 19 then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((L_endorsement_base_2 * L_END_FACTOR) -
                                      L_endorsement_base_2)
            end
        End
    Else
        begin
        if agqpersonal:state one of 29, 37 then
            begin
            write("%c%s",1005,"")
            L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM * L_END_FACTOR) -
                                      L_BASE_PREMIUM)
            end
        else
        if agqpersonal:state one of 19 then
            begin
            write("%c%s",1005,"")
            L_UPDATE_SFPEND_PREMIUM = ((L_endorsement_base_3 * L_END_FACTOR) -
                                      L_endorsement_base_3)
            end
        end
    L_BASE_PREMIUM_2 = L_BASE_PREMIUM * L_END_FACTOR
    End*/

if l_code one of "MPL67", "MPL68" and
   l_end_factor <> 0 then
    begin
    if agqpersonal:state one of 29, 37 then
        begin
        L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM_2 *
                                  L_END_FACTOR) -
                                  L_BASE_PREMIUM_2)
        end
    else
    if agqpersonal:state one of 19 then
        begin
        L_UPDATE_SFPEND_PREMIUM = ((L_endorsement_base_3 *
                                  L_END_FACTOR) -
                                  L_endorsement_base_3)
        end
    end

if l_code one of "MPL69" then
    begin
    Access agqendorse1, Set agqendorse1:app_no = agqPERSONAL:app_no,
                           agqendorse1:PREM_NO  = agqPERSONAL:PREM_NO,
                           agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                           agqendorse1:CODE     = L_CODE, Generic

    L_UPDATE_SFPEND_PREMIUM = agqendorse1:misc_premium
    end

If L_CODE = "MPL48" and
   l_end_factor <> 0 Then
    Begin
    l_form = agqpersonal_alias:form
    access agsdefault_plp, set agsdefault_plp:company_id       = agqpersonal:company_id,
                               agsdefault_plp:state            = agqpersonal:state,
                               agsdefault_plp:agent_no         = agqpersonal:agent_no,
                               agsdefault_plp:line_of_business = agqpersonal:line_of_business,
                               agsdefault_plp:form             = l_form, generic

    If agsdefault_plp:MPL48_SPECIAL_RATING = 1 then
        Begin
        Access agqendorse1, Set agqendorse1:app_no = agqPERSONAL:app_no,
                               agqendorse1:PREM_NO = agqPERSONAL:PREM_NO,
                               agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                               agqendorse1:CODE = L_CODE, Generic

        L_BUILDING_CODE_FACTOR = (((agqendorse1:BUILDING_CODE_PERCENT
                                 Divide L_END_LIMIT) *
                                 L_END_FACTOR) + 1)
        L_BUILDING_CODE_PREM = agqPERSONAL_alias:DWELLING_PREMIUM[1] *
                               L_BUILDING_CODE_FACTOR
        L_UPDATE_SFPEND_PREMIUM = L_BUILDING_CODE_PREM -
                                  agqPERSONAL_alias:DWELLING_PREMIUM[1]
        End
    Else
    If agqPERSONAL:DWELLING_LIMIT = 0 And
       agqPERSONAL:CONTENTS_LIMIT <> 0 Then
        L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1
    Else
        Begin
        Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no,
                                      agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

        If SFSCOMPANY:COMPUTER_RATING one of 2 then
            Begin
            L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM_2 *
                                      L_END_FACTOR) -
                                      L_BASE_PREMIUM_2)
            End
        Else
            L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM *
                                      L_END_FACTOR) -
                                      L_BASE_PREMIUM)
        End
    End

/*If L_CODE = "MPL49" Then
    Begin
    If SFSLINE:LOB_CODE = "DWELLING" Then
        Begin
        Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no,
                                      agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

        if agqpersonal:state one of 29, 37 then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1] *
                                      L_END_FACTOR) -
                                      agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1])
            end
        else
        if agqpersonal:state one of 19 then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((L_endorsement_base_2 * L_END_FACTOR) -
                                      L_endorsement_base_2)
            end
        End
    Else
        begin
        if agqpersonal:state one of 29, 37 then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM * L_END_FACTOR) -
                                      L_BASE_PREMIUM)
            end
        else
        if agqpersonal:state one of 19 then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((L_endorsement_base_3 * L_END_FACTOR) -
                                      L_endorsement_base_3)
            end
        end
    L_BASE_PREMIUM_2 = L_BASE_PREMIUM * L_END_FACTOR
    End*/

If L_CODE = "MBO82" Or
   L_CODE = "MBO84" Or
   L_CODE = "MBO81" Then
    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1

If L_CODE = "MBO80" Then
    L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM * L_END_FACTOR) - L_BASE_PREMIUM)

If L_CODE = "MPL79" Then
    Begin
    If SFSLINE:LOB_CODE = "DWELLING" Then
        begin
        if agqpersonal:state one of 29, 37 then
           begin
           L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM_A * L_END_FACTOR) - L_BASE_PREMIUM_A)
           end
        else
        if agqpersonal:state one of 19 then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((L_endorsement_base_3 * L_END_FACTOR) -
                                      L_endorsement_base_3)
            end
        end
    Else
        begin
        if agqpersonal:state one of 29, 37 then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM_A * L_END_FACTOR) -
                                      L_BASE_PREMIUM_A)
            end
        else
        if agqpersonal:state one of 19 then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((L_endorsement_base_3 * L_END_FACTOR) -
                                      L_endorsement_base_3)
            end
        end

    End

/*If L_CODE = "MHO45" Or
   L_CODE = "MPL45" And
   L_END_FACTOR <> 0 Then
    begin
    if agqpersonal:state one of 29, 37 then
        begin
        L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM * L_END_FACTOR) -
                                  L_BASE_PREMIUM)
        end
    else
    if agqpersonal:state one of 19 then
        begin
        L_UPDATE_SFPEND_PREMIUM = ((L_endorsement_base_3 * L_END_FACTOR) -
                                  L_endorsement_base_3)
        end
    end*/

If L_CODE = "MPL83" Or
   L_CODE = "MPL78" Then
    Begin
    L_UPDATE_SFPEND_PREMIUM = 0
    l_basic_prem = 0
    l_inservants_employees_prem = 0
    l_outservants_residence_prem = 0
    l_outservants_estate_prem = 0
    L_RECORD_KEY = "WC"
    L_COMPANY_ID = agqPERSONAL:COMPANY_ID
    L_STATE = agqPERSONAL:STATE
    L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
    L_EFF_DATE = agqpersonal:EFF_DATE

    Include "plsworkerscomp.pro"

    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1
    l_basic_prem = l_update_sfpend_premium
    Access agqWORKERSCOMP, Set agqWORKERSCOMP:app_no = agqPERSONAL:app_no,
                               agqWORKERSCOMP:PREM_NO = agqPERSONAL:PREM_NO,
                               agqWORKERSCOMP:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

    if agqworkerscomp:app_no = agqpersonal:app_no and
       agqworkerscomp:prem_no = agqpersonal:prem_no and
       agqworkerscomp:build_no = agqpersonal:build_no then
        begin
        change agqworkerscomp
            begin
            agqworkerscomp:basic_prem = l_update_sfpend_premium
            If agqWORKERSCOMP:INSERVANTS_EMPLOYEES <> 0 Then
                begin
                L_UPDATE_SFPEND_PREMIUM = (L_UPDATE_SFPEND_PREMIUM +
                                          (agqWORKERSCOMP:INSERVANTS_EMPLOYEES *
                                          L_INSERVANTS_RESIDENCE))
                agqworkerscomp:inservants_employees_prem = agqworkerscomp:inservants_employees *
                                                           l_inservants_residence
                l_inservants_employees_prem = ((agqworkerscomp:inservants_employees *
                                              l_inservants_residence) +
                                              l_inservants_employees_prem)
                end
            else
                begin
                agqworkerscomp:inservants_employees_prem = 0
                l_inservants_employees_prem = 0
                end

            If agqWORKERSCOMP:OUTSERVANTS_RESIDENCE_EMPLOYEES <> 0 Then
                begin
                L_UPDATE_SFPEND_PREMIUM = (L_UPDATE_SFPEND_PREMIUM +
                                          (agqWORKERSCOMP:OUTSERVANTS_RESIDENCE_EMPLOYEES *
                                          L_OUTSERVANTS_RESIDENCE))
                agqworkerscomp:outservants_residence_prem = agqWORKERSCOMP:OUTSERVANTS_RESIDENCE_EMPLOYEES *
                                                            L_OUTSERVANTS_RESIDENCE
                l_outservants_residence_prem = ((agqWORKERSCOMP:OUTSERVANTS_RESIDENCE_EMPLOYEES *
                                               L_OUTSERVANTS_RESIDENCE) +
                                               l_outservants_residence_prem)
                end
            else
                begin
                agqworkerscomp:outservants_residence_prem = 0
                l_outservants_residence_prem = 0
                end

            If agqWORKERSCOMP:OUTSERVANTS_ESTATE_EMPLOYEES <> 0 Then
                begin
                L_UPDATE_SFPEND_PREMIUM = (L_UPDATE_SFPEND_PREMIUM +
                                          (agqWORKERSCOMP:OUTSERVANTS_ESTATE_EMPLOYEES *
                                          L_OUTSERVANTS_ESTATE))
                agqworkerscomp:outservants_estate_prem = agqWORKERSCOMP:OUTSERVANTS_ESTATE_EMPLOYEES *
                                                         L_OUTSERVANTS_ESTATE
                l_outservants_estate_prem = ((agqWORKERSCOMP:OUTSERVANTS_ESTATE_EMPLOYEES *
                                            L_OUTSERVANTS_ESTATE) +
                                            l_outservants_estate_prem)
                end
            else
                begin
                agqworkerscomp:outservants_estate_prem = 0
                l_outservants_estate_prem = 0
                end
            end
        end

    L_WORKERS_COMP_TOTAL = L_WORKERS_COMP_TOTAL + L_UPDATE_SFPEND_PREMIUM
    End

If L_CODE one of "MPL80", "SAL80", "MPL180" Then
    Begin
    L_COMPANY_ID       = agqpersonal:COMPANY_ID
    L_STATE            = agqPERSONAL:STATE
    L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
    L_EFF_DATE         = agqpersonal:EFF_DATE
    L_COUNTY           = agqPERSONAL:COUNTY

    Access PLSUMTERR, Set PLSUMTERR:COMPANY_ID = agqpersonal:COMPANY_ID,
                          PLSUMTERR:STATE = L_STATE,
                          PLSUMTERR:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                          PLSUMTERR:COUNTY = L_COUNTY, Generic

    Access agqUMBRELLA_ALIAS, Set agqUMBRELLA_ALIAS:app_no = g_app_no, generic

    Change agqUMBRELLA_ALIAS
        Begin
        agqUMBRELLA_ALIAS:TERRITORY = PLSUMTERR:TERRITORY
        agqUMBRELLA_ALIAS:CPL_LIMIT = agqPERSONAL:LIABILITY_LIMIT
        End

    Include "plsumrates.pro"

    L_END_PREMIUM1 = L_UM_INITIAL_CHARGE
    If agqUMBRELLA_ALIAS:NO_SEASONAL_LOCATIONS <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (L_UM_EACH_ADDL_CHARGE *
                         agqUMBRELLA_ALIAS:NO_SEASONAL_LOCATIONS))
    If agqUMBRELLA_ALIAS:TERRITORY = 1 Then
        L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_TERR_1_CHARGE
    If agqUMBRELLA_ALIAS:pools <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (L_pools *
                         agqUMBRELLA_ALIAS:pools))

    If agqUMBRELLA_ALIAS:NO_VEHICLES <> 0 Then
        Begin
        Switch(agqUMBRELLA_ALIAS:VEHICLE_LIMITS)
          Case 100000 : Begin
                        L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_INITIAL_VEHICLE_2
                        If agqUMBRELLA_ALIAS:NO_VEHICLES > 1 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                             ((agqUMBRELLA_ALIAS:NO_VEHICLES - 1) *
                                             L_UM_EACH_ADDL_VEHICLE_2))
                        If agqUMBRELLA_ALIAS:YOUTHFUL_OPERATOR <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:YOUTHFUL_OPERATOR *
                                             L_UM_YOUTHFUL_OP_2))
                        If agqUMBRELLA_ALIAS:TERRITORY = 1 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:NO_VEHICLES *
                                              L_UM_TERR_1_AUTO_2))
                        If agqUMBRELLA_ALIAS:NO_UM_UIM_VEHICLES <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:NO_UM_UIM_VEHICLES *
                                              L_UM_UMUIM_2))
                        If agqUMBRELLA_ALIAS:antique_vehicles <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:antique_VEHICLES *
                                              L_antique_vehicles_2))
                        If agqUMBRELLA_ALIAS:TERRITORY = 1 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:antique_vehicles *
                                             L_UM_TERR_1_AUTO_2))
                        If agqUMBRELLA_ALIAS:trailers <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:trailers *
                                              L_motor_homes_2))
                        If agqUMBRELLA_ALIAS:motor_homes <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:motor_homes *
                                              L_motor_homes_2))
                        If agqUMBRELLA_ALIAS:TERRITORY = 1 and
                           agqumbrella_alias:motor_homes <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:motor_homes *
                                             L_motor_homes_1))
                        End
          Default     : Begin
                        L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_INITIAL_VEHICLE_1
                        If agqUMBRELLA_ALIAS:NO_VEHICLES > 1 Then
                           L_END_PREMIUM1 = (L_END_PREMIUM1 + ((agqUMBRELLA_ALIAS:NO_VEHICLES - 1) *
                                             L_UM_EACH_ADDL_VEHICLE_1))
                        If agqUMBRELLA_ALIAS:YOUTHFUL_OPERATOR <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:YOUTHFUL_OPERATOR *
                                             L_UM_YOUTHFUL_OP_1))
                        If agqUMBRELLA_ALIAS:TERRITORY = 1 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:NO_VEHICLES *
                                             L_UM_TERR_1_AUTO_1))
                        If agqUMBRELLA_ALIAS:NO_UM_UIM_VEHICLES <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:NO_UM_UIM_VEHICLES *
                                              L_UM_UMUIM_1))
                        If agqUMBRELLA_ALIAS:antique_vehicles <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:antique_VEHICLES *
                                              L_antique_vehicles_1))
                        If agqUMBRELLA_ALIAS:TERRITORY = 1 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:antique_VEHICLES *
                                             L_UM_TERR_1_AUTO_1))
                        If agqUMBRELLA_ALIAS:trailers <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:trailers *
                                              L_motor_homes_1))
                        If agqUMBRELLA_ALIAS:motor_homes <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:motor_homes *
                                              L_motor_homes_2))
                        If agqUMBRELLA_ALIAS:TERRITORY = 1 and
                           agqumbrella_alias:Motor_homes <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:motor_homes *
                                             L_motor_homes_1))
                        End
          End

        End

    If agqUMBRELLA_ALIAS:NO_RECREATIONAL_VEHICLES <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:NO_RECREATIONAL_VEHICLES *
                         L_UM_RECREATIONAL))

    If agqUMBRELLA_ALIAS:jet_skis <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:jet_skis *
                         L_jet_skis))
    If agqUMBRELLA_ALIAS:jet_skis_1 <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:jet_skis_1 *
                         L_jet_skis_1))
    If agqUMBRELLA_ALIAS:WATERCRAFT_25_HP <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:WATERCRAFT_25_HP *
                         L_UM_WATERCRAFT_CHARGE_1))
    If agqUMBRELLA_ALIAS:WATERCRAFT_50_250_HP <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:WATERCRAFT_50_250_HP *
                         L_UM_WATERCRAFT_CHARGE_2))
    If agqUMBRELLA_ALIAS:WATERCRAFT_LIMIT <> 0 Then
        Begin
        Switch(agqUMBRELLA_ALIAS:WATERCRAFT_LIMIT)
          Case 300000  : L_UM_WATERCRAFT_PREMIUM = agqUMBRELLA_ALIAS:WATERCRAFT_PREMIUM *
                                                   L_UM_WATERCRAFT_FACTOR_1
          Case 500000  : L_UM_WATERCRAFT_PREMIUM = agqUMBRELLA_ALIAS:WATERCRAFT_PREMIUM *
                                                   L_UM_WATERCRAFT_FACTOR_2
          Case 750000  : L_UM_WATERCRAFT_PREMIUM = agqUMBRELLA_ALIAS:WATERCRAFT_PREMIUM *
                                                   L_UM_WATERCRAFT_FACTOR_3
          Case 1000000 : L_UM_WATERCRAFT_PREMIUM = agqUMBRELLA_ALIAS:WATERCRAFT_PREMIUM *
                                                   L_UM_WATERCRAFT_FACTOR_4
          End
        If L_UM_WATERCRAFT_PREMIUM < L_UM_WATERCRAFT_MINIMUM Then
            L_UM_WATERCRAFT_PREMIUM = L_UM_WATERCRAFT_MINIMUM
        L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_WATERCRAFT_PREMIUM
        End

    If agqUMBRELLA_ALIAS:NO_CHILDREN <> 0 Then
        Begin
        Switch(agqUMBRELLA_ALIAS:NO_CHILDREN)
          Case 1, 2, 3, 4 : L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_HOME_DAY_CARE_1
          Case 5          : L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_HOME_DAY_CARE_2
          Case 6          : L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_HOME_DAY_CARE_3
          End
        End

    If agqUMBRELLA_ALIAS:BED_BREAKFAST <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:BED_BREAKFAST *
                         L_UM_BED_BREAKFAST))

    If agqUMBRELLA_ALIAS:BUSINESS_PURSUITS <> "" Then
        L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_BUSINESS_PURSUITS

    If agqUMBRELLA_ALIAS:OFFICES <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:OFFICES *
                         L_UM_BUSINESS_CHARGE_1))
    If agqUMBRELLA_ALIAS:RENTALS[1] <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:RENTALS[1] *
                         L_UM_BUSINESS_CHARGE_2))
    If agqUMBRELLA_ALIAS:RENTALS[2] <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:RENTALS[2] *
                         L_UM_BUSINESS_CHARGE_3))

    If agqUMBRELLA_ALIAS:BUSINESS_PROPERTY <> "" Then
        L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_BUSINESS_CHARGE_4

    If agqUMBRELLA_ALIAS:CPL_LIMIT <> agqPERSONAL:LIABILITY_LIMIT Then
        Begin
        Change agqUMBRELLA_ALIAS
            Begin
            agqUMBRELLA_ALIAS:CPL_LIMIT = agqPERSONAL:LIABILITY_LIMIT
            End
        End

    If agqUMBRELLA_ALIAS:CPL_LIMIT >= 500000 Then
        L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_CPL_CREDITS

    If agqUMBRELLA_ALIAS:VEHICLE_LIMITS >= 500000 and
       agqumbrella_alias:any_violations = 0 Then
        L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_AUTO_CREDITS

    Switch(agqUMBRELLA_ALIAS:DEDUCTIBLE)
      Case 500   : L_END_PREMIUM1 = L_END_PREMIUM1 - L_UM_SELF_INSURED_CREDIT_1
      Case 1000  : L_END_PREMIUM1 = L_END_PREMIUM1 - L_UM_SELF_INSURED_CREDIT_2
      Case 5000  : L_END_PREMIUM1 = L_END_PREMIUM1 - L_UM_SELF_INSURED_CREDIT_3
      Case 10000 : L_END_PREMIUM1 = L_END_PREMIUM1 - L_UM_SELF_INSURED_CREDIT_4
      End

    If agqUMBRELLA_ALIAS:CPL_LIMIT >= L_UM_MINIMUM_LIMITS_1 And
       agqUMBRELLA_ALIAS:VEHICLE_LIMITS >= L_UM_MINIMUM_LIMITS_2 Then
        Begin
        If L_END_PREMIUM1 < L_UM_MINIMUM_PREMIUM_1 Then
            L_END_PREMIUM1 = L_UM_MINIMUM_PREMIUM_1
        End
    Else
        Begin
        If L_END_PREMIUM1 < L_UM_MINIMUM_PREMIUM_3 Then
            L_END_PREMIUM1 = L_UM_MINIMUM_PREMIUM_3
        End

    l_repeat = ((agqumbrella_alias:limit - 1000000) divide 1000000)
    l_sub = 1
    while l_sub <= 5
        begin
        access agqmaster, set agqmaster:app_no = g_app_no, generic

        if agqmaster:app_no = g_app_no then
            begin
            change agqmaster
                begin
                agqmaster:other_totals[l_sub] = 0
                end
            end
        else
            begin
            add agqmaster
                begin
                agqmaster:app_no              = g_app_no
                agqmaster:other_totals[l_sub] = 0
                end
            end
        l_sub = l_sub + 1
        end

    If agqUMBRELLA_ALIAS:LIMIT > 1000000 Then
        begin
        l_total_premium = l_end_premium1
        l_increase_total[1] = l_end_premium1
        access agqmaster, set agqmaster:app_no = agqpersonal:app_no, generic

        if agqmaster:app_no = g_app_no then
            begin
            change agqmaster
                begin
                agqmaster:other_totals[1] = l_increase_total[1]
                end
            end
        else
            begin
            change agqmaster
                begin
                agqmaster:app_no          = g_app_no
                agqmaster:other_totals[1] = l_increase_total[1]
                end
            end

        l_sub = 1
        while l_sub <= l_repeat
            begin
            l_increase_total[l_sub + 1] = L_total_premium * L_UM_INCREASED_FACTOR
            access agqmaster, set agqmaster:app_no = agqpersonal:app_no, generic

            if agqmaster:app_no = g_app_no then
                begin
                change agqmaster
                    begin
                    agqmaster:other_totals[l_sub + 1] = l_increase_total[l_sub + 1]
                    end
                end
            else
                begin
                add agqmaster
                    begin
                    agqmaster:app_no          = g_app_no
                    agqmaster:other_totals[l_sub + 1] = l_increase_total[l_sub + 1]
                    end
                end
            l_end_premium1 = l_end_premium1 + l_increase_total[l_sub + 1]
            l_sub = l_sub + 1
            end
        end
    else
        begin
        l_increase_total[1] = l_end_premium1
        access agqmaster, set agqmaster:app_no = agqpersonal:app_no, generic

        if agqmaster:app_no = g_app_no then
            begin
            change agqmaster
                begin
                agqmaster:other_totals[1] = l_increase_total[1]
                end
            end
        else
            begin
            add agqmaster
                begin
                agqmaster:app_no          = g_app_no
                agqmaster:other_totals[1] = l_increase_total[1]
                end
            end
        end

    Change agqUMBRELLA_ALIAS
        Begin
        agqUMBRELLA_ALIAS:PREMIUM = L_END_PREMIUM1
        End

    Access agqUMBRELLA, Set agqUMBRELLA:app_no = G_app_no, generic

    L_UPDATE_SFPEND_PREMIUM = agqUMBRELLA:PREMIUM
    L_UMBRELLA_TOTAL = L_UMBRELLA_TOTAL + L_UPDATE_SFPEND_PREMIUM
    End

If L_CODE one of "MPL55", "MPL20", "MDW25", "MPL35", "MPL30", "MPL26",
                 "MPL61", "MPL64", "MPL52" Then
    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1

If L_CODE one of "MDW28", "MDW85" Then
    Begin
    Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = agqPERSONAL:app_no,
                                  agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                  agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

    Access SFSCOMPANY, Set SFSCOMPANY:COMPANY_ID = agqpersonal:COMPANY_ID, Generic

    If SFSCOMPANY:COMPUTER_RATING = 1 Then -- Salem
        L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM_2 *
                                  L_END_FACTOR) - L_BASE_PREMIUM_2)
    else
        L_UPDATE_SFPEND_PREMIUM = ((agqPERSONAL_ALIAS:DWELLING_PREMIUM[1] *
                                  L_END_FACTOR) - agqPERSONAL_ALIAS:DWELLING_PREMIUM[1])
    End

End

end
