%%
/*
Date Written: April 8, 2008

Name: agqsibu001d.sd

Copyright (c) 2000, SCIPS.com Inc.

Modify
Date                   By                  Comment
--------------------------------------------------------------
04/08/2008             JLB               Restaurant agq declaration supplement
=============================================================
*/

Program
  Name = "agqsibu001d";
  Type = "File";
  Domain = "SFPPRINT1";
  Padcharacter = Space;

 String L_FILE_NAME[14] = "agqsibu001d.cq";
 unsigned ascii number l_app_no[11] ;
 Unsigned Ascii Number L_PAGE_NUMBER = 1;
 String L_AGQLOCATION_ZIP;
 Unsigned Ascii Number L_AGQMASTER_FORM[1];
 Unsigned Ascii Number L_COVERGE_POS;    -- coverage horizontal pos
 Unsigned Ascii Number L_REVISED_POS;    -- revised limit horizonal pos
 Unsigned Ascii Number L_BASIC_POS;      -- basic limit horizonal pos
 Unsigned Ascii Number L_DOLLAR_POS;
 Unsigned Ascii Number L_FACTOR_POS;
 Unsigned Ascii Number L_REVISED_FACTOR_POS;
 Unsigned Ascii Number L_BUILDING_CODE_PERCENT[3]/decimals=2;
 Unsigned Ascii Number L_STATE[2]=0;
 Unsigned Ascii Number L_LIMIT_POS;
 String L_LOB_CODE[10],
        I_CODE[7];
 wdate L_EFF_DATE;
 Unsigned Ascii Number L_LINE_PCOUNTER;
 Unsigned Ascii Number L_MAX_LINES = 50;
 Unsigned Ascii Number L_PROPERTY_LIMIT[9];
 unsigned ascii number l_line_of_business[4];
 unsigned ascii number l_off_premises_limit[8];
 unsigned ascii number l_personal_add_injury[8];
 Unsigned Ascii Number L_UTILITY_LIMIT[9];
 unsigned ascii number l_bu2597[1]=0 ;
 Unsigned Ascii Number L_MECHANICAL_LIMIT[9];
 Unsigned Ascii Number L_EXTERIOR_SIGNS_LIMIT[9];
 Unsigned Ascii Number L_VALUEABLE_PAPERS_LIMIT[9];
 Unsigned Ascii Number WATER_BACKUP_LIMIT;
 Unsigned Ascii Number L_WATER_BACKUP_LIMIT;
 Unsigned Ascii Number L_FMA100;
 Unsigned Ascii Number L_LIMIT[9];
 Unsigned Ascii Number L_BPSDEFAULT_LIMIT[9];
 Unsigned Ascii Number L_REVISED_LIMIT[9];
 String L_COMPANY_ID[10];
 Unsigned Ascii Number L_DEDUCTIBLE_POS;
 Unsigned Ascii Number L_EXTERIOR_SIGNS_LIMIT_NOT_ATTC;
 Unsigned Ascii Number L_ATTACHED_TO_BUILDING;
 Unsigned Ascii Number L_VALUABLE_PAPERS_NO;
 Unsigned Ascii Number L_DEDUCTIBLE_SIGNS_OUTDOOR;
 Unsigned Ascii Number L_WATER_DAMAGE;
 Unsigned Ascii Number L_GLASS_SQFT;
 Unsigned Ascii Number L_SIGNS_NOT_ATTACHED;
 Unsigned Ascii Number L_BU0507;

  Include "csfonts.inc"
  Include "sfsrevname.var"
  Include "swsut100.var"

Initialization
  l_app_no = val(commandline[1,11])
  Deletefile (L_FILE_NAME);

Access agqNAME,
   Set agqNAME:app_no    = l_app_no, generic

Access agqLOCATION,
   Set agqLOCATION:app_no    = l_app_no, generic

Access agqGENERAL,
   Set agqGENERAL:app_no    = l_app_no, generic

Access agqcomputer,
   Set agqcomputer:app_no    = l_app_no, generic

Access agqMASTER,
   Set agqMASTER:app_no    = l_app_no, generic

Access sfscompany,
   Set sfscompany:company_id    = agqgeneral:company_id, exact

l_line_of_business    = agqgeneral:line_of_business
L_agqMASTER_FORM      = agqMASTER:FORM
l_off_premises_limit  = agqmaster:off_premises_limit
l_personal_add_injury = agqmaster:personal_add_injury

Access BPSDEFAULT,
   Set BPSDEFAULT:COMPANY_ID       = agqgeneral:COMPANY_ID,
       BPSDEFAULT:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS,
       BPSDEFAULT:FORM             = L_agqMASTER_FORM, Generic

Access SFSLINE,
   Set SFSLINE:COMPANY_ID       = agqgeneral:COMPANY_ID,
       SFSLINE:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS,
       sfsline:lob_subline      = "00", Generic;

I_CODE       = "BU2505"
l_state      = agqgeneral:state
L_COMPANY_ID = agqgeneral:COMPANY_ID
L_LOB_CODE   = SFSLINE:LOB_CODE

Include "swsut100.inc"

Access SFSSTATE,
   Set SFSSTATE:COMPANY_ID = L_COMPANY_ID,
       SFSSTATE:STATE      = L_STATE,
       SFSSTATE:COUNTY     = "000", Exact

Access SCIPSCONTROL,
   Set SCIPSCONTROL:COMPANY_ID   = L_COMPANY_ID,
       SCIPSCONTROL:STATE        = L_STATE,
       SCIPSCONTROL:LOB_CODE     = L_LOB_CODE, Exact

If SCIPSCONTROL:DUPLEX_SHORT_EDGE = 1 Then
  {
    Writefile(L_FILE_NAME,"%s",L_SEDUP)
  }
Else
  {
    Writefile(L_FILE_NAME,"%s",L_LEDUP)
  }


--****SCIPSCONTROL VARIABLES****--

L_ATTACHED_TO_BUILDING = SCIPSCONTROL:SIGNS_ATTACHED_TO_BUILDING
L_DEDUCTIBLE_SIGNS_OUTDOOR = SCIPSCONTROL:SIGNS_ATTACHED_DEDUCTIBLE
L_VALUABLE_PAPERS_NO = SCIPSCONTROL:VALUABLE_PAPERS_PAGE_NO
L_WATER_DAMAGE = SCIPSCONTROL:WATER_DAMAGE
L_GLASS_SQFT = SCIPSCONTROL:GLASS_SQUARE_FEET
L_SIGNS_NOT_ATTACHED = SIGNS_NOT_ATTACHED_TO_BUILDING

--****SCIPSCONTROL VARIABLES****--

While agqLOCATION:app_no    = l_app_no
{
  L_agqLOCATION_ZIP = If (Val(agqLOCATION:STR_ZIPCODE[6,9]) = 0) Then
                        agqLOCATION:STR_ZIPCODE[1,5]
                      Else
                        agqLOCATION:STR_ZIPCODE[1,5] + "-" +
                        agqLOCATION:STR_ZIPCODE[6,9]
--border

If SCIPSCONTROL:PRINT_BORDERS_ON_DEC_PAGE = 1 Then
    {
      Writefile(L_FILE_NAME,"%s","<033>&a140h-220V<033>*c10a3100b0P") --left vertical li
      Writefile(L_FILE_NAME,"%s","<033>&a5585h-0V<033>*c10a3100b0P")  --right vertical
      Writefile(L_FILE_NAME,"%s","<033>&a140h-0V<033>*c5467h20v0P")   --top horizontal line to
      Writefile(L_FILE_NAME,"%s","<033>&a140h7300V<033>*c5467h20v0P") --bottom horizontal line
    }
  L_PAGE_NUMBER = 1

  --  Writefile(L_FILE_NAME,"%s%s%s%n", L_ARIAL_BOLD_9,
--                        "<033>&a5000h7250V","**Page ",L_PAGE_NUMBER)

do header

  Writefile(L_FILE_NAME,"%s%s%s",L_ARIAL_BOLD,"<033>&a480h+0V",
                      "Each basic limit")
  Writefile(L_FILE_NAME,"%s","<033>&a+30h-30V")
  Writefile(L_FILE_NAME,"%s","<033>*c75h8v0P")
  Writefile(L_FILE_NAME,"%s","<033>&a+105h+30V")

  Writefile(L_FILE_NAME,"%s","or, if increased, each revised limit")
  Writefile(L_FILE_NAME,"%s","<033>&a+30h-30V")
  Writefile(L_FILE_NAME,"%s","<033>*c75h8v0P")
  Writefile(L_FILE_NAME,"%s","<033>&a+105h+30V")
  Writefile(L_FILE_NAME,"%s%s%s%s%s%s","shown below is",L_ARIAL_ITALIC_BOLD, " our ",
                      L_ARIAL_BOLD, "maximum limit of liability for","<NL>")
  Writefile(L_FILE_NAME,"%s%s%s%s%s",L_ARIAL_BOLD,"<033>&a480h+0V",
                      "the coverage in any occurrence, except as otherwise stated.","<NL>","<NL>")

  Writefile(L_FILE_NAME,"%s",L_ARIAL_BOLD)
  Writefile(L_FILE_NAME,"%s","<033>&a180h+0V")
  Writefile(L_FILE_NAME,"%s","Your Business/Operation:  ")
  Writefile(L_FILE_NAME,"%s",agqGENERAL:BUSINESS_DESC[1])
  Writefile(L_FILE_NAME,"%s","<NL>")

  Writefile(L_FILE_NAME,"%s%s%s%s%n%s%s%s%n",L_ARIAL_BOLD,"<033>&a180h+0V",
                      "Location","<033>&a900h+0V",agqLOCATION:PREM_NO,
                      "<033>&a1200h+0V","Building","<033>&a1900h+0V",
                      agqLOCATION:BUILD_NO)

  Writefile(L_FILE_NAME,"%s%s%s%s",L_ARIAL_BOLD,"<033>&a2500h+0V",
                      agqLOCATION:ADDRESS,"<NL>")
  If agqLOCATION:ADDRESS1[1] <> "" Then
    {
      Writefile(L_FILE_NAME,"%s%s%s%s",L_ARIAL_BOLD,"<033>&a2500h+0V",
                            agqLOCATION:ADDRESS1[1],"<NL>")
    }
  If agqLOCATION:ADDRESS1[2] <> "" Then
    {
      Writefile(L_FILE_NAME,"%s%s%s%s",L_ARIAL_BOLD,"<033>&a2500h+0V",
                            agqLOCATION:ADDRESS1[2],"<NL>")
    }
  If agqLOCATION:ADDRESS1[3] <> "" Then
    {
      Writefile(L_FILE_NAME,"%s%s%s%s",L_ARIAL_BOLD,"<033>&a2500h+0V",
                            agqLOCATION:ADDRESS1[3],"<NL>")
    }
  Writefile(L_FILE_NAME,"%s%s%s%s%s%s%s%s",L_ARIAL_BOLD,"<033>&a2500h+0V",
                        Trun(agqLOCATION:CITY),", ", agqLOCATION:STR_STATE," ",
                        L_agqLOCATION_ZIP,"<NL>")

  Writefile(L_FILE_NAME,"%s%s%s",L_ARIAL_BOLD,"<033>&a1700h+40V",
                        "COVERAGE")
  Writefile(L_FILE_NAME,"%s%s%s%s",l_arial_bold,"<033>&a4200h+0V",
                        "LOCATION","<NL>")
  Writefile(L_FILE_NAME,"%s%s%s%s",L_ARIAL_BOLD,"<033>&a1800h+40V",
                        "PART I","<nl>")
  L_COVERGE_POS = 180
  L_BASIC_POS = 2550
  L_REVISED_POS = 2430
  L_DOLLAR_POS = 3575
  L_DEDUCTIBLE_POS = 2557
  L_FACTOR_POS = 2745
  L_REVISED_FACTOR_POS = 2350
  L_LIMIT_POS = 3650
  Access agqGENERAL ,
             Set agqGENERAL:app_no    = l_app_no,
                 agqGENERAL:PREM_NO      = agqLOCATION:PREM_NO,
                 agqGENERAL:BUILD_NO     = agqLOCATION:BUILD_NO,Generic

  Writefile(L_FILE_NAME,"%s%s%s",L_ARIAL_BOLD,"<033>&a180h+60V",
                        "Accounts Receivable")
  Writefile(L_FILE_NAME,"%s","<033>&a+30h-30V")
  Writefile(L_FILE_NAME,"%s","<033>*c75h8v0P")
  Writefile(L_FILE_NAME,"%s","<033>&a+105h+30V")
  Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s%s%n%s%s%s","Incl. Credit Card", L_ARIAL,
                        "<033>&a",L_BASIC_POS,"h+0V","Basic Limit:",
                        L_LETTER_GOTHIC_BOLD_12,"<033>&a",L_DOLLAR_POS,"h+0V",
                        L_ARIAL_BOLD,"$")                  --Basic Limit Accounts Receivable

  L_LIMIT            = agqGENERAL:PROPERTY_LIMIT * (BPSDEFAULT:AR_PERCENT Divide 100)
  L_REVISED_LIMIT    = agqGENERAL:AR_LIMIT
  L_BPSDEFAULT_LIMIT = BPSDEFAULT:AR_LIMIT

  Writefile(L_FILE_NAME,"%s%s%s",L_ARIAL_BOLD,"<033>&a380h+120V",
                        "Slips (Pg. 2)")

  Writefile(L_FILE_NAME,"%s","<033>&a480h-120V")
  Do PRINT_LIMIT


  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_ARIAL_BOLD,"<033>&a",
                        L_COVERGE_POS,"h+120V","Buildings (Pg. 1)","<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_ARIAL_BOLD,"<033>&a",
                        L_COVERGE_POS,"h+0V","E.     ",L_ARIAL,
                        "Supplies and Materials: Loss by Theft")

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%n%s%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:",
                        "<033>&a",L_DOLLAR_POS,
                        "h+0V",L_ARIAL_BOLD,"$")                  --Basic Limit

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",L_LIMIT_POS,"h+0V",
                        Str(BPSDEFAULT:SUPPLIES_LIMIT,"ZZZ,ZZZ,ZZ9"))

  Writefile(L_FILE_NAME,"%s%s%s%s%n%s%s","<NL>","<NL>",L_ARIAL_BOLD,"<033>&a",
                        L_COVERGE_POS,"h+0V","Building Code / Law Coverage (Pg. 3)")

  If BPSDEFAULT:BUILDING_CODE_LIMIT > 0 Then
    {
      Writefile(L_FILE_NAME,"%s%s%n%s%s%s%n%s%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:",
                        "<033>&a",L_DOLLAR_POS,
                        "h+0V",L_ARIAL_BOLD,"$")                  --Basic Limit

      Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",
                        L_LIMIT_POS,"h+0V",
                        Str(BPSDEFAULT:BUILDING_CODE_LIMIT,"ZZZ,ZZZ,ZZ9"),
                        "<NL>")
    }
  Else
    {
      Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",L_FACTOR_POS,
                        "h+0V",L_ARIAL,"Factor:")                  --factor

      L_BUILDING_CODE_PERCENT = BPSDEFAULT:BUILDING_CODE_PERCENT Divide 100
      If SCIPSCONTROL:PRINT_REVISED_ON_SUPP = 1 Then
        {
          If BPSDEFAULT:BUILDING_CODE_PERCENT >= agqGENERAL:BUILDING_CODE_PERCENT Then
            {
              Writefile(L_FILE_NAME,"%s%n%s%s%s%s","<033>&a",L_LIMIT_POS,"h+0V",
                            L_LETTER_GOTHIC_BOLD_12,
                            Str(L_BUILDING_CODE_PERCENT,"ZZZZ,ZZZ.99"),"<NL>")
            }
          Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",L_REVISED_FACTOR_POS,
                            "h+0V",L_ARIAL,"Revised Factor:")                  --revised factor
          If (BPSDEFAULT:BUILDING_CODE_PERCENT = agqGENERAL:BUILDING_CODE_PERCENT) Then
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",
                                L_LIMIT_POS,"h+0V",Str(0,"ZZZZ,ZZZ.99"))
            }
          Else
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",
                                L_LIMIT_POS,"h+0V",
                                Str((agqGENERAL:BUILDING_CODE_PERCENT divide 100),"ZZZ,ZZZ.99"))

            }
        }  --scips control if
      Else
        {
          If (BPSDEFAULT:BUILDING_CODE_PERCENT >= agqGENERAL:BUILDING_CODE_PERCENT) Then
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",
                                L_LIMIT_POS,"h+0V",
                                Str(L_BUILDING_CODE_PERCENT,"ZZZZ,ZZZ.99")
                                ,"<NL>")
            }
          Else
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",
                                L_LIMIT_POS,"h+0V",
                                Str((agqGENERAL:BUILDING_CODE_PERCENT divide 100),"ZZZZ,ZZZ.99")
                                ,"<NL>")
            }
        }
    } --   If BPSDEFAULT:BUILDING_CODE_LIMIT > 0 Then

  Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s","<NL>",L_ARIAL_BOLD,"<033>&a",
                         L_COVERGE_POS,"h+120V",
                         "Building Glass (Pg. 3)",
                         "<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_REVISED_POS-625,"h+0V","Basic Limit per Occurrence:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",
                        L_LIMIT_POS,"h+0V",Str(BPSDEFAULT:BUILDING_GLASS,"ZZZ,ZZZ,ZZ9"),"<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",L_REVISED_POS-1050,"h+0V",
                        "Basic Limit on Any One Pane or Unit:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS,"h+0V",
                        Str(BPSDEFAULT:GLASS_PANE,"ZZZ,ZZZ,ZZ9"),"<NL>","<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                        "Business Personal Property (Pg. 1)","<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",L_COVERGE_POS,"h+0V",
                        "Customers' Property")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  L_LIMIT            = 0 --resets L_LIMIT
  L_REVISED_LIMIT    = agqGENERAL:CUSTOMER_PROP_LIMIT
  L_BPSDEFAULT_LIMIT = BPSDEFAULT:CUSTOMER_PROP_LIMIT

  Do PRINT_LIMIT

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_ARIAL_ITALIC,"<033>&a",L_COVERGE_POS,
                        "h+40V",
                        "* Separate Specific Amount Not Subject to Coverage B Limit",
                        "<NL>","<NL>")
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                        "Business Property Extension (Pg. 3)","<NL>")
  Writefile(L_FILE_NAME,"%s%n%s%s%s%s%s","<033>&a",L_COVERGE_POS,"h+0V",
                         L_BULLET_6,
                         L_ARIAL_BOLD,"  Consequent Loss","<NL>")
  Writefile(L_FILE_NAME,"%s%n%s%s%s%s","<033>&a",L_COVERGE_POS+100,"h+0V",L_BOX_6,
                         L_ARIAL,"  Utility Services")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  L_UTILITY_LIMIT = agqGENERAL:PROPERTY_LIMIT * (BPSDEFAULT:UTILITY_PERCENT Divide 100)
  If (L_UTILITY_LIMIT > BPSDEFAULT:UTILITY_MAX) Then
    {
      L_UTILITY_LIMIT = BPSDEFAULT:UTILITY_MAX
    }
  L_REVISED_LIMIT    = agqGENERAL:UTILITY_LIMIT
  L_BPSDEFAULT_LIMIT = BPSDEFAULT:UTILITY_LIMIT
  L_LIMIT            = L_UTILITY_LIMIT
  Do PRINT_LIMIT
  Writefile(L_FILE_NAME,"%s%n%s%s%s%s","<033>&a",L_COVERGE_POS+100,
                        "h+0V",L_BOX_6,
                         L_ARIAL,"  Mechanical Breakdown")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")

   Writefile(L_FILE_NAME,"%s","<033>&a3050h+0V")
   Writefile(L_FILE_NAME,"%s","*")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  L_MECHANICAL_LIMIT = agqGENERAL:PROPERTY_LIMIT * (BPSDEFAULT:MECHANICAL_PERCENT Divide 100)
  If (L_MECHANICAL_LIMIT > BPSDEFAULT:MECHANICAL_MAX) Then
    {
      L_MECHANICAL_LIMIT = BPSDEFAULT:MECHANICAL_MAX
    }
  L_REVISED_LIMIT    = agqGENERAL:MECHANICAL_LIMIT
  L_BPSDEFAULT_LIMIT = BPSDEFAULT:MECHANICAL_LIMIT
  L_LIMIT            = L_MECHANICAL_LIMIT

  Do PRINT_LIMIT
   Writefile(L_FILE_NAME,"%s","<033>&a3050h-120V")
   Writefile(L_FILE_NAME,"%s",l_arial)
   Writefile(L_FILE_NAME,"%s","*")

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_ARIAL_ITALIC,"<033>&a",L_COVERGE_POS,
                        "h+120V",
                        "* Annual Aggregate Limit",
                        "<NL>","<NL>")
  Writefile(L_FILE_NAME,"%s%n%s%s%s%s%s","<033>&a",L_COVERGE_POS,"h+0V",
                         L_BULLET_6,
                         L_ARIAL_BOLD,"  Off Premises","<NL>")
  Writefile(L_FILE_NAME,"%s%n%s%s%s%s","<033>&a",L_COVERGE_POS+100,"h+0V",L_BOX_6,
                         L_ARIAL,"  Coverage A")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS,"h+0V",
                       Str(BPSDEFAULT:OFF_PREMISES_A,"ZZZ,ZZZ,ZZ9"))

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS+700,"h+0V",L_ARIAL,"< Total Limit - All Locations","<NL>")
  Writefile(L_FILE_NAME,"%s%n%s%s%s%s","<033>&a",L_COVERGE_POS+100,"h+0V",L_BOX_6,
                         L_ARIAL,"  Coverage B")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

  If bpsdefault:off_premises_b >= agqmaster:off_premises_limit then
    {
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
            L_LIMIT_POS,"h+0V",
            Str(BPSDEFAULT:OFF_PREMISES_B,"ZZZ,ZZZ,ZZ9"))

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
            L_LIMIT_POS+700,"h+0V",L_ARIAL,"< Total Limit - All Locations","<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
            L_REVISED_POS,"h+0V","Revised Limit:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
            L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

    }
  Else
    {
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
            L_LIMIT_POS+700,"h+0V",L_ARIAL,"< Total Limit - All Locations","<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
            L_REVISED_POS,"h+0V","Revised Limit:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
            L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
            L_LIMIT_POS,"h+0V",
            Str(agqMASTER:OFF_PREMISES_LIMIT,"ZZZ,ZZZ,ZZ9"))
    }

/*  If SCIPSCONTROL:PRINT_REVISED_ON_SUPP = 1 Then
    {
      If BPSDEFAULT:OFF_PREMISES_B >= L_OFF_PREMISES_LIMIT Then
        {    -- if < do not print it
          Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                L_LIMIT_POS,"h+0V",
                                Str(BPSDEFAULT:OFF_PREMISES_B,"ZZZ,ZZZ,ZZ9"))
        }
      Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                            L_LIMIT_POS+700,"h+0V",L_ARIAL,"< Total Limit - All Locations","<NL>")

      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_REVISED_POS,"h+0V","Revised Limit:")

      Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

      If bpsdefault:off_premises_b <> l_off_premises_limit and
         bpsdefault:off_premises_b <> agqgeneral:off_premises_limit then
        {
          If agqGENERAL:OFF_PREMISES_LIMIT = l_off_premises_limit Or
             agqGENERAL:OFF_PREMISES_LIMIT = 0 Then
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                     L_LIMIT_POS,"h+0V",
                                     Str(l_off_premises_limit,"ZZZ,ZZZ,ZZ9"))
            }
          Else
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                     L_LIMIT_POS,"h+0V",
                                     Str(agqGENERAL:OFF_PREMISES_LIMIT,"ZZZ,ZZZ,ZZ9"))
            }
        }
      Else
        {
          Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                 L_LIMIT_POS,"h+0V",
                                 Str(0,"ZZZ,ZZZ,ZZ9"))
        }
    }
  Else --do not print revised limit
    {
      If BPSDEFAULT:OFF_PREMISES_B >= l_off_premises_limit Then
        {
          Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                 L_LIMIT_POS,"h+0V",
                                  Str(BPSDEFAULT:OFF_PREMISES_B ,"ZZZ,ZZZ,ZZ9"))
        }
      Else
        {
          Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                 L_LIMIT_POS,"h+0V",
                                 Str(l_off_premises_limit,"ZZZ,ZZZ,ZZ9"))
        }
    }

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  If SCIPSCONTROL:PRINT_REVISED_ON_SUPP = 1 Then
    {
      If BPSDEFAULT:OFF_PREMISES_B >= l_off_premises_limit Then
        {    -- if < do not print it
          Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                L_LIMIT_POS,"h+0V",
                                Str(BPSDEFAULT:OFF_PREMISES_B,"ZZZ,ZZZ,ZZ9"))
        }
      Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                            L_LIMIT_POS+700,"h+0V",L_ARIAL,"< Total Limit - All Locations","<NL>")
      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_REVISED_POS,"h+0V","Revised Limit:")
      Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

      If ((agqGENERAL:OFF_PREMISES_LIMIT = l_off_premises_limit) and
         (bpsdefault:off_premises_b <> l_off_premises_limit) and
         (bpsdefault:off_premises_b <> agqgeneral:off_premises_limit)) Or
         agqGENERAL:OFF_PREMISES_LIMIT = 0 Then
        {
          Writefile(L_FILE_NAME,"!1!%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                L_LIMIT_POS,"h+0V",
                                Str(l_off_premises_limit,"ZZZ,ZZZ,ZZ9"))
        }
      Else
        {
          Writefile(L_FILE_NAME,"!2!%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                L_LIMIT_POS,"h+0V",
                                Str(agqGENERAL:OFF_PREMISES_LIMIT,"ZZZ,ZZZ,ZZ9"))
        }

      If BPSDEFAULT:OFF_PREMISES_B = l_off_premises_limit Then
        {    -- if < do not print it
          Writefile(L_FILE_NAME,"!3!%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                L_LIMIT_POS,"h+0V",
                                Str(0,"ZZZ,ZZZ,ZZ9"))
        }
      Else
        {
          Writefile(L_FILE_NAME,"!4!%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                L_LIMIT_POS,"h+0V",
                                Str(l_off_premises_limit,"ZZZ,ZZZ,ZZ9"))
        }
    }
  Else --do not print revised limit
    {
      If BPSDEFAULT:OFF_PREMISES_B >= l_off_premises_limit Then
        {
          Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",
                                 L_LIMIT_POS,"h+0V",
                                 Str(BPSDEFAULT:OFF_PREMISES_B,"ZZZ,ZZZ,ZZ9"))
        }
      Else
        If agqGENERAL:OFF_PREMISES_LIMIT = l_off_premises_limit Or
           agqGENERAL:OFF_PREMISES_LIMIT  = 0 Then
          {
            Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                 L_LIMIT_POS,"h+0V",
                                 Str(l_off_premises_limit,"ZZZ,ZZZ,ZZ9"))
          }
        Else
          {
            Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                 L_LIMIT_POS,"h+0V",
                                 Str(agqGENERAL:OFF_PREMISES_LIMIT,"ZZZ,ZZZ,ZZ9"))
          }
    }
*/
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS+700,"h+0V",L_ARIAL,"< Total Limit - All Locations",
                        "<NL>","<NL>")
  Writefile(L_FILE_NAME,"%s%n%s%s%s%s","<033>&a",L_COVERGE_POS,"h+0V",
                         L_BULLET_6,L_ARIAL_BOLD,
                         "  Personal Effects")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS,"h+0V",
                        Str(BPSDEFAULT:PERSONAL_EFFECTS,"ZZZ,ZZZ,ZZ9"),
                        "<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s","<NL>","<033>&a",L_COVERGE_POS,"h+0V",
                        L_ARIAL_BOLD,"Debris Removal (Pg. 4)")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_FACTOR_POS,"h+0V","Factor:")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",
                                L_LIMIT_POS,"h+0V",Str(bpsdefault:DEBRIS_REMOVAL_FACTOR,"ZZZZ,ZZZ.99"))

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+120V","Basic Limit:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                         L_LIMIT_POS,"h+0V",Str(BPSDEFAULT:DEBRIS_REMOVAL,"ZZZ,ZZZ,ZZ9"))

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+240V",
                        "Fire Expense Coverages (Pg. 5)","<NL>")
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_ARIAL,"<033>&a",L_COVERGE_POS,"h+0V",l_box_6,l_arial,
                        "  Fire Department Service Charge")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS+250,"h+0V","Limit:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                         L_LIMIT_POS,"h+0V",Str(BPSDEFAULT:FIRE_DEPARTMENT,"ZZZ,ZZZ,ZZ9"),"<NL>")
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_ARIAL,"<033>&a",L_COVERGE_POS,"h+0V",l_box_6,l_arial,
                        "  Fire Extinguisher Recharge Expenses")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS+250,"h+0V","Limit:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                         L_LIMIT_POS,"h+0V",Str(BPSDEFAULT:FIRE_EXTINGUISHER,"ZZZ,ZZZ,ZZ9"),"<NL>","<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                        "Outdoor (Exterior) Signs (Pg. 5)")

  If L_ATTACHED_TO_BUILDING = 1 Then
    {
      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                            "Attached to Building")
    }
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

  L_EXTERIOR_SIGNS_LIMIT = agqGENERAL:PROPERTY_LIMIT  * (BPSDEFAULT:EXTERIOR_SIGNS_PERCENT Divide 100)

L_REVISED_LIMIT    = agqGENERAL:SIGNS_LIMIT
L_BPSDEFAULT_LIMIT = BPSDEFAULT:SIGNS_LIMIT
L_LIMIT            = L_EXTERIOR_SIGNS_LIMIT
Do PRINT_LIMIT

  If L_DEDUCTIBLE_SIGNS_OUTDOOR = 1 Then
    {
      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",L_DEDUCTIBLE_POS,"h+0V",
                        "Deductible:")

      Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
      If (agqGENERAL:SIGNS_LIMIT > 0) Or (BPSDEFAULT:SIGNS_LIMIT > 0) Then
        {
          If agqGENERAL:SIGNS_DEDUCTIBLE[1] > BPSDEFAULT:SIGNS_DEDUCTIBLE Then
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,
                            "<033>&a",L_LIMIT_POS,"h+0V",
                            Str(agqGENERAL:SIGNS_DEDUCTIBLE[1],"ZZZ,ZZZ,ZZ9"),"<NL>")
            }
          Else
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,
                                    "<033>&a",L_LIMIT_POS,"h+0V",
                            Str(BPSDEFAULT:SIGNS_DEDUCTIBLE,"ZZZ,ZZZ,ZZ9"),"<NL>")
            }
        }  --end of if
      Else  --write zero in for the deductable if limit = 0
        {
          Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,
                                "<033>&a",L_LIMIT_POS,"h+0V",
                            Str(0,"ZZZ,ZZZ,ZZ9"),"<NL>")
        }
    }
  If L_SIGNS_NOT_ATTACHED = 1 Then
    {
      Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s","<NL>",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                            "Outdoor (Exterior) Signs (BU 25 18)","<NL>")

      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                            "Not Attached to Building")

      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                            L_BASIC_POS,"h+0V","Basic Limit:")

      Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                            L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

      L_EXTERIOR_SIGNS_LIMIT_NOT_ATTC = 0

      L_REVISED_LIMIT    = agqGENERAL:SIGNS_NOT_ATTACHED_LIMIT
      L_BPSDEFAULT_LIMIT = BPSDEFAULT:SIGNS_LIMIT_NOT_ATTACHED
      L_LIMIT            = L_EXTERIOR_SIGNS_LIMIT_NOT_ATTC
      Do PRINT_LIMIT

      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",L_DEDUCTIBLE_POS,"h+0V",
                            "Deductible:")

      Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                            L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

      If (agqGENERAL:SIGNS_NOT_ATTACHED_LIMIT > 0) Or
         (BPSDEFAULT:SIGNS_LIMIT_NOT_ATTACHED > 0) Then
        {
          If agqGENERAL:SIGNS_DEDUCTIBLE[2] > BPSDEFAULT:SIGNS_DEDUCTIBLE Then
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",L_LIMIT_POS,"h+0V",
                      Str(agqGENERAL:SIGNS_DEDUCTIBLE[2],"ZZZ,ZZZ,ZZ9"),"<NL>")
            }
          Else
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",L_LIMIT_POS,"h+0V",
                        Str(BPSDEFAULT:SIGNS_DEDUCTIBLE,"ZZZ,ZZZ,ZZ9"),"<NL>")
            }
        }  --end of if to make sure signs not attached is greater then 0
      Else
        {
          Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,"<033>&a",L_LIMIT_POS,"h+0V",
                        Str(0,"ZZZ,ZZZ,ZZ9"),"<NL>")
        }
    }  --end of if L_SIGNS_NOT_ATTACHED = 1

  Writefile(L_FILE_NAME,"%s","<FF>")

----------------- PAGE 2

  L_PAGE_NUMBER = L_PAGE_NUMBER + 1
  If SCIPSCONTROL:PRINT_BORDERS_ON_DEC_PAGE = 1 Then
    {
      Writefile(L_FILE_NAME,"%s","<033>&a140h-220V<033>*c10a3100b0P")   --left vertical li
      Writefile(L_FILE_NAME,"%s","<033>&a5585h-0V<033>*c10a3100b0P")   --right vertical
      Writefile(L_FILE_NAME,"%s","<033>&a140h-0V<033>*c5467h20v0P") --top horizontal line to
      Writefile(L_FILE_NAME,"%s","<033>&a140h7300V<033>*c5467h20v0P") --bottom horizontal line
    }
  Writefile(L_FILE_NAME,"%s%s%s%n%s", L_ARIAL_BOLD_9,
                        "<033>&a2800h7250V","-",L_PAGE_NUMBER,"-")
do header
  Writefile(L_FILE_NAME,"%s%s%s%s","<NL>",L_ARIAL_BOLD,
                      "<033>&a180h+0V","Part I - CONTINUED")

  Writefile(L_FILE_NAME,"%s%s%s%s%n%s%s%s%n%s%S",L_ARIAL_BOLD,"<033>&a2300h+0V",
                      "Location","<033>&a3000h+0V",agqLOCATION:PREM_NO,
                      "<033>&a3300h+0V","Building","<033>&a3900h+0V",
                      agqLOCATION:BUILD_NO,"<NL>","<NL>")

  Writefile(L_FILE_NAME,"%s%s%s%s%n%s%s","<NL>","<NL>",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                        "Pollution Clean-Up (Pg. 5)")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
L_LIMIT            = 0 --resets L_LIMIT
L_REVISED_LIMIT    = agqGENERAL:POLLUTION_LIMIT
L_BPSDEFAULT_LIMIT = BPSDEFAULT:POLLUTION_LIMIT

Do PRINT_LIMIT

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_REVISED_POS-709,"h+0V","Separate, Specific Deductible:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$","<NL>","<NL>")
  Writefile(L_FILE_NAME,"%s%n%s%s%s%s","<033>&a",L_COVERGE_POS,"h+0V",
                         L_ARIAL_BOLD,"Property Restrictions (Pg. 8)","<NL>")
  Writefile(L_FILE_NAME,"%s%n%s%s%s%s","<033>&a",L_COVERGE_POS,"h+0V",L_BULLET_6,
                         L_ARIAL,"  Furs")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS,"h+0V",
                       Str(BPSDEFAULT:FURS,"ZZZ,ZZZ,ZZ9"),"<Nl>")
  Writefile(L_FILE_NAME,"%s%n%s","<033>&a",L_COVERGE_POS,"h+0V")
  Writefile(L_FILE_NAME,"%s%s%s",L_BULLET_6,
                         L_ARIAL,"  Jewelry")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS,"h+0V",
                        Str(BPSDEFAULT:JEWELRY,"ZZZ,ZZZ,ZZ9"),"<NL>")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",L_COVERGE_POS+50,"h+0V",
                         L_ARIAL,"  (Jewelry Value Waiver Limit)")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS,"h+0V",
                        Str(BPSDEFAULT:JEWELRY_WAIVER,"ZZZ,ZZZ,ZZ9"),"<NL>","<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                        "Trees, Shrubs, and Plants (Pg. 5)","<NL>")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_REVISED_POS-610,"h+0V","Basic Limit per Occurrence:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS,"h+0V",
                       Str(BPSDEFAULT:TREES_SHRUBS[1],"ZZZ,ZZZ,ZZ9"),"<Nl>")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_REVISED_POS-1360,"h+0V","Basic Limit on Any one Tree, Plant or Shrub:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS,"h+0V",
                       Str(BPSDEFAULT:TREES_SHRUBS[2],"ZZZ,ZZZ,ZZ9"),"<Nl>","<NL>")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL_BOLD,"<033>&a",
                        L_COVERGE_POS,"h+0V","Valuable Papers and Records (Pg. 6)")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")


  L_VALUEABLE_PAPERS_LIMIT = agqGENERAL:PROPERTY_LIMIT * (BPSDEFAULT:VALUABLE_PERCENT Divide 100)

  L_REVISED_LIMIT    = agqGENERAL:VALUABLE_PAPERS_LIMIT
  L_BPSDEFAULT_LIMIT = BPSDEFAULT:VALUABLE_PAPERS_LIMIT
  L_LIMIT            = L_VALUEABLE_PAPERS_LIMIT
  Do PRINT_LIMIT   --valueable_papers

  If L_WATER_DAMAGE = 1 Then
    {
      Writefile(L_FILE_NAME,"%s%s%s%n%s%s","<Nl>",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                     "Water Damage")
      Writefile(L_FILE_NAME,"%s","<033>&a+30h-30V")
      Writefile(L_FILE_NAME,"%s","<033>*c75h8v0P")
      Writefile(L_FILE_NAME,"%s","<033>&a+105h+30V")

      Writefile(L_FILE_NAME,"%s%s","Sewer / Drain Backup (Pg. 9)","<NL>")
      Writefile(L_FILE_NAME,"%s%s%n%s%s%s%n%s%s",L_ARIAL,"<033>&a",
                    L_COVERGE_POS+100,"h+0V","When BU 50 03 applies:",
                    "<033>&a",L_BASIC_POS,"h+0V",
                    "Basic Limit:")
      Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                    L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

      L_WATER_BACKUP_LIMIT = agqGENERAL:PROPERTY_LIMIT * (BPSDEFAULT:SEWER_BKUP_PERCENT Divide 100)

      L_REVISED_LIMIT    = agqGENERAL:WATER_BACKUP_LIMIT
      L_BPSDEFAULT_LIMIT = BPSDEFAULT:WATER_BACKUP_LIMIT
      L_LIMIT            = L_WATER_BACKUP_LIMIT
      Do PRINT_LIMIT
    }

  Writefile(L_FILE_NAME,"%s%s%s%n%s%s","<NL>",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                        "Outdoor (Exterior) Building Glass (Pg. 10)")
  If L_GLASS_SQFT = 1 Then
    {
      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS+180,"h+0V","Sq. Ft.:")
    }
  Else
    {
      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS+180,"h+0V","Linear:")
    }
  Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                         L_LIMIT_POS,"h+0V",
                         Str(agqGENERAL:GLASS_LIMIT,"ZZZ,ZZZ,ZZ9"),
                         "<NL>")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_REVISED_POS-600,"h+0V","Deductible per Occurrence:")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

  If agqGENERAL:INCLUDE_GLASS_DEDUCTIBLE = "Y" Then
    {
      Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                         L_LIMIT_POS,"h+0V",
                         Str(agqGENERAL:GLASS_DEDUCTIBLE,"ZZZ,ZZZ,ZZ9"),"<NL>")
    }
  Else
    {
      Writefile(L_FILE_NAME,"%s","<NL>")
    }

  Writefile(L_FILE_NAME,"%s%s%s%s%s",L_ARIAL_BOLD,"<033>&a1150h+120V",
                        "PART II","<NL>","<NL>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                        "Fire and Explosion Liability (Pg. 16)")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

L_REVISED_LIMIT    = agqGENERAL:FIRE_LIMIT
L_BPSDEFAULT_LIMIT = BPSDEFAULT:FIRE_LIMIT
L_LIMIT            = 0 --resets L_LIMIT
Do PRINT_LIMIT

  Writefile(L_FILE_NAME,"%s%s%s%n%s%s","<NL>",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                        "Personal Injury / Advertising Injury (Pg. 17 & 18)")

  Access agqend,
             Set agqend:app_no    = l_app_no,
                 agqend:prem_no      = agqlocation:prem_no,
                 agqend:build_no     = agqlocation:build_no, Generic
  --cheking for deletion of personal injury on part II
  L_FMA100 = 0
  L_BU0507 = 0

  While agqend:app_no    = l_app_no And
        agqend:prem_no      = agqlocation:prem_no and
        agqend:build_no     = agqlocation:build_no
    {
    if agqend:lob_end_code = "X" then
    begin
      If agqend:CODE One Of "FMA100" Then
        {
          L_FMA100 = 1
        }
      If agqend:CODE One Of "BU0507" Then
        {
          Access agqOPERATIONS,
                 Set agqOPERATIONS:app_no    = l_app_no , generic

          If (agqOPERATIONS:EXCLUDE_PRODUCTS[2] = "Y") Then
            {
              L_BU0507 = 1  --only need to to see if personal liability is checkd on bu0507
            }
        }
        end
      Next agqend
    }

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")

  Writefile(L_FILE_NAME,"%s","<033>&f0S")--pop to return to basic limit

  If L_FMA100 = 1 Then  --endorsement deletes coverage for personal injury
    {
      Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                            L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                             L_LIMIT_POS,"h+0V",Str(0,"ZZZ,ZZZ,ZZ9"))

      If SCIPSCONTROL:PRINT_REVISED_ON_SUPP = 1 Then
        {
          Writefile(L_FILE_NAME,"%s%s%s%n%s%s","<NL>",L_ARIAL,"<033>&a",
                                L_REVISED_POS,"h+0V","Revised Limit:")
          Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                                L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
          Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                L_LIMIT_POS,"h+0V",Str(0,"ZZZ,ZZZ,ZZ9"))

        }
    }
  Else
  If L_BU0507 = 1 Then
    {
      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL, "<033>&a",
                             L_DOLLAR_POS,"h+0V","Not Applicable")

      If SCIPSCONTROL:PRINT_REVISED_ON_SUPP = 1 Then
        {
           Writefile(L_FILE_NAME,"%s%s%s%n%s%s","<NL>",L_ARIAL,"<033>&a",
                                 L_REVISED_POS,"h+0V","Revised Limit:")
           Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                                L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
           Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                                L_LIMIT_POS,"h+0V",Str(0,"ZZZ,ZZZ,ZZ9"))

        }
   }
 Else
   {
     Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

     L_REVISED_LIMIT    = L_PERSONAL_ADD_INJURY
     L_BPSDEFAULT_LIMIT = BPSDEFAULT:PERSONAL_ADD_INJURY
     L_LIMIT            = 0
     Do PRINT_LIMIT

   }

  Writefile(L_FILE_NAME,"%s","<033>&f1S") --pushes current cursor onto stack

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                        L_LIMIT_POS+700,"h+0V",L_ARIAL,"< Limit - All Locations",
                        "<NL>")

  If SCIPSCONTROL:PRINT_REVISED_ON_SUPP = 1 Then
    {
      Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s",L_LETTER_GOTHIC_BOLD_12, "<033>&a",
                L_LIMIT_POS+700,"h+0V",L_ARIAL,"< Limit - All Locations",
                "<NL>")
    }

  Writefile(L_FILE_NAME,"%s%s%n%s%s%s%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,
                        "h+120V",l_arial_bold,"OTHER SPECIAL POLICY CONDITIONS","<nl>","<nl>")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                        "Underground Landscape Sprinkler Systems")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_limit_POS,"h+0V",L_letter_gothic_bold_12,"      5,000")

  Writefile(L_FILE_NAME,"%s","<033>&a380h+120V")
  Writefile(L_FILE_NAME,"%s",l_arial)
  Writefile(L_FILE_NAME,"%s","Coverage A is extended to cover underground landscape")
  Writefile(L_FILE_NAME,"%s","<033>&a380h+120V")
  Writefile(L_FILE_NAME,"%s","sprinkler systems at the described premises.")

--  L_REVISED_LIMIT    = agqGENERAL:FIRE_LIMIT
  L_LIMIT            = 0 --resets L_LIMIT

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+240V",
                        "Computer Coverage")

 Access agqend,
    Set agqend:app_no    = agqlocation:app_no,
        agqend:prem_no      = agqlocation:prem_no,
        agqend:build_no     = agqlocation:build_no, generic

 While agqEND:app_no    = agqlocation:app_no And
       agqend:prem_no      = agqlocation:prem_no and
       agqend:build_no     = agqlocation:build_no
  {
    If agqend:code one of "SIR003" then
      {
      if agqend:code one of "SIR003" then
          Writefile(L_FILE_NAME,"%s%s%n%s%s",l_arial,"<033>&a",
                    L_COVERGE_POS+200,"h+120V","When SIBU-0005 applies:")

      Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                            L_BASIC_POS,"h+0V","Basic Limit:")
      Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                            L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

      Writefile(L_FILE_NAME,"%s%s%n%s%s",l_letter_gothic_bold_12, "<033>&a",
                L_LIMIT_POS,"h+0V",Str(bpsdefault:computer_limit,"ZZZ,ZZZ,ZZ9"))

      Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",L_BASIC_POS-100,"h+120V",l_arial,"Revised Limit:")

Access agqcomputer,
   Set agqcomputer:app_no    = l_app_no,
       agqcomputer:PREM_NO      = agqEND:PREM_NO,
       agqcomputer:BUILD_NO     = agqEND:BUILD_NO, Generic

      if agqcomputer:limit[1] <> bpsdefault:computer_limit then
        {
          Writefile(L_FILE_NAME,"%s%s%n%s%s",l_letter_gothic_bold_12, "<033>&a",
                    L_LIMIT_POS,"h+0V",Str(agqcomputer:limit[1],"ZZZ,ZZZ,ZZ9"))
        }
      }
   next agqend
  }

  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
            L_DOLLAR_POS,"h+0V",l_arial_bold,"$")

  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+240V",
                        "Arson Award")
  Writefile(L_FILE_NAME,"%s%s%n%s%s",L_ARIAL,"<033>&a",
                        L_BASIC_POS,"h+0V","Basic Limit:")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_limit_POS,"h+0V",L_letter_gothic_bold_12,"      5,000")


  Writefile(L_FILE_NAME,"%s","<033>&a380h+120V")
  Writefile(L_FILE_NAME,"%s",l_arial_italic)
  Writefile(L_FILE_NAME,"%s","We ")
  Writefile(L_FILE_NAME,"%s",l_arial)
  Writefile(L_FILE_NAME,"%s","will reimburse ")
  Writefile(L_FILE_NAME,"%s",l_arial_italic)
  Writefile(L_FILE_NAME,"%s","you ")
  Writefile(L_FILE_NAME,"%s",l_arial)
  Writefile(L_FILE_NAME,"%s","for any reward ")
  Writefile(L_FILE_NAME,"%s",l_arial_italic)
  Writefile(L_FILE_NAME,"%s","you ")
  Writefile(L_FILE_NAME,"%s",l_arial)
  Writefile(L_FILE_NAME,"%s","give to anyone who discloses information that ")
  Writefile(L_FILE_NAME,"%s","<033>&a380h+120V")
  Writefile(L_FILE_NAME,"%s",l_arial)
  Writefile(L_FILE_NAME,"%s","leads to the conviction of a person or persons for arson at the described premises.  No")
  Writefile(L_FILE_NAME,"%s","<033>&a380h+120V")
  Writefile(L_FILE_NAME,"%s",l_arial)
  Writefile(L_FILE_NAME,"%s","deductible applies to this special provision.")
  Writefile(L_FILE_NAME,"%s","<NL>")
  Writefile(L_FILE_NAME,"%s","<NL>")


--  L_REVISED_LIMIT    = agqGENERAL:FIRE_LIMIT
  L_LIMIT            = 0 --resets L_LIMIT

  Writefile(L_FILE_NAME,"%s%s%s%n%s%s","<NL>",L_ARIAL_BOLD,"<033>&a",L_COVERGE_POS,"h+0V",
                        "Liquor Receipts")
  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$")

 Access agqendorse,
    Set agqendorse:app_no    = agqlocation:app_no,
        agqendorse:prem_no      = agqlocation:prem_no,
        agqendorse:build_no     = agqlocation:build_no, generic

l_bu2597 = 0
 While agqendorse:app_no    = agqlocation:app_no And
       agqendorse:prem_no      = agqlocation:prem_no and
       agqendorse:build_no     = agqlocation:build_no
  {
    If agqendorse:code one of "BU2597" then
      {
        l_bu2597 = 1
        Writefile(L_FILE_NAME,"%s%s%n%s%s",l_letter_gothic_bold_12, "<033>&a",
                L_LIMIT_POS,"h+0V",Str(agqendorse:limit[1],"ZZZ,ZZZ,ZZ9"))
      }

   next agqendorse
  }

if l_bu2597 = 0 then
    begin
        Writefile(L_FILE_NAME,"%s%s%n%s%s",l_letter_gothic_bold_12, "<033>&a",
                L_LIMIT_POS,"h+0V",str(0,"ZZZ,ZZZ,ZZ9"))
    end




/*--------------------------------------------------------------------------
 The following code is for non-manditory endorsements
 ---------------------------------------------------------------------------*/
  Access agqend,
             Set agqend:app_no    = l_app_no,
                 agqend:prem_no      = agqlocation:prem_no,
                 agqend:build_no     = agqlocation:build_no, Generic

  While agqend:app_no    = l_app_no And
        agqend:prem_no      = agqlocation:prem_no and
        agqend:build_no     = agqlocation:build_no
    {
    if agqend:lob_end_code = "X" then
    begin
      If L_LINE_PCOUNTER >= L_MAX_LINES - 6 Then
        {
          L_PAGE_NUMBER = L_PAGE_NUMBER +1
          Writefile(L_FILE_NAME,"%s%s%s%s%n%s","<FF>",L_ARIAL_BOLD_9,
                                "<033>&a2800h7250V","-",
                                L_PAGE_NUMBER,"-")
          L_LINE_PCOUNTER = 1
         --border
          If SCIPSCONTROL:PRINT_BORDERS_ON_DEC_PAGE = 1 Then
            {
              Writefile(L_FILE_NAME,"%s","<033>&a140h0V<033>*c10a3045b0P")   --left vertical li
              Writefile(L_FILE_NAME,"%s","<033>&a5585h0V<033>*c10a3045b0P")   --right vertical
              Writefile(L_FILE_NAME,"%s","<033>&a140h0V<033>*c5467h20v0P") --top horizontal line to
              Writefile(L_FILE_NAME,"%s","<033>&a140h7300V<033>*c5467h20v0P") --bottom horizontal line
            }
          Writefile(L_FILE_NAME,"%s%s","<033>&a+0h0V","<NL>") --sets starting point for newpage
          Writefile(L_FILE_NAME,"%s%s%s%s",L_ARIAL_BOLD,"<033>&a1800h+0V",
                           "FORMS AND ENDORSEMENTS CONTINUED","<NL>")
          L_LINE_PCOUNTER = L_LINE_PCOUNTER +1

          Writefile(L_FILE_NAME,"%s%s%s","<033>&a150h-80V<033>*c5455h20v0P","<NL>",
                               "<033>&a+0h+20V")
          L_LINE_PCOUNTER = L_LINE_PCOUNTER +1
        }

/*      If agqend:PRINT_FORM = "Y" Then
        {
          Writefile(L_FILE_NAME,"%s%s%s%s%s%s",L_ARIAL,"<033>&a1000h+0V",
                                agqend:FORM_EDITION,"<033>&a2400h+0V",
                                agqend:DESCRIPTION,"<NL>")
          L_LINE_PCOUNTER = L_LINE_PCOUNTER + 1
        }*/
        end
      Next agqend
    }
  Writefile(L_FILE_NAME,"%s","<FF>")


If L_PAGE_NUMBER = 3 Then
  {
    Writefile(L_FILE_NAME,"%s","<FF>")
  }

  Next agqLOCATION
}

update

Screen Exit
  Writefile(L_FILE_NAME,"%s%s",L_FORMFEED,L_RESET)
  Closefile(L_FILE_NAME)

Procedure Definition

procedure header
begin
  Access SFSOPTEND,
     Set SFSOPTEND:COMPANY_ID       = L_COMPANY_ID,
         SFSOPTEND:STATE            = L_STATE,
         SFSOPTEND:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS,
         sfsoptend:code             = I_CODE,generic

   While SFSOPTEND:COMPANY_ID       = L_COMPANY_ID and
         SFSOPTEND:STATE            = L_STATE and
         SFSOPTEND:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS and
         sfsoptend:code             = I_CODE

     {  --start of sfsoptend check
       If (agqgeneral:eff_date >= sfsoptend:eff_date and
          (agqgeneral:eff_date < sfsoptend:exp_date or
           sfsoptend:exp_date = 0)) then
         {
           l_eff_date = sfsoptend:eff_date
         }
       next sfsoptend
     }

  Access SFSOPTEND,
     Set SFSOPTEND:COMPANY_ID       = L_COMPANY_ID,
         SFSOPTEND:STATE            = L_STATE,
         SFSOPTEND:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS,
         sfsoptend:code             = I_CODE,
         SFSOPTEND:EFF_DATE         = L_EFF_DATE, exact

  If sfsoptend:edition <> 0 then
    {
      Writefile(L_FILE_NAME,"%s",L_ARIAL_9)
      Writefile(L_FILE_NAME,"%s","<033>&a420h7080V")
      Writefile(L_FILE_NAME,"%s","Ed. ")
      Writefile(L_FILE_NAME,"%n",sfsoptend:edition)
    }

  Writefile(L_FILE_NAME,"%s",L_ARIAL_9)
  Writefile(L_FILE_NAME,"%s","<033>&a420h7200V")
  Writefile(L_FILE_NAME,"%s",l_copyright_6)
  Writefile(L_FILE_NAME,"%s"," ")
  Writefile(L_FILE_NAME,"%s",L_ARIAL_9)
  Writefile(L_FILE_NAME,"%s",sfsoptend:COPYRIGHT)

  Writefile(L_FILE_NAME,"%s%s%s",L_ARIAL_BOLD_12,"<033>&a180h0V",
                      "RESTAURANT BOP DECLARATIONS SUPPLEMENT")
  Writefile(L_FILE_NAME,"%s",L_ARIAL_BOLD_12)
  Writefile(L_FILE_NAME,"%s","<033>&a4300h+0V")
  Writefile(L_FILE_NAME,"%s","SIBU DS 02")
  Writefile(L_FILE_NAME,"%s"," ")
  Writefile(L_FILE_NAME,"%s",L_ARIAL_BOLD_9)
  Writefile(L_FILE_NAME,"%s","09 11")

  Writefile(L_FILE_NAME,"%s%s","<033>&a140h+60V<033>*c5467h8v0P","<NL>")

  Writefile(L_FILE_NAME,"%s%s%s%s","<NL>",L_ARIAL_BOLD,
                      "<033>&a180h+0V","Application Number: ")

--  Writefile(L_FILE_NAME,"%s",Trun(SFSLINE:ALPHA))

  Writefile(L_FILE_NAME,"%n%s%s%s%d%s%s",l_app_no,"<033>&a2775h+0V",
                        "Effective:","<033>&a3250h+0V",agqgeneral:EFF_DATE,"<NL>",
                        "<NL>")

end

Procedure PRINT_LIMIT

{
  If SFSLINE:OPTION = "P" Then        -- means it is chatham square
    {
      If SCIPSCONTROL:PRINT_REVISED_ON_SUPP = 1 Then
        {
          If (L_LIMIT >= L_BPSDEFAULT_LIMIT) Or
              L_LIMIT >= L_REVISED_LIMIT  Then
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,
                        "<033>&a",L_LIMIT_POS,"h+0V",
                         Str(L_LIMIT,"ZZZ,ZZZ,ZZ9"))
            }  --l_limit is greater then both bpsdefault and revised
          Else
            {
              If (L_BPSDEFAULT_LIMIT = L_REVISED_LIMIT) Then
                {
                  Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",L_LIMIT_POS,"h+0V",
                                  L_LETTER_GOTHIC_BOLD_12 ,
                                  Str(L_BPSDEFAULT_LIMIT,"ZZZ,ZZZ,ZZ9"))

                }
              Else
                If (L_BPSDEFAULT_LIMIT > L_REVISED_LIMIT) Then
                  {
                    Writefile(L_FILE_NAME,"%s%n%s%s%s","<033>&a",L_LIMIT_POS,"h+0V",
                                  L_LETTER_GOTHIC_BOLD_12 ,Str(L_BPSDEFAULT_LIMIT,"ZZZ,ZZZ,ZZ9"))
                  }
            }
          Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s%n%s%s%s%s","<NL>",L_ARIAL,"<033>&a",
                        L_REVISED_POS,"h+0V","Revised Limit:","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$",
                        L_LETTER_GOTHIC_BOLD_12)

          If L_REVISED_LIMIT > L_BPSDEFAULT_LIMIT Then
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,
                                "<033>&a",L_LIMIT_POS,"h+0V",
                               Str(L_REVISED_LIMIT,"ZZZ,ZZZ,ZZ9"))
           }
           Writefile(L_FILE_NAME,"%s","<NL>")
        } --end of print revised on supp
      Else
        {
          If (L_LIMIT >= L_BPSDEFAULT_LIMIT) And
             (L_LIMIT >= L_REVISED_LIMIT) Then
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,
                        "<033>&a",L_LIMIT_POS,"h+0V",
                        Str(L_LIMIT,"ZZZ,ZZZ,ZZ9")) --basic limit
            }
          Else
            If (L_LIMIT < L_BPSDEFAULT_LIMIT) And       --default value is printed
               (L_BPSDEFAULT_LIMIT >= L_REVISED_LIMIT) Then
              {
                Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,
                          "<033>&a",L_LIMIT_POS,"h+0V",
                          Str(L_BPSDEFAULT_LIMIT,"ZZZ,ZZZ,ZZ9")) --basic limit
              }
            Else
              {
                Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,
                         "<033>&a",L_LIMIT_POS,"h+0V",
                          Str(L_REVISED_LIMIT,"ZZZ,ZZZ,ZZ9"))  --revised limit
              }
            Writefile(L_FILE_NAME,"%s","<NL>") --moves "Applies only with coverage B" down two lines
        }

    }
  Else  -- if not chatham square do below for limit
    {
      If SCIPSCONTROL:PRINT_REVISED_ON_SUPP = 1 Then
        {
          If (L_BPSDEFAULT_LIMIT >= L_REVISED_LIMIT) Then
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s",L_LETTER_GOTHIC_BOLD_12,
                        "<033>&a",L_LIMIT_POS,"h+0V",
                         Str(L_BPSDEFAULT_LIMIT,"ZZZ,ZZZ,ZZ9"))
            }  --if l_bpsdefault_limit < l_revised_limit  do not print basic limit
          Writefile(L_FILE_NAME,"%s%s%s%n%s%s%s%n%s%s%s%s","<NL>",L_ARIAL,"<033>&a",
                        L_REVISED_POS,"h+0V","Revised Limit:","<033>&a",
                        L_DOLLAR_POS,"h+0V",L_ARIAL_BOLD,"$",
                        L_LETTER_GOTHIC_BOLD_12)
          If (L_BPSDEFAULT_LIMIT = L_REVISED_LIMIT) Then
            {
              Writefile(L_FILE_NAME,"%s%n%s%s%s%s","<033>&a",L_LIMIT_POS,"h+0V",
                               L_LETTER_GOTHIC_BOLD_12 ,Str(0,"ZZZ,ZZZ,ZZ9"),
                               "<NL>")
            }
          Else
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,
                                "<033>&a",L_LIMIT_POS,"h+0V",
                               Str(L_REVISED_LIMIT,"ZZZ,ZZZ,ZZ9"),"<NL>")
           }
        }
      Else --do not print the revised limit
        {
          If (L_BPSDEFAULT_LIMIT >= L_REVISED_LIMIT) Then
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,
                        "<033>&a",L_LIMIT_POS,"h+0V",
                         Str(L_BPSDEFAULT_LIMIT,"ZZZ,ZZZ,ZZ9"),"<NL>")
            }  --print l_bpsdefault_limit
          Else --print l_revised_limit
            {
              Writefile(L_FILE_NAME,"%s%s%n%s%s%s",L_LETTER_GOTHIC_BOLD_12,
                        "<033>&a",L_LIMIT_POS,"h+0V",
                         Str(L_REVISED_LIMIT,"ZZZ,ZZZ,ZZ9"),"<NL>")
            }
        }
    }
}


End
