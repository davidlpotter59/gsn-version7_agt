%%
Program
        Name = "agtup200" ;
        Type = "file" ;
        Padcharacter = Space ;
        Domain = "sfsdefault" ;

        Global Unsigned Ascii Number G_APP_NO[11] ,
                                     g_prem_no[4],
                                     g_build_no[4],
                                     G_LINE_OF_BUSINESS[4] ,
                                     g_deductible[5] ;

        local rwdate l_bu1526_eff_date ;

        local array[50] of signed ascii number l_original_bop_premium[9] ;

        local array[50] of unsigned ascii number l_original_building_premium[6],
                                                 l_original_property_premium[6],
                                                 l_original_property_special[6],
                                                 l_original_liability_charge[4] ;

        local signed ascii number l_eq_building_premium[9]=0/dec=2,
                                  l_eq_contents_premium[9]=0/dec=2 ,
                                  l_total_boiler[6]=0,
                                  l_total_territory[6]=0,
                                  l_total_territory_1[6]=0,
                                  l_total_boiler_1[6]=0,
                                  l_total_terrorism[6]=0,
                                  l_total_terrorism_1[6]=0,
                                  l_total_pliga[6]=0,
                                  l_total_pliga_1[6]=0;

        Local Signed Ascii Number   L_PREM[8]=0 ,
                                    L_LOC_TOTAL[8]=0 ,
                                    l_previous_total[8]=0,
                                    l_hired_nonowned_premium[6]=0,
                                    l_previous_surcharge[8]=0,
                                    L_LOC_TOTAL_1[8]=0 ,
                                    L_LOC_TOTAL_2[8]=0,
                                    l_bop_premium[9]=0,
                                    l_hold_bop_premium[9]=0,
                                    L_END_PREMIUM[8]=0 ,
                                    l_build_no[4]=0,
                                    l_adjustment_to_meet_minimum[8]=0,
                                    l_total_printers[8]=0,
                                    l_printers_total[8]=0,
                                    L_IRPM_TOTAL[6]=0 ,
                                    l_premium[9]=0 ,
                                    L_MISC_PREMIUM[8]=0 ,
                                    L_OPTIONAL[8]=0 ,
                                    L_PRINTERS_PERCENT[4]=0/decimals=2,
                                    l_package_deviation[4]=0/dec=2,
                                    L_PRINTERS_CREDIT[6]=0 ,
                                    L_PERCENT_OCCUPIED[3]=0,
                                    L_BOILERS_MINIMUM[8]=0,
                                    L_BUYBACK_OPTION_TOTAL[8]=0,
                                    l_fungi_total[8]=0,
                                    L_TOTAL[8]=0 ,
                                    L_TOTAL_1[8]=0,
                                    L_TOTAL_2[8]=0,
                                    l_total_3[8]=0,
                                    l_total_6[8]=0,
                                    L_TERRITORY_RATING[8]=0,
                                    L_BOILER_PREM_TOTAL[8]=0 ,
                                    l_boiler_printer_total[8]=0,
                                    L_TOTAL_END[8]=0 ,
                                    L_COMM[8]=0/dec=4 ,
                                    L_PACKAGE[8]=0/dec=3 ,
                                    L_IRPM[8]=0/dec=4 ,
                                    L_INSTALLMENT[4]=0 ,
                                    L_RATE_FACTOR[1]=0/dec=2 ,
                                    L_CREDIT_FACTOR[8]=0/dec=3 ,
                                    L_FINAL_TOTAL[8]=0 ,
                                    L_BOILER_PREM[6]=0,
                                    L_MAX_CREDITS[6]=0/decimals=3,
                                    l_location_new_total[8]=0,
                                    L_BPSCREDITS_MAXIMUM[3]=0/decimals=2 ;

        Local Unsigned Ascii Number L_MINIMUM[4]=0 ,
                                    l_row,
                                    i_comm[4]=0/dec=2,
                                    l_agent_no[4],
                                    l_boiler_deductible_factor[5]=0/dec=3,
                                    i_habitational_comm[4]=0/dec=2,
                                    i_renewal_comm[4]=0/dec=2,
                                    l_agent_minimum[4]=0,
                                    l_basic_premium[6],
                                    l_bu2510_premium[5]=0,
                                    l_bu2597_premium[5]=0,
                                    l_default_off_premises_limit[5],
                                    l_restaurant_premium[4]=0,
                                    l_mcp140_limit[8]=0,
                                    i_identity_theft_comm[4]=0/dec=2,
                                    l_identity_factor[8]=0/dec=4,
                                    l_col,
                                    l_zipcode[9]=0,
                                    l_building_code_percent[2]=0,
                                    l_territory_sub_code[4]=10,
                                    l_total_all_locations[8]=0,
                                    l_total_basic_premium[8]=0,
                                    l_total_basic_premium_1[8]=0,
                                    l_val_zipcode[9],
                                    l_bu1526_factor[4]/dec=3,
                                    l_additional_total[6],
                                    l_minimum_boiler[4]=0,
                                    l_agqtotals_minimum[6]=0,
                                    l_minimum_1[4]=0,
                                    l_identity_theft[4]=0,
                                    l_tier[2]=0,
                                    l_tier_factor[6]=0/dec=4,
                                    l_fire_premium[6]=0,
                                    l_liability_code[1]=0,
                                    l_location_credit[2]=0,
                                    l_location_count[2]=0,
                                    l_no_locations[2]=0,
                                    l_count_locations[2]=0,
                                    l_employee_limit[8]=0,
                                    L_CSEXEC_NUMBER[12] ,
                                    l_fuel_pump_charge[3]=0,
                                    l_liability_charge_2[4]=0,
                                    l_liability_charge_3[4]=0,
                                    l_end_sequence[4]=0,
                                    l_short_rate[4]=0/dec=2,
                                    L_OFF_PREMISE_PREM[6] ,
                                    l_off_premises_premium[6]=0,
                                    l_off_premises_limit[8]=0,
                                    l_agq_building_premium[6]=0,
                                    l_eq_construction[1]=0,
                                    l_eq_building_rate[5]=0/dec=3,
                                    l_eq_contents_rate[5]=0/dec=3,
                                    l_eq_deductible[5]=0,
                                    l_deductible_rate[4]=0/dec=2,
                                    l_deductible_per[2]=0 ,
                                    l_eq_deduct_rate[4]=0/dec=2 ,
                                    l_agq_property_premium[6]=0,
                                    l_agq_special_premium[6]=0,
                                    l_sub[2]=0,
                                    l_sub_5[2]=0,
                                    l_sub_1[2]=0,
                                    l_minimum_premium_rating[2]=0,
                                    l_change_minimum_rating[1]=0,
                                    l_liability_rate_or_charge[1]=0,
                                    l_mp_building_property[1]=0,
                                    L_FMA_FACTOR[4]=0/decimals=2,
                                    l_apt_comm_rate[4]=0/dec=2,
                                    l_fungi_factor[6]=0/dec=4,
                                    l_fungi_minimum[4]=0,
                                    l_location_premium_10[8]=0,
                                    l_sfpmaster_total_10[8]=0,
                                    l_location_premium_11[8]=0,
                                    l_rating_territory_factor[5]=0/dec=3,
                                    l_printer[4]=0,
                                    L_TYPE[1]=0,
                                    L_AGENT_COMM[4]=0/decimals=2,
                                    L_CUSTOMER_ADJ_RATE[8]=0/decimals=4,
                                    L_CUSTOMER_ADJ_RATE_SPECIAL[8]=0/decimals=4,
                                    L_LOSS_INCOME_FACTOR_1[3]=0/decimals=2,
                                    L_AR_LIMIT[8]=0,
                                    L_AR_LIMIT_1[8]=0,
                                    L_UTILITY_LIMIT[8]=0,
                                    l_employee_dishonesty[8]=0,
                                    L_COMPUTER_LIMIT[8]=0,
                                    l_computer_limit_1[8]=0,
                                    l_computer_limit_2[8]=0,
                                    l_ar_percent[2]=0,
                                    l_extra_expense_percent[2]=0,
                                    l_signs_percent[2]=0,
                                    l_water_backup_percent[2]=0,
                                    l_valuable_papers_percent[2]=0,
                                    l_computer_hardware_percent[2]=0,
                                    l_computer_software_percent[2]=0,
                                    l_utility_percent[2]=0,
                                    l_mechanical_percent[2]=0,
                                    l_glass_percent[2]= 0,
                                    l_indoor_glass_percent[2]=0,
                                    L_MECHANICAL_LIMIT[8]=0,
                                    L_EMPLOYEE_DIS_LIMIT[8]=0,
                                    L_EXTERIOR_SIGNS_LIMIT[8]=0,
                                    L_INDOOR_GLASS_LIMIT[8]=0,
                                    L_TERRITORY_BOILER_MINIMUM[8]=0,
                                    L_COUNT[2]=0,
                                    L_WATER_BKUP_LIMIT[8]=0,
                                    L_VALUE_LIMIT[8]=0,
                                    L_VALUE_LIMIT_1[8]=0,
                                    I_CSEXEC_NUMBER[12] ,
                                    L_EDP_LIMIT[8]=0,
                                    L_SURCHARGE[6]=0,
                                    L_SURCHARGE_FACTOR[8]=0/dec=6,
                                    L_SURCHARGE_MINIMUM[2]=0,
                                    L_BOILERS_PREM[6]=0,
                                    L_RECEIPTS[8]=0,
                                    L_RECEIPTS_LIMIT[8]=0,
                                    L_RECEIPTS_CHARGE[4]=0,
                                    L_PRINTERS_ERROR[4]=0;
        Unsigned Ascii Number L_TERRORISM_PREMIUM[8]/decimals =0;
        Unsigned Ascii Number L_tpd6_TERRORISM_PREMIUM[8]/decimals =0;
        Unsigned Ascii Number L_TERROR_PERCENTAGE[5]/decimals=4;
        Unsigned Ascii Number L_TERROR_MINIMUM[3];
        Unsigned Ascii Number L_FOUND[1];
        Unsigned Ascii Number L_SUB_CODE[4];
        Unsigned Ascii Number L_PREM_NO[4];
        Wdate L_TERROR_EFF_DATE;

        local date l_surcharge_date[8] ;
        local wdate l_bpsdefault2_eff_date ;

        Local String L_MISC[1]="N" ,
                     l_split_comm[1]="",
                     l_str_zipcode[9]="",
                     l_code_1[7]="",
                     l_terror_remove_code[7]="",
                     l_add_endorsement[1]="N",
                     l_extend_hired_nonowned[1],
                     l_bu2597_mp[1]="N",
                     l_delete_hired_nonowned[1],
                     l_special_enhancement[1],
                     l_enter,
                     L_MINIMUM_APPLIES[1]="N" ,
                     l_liability_first[1]="Y",
                     L_DESCRIPTION[75],
                     l_policy_wide_First[1]="Y",
                     L_FORM_EDITION[25],
                     L_FIRST[1]="Y",
                     l_commandline_1[19]="",
                     l_boiler_added[1]="N",
                     L_FMA[1]="N",
                     l_supplemental_form[7],
                     L_SPRINKLERED[1]="N",
                     L_BUYBACK[1]="N";

        Local String L_FIRST_TIME[1]="Y";
        Unsigned Ascii Number L_HOLD_PAYMENT_PLAN[4]=0;
        Signed Ascii Number L_SUB_TOTAL[9]=0/decimals=2;
        Unsigned Ascii Number L_BUILD[4];

        Include "boprate.var"

initialisation
G_APP_NO   = val(commandline[1,11])
g_deductible = val(commandline[12,16])
L_PREM=0
l_hired_nonowned_premium = 0
L_LOC_TOTAL=0
l_update_sfpend_premium=0
L_LOC_TOTAL_1=0
L_LOC_TOTAL_2=0
L_END_PREMIUM=0
l_liability_first="Y"
l_total_printers=0
l_adjustment_to_meet_minimum = 0
l_printers_total=0
L_IRPM_TOTAL=0
l_premium=0
L_MISC_PREMIUM=0
L_OPTIONAL=0
L_PRINTERS_PERCENT=0
L_PRINTERS_CREDIT=0
L_PERCENT_OCCUPIED=0
L_BOILERS_MINIMUM=0
L_BUYBACK_OPTION_TOTAL=0
L_TOTAL=0
L_TOTAL_1=0
l_form =0
L_TOTAL_2=0
l_total_3=0
L_TERRITORY_RATING=0
L_BOILER_PREM_TOTAL=0
l_boiler_printer_total=0
L_TOTAL_END=0
L_COMM=0
L_PACKAGE=0
L_IRPM=0
L_INSTALLMENT=0
L_RATE_FACTOR=0
L_CREDIT_FACTOR=0
L_FINAL_TOTAL=0
L_PREVIOUS_TOTAL=0
L_PREVIOUS_SURCHARGE=0
L_BOILER_PREM=0
l_days=0
l_location_new_total=0
L_MAX_CREDITS=0
L_BPSCREDITS_MAXIMUM=0
L_MINIMUM=0
L_CSEXEC_NUMBER=0
l_minimum_boiler=0
l_change_minimum_rating=0
l_pro_rata_premium=0
l_days_rate=0
l_state=0
l_line_of_business=0
l_buyback_factor=0
l_buyback_premium=0
l_end_sequence=0
L_OFF_PREMISE_PREM=0
L_FMA_FACTOR=0
L_TYPE=0
l_location_premium_10=0
l_sfpmaster_total_10=0
L_AGENT_COMM=0
L_CUSTOMER_ADJ_RATE=0
L_CUSTOMER_ADJ_RATE_SPECIAL=0
L_LOSS_INCOME_FACTOR_1=0
L_AR_LIMIT=0
L_AR_LIMIT_1=0
L_UTILITY_LIMIT=0
L_COMPUTER_LIMIT=0
L_MECHANICAL_LIMIT=0
l_short_rate=0
L_EMPLOYEE_DIS_LIMIT=0
L_EXTERIOR_SIGNS_LIMIT=0
L_INDOOR_GLASS_LIMIT=0
L_TERRITORY_BOILER_MINIMUM=0
L_COUNT=0
L_WATER_BKUP_LIMIT=0
L_VALUE_LIMIT=0
L_VALUE_LIMIT_1=0
L_EDP_LIMIT=0
L_SURCHARGE=0
L_SURCHARGE_FACTOR=0
L_SURCHARGE_MINIMUM=0
L_BOILERS_PREM=0
L_RECEIPTS=0
L_RECEIPTS_LIMIT=0
L_RECEIPTS_CHARGE=0
L_PRINTERS_ERROR=0
L_TERRORISM_PREMIUM=0
l_tpd6_terrorism_premium=0
L_TERROR_PERCENTAGE=0
L_TERROR_MINIMUM=0
L_FOUND=0
L_SUB_CODE=0
L_PREM_NO=0
L_TERROR_EFF_DATE=0
l_surcharge_date=0
L_MISC="N"
L_MINIMUM_APPLIES="N"
L_company_id=""
l_count_locations = 0
l_sub = 0
L_DESCRIPTION=""
l_terror_remove_code=""
L_FORM_EDITION=""
L_FIRST="Y"
l_boiler_added="N"
L_FMA="N"
L_SPRINKLERED="N"
L_BUYBACK="N"
l_commandline_1=""
l_code=""
l_eff_date_1=0
L_FIRST_TIME="Y"
L_HOLD_PAYMENT_PLAN=0
L_SUB_TOTAL=0
L_BUILD=0

do location_total
Access agqgeneral, Set agqgeneral:app_no = g_app_no, generic

do policy_total

update

Procedure Definition

procedure location_total
begin
access agqname, set agqname:app_no = g_app_no, generic

access sfsline, set sfsline:company_id       = agqname:company_id,
                    sfsline:line_of_business = agqname:line_of_business,
                    sfsline:lob_subline      = "00", generic

Access agqgeneral, Set agqgeneral:app_no   = g_app_no, generic

while agqgeneral:app_no   = g_app_no
    begin
    if sfsline:lob_code one of "CPORTFOLIO" then
        begin
        Access agqmastsupp, Set agqmastsupp:app_no           = g_app_no,
                                agqmastsupp:line_of_business = agqgeneral:line_of_business, Generic

        l_form = agqmastsupp:form
        end
    else
        begin
        Access agqmaster, Set agqmaster:app_no = g_app_no, generic

        l_form = agqmaster:form
        end

    access agqgeneral2, set agqgeneral2:app_no = agqgeneral:app_no,
                            agqgeneral2:prem_no = agqgeneral:prem_no,
                            agqgeneral2:build_no = agqgeneral:build_no, generic

    Access agqname, Set agqname:app_no = g_app_no, generic

    Access SFSLINE, Set SFSLINE:COMPANY_ID       = agqname:COMPANY_ID,
                        SFSLINE:LINE_OF_BUSINESS = agqname:LINE_OF_BUSINESS,
                        SFSLINE:LOB_SUBLINE      = "00", Generic

    Access SFSCOMPANY, Set SFSCOMPANY:COMPANY_ID = agqgeneral:COMPANY_ID, Generic

    do number_locations
    l_boiler_prem          = 0
    l_boiler_prem_total    = 0
    l_buyback_option_total = 0
    l_total_printers       = 0
    l_total                = 0
    l_final_total          = 0
    l_installment          = 0
    l_irpm_total           = 0
    l_territory_rating     = 0
    l_surcharge            = 0
    l_state                = agqgeneral:state
    l_line_of_business     = agqgeneral:line_of_business

    if sfsline:lob_code one of "CPORTFOLIO" then
        begin
        access agqmastsupp, set agqmastsupp:app_no           = agqgeneral:app_no,
                                agqmastsupp:line_of_business = agqgeneral:line_of_business, exact

        if agqmastsupp:override_location_credit = 0 then
            do location_credit
        end
    else
        begin
        access agqmaster, set agqmaster:app_no    = g_app_no, generic

        if agqmaster:override_location_credit = 0 then
            do location_credit
        end

    l_deductible = g_deductible
    do loc_total
    If SFSCOMPANY:SPECIAL_TERRITORY_RATING = 1 and
       sfscompany:boiler_rating not one of 4 Then
        Do TERRITORY_RATING
    do update_totals

    next agqgeneral
    end

end

procedure policy_total
begin
access agqgeneral, set agqgeneral:app_no   = g_app_no, generic

If l_boiler_added = "Y" then
    Begin
    Do BOILER_MINIMUM
    End
do printers_credit
if sfscompany:special_territory_rating = 1 and
   sfscompany:boiler_rating not one of 4 then
    begin
    L_TERRITORY_RATING = (L_LOC_TOTAL_1 - (L_LOC_TOTAL_2
                         + L_BOILER_PREM_TOTAL +
                         L_TOTAL_PRINTERS))
    end
else
    l_territory_rating = 0

Access agqGENERAL_ALIAS, Set agqGENERAL_ALIAS:app_no   = agqgeneral:APP_NO, generic

Change agqGENERAL_ALIAS
    Begin
    agqGENERAL_ALIAS:territory_charge_credit = l_territory_rating
    End

l_total = l_total_3
Do TOTALS
do rate_epl
Do FINAL_TOTAL
If agqgeneral:REMOVE_TERRORISM_FORM = 0 Then
    begin
    L_TERRORISM_PREMIUM = 0
    Do GET_TERRORISM_PREMIUM
    If L_IRPM_TOTAL <> 0 Then
        L_IRPM_TOTAL = L_IRPM_TOTAL + L_TERRORISM_PREMIUM
    Else
        L_FINAL_TOTAL = L_FINAL_TOTAL + L_TERRORISM_PREMIUM
    if sfsline:lob_code one of "CPORTFOLIO" then
        begin
        Access agqmastsupp, Set agqmastsupp:app_no           = agqgeneral:app_no,
                                agqmastsupp:line_of_business = agqgeneral:line_of_business, generic

        Change agqmastsupp
            Begin
            agqmastsupp:TERRORISM_PREMIUM = l_terrorism_premium
            end
        End
    else
        begin
        Access agqmaster, Set agqmaster:app_no = agqgeneral:app_no, generic

        Change agqMASTER
            Begin
            agqMASTER:TERRORISM_PREMIUM = l_terrorism_premium
            end
        End
    end
Else
    Begin
    do remove_terrorism_form
    do add_terrorism_exclusion
    do access_sfsmsoterror
    if l_irpm_total <> 0 then
        l_tpd6_terrorism_premium = l_irpm_total * l_terror_percentage
    else
        L_tpd6_TERRORISM_PREMIUM = L_FINAL_TOTAL * L_TERROR_PERCENTAGE
    If L_tpd6_TERRORISM_PREMIUM <= L_TERROR_MINIMUM Then
        begin
        L_tpd6_TERRORISM_PREMIUM = L_TERROR_MINIMUM
        end

    if sfsline:lob_code one of "CPORTFOLIO" then
        begin
        Access agqmastsupp, Set agqmastsupp:app_no           = agqgeneral:app_no,
                                agqmastsupp:line_of_business = agqgeneral:line_of_business, generic

        Change agqmastsupp
            Begin
            agqmastsupp:TERRORISM_PREMIUM = 0
            end
        End
    else
        begin
        Access agqmaster, Set agqmaster:app_no = agqgeneral:app_no, generic

        change agqmaster
            begin
            agqmaster:terrorism_premium = 0
            agqmaster:tpd6_terrorism_premium = l_tpd6_terrorism_premium
            end
        End
    end

do identity_theft
if sfscompany:boiler_rating = 4 then
    do pliga

if l_irpm_total <> 0 then
    l_irpm_total = l_irpm_total + l_identity_theft
else
    l_final_total = l_final_total + l_identity_theft

do update_policy_totals
end

Procedure identity_theft
begin
Access agqGENERAL_ALIAS, Set agqGENERAL_ALIAS:app_no   = G_app_no,
                             agqGENERAL_ALIAS:PREM_NO  = G_PREM_NO,
                             agqGENERAL_ALIAS:BUILD_NO = G_BUILD_NO, Exact

L_STATE = agqGENERAL_ALIAS:STATE
access bpsrate, set bpsrate:company_id       = agqgeneral:company_id,
                    bpsrate:state            = agqgeneral:state,
                    bpsrate:line_of_business = agqgeneral:line_of_business, generic

while bpsrate:company_id       = agqgeneral:company_id and
      bpsrate:state            = agqgeneral:state and
      bpsrate:line_of_business = agqgeneral:line_of_business
        begin
        if agqgeneral:eff_date >= bpsrate:eff_date then
            begin
            l_identity_factor = bpsrate:identity_factor
            end

        next bpsrate
        end

if l_irpm_total <> 0 then
    l_identity_theft = L_IRPM_TOTAL * l_identity_factor
Else
    l_identity_theft = L_FINAL_TOTAL * l_identity_factor

end

procedure pliga
begin
access sfssurcharge, set sfssurcharge:company_id       = agqgeneral:company_id,
                         sfssurcharge:state            = agqgeneral:state,
                         sfssurcharge:line_of_business = agqgeneral:line_of_business, generic

l_surcharge_date = 0
while sfssurcharge:company_id       = agqgeneral:company_id and
      sfssurcharge:state            = agqgeneral:state and
      sfssurcharge:line_of_business = agqgeneral:line_of_business
        begin
        if (agqgeneral:eff_date >= sfssurcharge:eff_date and
           (l_surcharge_date < sfssurcharge:eff_date or
           l_surcharge_date = 0)) then
            begin
            l_surcharge_date    = sfssurcharge:eff_date
            l_surcharge_factor  = sfssurcharge:surcharge_factor
            l_surcharge_minimum = sfssurcharge:minimum_premium
            end

        next sfssurcharge
        end

If L_IRPM_TOTAL <> 0 Then
    L_SURCHARGE = ((L_IRPM_TOTAL + l_identity_theft) * L_SURCHARGE_FACTOR)
Else
    L_SURCHARGE = ((L_FINAL_TOTAL + l_identity_theft) * L_SURCHARGE_FACTOR)

If L_SURCHARGE < L_SURCHARGE_MINIMUM Then
    L_SURCHARGE = L_SURCHARGE_MINIMUM

end

Procedure RATE_EPL
Begin
--if agqmaster:override_epl = 0 then
--    begin
    l_epl_premium = l_total + l_fungi_total
    l_commandline_1 = str(agqgeneral:app_no,11) + str(l_epl_premium,8)
    if sfscompany:debug_mode = 0 then
        proc("csbatch agqup11e %s",l_commandline_1)/noconsole
    else
        proc("csbatch agqup11e %s",l_commandline_1)
--    end

access agqmaster, set agqmaster:app_no = g_app_no, generic

l_epl_prem = agqmaster:total[9]

End

procedure number_locations
begin
access agqgeneral_alt, set agqgeneral_alt:app_no    = g_app_no, generic

l_no_locations = 0
while agqgeneral_alt:app_no    = g_app_no
        begin
        l_no_locations = l_no_locations + 1

        next agqgeneral_alt
        end

end

procedure location_credit
begin
access agqgeneral_alias, set agqgeneral_alias:app_no = agqgeneral:app_no, generic

l_location_count = 0
while agqgeneral_alias:app_no = agqgeneral:app_no
    begin
    if l_prem_no <> agqgeneral_alias:prem_no then
        begin
        l_prem_no = agqgeneral_alias:prem_no
        l_location_count = l_location_count + 1
        end

    next agqgeneral_alias
    end

if l_location_count > 10 then
    l_location_count = 10
access bpslocation, set bpslocation:company_id       = agqgeneral:company_id,
                        bpslocation:state            = agqgeneral:state,
                        bpslocation:line_of_business = agqgeneral:line_of_business,
                        bpslocation:no_locations     = l_location_count, generic

while bpslocation:company_id       = agqgeneral:company_id and
      bpslocation:state            = agqgeneral:state and
      bpslocation:line_of_business = agqgeneral:line_of_business and
      bpslocation:no_locations     = l_location_count
        begin
        if (agqgeneral:eff_date >= bpslocation:eff_date and
           (agqgeneral:eff_date <= bpslocation:exp_date or
           bpslocation:exp_date = 0)) then
            begin
            access agqmaster, set agqmaster:app_no    = agqgeneral:app_no, generic

            if agqmaster:override_location_credit = 0 then
                begin
                change agqmaster
                    begin
                    agqmaster:location_credit = bpslocation:credit
                    end
                end
            end

        next bpslocation
        end

end

procedure get_endorsement_premium
begin
Access SFSMSOTERROR, Set SFSMSOTERROR:COMPANY_ID       = agqgeneral:COMPANY_ID,
                         SFSMSOTERROR:STATE            = agqgeneral:STATE,
                         SFSMSOTERROR:LINE_OF_BUSINESS = agqgeneral:line_of_business, generic

access agqend, set agqend:app_no    = g_app_no, generic

l_end_premium = 0
while agqend:app_no    = g_app_no
    begin
    if agqend:prem_no  = 0 and
       agqend:build_no = 0 and
       l_policy_wide_first = "Y" then
        begin
        l_total_6 = 0
        if agqend:terrorism_form = 0 and
           agqend:code <> sfsmsoterror:terrorism_form_to_add then
            l_end_premium = l_end_premium + agqend:premium
        end

    next agqend
    end

l_policy_wide_first = "N"
access agqend, set agqend:app_no   = g_app_no,
                   agqend:prem_no  = agqgeneral:prem_no,
                   agqend:build_no = agqgeneral:build_no, generic

while agqend:app_no   = g_app_no and
      agqend:prem_no  = agqgeneral:prem_no and
      agqend:build_no = agqgeneral:build_no
        begin
        l_end_premium = l_end_premium + agqend:premium

        next agqend
        end

end

procedure remove_terrorism_form
begin
Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no   = g_app_no, generic

L_STATE = agqgeneral_ALIAS:STATE
Do ACCESS_SFSMSOTERROR
l_prem_no = 0
l_build_no = 0
Access agqEND, Set agqEND:app_no   = g_app_no,
                   agqend:prem_no  = l_prem_no,
                   agqend:build_no = l_build_no, Generic

While agqEND:app_no   = g_app_no and
      agqend:prem_no  = l_prem_no and
      agqend:build_no = l_build_no
    begin
    If agqEND:CODE = SFSMSOTERROR:TERRORISM_FORM_TO_ADD Then
        begin
        Delete agqEND
        end

     Next agqEND
     end

end

Procedure ADD_TERRORISM_exclusion
begin
Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no   = g_app_no, generic

L_STATE = agqgeneral_ALIAS:STATE
Do ACCESS_SFSMSOTERROR
l_prem_no = 0
l_build_no = 0
Access agqEND, Set agqEND:app_no   = g_app_no,
                   agqend:prem_no  = l_prem_no,
                   agqend:build_no = l_build_no, Generic

While agqEND:app_no   = g_app_no and
      agqend:prem_no  = l_prem_no and
      agqend:build_no = l_build_no
    begin
    If agqEND:CODE = SFSMSOTERROR:TERRORISM_FORM_TO_REMOVE Then
        begin
        Delete agqEND
        end

     Next agqEND
     end

Access agqEND, Set agqEND:app_no = g_app_no, generic

l_prem_no = 0
l_build_no = 0
Do SUBCODE
l_sub_code = l_sub_code + 10
L_CODE     = SFSMSOTERROR:TERRORISM_FORM_TO_REMOVE
Do ACCESS_KEY
Add agqEND
    Begin
    agqEND:app_no           = g_app_no
    agqEND:PREM_NO          = 0
    agqEND:BUILD_NO         = 0
    agqEND:SUB_CODE         = L_SUB_CODE
    agqEND:CODE             = SFSMSOTERROR:TERRORISM_FORM_TO_REMOVE
    agqEND:FORM_EDITION     = L_FORM_EDITION
    agqEND:PREMIUM          = 0
    agqEND:DESCRIPTION      = L_DESCRIPTION
    agqend:terrorism_form   = 1
    agqend:lob_end_code     = "X"
    End

end

procedure update_endorsements
begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = agqgeneral:COMPANY_ID,
                    BPSRATE:STATE = agqgeneral:STATE,
                    BPSRATE:LINE_OF_BUSINESS = agqgeneral:LINE_OF_BUSINESS, Generic

Repeat Begin
    Exit If BPSRATE:COMPANY_ID <> agqgeneral:COMPANY_ID Or
            BPSRATE:STATE <> agqgeneral:STATE Or
            BPSRATE:LINE_OF_BUSINESS <> agqgeneral:LINE_OF_BUSINESS

    If agqgeneral:eff_date >= BPSRATE:EFF_DATE Then
        Begin
        L_CODE_1 = BPSRATE:WIND_DEDUCT_CODE
        End

    Next BPSRATE
    End

If L_CODE_1 <> "" Then
    Begin
    L_CODE = L_CODE_1
    Do ACCESS_agqEND
    If L_ADD_ENDORSEMENT = "Y" And
       agqgeneral:WIND_DEDUCTIBLE <> 0 Then
        Do ADD_agqEND
    If L_ADD_ENDORSEMENT = "N" And
       agqgeneral:WIND_DEDUCTIBLE = 0 Then
        Do DELETE_agqEND
    End

end

procedure add_bpstrigger
begin
Access bpstrigger, Set bpstrigger:COMPANY_ID       = agqgeneral:company_id,
                       bpstrigger:STATE            = agqgeneral:state,
                       bpstrigger:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

while bpstrigger:COMPANY_ID       = agqgeneral:company_id and
      bpstrigger:STATE            = agqgeneral:STATE and
      bpstrigger:LINE_OF_BUSINESS = agqgeneral:line_of_business
    begin
    If agqgeneral:eff_date >= bpstrigger:RATE_DATE Then
        Begin
        L_CODE_1 = bpstrigger:code[10] -- MCN883
        end

    Next bpstrigger
    End

If L_CODE_1 <> "" Then
    Begin
    L_CODE = L_CODE_1
    Do ACCESS_agqEND_1
    If L_ADD_ENDORSEMENT = "Y" Then
        begin
        Do ADD_agqEND_1
        do add_agqendorse_1
        end
    End

end

Procedure ADD_agqendorse_1
Begin
Add agqendorse
    Begin
    agqendorse:app_no                     =       g_app_no
    agqendorse:PREM_NO                    =       0
    agqendorse:BUILD_NO                   =       0
    agqendorse:code                       =       l_code
    agqendorse:sub_code                   =       10
    agqendorse:LIMIT[1]                   =       l_mcp140_limit
    End

End

Procedure ACCESS_agqEND
Begin
Access agqEND, Set agqEND:app_no   = agqgeneral:app_no ,
                   agqEND:PREM_NO  = agqgeneral:PREM_NO,
                   agqEND:BUILD_NO = agqgeneral:BUILD_NO, Generic

L_ADD_ENDORSEMENT = "Y"
while agqEND:app_no   = agqgeneral:app_no and
      agqEND:PREM_NO  = agqgeneral:PREM_NO and
      agqEND:BUILD_NO = agqgeneral:BUILD_NO
    begin
    If agqEND:CODE = L_CODE Then
        L_ADD_ENDORSEMENT = "N"

    Next agqEND
    End

End

Procedure ACCESS_agqEND_1
Begin
l_prem_no = 0
l_build_no = 0
Access agqEND, Set agqEND:app_no   = agqgeneral:app_no ,
                   agqEND:PREM_NO  = l_PREM_NO,
                   agqEND:BUILD_NO = l_BUILD_NO, Generic

L_ADD_ENDORSEMENT = "Y"
while agqEND:app_no   = agqgeneral:app_no and
      agqEND:PREM_NO  = l_PREM_NO and
      agqEND:BUILD_NO = l_BUILD_NO
    begin
    If agqEND:CODE = L_CODE Then
        L_ADD_ENDORSEMENT = "N"

    Next agqEND
    End

End

Procedure ADD_agqEND
Begin
Access agqEND, Set agqEND:app_no   = agqgeneral:app_no ,
                   agqEND:PREM_NO  = agqgeneral:PREM_NO,
                   agqEND:BUILD_NO = agqgeneral:BUILD_NO, Generic

L_SUB_CODE = 0
while agqEND:app_no   = agqgeneral:app_no and
      agqEND:PREM_NO  = agqgeneral:PREM_NO and
      agqEND:BUILD_NO = agqgeneral:BUILD_NO
    begin
    L_SUB_CODE = agqEND:SUB_CODE

    Next agqEND
    End

L_SUB_CODE = L_SUB_CODE + 10

Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID = agqgeneral:COMPANY_ID,
                      SFSOPTEND:STATE = agqgeneral:STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = agqgeneral:LINE_OF_BUSINESS,
                      SFSOPTEND:CODE = L_CODE, Generic

Repeat Begin
    Exit If SFSOPTEND:COMPANY_ID <> agqgeneral:COMPANY_ID Or
            SFSOPTEND:STATE <> agqgeneral:STATE Or
            SFSOPTEND:LINE_OF_BUSINESS <> agqgeneral:LINE_OF_BUSINESS Or
            SFSOPTEND:CODE <> L_CODE

    If agqgeneral:eff_date >= SFSOPTEND:EFF_DATE Then
        Begin
        L_FORM_EDITION = SFSOPTEND:FORM_EDITION
        L_DESCRIPTION = SFSOPTEND:DESCRIPTION
        End

    Next SFSOPTEND
    End

Add agqEND
    Begin
    agqEND:app_no               =       agqgeneral:app_no
    agqEND:PREM_NO              =       agqgeneral:PREM_NO
    agqEND:BUILD_NO             =       agqgeneral:BUILD_NO
    agqEND:SUB_CODE             =       L_SUB_CODE
    agqEND:CODE                 =       L_CODE
    agqEND:FORM_EDITION         =       L_FORM_EDITION
    agqEND:DESCRIPTION          =       L_DESCRIPTION
    agqEND:PREMIUM              =       0
    agqend:lob_end_code         =       "X"
    End

End

Procedure ADD_agqEND_1
Begin
l_prem_no = 0
l_build_no = 0
Access agqEND, Set agqEND:app_no   = agqgeneral:app_no ,
                   agqEND:PREM_NO  = l_PREM_NO,
                   agqEND:BUILD_NO = l_BUILD_NO, Generic

L_SUB_CODE = 0
while agqEND:app_no   = agqgeneral:app_no and
      agqEND:PREM_NO  = L_PREM_NO and
      agqEND:BUILD_NO = L_BUILD_NO
    begin
    L_SUB_CODE = agqEND:SUB_CODE

    Next agqEND
    End

L_SUB_CODE = L_SUB_CODE + 10

Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID = agqgeneral:COMPANY_ID,
                      SFSOPTEND:STATE = agqgeneral:STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = agqgeneral:LINE_OF_BUSINESS,
                      SFSOPTEND:CODE = L_CODE, Generic

Repeat Begin
    Exit If SFSOPTEND:COMPANY_ID <> agqgeneral:COMPANY_ID Or
            SFSOPTEND:STATE <> agqgeneral:STATE Or
            SFSOPTEND:LINE_OF_BUSINESS <> agqgeneral:LINE_OF_BUSINESS Or
            SFSOPTEND:CODE <> L_CODE

    If agqgeneral:eff_date >= SFSOPTEND:EFF_DATE Then
        Begin
        L_FORM_EDITION = SFSOPTEND:FORM_EDITION
        L_DESCRIPTION = SFSOPTEND:DESCRIPTION
        l_mcp140_limit = sfsoptend:limit[1]
        End

    Next SFSOPTEND
    End

Add agqEND
    Begin
    agqEND:app_no               =       agqgeneral:app_no
    agqEND:PREM_NO              =       L_PREM_NO
    agqEND:BUILD_NO             =       L_BUILD_NO
    agqEND:SUB_CODE             =       L_SUB_CODE
    agqEND:CODE                 =       L_CODE
    agqEND:FORM_EDITION         =       L_FORM_EDITION
    agqEND:DESCRIPTION          =       L_DESCRIPTION
    agqEND:PREMIUM              =       0
    agqend:lob_end_code         =       "X"
    End

End

Procedure DELETE_agqEND
Begin
Access agqEND, Set agqEND:app_no   = agqgeneral:app_no ,
                   agqEND:PREM_NO  = agqgeneral:PREM_NO,
                   agqEND:BUILD_NO = agqgeneral:BUILD_NO, Generic

while agqEND:app_no   = agqgeneral:app_no and
      agqEND:PREM_NO  = agqgeneral:PREM_NO and
      agqEND:BUILD_NO = agqgeneral:BUILD_NO
    begin
    If agqEND:CODE = L_CODE Then
        Delete agqEND

    Next agqEND
    End

End

Procedure LOC_TOTAL
Begin
-- hurricane deductible logic
l_commandline_1 = str(agqgeneral:app_no,11) + str(agqgeneral:prem_no,4) +
                  str(agqgeneral:build_no,4)
if sfscompany:debug_mode = 0 then
    proc("cli csbatch agqup011c %s",l_commandline_1)/noconsole
else
    proc("cli csbatch agqup011c %s",l_commandline_1)

if agqmastsupp:form <> 0 then
    l_form = agqmastsupp:form
else
    l_form = agqmaster:form

switch(l_form)
  case 1, 3 : begin
              if agqgeneral:restaurant = 1 then
                  l_supplemental_form = "BU0421"
              else
                  l_supplemental_form = "BU0403"

              if agqgeneral:line_of_business = 50 and
                 agqgeneral:special_enhancement = 1 and
                 agqgeneral:eff_date >= 05.01.2013 and
                 agqgeneral:company_id = "FLEMINGTON" then
                  l_supplemental_form = "CSE0403"
              else
              if agqgeneral:line_of_business = 50 and
                 agqgeneral:special_enhancement = 0 and
                 agqgeneral:eff_date >= 05.01.2013 and
                 agqgeneral:company_id = "FLEMINGTON" then
                  l_supplemental_form = "CSS0403"
              end
  default   : begin
              if agqgeneral:restaurant = 1 then
                  l_supplemental_form = "BU0424"
              else
                  l_supplemental_form = "BU0413"
              end
  end

access bpsdefault2, set bpsdefault2:company_id        = agqgeneral:company_id,
                        bpsdefault2:state             = agqgeneral:state,
                        bpsdefault2:line_of_business  = agqgeneral:line_of_business,
                        bpsdefault2:supplemental_form = l_supplemental_form, generic

while bpsdefault2:company_id        = agqgeneral:company_id and
      bpsdefault2:state             = agqgeneral:state and
      bpsdefault2:line_of_business  = agqgeneral:line_of_business and
      bpsdefault2:supplemental_form = l_supplemental_form
        begin
        if agqgeneral:eff_date >= bpsdefault2:eff_date then
            l_bpsdefault2_eff_date = bpsdefault2:eff_date

        next bpsdefault2
        end

access bpsdefault2, set bpsdefault2:company_id        = agqgeneral:company_id,
                        bpsdefault2:state             = agqgeneral:state,
                        bpsdefault2:line_of_business  = agqgeneral:line_of_business,
                        bpsdefault2:supplemental_form = l_supplemental_form,
                        bpsdefault2:eff_date          = l_bpsdefault2_eff_date, generic

access bpsdefault, set bpsdefault:company_id        = agqgeneral:company_id,
                       bpsdefault:line_of_business  = agqgeneral:line_of_business,
                       bpsdefault:form              = l_form, generic

l_default_off_premises_limit = bpsdefault2:off_premises_b

access agsdefault_bop, set agsdefault_bop:company_id       = agqgeneral:company_id,
                           agsdefault_bop:state            = agqgeneral:state,
                           agsdefault_bop:agent_no         = agqgeneral:agent_no,
                           agsdefault_bop:line_of_business = agqgeneral:line_of_business,
                           agsdefault_bop:form             = l_form, generic


if l_default_off_premises_limit = 0 then
    l_default_off_premises_limit = agsdefault_bop:off_premises_b

Access bpssupplemental, Set bpssupplemental:COMPANY_ID       = agqgeneral:company_id,
                            bpssupplemental:state            = agqgeneral:state,
                            bpssupplemental:LINE_OF_BUSINESS = agqgeneral:line_of_business, generic

l_special_ar_limit          = 0
l_customer_prop_limit       = 0
l_signs_limit               = 0
l_computer_limit_1          = 0
l_computer_limit_2          = 0
l_valuable_papers_limit     = 0
l_fire_limit                = 0
l_ar_percent                = 0
l_signs_percent             = 0
l_water_backup_percent      = 0
l_valuable_papers_percent   = 0
l_computer_hardware_percent = 0
l_computer_software_percent = 0
l_utility_percent           = 0
l_mechanical_percent        = 0
l_glass_percent             = 0
l_indoor_glass_percent      = 0
l_off_premises              = 0
while bpssupplemental:company_id       = agqgeneral:company_id and
      bpssupplemental:state            = agqgeneral:state and
      bpssupplemental:line_of_business = agqgeneral:line_of_business
        begin
        if agqgeneral:eff_date >= bpssupplemental:eff_date then
            begin
            L_SPECIAL_AR_LIMIT          = bpssupplemental:ar_limit
            L_CUSTOMER_PROP_LIMIT       = bpssupplemental:CUSTOMER_PROP_LIMIT
            L_SIGNS_LIMIT               = bpssupplemental:SIGNS_LIMIT
            L_VALUABLE_PAPERS_LIMIT     = bpssupplemental:VALUABLE_PAPERS_LIMIT
            l_special_water_backup_limit = bpssupplemental:water_backup_limit
            L_FIRE_LIMIT                = bpssupplemental:FIRE_LIMIT
            l_special_glass_limit       = bpssupplemental:building_glass
            l_special_glass_limit_1     = bpssupplemental:indoor_glass_limit
            l_special_utility_limit     = bpssupplemental:utility_limit
            l_special_mechanical_limit  = bpssupplemental:mechanical_limit
            l_off_premises              = bpssupplemental:off_premises_b
            l_building_code_percent     = bpssupplemental:building_code_percent
            l_computer_limit_1          = bpssupplemental:computer_coverage_hardware +
                                          bpssupplemental:computer_coverage_media
            l_computer_limit_2          = bpssupplemental:extra_expense_limit
            l_computer_hardware         = bpssupplemental:computer_coverage_hardware
            l_computer_software         = bpssupplemental:computer_coverage_media
            l_extra_expense             = bpssupplemental:extra_expense_limit
            l_employee_dishonesty       = bpssupplemental:employee_dishonesty
            l_ar_percent                = bpssupplemental:ar_percent
            l_signs_percent             = bpssupplemental:signs_percent
            l_water_backup_percent      = bpssupplemental:water_backup_percent
            l_valuable_papers_percent   = bpssupplemental:valuable_papers_percent
            l_computer_hardware_percent = bpssupplemental:computer_hardware_percent
            l_computer_software_percent = bpssupplemental:computer_software_percent
            l_extra_expense_percent     = bpssupplemental:extra_expense_percent
            l_utility_percent           = bpssupplemental:utility_percent
            l_mechanical_percent        = bpssupplemental:mechanical_percent
            l_glass_percent             = bpssupplemental:glass_percent
            l_indoor_glass_percent      = bpssupplemental:indoor_glass_percent
            l_off_premises              = bpssupplemental:off_premises_b
            l_credit_card_limit         = bpssupplemental:credit_card_limit
            l_credit_card_percent       = bpssupplemental:credit_card_percent
            l_debris_limit_1            = bpssupplemental:debris_removal
            end

       next bpssupplemental
       end

l_val_zipcode = agqgeneral:zipcode
l_str_zipcode = agqgeneral:str_zipcode[1,5] + "0000"
access sfszipcode, set sfszipcode:company_id       = agqgeneral:company_id,
                       sfszipcode:state            = l_state,
                       sfszipcode:line_of_business = l_line_of_business,
                       sfszipcode:str_zipcode      = l_str_zipcode, generic

l_tier = 0
while sfszipcode:company_Id       = agqgeneral:company_id and
      sfszipcode:state            = l_state and
      sfszipcode:line_of_business = l_line_of_business and
      sfszipcode:str_zipcode      = l_str_zipcode
        begin
        if (agqgeneral:eff_date >= sfszipcode:eff_date and
           (agqgeneral:eff_date <= sfszipcode:exp_date or
           sfszipcode:exp_date = 0)) then
            begin
            l_tier            = sfszipcode:tier
            end

        next sfszipcode
        end

if l_tier = 0 then
    l_tier = 3
access sfstier, set sfstier:company_id       = agqgeneral:company_id,
                    sfstier:state            = l_state,
                    sfstier:line_of_business = l_line_of_business,
                    sfstier:tier             = l_tier, generic

l_wind_deductible = 0
while sfstier:company_Id       = agqgeneral:company_id and
      sfstier:state            = l_state and
      sfstier:line_of_business = l_line_of_business and
      sfstier:tier             = l_tier
        begin
        if (agqgeneral:eff_date >= sfstier:eff_date and
           (agqgeneral:eff_date <= sfstier:exp_date or
           sfstier:exp_date = 0)) then
            begin
            l_wind_deductible  = sfstier:wind_deductible
            end

        next sfstier
        end

access agqgeneral_alias, set agqgeneral_alias:app_no       = agqgeneral:app_no,
                             agqgeneral_alias:prem_no      = agqgeneral:prem_no,
                             agqgeneral_alias:build_no     = agqgeneral:build_no, generic

if agqgeneral_alias:app_no       = agqgeneral:app_no and
   agqgeneral_alias:prem_no      = agqgeneral:prem_no and
   agqgeneral_alias:build_no     = agqgeneral:build_no then
    begin
    change agqgeneral_alias
        begin
        if l_wind_deductible <> 0 then
            agqgeneral_alias:wind_deductible = l_wind_deductible
        agqgeneral_alias:tier            = l_tier
        end
    end

l_tier_factor = 0
l_count_locations = l_count_locations + 1
Access SFSLINE_ALIAS, Set SFSLINE_ALIAS:COMPANY_ID = agqgeneral:company_id,
                          SFSLINE_ALIAS:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                          SFSLINE_ALIAS:LOB_SUBLINE = "00",Generic

Access agqMASTER, Set agqMASTER:app_no = agqgeneral:app_no, generic

If agqMASTER:app_no <> agqgeneral:app_no then
    begin
    Add agqMASTER
        Begin
        agqMASTER:app_no = agqgeneral:app_no
        End
    end

if sfsline:lob_code one of "CPORTFOLIO" then
    begin
    access agqmastsupp, set agqmastsupp:app_no           = agqgeneral:app_no,
                            agqmastsupp:line_of_business = agqgeneral:line_of_business, generic

    l_form = agqmastsupp:form
    l_off_premises_limit = agqmastsupp:off_premises_limit
    l_delete_hired_nonowned = agqmastsupp:delete_hired_nonowned
    l_extend_hired_nonowned = agqmastsupp:extend_hired_nonowned
    l_liability_code = agqmastsupp:liability_code
    l_location_credit = agqmastsupp:location_credit
    end
else
    begin
    l_form = agqmaster:form
    l_off_premises_limit = agqmaster:off_premises_limit
    l_delete_hired_nonowned = agqmaster:delete_hired_nonowned
    l_extend_hired_nonowned = agqmaster:extend_hired_nonowned
    l_liability_code = agqmaster:liability_code
    l_location_credit = agqmaster:location_credit
    end

Do RATE_ALARM

Access agqEND, Set agqEND:app_no    = agqgeneral:app_no, generic

L_FMA = "N"
while agqEND:app_no   = agqgeneral:app_no
    begin
    If agqEND:CODE one of "FMA100", "BU0507" Then
        Begin
        access agqoperations, set agqoperations:app_no   = agqend:app_no,
                                  agqoperations:prem_no  = agqend:prem_no,
                                  agqoperations:build_no = agqend:build_no, generic

        if (agqend:code = "FMA100" or
           (agqend:code = "BU0507" and
           agqoperations:exclude_adj_injury = "Y")) then
            begin
            L_FMA = "Y"
            L_CODE = "FMA100"
            end
        End

    Next agqEND
    End

If L_FMA = "Y" Then
    Begin
    Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID       = agqgeneral:COMPANY_ID,
                          SFSOPTEND:STATE            = agqgeneral:STATE,
                          SFSOPTEND:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                          SFSOPTEND:CODE             = L_CODE, Generic

    while SFSOPTEND:COMPANY_ID       = agqgeneral:COMPANY_ID and
          SFSOPTEND:STATE            = agqgeneral:STATE and
          SFSOPTEND:LINE_OF_BUSINESS = agqgeneral:line_of_business and
          SFSOPTEND:CODE             = L_CODE
        begin
        If (agqgeneral:eff_date >= SFSOPTEND:EFF_DATE and
           (agqgeneral:eff_date <= sfsoptend:exp_date or
           sfsoptend:exp_date = 0)) Then
            Begin
            L_FMA_FACTOR = SFSOPTEND:PREMIUM_1[1]
            End

        Next SFSOPTEND
        End
    End
Else
    L_FMA_FACTOR = 1.00

if l_fma_factor = 0 then
    l_fma_factor = 1.00
if agqgeneral:liability_only = 1 then
    begin
    do get_liability
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no   = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO  = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:BUILDING_PREMIUM = agqgeneral:liability_premium
        End
    end

If agqgeneral:BUILDING_LIMIT <> 0 Then
    Begin
    Do CALC_BUILDING_PREM

    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_alias:territory_factors[1] = l_territory_building
--        write("%c%n",4005,l_building_limit)
--        write("%c%n",4015,l_building_rate)
--        write("%c%n",4025,l_building_adjustments)
        agqgeneral_ALIAS:BUILDING_PREMIUM = (L_BUILDING_LIMIT *
                                            (L_BUILDING_RATE *
                                            L_BUILDING_ADJUSTMENTS))
--        write("%c%n",4035,agqgeneral_alias:building_premium)
--        read(10,01,"press enter",l_enter,1)
        End

    End
Else
if agqgeneral:liability_only = 0 then
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:BUILDING_PREMIUM = 0
        End
    End

If agqgeneral:PROPERTY_LIMIT <> 0 Then
    Begin
    Do CALC_PROPERTY_PREM
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:PROPERTY_RATE = L_PROPERTY_RATE *
                                         L_PROPERTY_ADJUSTMENTS
        agqgeneral_alias:territory_factors[2] = l_territory_contents
        agqgeneral_ALIAS:PROPERTY_PREMIUM = (L_PROPERTY_LIMIT *
                                            (L_PROPERTY_RATE *
                                            L_PROPERTY_ADJUSTMENTS))
        End
    End
Else
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:PROPERTY_PREMIUM = 0
        End
    End

If agqgeneral:PROPERTY_LIMIT <> 0 And
   L_FORM = 3 Then
    Begin
    if sfscompany:boiler_rating <> 4 then
        Do CALC_EXPANDED
    else
        do calc_expanded_1

    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    l_tier = agqgeneral_alias:tier
    include "sfstier.pro"

    if l_tier_factor = 0 then
        l_tier_factor = 1.00

    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        if sfscompany:boiler_rating = 4 then
            l_territory_expanded = l_territory_contents

        agqgeneral_alias:territory_factors[3] = l_territory_expanded
        agqgeneral_ALIAS:PROPERTY_SPECIAL = L_SPECIAL * L_LOSS_COST *
                                            L_TERRITORY_EXPANDED *
                                            L_PROPERTY_CREDIT_FACTORS *
--                                            L_WIND_DEDUCT_FACTOR *
                                            L_FMA_FACTOR *
                                            l_tier_factor

        If agqgeneral_ALIAS:ALARM_FACTOR <> 0 And
           agqgeneral_ALIAS:ALARM_OPTION[2] = "Y" And
           agqgeneral_ALIAS:ALARM_OPTION[1] = "N" then
            agqgeneral_ALIAS:PROPERTY_SPECIAL = agqgeneral_ALIAS:PROPERTY_SPECIAL *
                                                agqgeneral_ALIAS:ALARM_FACTOR

        agqgeneral_ALIAS:ADJUSTMENT_FACTORS = L_PROPERTY_CREDIT_FACTORS *
                                              L_TERRITORY_EXPANDED *
--                                              L_WIND_DEDUCT_FACTOR *
                                              L_FMA_FACTOR *
                                              l_tier_factor
        End
    End
Else
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:PROPERTY_SPECIAL = 0
        End
    End

do minimum_premium
Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

If agqgeneral_ALIAS:app_no = agqgeneral:app_no And
   agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO And
   agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO Then
    Change agqgeneral_ALIAS
        Begin
        l_sub = l_sub + 1
        agqgeneral_ALIAS:bop_premium = agqgeneral_ALIAS:BUILDING_PREMIUM +
                                       agqgeneral_ALIAS:PROPERTY_PREMIUM +
                                       agqgeneral_ALIAS:PROPERTY_SPECIAL

        l_original_bop_premium[l_sub] = agqgeneral_ALIAS:BUILDING_PREMIUM +
                                        agqgeneral_ALIAS:PROPERTY_PREMIUM +
                                        agqgeneral_ALIAS:PROPERTY_SPECIAL
        l_original_building_premium[l_sub] = agqgeneral_alias:building_premium
        l_original_property_premium[l_sub] = agqgeneral_alias:property_premium
        l_original_property_special[l_sub] = agqgeneral_alias:property_special

        if agqgeneral_alias:bop_premium < l_minimum and
           l_change_minimum_rating = 1 and
           l_mp_building_property = 0 and
           agqgeneral_alias:liability_only = 0 then  -- mp per location
            begin
            l_minimum_applies = "Y"
            agqgeneral_alias:bop_premium = l_minimum
            if agqgeneral_alias:building_premium <> 0 then
                agqgeneral_alias:building_premium = ((l_minimum -
                                                    (agqgeneral_alias:building_premium +
                                                    agqgeneral_alias:property_premium +
                                                    agqgeneral_alias:property_special)) +
                                                    agqgeneral_alias:building_premium)
            else
                agqgeneral_alias:property_premium = ((l_minimum -
                                                    (agqgeneral_alias:property_premium +
                                                    agqgeneral_alias:property_special)) +
                                                    agqgeneral_alias:property_premium)
            end
        end

-- mp per policy checking building and property premiums only
if l_mp_building_property = 1 and
   l_count_locations = l_no_locations then
    begin
    access agqgeneral_alt, set agqgeneral_alt:app_no = agqgeneral:app_no, generic

    l_bop_premium = 0
    l_agq_building_premium = 0
    l_agq_property_premium = 0
    l_agq_special_premium = 0
    while agqgeneral_alt:app_no = agqgeneral:app_no
        begin
        l_bop_premium          = agqgeneral_alt:bop_premium +
                                 l_bop_premium
        l_agq_building_premium = agqgeneral_alt:building_premium +
                                 l_agq_building_premium
        l_agq_property_premium = agqgeneral_alt:property_premium +
                                 l_agq_property_premium
        l_agq_special_premium  = agqgeneral_alt:property_special +
                                 l_agq_special_premium

        next agqgeneral_alt
        end

    if l_bop_premium < l_minimum then
        begin
        l_minimum_applies = "Y"
        Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                     agqgeneral_alias:prem_no  = agqgeneral:prem_no,
                                     agqgeneral_alias:build_no = agqgeneral:build_no, generic

        If agqgeneral_ALIAS:app_no = agqgeneral:app_no and
           agqgeneral_alias:prem_no  = agqgeneral:prem_no and
           agqgeneral_alias:build_no = agqgeneral:build_no then
            Change agqgeneral_ALIAS
                Begin
                if agqgeneral_alias:building_premium <> 0 then
                    begin
                    agqgeneral_alias:adjustment_to_meet_minimum = (l_minimum -
                                                                  (l_agq_building_premium +
                                                                  l_agq_property_premium +
                                                                  l_agq_special_premium))
                    l_adjustment_to_meet_minimum = (l_minimum -
                                                   (l_agq_building_premium +
                                                   l_agq_property_premium +
                                                   l_agq_special_premium))
                    end
                else
                    begin
                    agqgeneral_alias:adjustment_to_meet_minimum = (l_minimum -
                                                                  (l_agq_property_premium +
                                                                  l_agq_special_premium))
                    l_adjustment_to_meet_minimum = (l_minimum -
                                                   (l_agq_property_premium +
                                                   l_agq_special_premium))
                    end
                end
        end
    else
        begin
        l_minimum_applies = "N"
        l_sub_1 = 0
        Access agqgeneral_ALT, Set agqgeneral_ALT:app_no = agqgeneral:app_no, generic

        while agqgeneral_ALT:app_no = agqgeneral:app_no
            begin
            Change agqgeneral_ALT
                Begin
                l_sub_1 = l_sub_1 + 1
                agqgeneral_alt:adjustment_to_meet_minimum = 0
                agqgeneral_alt:bop_premium      = l_original_bop_premium[l_sub_1]
                agqgeneral_alt:building_premium = l_original_building_premium[l_sub_1]
                agqgeneral_alt:property_premium = l_original_property_premium[l_sub_1]
                agqgeneral_alt:property_special = l_original_property_special[l_sub_1]
                end

            next agqgeneral_alt
            end
        End

    end

if agqgeneral:fuel_pumps > 0 then
    begin
    access bpsrate, set bpsrate:company_id = agqgeneral:company_id,
                        bpsrate:state = agqgeneral:state,
                        bpsrate:line_of_business = agqgeneral:line_of_business, generic

    while bpsrate:company_id = agqgeneral:company_id and
          bpsrate:state = agqgeneral:state and
          bpsrate:line_of_business = agqgeneral:line_of_business
            begin
            if agqgeneral:eff_date >= bpsrate:eff_date then
                begin
                l_fuel_pump_charge = bpsrate:fuel_pump_charge

                end

            next bpsrate
            end

    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:fuel_pump_charge = agqgeneral_alias:fuel_pumps *
                                            l_fuel_pump_charge
        End
    End
else
    begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:fuel_pump_charge = 0
        End
    End

If (agqgeneral:RESTAURANT = 1 or
   (sfsline:option = "P" and
   sfscompany:boiler_rating = 4 and
   agqgeneral:receipts <> 0)) Then
    Do RATE_RESTAURANTS
Else
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:RESTAURANT_ENHANCEMENT = 0
        End
    End

If SFSLINE_ALIAS:OPTION = "P" and
   sfscompany:boiler_rating <> 4 then
    Begin
    if agqgeneral:special_enhancement = 1 then
        begin
        l_exterior_signs_limit = agqgeneral:property_limit * (l_signs_percent divide 100)
        if l_signs_limit > l_exterior_signs_limit then
            l_exterior_signs_limit = l_signs_limit
        end
    else
        begin
        L_EXTERIOR_SIGNS_LIMIT = (agqgeneral:PROPERTY_LIMIT *
                                 (agsdefault_bop:EXTERIOR_SIGNS_PERCENT Divide 100))
        If L_EXTERIOR_SIGNS_LIMIT < agsdefault_bop:SIGNS_LIMIT Then
            L_EXTERIOR_SIGNS_LIMIT = agsdefault_bop:SIGNS_LIMIT
        end
    End
Else
if sfscompany:boiler_rating = 2 and
   agqgeneral:special_enhancement = 1 then
    l_exterior_signs_limit = l_signs_limit
else
if bpsdefault2:outdoor_signs <> 0 then
    l_exterior_signs_limit = bpsdefault2:outdoor_signs
else
    L_EXTERIOR_SIGNS_LIMIT = agsdefault_bop:SIGNS_LIMIT
If agqgeneral:SIGNS_LIMIT <> L_EXTERIOR_SIGNS_LIMIT Then
    Do RATE_SIGNS
Else
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:SIGNS_PREMIUM = 0
        End
    End

If agqgeneral:SIGNS_NOT_ATTACHED_LIMIT <> 0 Then
    Do RATE_SIGNS_NOT_ATTACHED
Else
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:SIGNS_NOT_ATTACHED_PREMIUM = 0
        End
    End

If agqgeneral:GLASS_LIMIT <> 0 Then
    Do RATE_GLASS
Else
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:GLASS_PREMIUM = 0
        End
    End

If agqgeneral:PROPERTY_LIMIT <> 0 And
   L_FORM <> 3 And
   agqgeneral:BURGLARY_LIMIT_ON <> 0 Then
    Do RATE_BURGLARY
Else
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:BURGLARY_PREMIUM = 0
        End
    End

If (agqgeneral:ATTACH_BU5001 = "Y" Or
   (agqgeneral:PROPERTY_LIMIT <> 0 And
   L_FORM = 3)) Then
    Do RATE_MONEY
Else
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:MONEY_PREMIUM = 0
        End
    End

If SFSLINE_ALIAS:OPTION = "P" and
   sfscompany:boiler_rating <> 4 Then
    Begin
    if agqgeneral:special_enhancement = 1 then
        begin
        l_ar_limit_1 = agqgeneral:property_limit * (l_ar_percent divide 100)
        if l_special_ar_limit > l_ar_limit_1 then
            l_ar_limit_1 = l_special_ar_limit
        end
    else
        begin
        L_AR_LIMIT_1 = (agqgeneral:PROPERTY_LIMIT *
                       (agsdefault_bop:AR_PERCENT Divide 100))
        If L_AR_LIMIT_1 < agsdefault_bop:AR_LIMIT Then
            L_AR_LIMIT_1 = agsdefault_bop:AR_LIMIT
        end
    End
Else
if sfscompany:boiler_rating = 2 and
   agqgeneral:special_enhancement = 1 then
    l_ar_limit_1 = l_special_ar_limit
else
if bpsdefault2:ar_limit <> 0 then
    l_ar_limit_1 = bpsdefault2:ar_limit
else
    L_AR_LIMIT_1 = agsdefault_bop:AR_LIMIT
If agqgeneral:AR_LIMIT <> L_AR_LIMIT_1 Then
    Begin
    L_AR_LIMIT = agqgeneral:AR_LIMIT - L_AR_LIMIT_1
    Do RATE_AR
    End
Else
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:AR_PREMIUM = 0
        End
    End

if agqgeneral:debris_removal_limit <> bpsdefault:debris_removal and
   agqgeneral:company_id = "LEBINS" then
     begin
    Access agqGENERAL_ALIAS, Set agqGENERAL_ALIAS:app_no = agqGENERAL:app_no,
                                 agqGENERAL_ALIAS:PREM_NO = agqGENERAL:PREM_NO,
                                 agqGENERAL_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

    Change agqGENERAL_ALIAS
        Begin
        agqGENERAL_ALIAS:pollution_PREMIUM = (((agqgeneral_alias:debris_removal_limit -
                                                  bpsdefault:debris_removal) divide
                                                  l_pollution_per) *
                                                  l_pollution_charge)
        End
     end
else
if agqgeneral:company_id = "LEBINS" then
    Begin
    Access agqGENERAL_ALIAS, Set agqGENERAL_ALIAS:app_no = agqGENERAL:app_no,
                                 agqGENERAL_ALIAS:PREM_NO = agqGENERAL:PREM_NO,
                                 agqGENERAL_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

    Change agqGENERAL_ALIAS
        Begin
        agqGENERAL_ALIAS:pollution_PREMIUM = 0
        End
    End

if agqgeneral:debris_removal_limit <> bpsdefault2:debris_removal_limit and
   bpsdefault2:debris_removal_limit <> 0 and
   agqgeneral:company_id one of "FARMERS" then
    begin
    Access agqGENERAL_ALIAS, Set agqGENERAL_ALIAS:app_no = agqGENERAL:app_no,
                                 agqGENERAL_ALIAS:PREM_NO = agqGENERAL:PREM_NO,
                                 agqGENERAL_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

    Change agqGENERAL_ALIAS
        Begin
        agqGENERAL_ALIAS:debris_removal_PREMIUM = (((agqgeneral_alias:debris_removal_limit -
                                                  bpsdefault2:debris_removal_limit) divide
                                                  l_pollution_per) *
                                                  l_pollution_charge)
        End
    end
else
if agqgeneral:debris_removal_limit <> bpsdefault:debris_removal and
   bpsdefault2:debris_removal_limit = 0 and
   agqgeneral:company_id one of "FARMERS" then
     begin
     Access agqGENERAL_ALIAS, Set agqGENERAL_ALIAS:app_no = agqGENERAL:app_no,
                                  agqGENERAL_ALIAS:PREM_NO = agqGENERAL:PREM_NO,
                                  agqGENERAL_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

     Change agqGENERAL_ALIAS
        Begin
        agqGENERAL_ALIAS:debris_removal_PREMIUM = (((agqgeneral_alias:debris_removal_limit -
                                                  bpsdefault:debris_removal) divide
                                                  l_pollution_per) *
                                                  l_pollution_charge)
        End
     end
else
if agqgeneral:company_id one of "FARMERS" then
    Begin
    Access agqGENERAL_ALIAS, Set agqGENERAL_ALIAS:app_no = agqGENERAL:app_no,
                                 agqGENERAL_ALIAS:PREM_NO = agqGENERAL:PREM_NO,
                                 agqGENERAL_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

    Change agqGENERAL_ALIAS
        Begin
        agqGENERAL_ALIAS:debris_removal_PREMIUM = 0
        End
    End

if (((agqgeneral:debris_removal_limit <> bpsdefault2:debris_removal_limit and
   agqgeneral:special_enhancement = 0) or
   (agqgeneral:debris_removal_limit <> l_debris_limit_1 and
   agqgeneral:special_enhancement = 1)) and
   bpsdefault2:debris_removal_limit <> 0 and
   agqgeneral:company_id one of "FLEMINGTON") then
    begin
    Access agqGENERAL_ALIAS, Set agqGENERAL_ALIAS:app_no = agqGENERAL:app_no,
                                 agqGENERAL_ALIAS:PREM_NO = agqGENERAL:PREM_NO,
                                 agqGENERAL_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

    Change agqGENERAL_ALIAS
        Begin
        agqGENERAL_ALIAS:debris_removal_PREMIUM = (((agqgeneral_alias:debris_removal_limit -
                                                  bpsdefault2:debris_removal_limit) divide
                                                  l_pollution_per) *
                                                  l_pollution_charge)
        End
    end
else
if agqgeneral:debris_removal_limit <> bpsdefault:debris_removal and
   bpsdefault2:debris_removal_limit = 0 and
   agqgeneral:company_id one of "FLEMINGTON" then
     begin
     Access agqGENERAL_ALIAS, Set agqGENERAL_ALIAS:app_no = agqGENERAL:app_no,
                                  agqGENERAL_ALIAS:PREM_NO = agqGENERAL:PREM_NO,
                                  agqGENERAL_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

     Change agqGENERAL_ALIAS
        Begin
        agqGENERAL_ALIAS:debris_removal_PREMIUM = (((agqgeneral_alias:debris_removal_limit -
                                                  bpsdefault:debris_removal) divide
                                                  l_pollution_per) *
                                                  l_pollution_charge)
        End
     end
else
if agqgeneral:company_id one of "FLEMINGTON" then
    Begin
    Access agqGENERAL_ALIAS, Set agqGENERAL_ALIAS:app_no = agqGENERAL:app_no,
                                 agqGENERAL_ALIAS:PREM_NO = agqGENERAL:PREM_NO,
                                 agqGENERAL_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

    Change agqGENERAL_ALIAS
        Begin
        agqGENERAL_ALIAS:debris_removal_PREMIUM = 0
        End
    End

if bpsdefault2:employee_dishonesty <> 0 then
    begin
    l_employee_dishonesty = bpsdefault2:employee_dishonesty
    If agqgeneral2:employee_dis_limit <> L_employee_dishonesty Then
        Begin
        Do RATE_employee_dishonesty
        End
    Else
        Begin
        Access agqgeneral2_ALIAS, Set agqgeneral2_ALIAS:app_no   = agqGENERAL:app_no,
                                      agqgeneral2_ALIAS:PREM_NO  = agqGENERAL:PREM_NO,
                                      agqgeneral2_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

        Change agqgeneral2_ALIAS
            Begin
            agqgeneral2_ALIAS:employee_dis_premium = 0
            end
        End
    End

if agqgeneral:no_pools <> 0 then
     begin
     do rate_pools
     end
else
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no   = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO  = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    if agqgeneral_ALIAS:app_no   = agqgeneral:app_no and
       agqgeneral_ALIAS:PREM_NO  = agqgeneral:PREM_NO and
       agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO then
        begin
        Change agqgeneral_ALIAS
            Begin
            agqgeneral_ALIAS:pool_PREMIUM = 0
            end
        End
    End

If SFSLINE_ALIAS:OPTION = "P" and
   sfscompany:boiler_Rating = 2 Then
    Begin
    if agqgeneral:special_enhancement = 1 then
        begin
        l_credit_card = (agqGENERAL:PROPERTY_LIMIT *
                        (l_credit_card_percent Divide 100))
        If l_credit_card < l_credit_card_limit Then
            l_credit_card = l_credit_card_limit
        end
    else
        begin
        l_credit_card = (agqGENERAL:PROPERTY_LIMIT *
                        (l_credit_card_percent Divide 100))
        If l_credit_card < bpsdefault2:credit_card Then
            l_credit_card = bpsdefault2:credit_card
        end
    End
Else
if bpsdefault2:credit_card <> 0 then
    begin
    l_credit_card = bpsdefault2:credit_card
    if agqgeneral:special_enhancement = 1 then
        l_credit_card = l_credit_card_limit
    end
If agqGENERAL2:credit_card <> L_credit_card Then
    Begin
    Do RATE_credit_card
    End
Else
    Begin
    Access agqGENERAL2_ALIAS, Set agqGENERAL2_ALIAS:app_no = agqGENERAL:app_no,
                                  agqGENERAL2_ALIAS:PREM_NO = agqGENERAL:PREM_NO,
                                  agqGENERAL2_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

    Change agqGENERAL2_ALIAS
        Begin
        agqGENERAL2_ALIAS:credit_card_premium = 0
        end
    End

if bpsdefault2:electronic_data <> 0 then
    begin
    l_electronic_data = bpsdefault2:electronic_data
    If agqgeneral2:electronic_data <> L_electronic_data Then
        Begin
        Do RATE_electronic_data
        End
    Else
        Begin
        Access agqgeneral2_ALIAS, Set agqgeneral2_ALIAS:app_no   = agqGENERAL:app_no,
                                      agqgeneral2_ALIAS:PREM_NO  = agqGENERAL:PREM_NO,
                                      agqgeneral2_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

        Change agqgeneral2_ALIAS
            Begin
            agqgeneral2_ALIAS:electronic_data_premium = 0
            end
        End
    End

if bpsdefault2:loss_of_income_dependent <> 0 then
    begin
    l_dependent_property = bpsdefault2:loss_of_income_dependent
    If agqgeneral2:dependent_property <> L_dependent_property Then
        Begin
        Do RATE_dependent_property
        End
    Else
        Begin
        Access agqgeneral2_ALIAS, Set agqgeneral2_ALIAS:app_no   = agqGENERAL:app_no,
                                      agqgeneral2_ALIAS:PREM_NO  = agqGENERAL:PREM_NO,
                                      agqgeneral2_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

        Change agqgeneral2_ALIAS
            Begin
            agqgeneral2_ALIAS:dependent_property_premium = 0
            end
        End
    End

l_interruption = bpsdefault2:loss_of_income_interruption
If agqgeneral2:interruption <> L_interruption and
   l_interruption <> 0 Then
    Begin
    Do RATE_interruption
    End
 else
    Begin
    Access agqgeneral2_ALIAS, Set agqgeneral2_ALIAS:app_no   = agqGENERAL:app_no,
                                  agqgeneral2_ALIAS:PREM_NO  = agqGENERAL:PREM_NO,
                                  agqgeneral2_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

    Change agqgeneral2_ALIAS
        Begin
        agqgeneral2_ALIAS:interruption_premium = 0
        end
    End

if agqgeneral:debris_removal_limit <> agsdefault_bop:debris_removal and
   agqgeneral:company_id = "LEBINS" then
     begin
    Access agqGENERAL_ALIAS, Set agqGENERAL_ALIAS:app_no   = agqGENERAL:app_no,
                                 agqGENERAL_ALIAS:PREM_NO  = agqGENERAL:PREM_NO,
                                 agqGENERAL_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

    Change agqGENERAL_ALIAS
        Begin
        agqGENERAL_ALIAS:pollution_PREMIUM = (((agqgeneral_alias:debris_removal_limit -
                                              agsdefault_bop:debris_removal) divide
                                              l_pollution_per) *
                                              l_pollution_charge)
        End
     end
else
if agqgeneral:company_id = "LEBINS" then
    Begin
    Access agqGENERAL_ALIAS, Set agqGENERAL_ALIAS:app_no   = agqGENERAL:app_no,
                                 agqGENERAL_ALIAS:PREM_NO  = agqGENERAL:PREM_NO,
                                 agqGENERAL_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

    Change agqGENERAL_ALIAS
        Begin
        agqGENERAL_ALIAS:pollution_PREMIUM = 0
        End
    End

l_commandline_1 = str(agqgeneral:app_no,11) + str(agqgeneral:prem_no,4) +
                  str(agqgeneral:build_no,4)
proc("cli csbatch agqup11h %s",l_commandline_1)/noconsole

If SFSLINE_ALIAS:OPTION = "P" and
   sfscompany:boiler_rating <> 4 Then
    Begin
    if agqgeneral:special_enhancement = 1 then
        begin
        l_utility_limit = agqgeneral:property_limit * (l_utility_percent divide 100)
        if l_special_utility_limit > l_utility_limit then
            l_utility_limit = l_special_utility_limit
        end
    else
        begin
        L_UTILITY_LIMIT = (agqgeneral:PROPERTY_LIMIT *
                          (agsdefault_bop:UTILITY_PERCENT Divide 100))
        If L_UTILITY_LIMIT < agsdefault_bop:UTILITY_LIMIT Then
            L_UTILITY_LIMIT = agsdefault_bop:UTILITY_LIMIT
        If L_UTILITY_LIMIT > agsdefault_bop:UTILITY_MAX and
           agsdefault_bop:utility_max <> 0 Then
            L_UTILITY_LIMIT = agsdefault_bop:UTILITY_MAX
        end
    End
Else
if agqgeneral:special_enhancement = 1 and
   sfscompany:boiler_rating = 2 then
    l_utility_limit = l_special_utility_limit
else
if bpsdefault2:utility_limit <> 0 then
    l_utility_limit = bpsdefault2:utility_limit
else
    L_UTILITY_LIMIT = agsdefault_bop:UTILITY_LIMIT
If agqgeneral:UTILITY_LIMIT <> L_UTILITY_LIMIT Then
    Do RATE_UTILITY
Else
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:UTILITY_PREMIUM = 0
        End
    End

If SFSLINE_ALIAS:OPTION = "P" and
   sfscompany:boiler_rating <> 4 Then
    Begin
    if agqgeneral:special_enhancement = 1 then
        begin
        l_mechanical_limit = agqgeneral:property_limit * (l_mechanical_percent divide 100)
        if l_special_mechanical_limit > l_mechanical_limit then
            l_mechanical_limit = l_special_mechanical_limit
        end
    else
        begin
        L_MECHANICAL_LIMIT = (agqgeneral:PROPERTY_LIMIT *
                             (agsdefault_bop:MECHANICAL_PERCENT Divide 100))
        If L_MECHANICAL_LIMIT < agsdefault_bop:MECHANICAL_LIMIT Then
            L_MECHANICAL_LIMIT = agsdefault_bop:MECHANICAL_LIMIT
        If L_MECHANICAL_LIMIT > agsdefault_bop:MECHANICAL_MAX Then
            L_MECHANICAL_LIMIT = agsdefault_bop:MECHANICAL_MAX
        end
    End
Else
if bpsdefault2:mechanical_breakdown <> 0 then
    l_mechanical_limit = bpsdefault2:mechanical_breakdown
else
    L_MECHANICAL_LIMIT = agsdefault_bop:MECHANICAL_LIMIT
If agqgeneral:MECHANICAL_LIMIT <> L_MECHANICAL_LIMIT Then
    Do RATE_MECHANICAL
Else
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:MECHANICAL_PREMIUM = 0
        End
    End

if ((l_default_off_premises_limit <> l_off_premises_limit and
   agqgeneral:special_enhancement = 0) or
   (l_off_premises_limit <> l_off_premises and
   agqgeneral:special_enhancement = 1)) then
    Do RATE_OFF_PREMISES
Else
    Begin
    if sfsline:lob_code = "CPORTFOLIO" then
        begin
        Access agqmastsupp, Set agqmastsupp:app_no = agqgeneral:app_no,
                                agqmastsupp:line_of_business = agqgeneral:line_of_business, generic

        Change agqmastsupp
            Begin
            agqmastsupp:OFF_PREMISES_PREMIUM = 0
            end
        End
    else
        begin
        Access agqMASTER, Set agqMASTER:app_no = agqgeneral:app_no, generic

        Change agqMASTER
            Begin
            agqMASTER:OFF_PREMISES_PREMIUM = 0
            end
        End
    End

If SFSLINE_ALIAS:OPTION = "P" and
   sfscompany:boiler_rating <> 4 Then
    Begin
    if agqgeneral:special_enhancement = 1 then
        begin
        l_value_limit_1 = agqgeneral:property_limit * (l_valuable_papers_percent divide 100)
        if l_valuable_papers_limit > l_value_limit_1 then
            l_value_limit_1 = l_valuable_papers_limit
        end
    else
        begin
        L_VALUE_LIMIT_1 = (agqgeneral:PROPERTY_LIMIT *
                          (agsdefault_bop:VALUABLE_PERCENT Divide 100))
        If L_VALUE_LIMIT_1 < agsdefault_bop:VALUABLE_PAPERS_LIMIT Then
            L_VALUE_LIMIT_1 = agsdefault_bop:VALUABLE_PAPERS_LIMIT
        end
    End
Else
if sfscompany:boiler_rating = 2 and
   agqgeneral:special_enhancement = 1 then
    l_value_limit_1 = l_valuable_papers_limit
else
if bpsdefault2:valuable_papers <> 0 then
    l_value_limit_1 = bpsdefault2:valuable_papers
else
    L_VALUE_LIMIT_1 = agsdefault_bop:VALUABLE_PAPERS_LIMIT
If agqgeneral:VALUABLE_PAPERS_LIMIT <> L_VALUE_LIMIT_1 Then
    Begin
    L_VALUE_LIMIT = agqgeneral:VALUABLE_PAPERS_LIMIT - L_VALUE_LIMIT_1
    Do RATE_VALUABLE_PAPERS
    End
Else
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:VALUABLE_PAPERS_PREMIUM = 0
        End
    End

If SFSLINE_ALIAS:OPTION = "P" and
   sfscompany:boiler_rating <> 4 Then
    Begin
    if agqgeneral:special_enhancement = 1 then
        begin
        l_water_bkup_limit = agqgeneral:property_limit * (l_water_backup_percent divide 100)
        if l_special_water_backup_limit > l_water_bkup_limit then
            l_water_bkup_limit = l_special_water_backup_limit
        if l_water_bkup_limit > 15000 and
           sfscompany:boiler_rating = 2 then
            l_water_bkup_limit = 15000
        end
    else
        begin
        L_WATER_BKUP_LIMIT = (agqgeneral:PROPERTY_LIMIT *
                             (agsdefault_bop:SEWER_BKUP_PERCENT Divide 100))
        If L_WATER_BKUP_LIMIT < agsdefault_bop:WATER_BACKUP_LIMIT Then
            L_WATER_BKUP_LIMIT = agsdefault_bop:WATER_BACKUP_LIMIT
        if l_water_bkup_limit > 15000 and
           sfscompany:boiler_rating = 2 then
            l_water_bkup_limit = 15000
        end
    End
Else
if bpsdefault2:water_damage <> 0 then
    l_water_bkup_limit = bpsdefault2:water_damage
else
    L_WATER_BKUP_LIMIT = agsdefault_bop:WATER_BACKUP_LIMIT

if ((agqgeneral:water_backup_limit <> 0 and
   agqgeneral:special_enhancement = 0 and
   agqgeneral:water_backup_limited = "Y") or
   (agqgeneral:water_backup_limit <> l_water_bkup_limit and
   agqgeneral:special_enhancement = 1)) then
    Do RATE_WATERBACKUP
Else
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:WATER_BACKUP_PREMIUM = 0
        End
    End

If agqgeneral:ACV_BUILDING = "Y" Then
    Do RATE_ACV_BUILDING
Else
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:ACV_BUILDING_PREMIUM = 0
        End
    End

If agqgeneral:ACV_CONTENTS = "Y" Then
    Do RATE_ACV_CONTENTS
Else
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:ACV_CONTENTS_PREMIUM = 0
        End
    End

access bpsrate, set bpsrate:company_id = agqgeneral:company_id,
                    bpsrate:state = agqgeneral:state,
                    bpsrate:line_of_business = agqgeneral:line_of_business, generic

while bpsrate:company_id = agqgeneral:company_id and
      bpsrate:state = agqgeneral:state and
      bpsrate:line_of_business = agqgeneral:line_of_business
        begin
        if agqgeneral:eff_date >= bpsrate:eff_date then
            begin
            l_liability_rate_or_charge = bpsrate:liability_rate_or_charge

            end

        next bpsrate
        end

if l_liability_rate_or_charge not one of 1 then
    begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_alias:liability_charge = l_liability_charge
        end
    end
else
    begin
    l_liability_rate_1 = l_liability_rate
    l_liability_charge_1 = (((agqgeneral_alias:building_premium +
                           agqgeneral_alias:property_premium +
                           agqgeneral_alias:acv_building_premium +
                           agqgeneral_alias:acv_contents_premium) *
                           l_liability_rate_1) -
                           (agqgeneral_alias:building_premium +
                           agqgeneral_alias:property_premium +
                           agqgeneral_alias:acv_building_premium +
                           agqgeneral_alias:acv_contents_premium))
    l_original_liability_charge[l_sub] = l_liability_charge_1
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_alias:liability_charge = l_liability_charge_1
        end
    l_liability_charge_3 = l_liability_charge_1
    end

if agqgeneral:special_enhancement = 1 and
   sfscompany:boiler_rating = 2 and
   agqgeneral:customer_prop_limit <> l_customer_prop_limit then
    do rate_customer_property
else
If agqgeneral:CUSTOMER_PROP_LIMIT <> agsdefault_bop:CUSTOMER_PROP_LIMIT and
   agqgeneral:special_enhancement = 0 Then
    begin
    l_customer_prop_limit = agsdefault_bop:customer_prop_limit
    Do RATE_CUSTOMER_PROPERTY
    end
Else
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:CUSTOMER_PROP_PREMIUM = 0
        End
    End

if sfscompany:boiler_rating = 2 and
   agqgeneral:special_enhancement = 1 and
   agqgeneral:fire_limit <> l_fire_limit then
    do rate_fire_legal
else
If agqgeneral:FIRE_LIMIT <> agsdefault_bop:FIRE_LIMIT and
   agqgeneral:special_enhancement = 0 Then
    Do RATE_FIRE_LEGAL
Else
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:FIRE_PREMIUM = 0
        End
    End

if ((agqgeneral:building_code_percent <> agsdefault_bop:building_code_percent and
   agqgeneral:special_enhancement = 0) or
   (agqgeneral:building_code_percent <> l_building_code_percent and
   agqgeneral:special_enhancement = 1)) then
    do rate_building_code
Else
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:BUILDING_CODE_PREMIUM = 0
        End
    End

If agqgeneral:BOILERS = "Y" and
   agqgeneral:liability_only = 0 and
   sfscompany:boiler_rating not one of 4 then
    begin
    l_boiler_added = "Y"
    Do RATE_BOILERS
    end
Else
if sfscompany:boiler_rating not one of 4 then
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:BOILERS_PREMIUM = 0
        End
    L_BOILERS_PREM = 0
    End

If L_DELETE_HIRED_NONOWNED = "Y" Or
   L_EXTEND_HIRED_NONOWNED = "Y" Then
    Do RATE_HIRED_NONOWNED
Else
    Begin
    if sfsline:lob_code = "CPORTFOLIO" then
        begin
        Access agqmastsupp, Set agqmastsupp:app_no = agqgeneral:app_no,
                                agqmastsupp:line_of_business = agqgeneral:line_of_business, generic

        Change agqmastsupp
            Begin
            agqmastsupp:hired_nonowned_premium = 0
            end
        End
    else
        begin
        Access agqMASTER, Set agqMASTER:app_no = agqgeneral:app_no, generic

        Change agqMASTER
            Begin
            agqMASTER:HIRED_NONOWNED_PREMIUM = 0
            end
        End
    End

/*write("<014>")
        write("%c%n",1005, agqgeneral_ALIAS:SIGNS_PREMIUM)
                                        write("%c%n",1015,agqgeneral_ALIAS:SIGNS_NOT_ATTACHED_PREMIUM)
                                        write("%c%n",1025,agqgeneral_ALIAS:GLASS_PREMIUM)
                                        write("%c%n",1035,agqgeneral_ALIAS:BURGLARY_PREMIUM)
                                        write("%c%n",1045,agqgeneral_ALIAS:MONEY_PREMIUM)
                                        write("%c%n",1055,agqgeneral_ALIAS:AR_PREMIUM)
                                        write("%c%n",1065,agqgeneral_ALIAS:UTILITY_PREMIUM)
                                        write("%c%n",1075,agqgeneral_ALIAS:MECHANICAL_PREMIUM)
                                        write("%c%n",1085,agqgeneral_ALIAS:CUSTOMER_PROP_PREMIUM)
                                        write("%c%n",2005,L_OFF_PREMISES_PREMIUM)
                                        write("%c%n",2015,agqgeneral_ALIAS:POLLUTION_PREMIUM)
                                        write("%c%n",2025,agqgeneral_alias:debris_removal_premium)
                                        write("%c%n",2035,agqgeneral_ALIAS:VALUABLE_PAPERS_PREMIUM)
                                        write("%c%n",2045,agqgeneral_ALIAS:ACV_BUILDING_PREMIUM)
                                        write("%c%n",2055,agqgeneral_ALIAS:ACV_CONTENTS_PREMIUM)
                                        write("%c%n",2065,agqgeneral_ALIAS:FIRE_PREMIUM)
                                        write("%c%n",2075,agqgeneral_ALIAS:BUILDING_CODE_PREMIUM)
                                        write("%c%n",2085,agqgeneral_ALIAS:BOILERS_PREMIUM)
                                        write("%c%n",3005,agqgeneral_ALIAS:WATER_BACKUP_PREMIUM)
                                        write("%c%n",3015,L_HIRED_NONOWNED_PREMIUM)
                                        write("%c%n",3025,agqgeneral_ALIAS:RESTAURANT_ENHANCEMENT)
                                        write("%c%n",3035,agqgeneral_alias:fuel_pump_charge)
                                        write("%c%n",3045,agqgeneral2:employee_dis_premium)
                                        write("%c%n",3055,agqgeneral2:credit_card_premium)
                                        write("%c%n",3065,agqgeneral2:electronic_data_premium)
                                        write("%c%n",3075,agqgeneral2:dependent_property_premium)
                                        write("%c%n",3085,agqgeneral2:interruption_premium) */

If L_FIRST = "Y" Then
    Begin
    L_FIRST = "N"
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    access agqgeneral2, set agqgeneral2:app_no   = g_app_no,
                            agqgeneral2:prem_no  = agqgeneral:prem_no,
                            agqgeneral2:build_no = agqgeneral:build_no, generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:OPTIONAL_TOTAL = agqgeneral_ALIAS:SIGNS_PREMIUM +
                                          agqgeneral_ALIAS:SIGNS_NOT_ATTACHED_PREMIUM +
                                          agqgeneral_ALIAS:GLASS_PREMIUM +
                                          agqgeneral_ALIAS:BURGLARY_PREMIUM +
                                          agqgeneral_ALIAS:MONEY_PREMIUM +
                                          agqgeneral_ALIAS:AR_PREMIUM +
                                          agqgeneral_alias:pool_premium +
                                          agqgeneral_ALIAS:UTILITY_PREMIUM +
                                          agqgeneral_ALIAS:MECHANICAL_PREMIUM +
                                          agqgeneral_ALIAS:CUSTOMER_PROP_PREMIUM +
                                          L_OFF_PREMISES_PREMIUM +
                                          agqgeneral_ALIAS:POLLUTION_PREMIUM +
                                          agqgeneral_alias:debris_removal_premium +
                                          agqgeneral_ALIAS:VALUABLE_PAPERS_PREMIUM +
                                          agqgeneral_ALIAS:ACV_BUILDING_PREMIUM +
                                          agqgeneral_ALIAS:ACV_CONTENTS_PREMIUM +
                                          agqgeneral_ALIAS:FIRE_PREMIUM +
                                          agqgeneral_ALIAS:BUILDING_CODE_PREMIUM +
                                          agqgeneral_ALIAS:BOILERS_PREMIUM +
                                          agqgeneral_ALIAS:WATER_BACKUP_PREMIUM +
                                          L_HIRED_NONOWNED_PREMIUM +
                                          agqgeneral_ALIAS:RESTAURANT_ENHANCEMENT +
                                          agqgeneral_alias:fuel_pump_charge +
                                          agqgeneral2:employee_dis_premium +
                                          agqgeneral2:credit_card_premium +
                                          agqgeneral2:electronic_data_premium +
                                          agqgeneral2:dependent_property_premium +
                                          agqgeneral2:interruption_premium
        End
    End
Else
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    access agqgeneral2, set agqgeneral2:app_no   = g_app_no,
                            agqgeneral2:prem_no  = agqgeneral:prem_no,
                            agqgeneral2:build_no = agqgeneral:build_no, generic

    Change agqgeneral_ALIAS
        Begin
        If agqgeneral_ALIAS:OFF_PREMISES_LIMIT <> L_OFF_PREMISES_LIMIT Then
            L_OFF_PREMISE_PREM = agqgeneral_ALIAS:OFF_PREMISES_PREMIUM
        Else
            L_OFF_PREMISE_PREM = 0
        if agsdefault_bop:fire_legal_policy_wide = 1 then
            begin
            l_fire_premium = 0
            agqgeneral_alias:fire_premium = 0
            end
        else
            l_fire_premium = agqgeneral_alias:fire_premium
        agqgeneral_ALIAS:OPTIONAL_TOTAL = agqgeneral_ALIAS:SIGNS_PREMIUM +
                                          agqgeneral_ALIAS:SIGNS_NOT_ATTACHED_PREMIUM +
                                          agqgeneral_ALIAS:GLASS_PREMIUM +
                                          L_OFF_PREMISE_PREM +
                                          agqgeneral_ALIAS:BURGLARY_PREMIUM +
                                          agqgeneral_ALIAS:MONEY_PREMIUM +
                                          agqgeneral_ALIAS:AR_PREMIUM +
                                          agqgeneral_alias:pool_premium +
                                          agqgeneral_ALIAS:UTILITY_PREMIUM +
                                          agqgeneral_ALIAS:MECHANICAL_PREMIUM +
                                          agqgeneral_ALIAS:CUSTOMER_PROP_PREMIUM +
                                          agqgeneral_ALIAS:POLLUTION_PREMIUM +
                                          agqgeneral_alias:debris_removal_premium +
                                          agqgeneral_ALIAS:VALUABLE_PAPERS_PREMIUM +
                                          agqgeneral_ALIAS:ACV_BUILDING_PREMIUM +
                                          agqgeneral_ALIAS:ACV_CONTENTS_PREMIUM +
                                          L_FIRE_PREMIUM +
                                          agqgeneral_ALIAS:BUILDING_CODE_PREMIUM +
                                          agqgeneral_ALIAS:BOILERS_PREMIUM +
                                          agqgeneral_ALIAS:WATER_BACKUP_PREMIUM +
                                          agqgeneral_ALIAS:RESTAURANT_ENHANCEMENT +
                                          agqgeneral_alias:fuel_pump_charge +
                                          agqgeneral2:credit_card_premium +
                                          agqgeneral2:electronic_data_premium +
                                          agqgeneral2:dependent_property_premium +
                                          agqgeneral2:interruption_premium
        End
    End

l_end_premium = 0
l_prem_no = 0
l_build_no = 0
if l_policy_wide_first = "Y" then
    begin
    Access agqEND, Set agqEND:app_no = agqgeneral:app_no,
                       agqEND:PREM_NO  = l_prem_no,
                       agqEND:BUILD_NO = l_build_no, Generic

    while agqEND:app_no = agqgeneral:app_no and
          agqEND:PREM_NO  = l_prem_no and
          agqEND:BUILD_NO = l_build_no
        begin
        l_update_sfpend_premium = 0
        L_CODE = agqEND:CODE
        Do RATE_ENDORSEMENTS
        Change agqEND
            Begin
            agqEND:PREMIUM = l_update_sfpend_premium
            End
        L_END_PREMIUM = L_END_PREMIUM + l_update_sfpend_premium

        Next agqEND
        End

    l_policy_wide_first = "N"
    end

Access agqEND, Set agqEND:app_no = agqgeneral:app_no,
                   agqEND:PREM_NO  = agqgeneral:PREM_NO,
                   agqEND:BUILD_NO = agqgeneral:BUILD_NO, Generic

while agqEND:app_no = agqgeneral:app_no and
      agqEND:PREM_NO  = agqgeneral:PREM_NO and
      agqEND:BUILD_NO = agqgeneral:BUILD_NO
    begin
    l_update_sfpend_premium = 0
    L_CODE = agqEND:CODE
    Do RATE_ENDORSEMENTS
    Change agqEND
        Begin
        agqEND:PREMIUM = l_update_sfpend_premium
        End
    L_END_PREMIUM = L_END_PREMIUM + l_update_sfpend_premium

Next agqEND
End

Access agqMISC, Set agqMISC:app_no = g_app_no, generic

L_MISC_PREMIUM = 0
If L_MISC <> "Y" Then
    Begin
    while agqMISC:app_no = g_app_no
        begin
        L_MISC_PREMIUM = L_MISC_PREMIUM + agqMISC:PREMIUM
        L_MISC = "Y"

        Next agqMISC
        End
    End

L_PREM = agqgeneral_ALIAS:bop_premium
-- boilers does not get any discounts, credits or surcharges, need to take this
-- out of the optional total and put back in after credits have been applied

access bpsrate, set bpsrate:company_id = agqgeneral:company_id,
                    bpsrate:state = agqgeneral:state,
                    bpsrate:line_of_business = agqgeneral:line_of_business, generic

while bpsrate:company_id = agqgeneral:company_id and
      bpsrate:state = agqgeneral:state and
      bpsrate:line_of_business = agqgeneral:line_of_business
        begin
        if agqgeneral:eff_date >= bpsrate:eff_date then
            begin
            l_liability_rate_or_charge = bpsrate:liability_rate_or_charge

            end

        next bpsrate
        end

-- liability mp per policy
if l_liability_rate_or_charge one of 1 and
   l_liability_first = "Y" then
    begin
    l_liability_First = "N"
    access agqgeneral_alt, set agqgeneral_alt:app_no = agqgeneral:app_no, generic

    l_liability_charge_2 = 0
    while agqgeneral_alt:app_no = agqgeneral:app_no
        begin
        l_liability_charge_2 = l_liability_charge_2 +
                               agqgeneral_alt:liability_charge

        next agqgeneral_alt
        end

    if l_liability_charge_2 < l_liability_charge then
        begin
        Access agqgeneral_ALT, Set agqgeneral_ALT:app_no = agqgeneral:app_no, generic

        Change agqgeneral_ALT
            Begin
            l_liability_charge_3            = (agqgeneral_alt:liability_charge +
                                              (l_liability_charge -
                                              l_liability_charge_2))
            agqgeneral_alt:liability_charge = (agqgeneral_alt:liability_charge +
                                              (l_liability_charge -
                                              l_liability_charge_2))
            end

        end
    else
        begin
        Access agqgeneral_ALT, Set agqgeneral_ALT:app_no = agqgeneral:app_no, generic

        l_liability_charge_3 = l_original_liability_charge[1]
        l_sub_1 = 0
        while agqgeneral_ALT:app_no = agqgeneral:app_no
            begin
            l_sub_1 = l_sub_1 + 1
            Change agqgeneral_ALT
                Begin
                agqgeneral_alt:liability_charge = l_original_liability_charge[l_sub_1]
                end
            next agqgeneral_alt
            end
        end

    end

Access agqgeneral_ALT, Set agqgeneral_ALT:app_no = agqgeneral:app_no,
                           agqgeneral_alt:prem_no = agqgeneral:prem_no,
                           agqgeneral_alt:build_no = agqgeneral:build_no,  generic

if l_liability_rate_or_charge not one of 1 then
    begin
    L_OPTIONAL    = ((agqgeneral_ALT:OPTIONAL_TOTAL -
                    agqgeneral_ALT:BOILERS_PREMIUM) +
                    L_LIABILITY_CHARGE)
    end
else
    begin
    L_OPTIONAL    = ((agqgeneral_ALT:OPTIONAL_TOTAL -
                    agqgeneral_ALT:BOILERS_PREMIUM) +
                    L_LIABILITY_CHARGE_3)
    end

L_BOILER_PREM = agqgeneral_ALT:BOILERS_PREMIUM + L_BOILER_PREM
L_TOTAL_END   = L_OPTIONAL + L_END_PREMIUM

Do GET_RATE

if agqgeneral:boilers = "Y" and
   agqgeneral:liability_only = 0 and
   sfscompany:boiler_rating one of 4 then
    begin
    l_boiler_added = "Y"
    do rate_boilers
    end
else
if sfscompany:boiler_rating one of 4 then
    begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:BOILERS_PREMIUM = 0
        End
    L_BOILERS_PREM = 0
    End

End

Procedure RATE_ALARM
Begin
Access BPSCREDITS, Set BPSCREDITS:COMPANY_ID       = agqgeneral:company_id,
                       BPSCREDITS:STATE            = agqgeneral:STATE,
                       BPSCREDITS:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

while BPSCREDITS:COMPANY_ID       = agqgeneral:company_id and
      BPSCREDITS:STATE            = agqgeneral:STATE and
      BPSCREDITS:LINE_OF_BUSINESS = agqgeneral:line_of_business
    begin
    If agqgeneral:eff_date >= BPSCREDITS:EFF_DATE Then
        Begin
        L_FACTOR = BPSCREDITS:ALARM_FACTOR[1]
        L_SUPERIOR_FACTOR = BPSCREDITS:ALARM_FACTOR[2]
        l_pollution_per = bpscredits:pollution_per
        l_pollution_charge = bpscredits:pollution_charge
        End

    Next BPSCREDITS
    End

access bpsrate, set bpsrate:company_id = agqgeneral:company_id,
                    bpsrate:state = agqgeneral:state,
                    bpsrate:line_of_business = agqgeneral:line_of_business, generic

while bpsrate:company_id = agqgeneral:company_id and
      bpsrate:state = agqgeneral:state and
      bpsrate:line_of_business = agqgeneral:line_of_business
        begin
        if agqgeneral:eff_date >= bpsrate:eff_date then
            begin
            l_liability_rate_or_charge = bpsrate:liability_rate_or_charge

            end

        next bpsrate
        end

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

Change agqgeneral_ALIAS
    Begin
    If agqgeneral_ALIAS:BURGLAR_ALARM_SYSTEM = "" Then
        agqgeneral_ALIAS:BURGLAR_ALARM_SYSTEM = "N"

--    if l_liability_rate_or_charge not one of 1 then
--        begin
        If agqgeneral_ALIAS:ALARM_OPTION[1] = "Y" Or
           agqgeneral_ALIAS:ALARM_OPTION[2] = "Y" And
           agqgeneral_ALIAS:ALARM_OPTION[3] = "N" Then
            agqgeneral_ALIAS:ALARM_FACTOR = L_FACTOR
        If agqgeneral_ALIAS:ALARM_OPTION[3] = "Y" Then
           agqgeneral_ALIAS:ALARM_FACTOR = L_SUPERIOR_FACTOR

        If agqgeneral_ALIAS:ALARM_OPTION[1] = "N" And
           agqgeneral_ALIAS:ALARM_OPTION[2] = "N" And
           agqgeneral_ALIAS:ALARM_OPTION[3] = "N" And
           agqgeneral_ALIAS:BURGLAR_ALARM_SYSTEM = "N" Then
            agqgeneral_ALIAS:ALARM_FACTOR = 1.00
/*        end
    else
        begin
        if agqgeneral_alias:alarm_factor = 0 then
            agqgeneral_alias:alarm_factor = 1.00
        end*/
    End

End

Procedure CALC_BUILDING_PREM
Begin
Do ACCESS_LOSSCOST

L_RECORD_TYPE = 2
L_COMPANY_ID = agqgeneral:company_id
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
L_TERRITORY = 999
L_RATING_ID = "4"
L_CONSTRUCTION_STRING = Str(agqgeneral:CONSTRUCTION)
L_STATE = agqgeneral:STATE
L_PROTECTION = agqgeneral:PROTECTION
L_EFF_DATE = agqgeneral:eff_date
L_TYPE = agqgeneral:bop_type
L_RATE_NO = agqgeneral:RATE_NO
Access BPSCREDITS, Set BPSCREDITS:COMPANY_ID = L_COMPANY_ID,
                       BPSCREDITS:STATE = L_STATE,
                       BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

while BPSCREDITS:COMPANY_ID       = L_COMPANY_ID and
      BPSCREDITS:STATE            = L_STATE and
      BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
    begin
    If L_EFF_DATE >= BPSCREDITS:EFF_DATE Then
        L_PERCENT_OCCUPIED  = BPSCREDITS:PERCENT_OCCUPIED

    Next BPSCREDITS
    End

If agqgeneral:TENANT = "N" And
   agqgeneral:PERCENT_OCCUPIED >= L_PERCENT_OCCUPIED Then
    L_OCCUPIED = "O"
Else
    L_OCCUPIED = "L"

If ((L_TYPE = 6 and
   agqgeneral:company_id <> "FARMERS") or
   l_type not one of 6, 8) Then
    Begin
    if agqgeneral:company_id one of "DELOS", "GGUND" then
        begin
        include "bpsbuild1.inc"
        end
    else
        begin
        Include "bpsbuild.inc"
        end
    End
Else
If (L_TYPE = 8 or
   (l_type = 6 and
   agqgeneral:company_id = "FARMERS")) Then
    Begin
    Do ACCESS_LOSSCOST

    L_RECORD_TYPE = 1
    L_COMPANY_ID = agqgeneral:company_id
    L_LINE_OF_BUSINESS = agqgeneral:line_of_business
    L_TERRITORY = 999
    L_RATING_ID = "4"
    L_CONSTRUCTION = agqgeneral:CONSTRUCTION
    L_STATE = agqgeneral:STATE
    L_PROTECTION = agqgeneral:PROTECTION
    L_EFF_DATE = agqgeneral:eff_date
    L_TYPE = agqgeneral:bop_type
    L_RATE_NO = agqgeneral:RATE_NO
    Access BPSCREDITS, Set BPSCREDITS:COMPANY_ID = L_COMPANY_ID,
                           BPSCREDITS:STATE = L_STATE,
                           BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

    while BPSCREDITS:COMPANY_ID       = L_COMPANY_ID and
          BPSCREDITS:STATE            = L_STATE and
          BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
        begin
        If L_EFF_DATE >= BPSCREDITS:EFF_DATE Then
            L_PERCENT_OCCUPIED  = BPSCREDITS:PERCENT_OCCUPIED

        Next BPSCREDITS
        End

    If agqgeneral:TENANT = "N" And
       agqgeneral:PERCENT_OCCUPIED >= L_PERCENT_OCCUPIED Then
        L_OCCUPIED = "O"
    Else
        L_OCCUPIED = "L"

    Include "bpsprop.inc"
    L_BUILDING_RATE = L_PROPERTY_RATE
    End

If (L_FORM = 2 or
   (L_form = 1 and
   agqgeneral:company_id = "CCMI")) Then
    begin
    Do GET_BUILDING_CREDIT
    end
Do GET_INFLATION_GUARD
Do GET_CREDITS
Do GET_LIABILITY

-- only apts and condo that are leased have a building liability charge
-- all others make 1.00

-- liability on building only applies if no personal property, otherwise only appliable
-- on personal property

If agqgeneral:PROPERTY_LIMIT <> 0 Then
    L_LIABILITY_RATE_1 = 1.00
Else
    L_LIABILITY_RATE_1 = L_LIABILITY_RATE * L_AGGREGATE_FACTOR

if sfscompany:boiler_rating one of 4 and
   agqgeneral:state one of 7, 29 then
    l_territory_building = agqgeneral:rating_territory_factor *
                           agqgeneral:special_exposure_factor
else
if sfscompany:boiler_rating one of 4 and
   agqgeneral:state not one of 7, 29 then
    l_territory_building = agqgeneral:rating_territory_factor
else
    Do GET_TERRITORY_FACTORS

l_wind_deduct_factor = 0
Do GET_WIND_DEDUCTIBLE

L_BUILDING_RATE = (((L_BUILDING_RATE - L_BUILDING_CREDIT) * L_LOSS_COST) *
                   L_INFLATION_FACTOR)

access bpsrate, set bpsrate:company_id = agqgeneral:company_id,
                    bpsrate:state = agqgeneral:state,
                    bpsrate:line_of_business = agqgeneral:line_of_business, generic

while bpsrate:company_id = agqgeneral:company_id and
      bpsrate:state = agqgeneral:state and
      bpsrate:line_of_business = agqgeneral:line_of_business
        begin
        if agqgeneral:eff_date >= bpsrate:eff_date then
            begin
            l_liability_rate_or_charge = bpsrate:liability_rate_or_charge

            end

        next bpsrate
        end

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

l_tier = agqgeneral_alias:tier
include "sfstier.pro"

if l_tier_factor = 0 then
    l_tier_factor = 1.00

if l_wind_exclusion_factor = 0 or
   agqgeneral_alias:windstorm_exclusion = 0 then
    l_wind_exclusion_factor = 1.00

/*write("<014>")
write("%c%n",1005,l_building_credit_factors)
write("%c%n",1015,l_liability_rate_1)
write("%c%n",1025,l_territory_building)
write("%c%n",1035,l_wind_deduct_factor)
write("%c%n",1045,l_building_sprinkler)
write("%c%n",1055,l_tier_factor)
write("%c%n",1065,l_fma_factor)
write("%c%n",1075,l_wind_exclusion_factor)
write("%c%n",2005,agqgeneral_alias:prem_no)
write("%c%n",2015,agqgeneral_alias:build_no)*/
if l_liability_rate_or_charge not one of 1 then
    begin
    L_BUILDING_ADJUSTMENTS = L_BUILDING_CREDIT_FACTORS * L_LIABILITY_RATE_1 *
                             L_TERRITORY_BUILDING * L_WIND_DEDUCT_FACTOR *
                             L_BUILDING_SPRINKLER * L_FMA_FACTOR *
                             l_tier_factor * l_wind_exclusion_factor
    end
else
    begin
    L_BUILDING_ADJUSTMENTS = L_BUILDING_CREDIT_FACTORS * l_aggregate_factor *
                             L_TERRITORY_BUILDING * L_WIND_DEDUCT_FACTOR *
                             L_BUILDING_SPRINKLER * L_FMA_FACTOR *
                             l_tier_factor * l_wind_exclusion_factor
    end

/*write("%c%n",2065,l_building_adjustments)
write("%c%n",2075,agqgeneral:prem_no)
write("%c%n",2085,agqgeneral:build_no)
read(10,01,"press enter",l_enter,1)*/
L_BUILDING_LIMIT = ((agqgeneral:BUILDING_LIMIT + agqgeneral:OTHER_STRUCTURES) Divide 1000)

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

if sfscompany:boiler_rating <> 4 then
    begin
    if l_liability_rate_or_charge not one of 1 then
        begin
        If agqgeneral_ALIAS:ALARM_OPTION[1] = "Y" And
           agqgeneral_ALIAS:ALARM_OPTION[2] = "Y" And
           agqgeneral_ALIAS:ALARM_OPTION[3] = "N" Then
            L_BUILDING_ADJUSTMENTS = L_BUILDING_ADJUSTMENTS * agqgeneral_ALIAS:ALARM_FACTOR
        If agqgeneral_ALIAS:ALARM_OPTION[1] = "Y" And
           agqgeneral_ALIAS:ALARM_OPTION[2] = "N" And
           agqgeneral_ALIAS:ALARM_OPTION[3] = "N" Then
            L_BUILDING_ADJUSTMENTS = L_BUILDING_ADJUSTMENTS * agqgeneral_ALIAS:ALARM_FACTOR
        If agqgeneral_ALIAS:ALARM_OPTION[3] = "Y" Then
            L_BUILDING_ADJUSTMENTS = L_BUILDING_ADJUSTMENTS * agqgeneral_ALIAS:ALARM_FACTOR
        end
    else
        begin
        if agqgeneral_alias:alarm_option[1] = "Y" and
           agqgeneral_alias:alarm_option[2] = "Y" then
            l_building_adjustments = l_building_adjustments *
                                     agqgeneral_alias:alarm_factor
        if agqgeneral_alias:alarm_option[1] = "Y" and
           agqgeneral_alias:alarm_option[2] = "N" then
            l_building_adjustments = l_building_adjustments *
                                     agqgeneral_alias:alarm_factor
        end
    end

End

Procedure GET_BUILDING_CREDIT
Begin
L_COMPANY_ID = agqgeneral:company_id
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
L_RECORD_TYPE = 3
L_TERRITORY = 999
L_STATE = agqgeneral:STATE
L_EFF_DATE = agqgeneral:eff_date
L_FORM = L_FORM

Include "bpsspecbld.inc"

L_BUILDING_CREDIT = L_BLD_RATE

/* end of calc_building_special */
End

Procedure GET_INFLATION_GUARD
Begin
L_COMPANY_ID = agqgeneral:company_id
L_STATE = agqgeneral:STATE
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
L_INFLATION_GUARD = agqgeneral:AUTO_PERCENT
L_EFF_DATE = agqgeneral:eff_date

Include "sfsinflation.inc"

If L_INFLATION_FACTOR = 0 Then
    L_INFLATION_FACTOR = 1.00

End

Procedure GET_LIABILITY
Begin
Switch(L_LIABILITY_CODE)
  Case 2  : Begin
            L_RATING_ID = "7"
            L_CONSTRUCTION_STRING = "7"
            End
  Case 3  : Begin
            L_RATING_ID = "8"
            L_CONSTRUCTION_STRING = "8"
            End
  Case 4  : Begin
            L_RATING_ID = "A"
            L_CONSTRUCTION_STRING = "A"
            End
  Default : Begin
            L_RATING_ID = "6"
            L_CONSTRUCTION_STRING = "6"
            End
  End
L_COMPANY_ID = agqgeneral:company_id
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
L_TERRITORY = 999
L_PROTECTION = agqgeneral:PROTECTION
L_STATE = agqgeneral:STATE
L_EFF_DATE = agqgeneral:eff_date
L_TYPE = agqgeneral:bop_type
L_RECORD_TYPE = 2
Access BPSCREDITS, Set BPSCREDITS:COMPANY_ID = L_COMPANY_ID,
                       BPSCREDITS:STATE = L_STATE,
                       BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

while BPSCREDITS:COMPANY_ID       = L_COMPANY_ID and
      BPSCREDITS:STATE            = L_STATE and
      BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
    begin
    If L_EFF_DATE >= BPSCREDITS:EFF_DATE Then
        L_PERCENT_OCCUPIED  = BPSCREDITS:PERCENT_OCCUPIED

    Next BPSCREDITS
    End

If agqgeneral:TENANT = "N" And
   agqgeneral:PERCENT_OCCUPIED  >= L_PERCENT_OCCUPIED Then
    L_OCCUPIED = "O"
Else
    L_OCCUPIED = "L"
L_RATE_NO = agqgeneral:RATE_NO

Include "bpsliab.inc"

If L_LIABILITY_RATE = 0 Then
    L_LIABILITY_RATE = 1.00

End

Procedure CALC_PROPERTY_PREM
Begin
Do ACCESS_LOSSCOST

L_RECORD_TYPE = 1
L_COMPANY_ID = agqgeneral:company_id
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
L_TERRITORY = 999
L_RATING_ID = "4"
L_CONSTRUCTION = agqgeneral:CONSTRUCTION
L_STATE = agqgeneral:STATE
L_PROTECTION = agqgeneral:PROTECTION
L_EFF_DATE = agqgeneral:eff_date
L_TYPE = agqgeneral:bop_type
L_RATE_NO = agqgeneral:RATE_NO
Access BPSCREDITS, Set BPSCREDITS:COMPANY_ID = L_COMPANY_ID,
                       BPSCREDITS:STATE = L_STATE,
                       BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

while BPSCREDITS:COMPANY_ID       = L_COMPANY_ID and
      BPSCREDITS:STATE            = L_STATE and
      BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
    begin
    If L_EFF_DATE >= BPSCREDITS:EFF_DATE Then
        L_PERCENT_OCCUPIED  = BPSCREDITS:PERCENT_OCCUPIED

    Next BPSCREDITS
    End

If agqgeneral:TENANT = "N" And
   agqgeneral:PERCENT_OCCUPIED >= L_PERCENT_OCCUPIED Then
    L_OCCUPIED = "O"
Else
    L_OCCUPIED = "L"

If (L_TYPE = 1 Or
   L_TYPE = 2 Or
   L_TYPE = 8 Or
   (l_type = 6 and
   agqgeneral:company_id = "FARMERS") or
   L_TYPE = 9 or
   (sfscompany:property_rating = 1 and
   agqgeneral:rate_no <> 0)) Then
    Include "bpsprop.inc"

-- if apartment/condo use building rates
If (L_TYPE <> 1 And
   L_TYPE <> 2 And
   L_TYPE <> 8 And
   L_TYPE <> 9 and
   (sfscompany:property_rating not one of 1 or
   agqgeneral:rate_no = 0)) Then
    Begin
    if ((l_type = 6 and
       agqgeneral:company_id <> "FARMERS") or
       l_type <> 6) then
        begin
        L_RECORD_TYPE = 2
        L_COMPANY_ID = agqgeneral:company_id
        L_LINE_OF_BUSINESS = agqgeneral:line_of_business
        L_TERRITORY = 999
        L_RATING_ID = "4"
        L_CONSTRUCTION_STRING = Str(agqgeneral:CONSTRUCTION)
        L_STATE = agqgeneral:STATE
        L_PROTECTION = agqgeneral:PROTECTION
        L_EFF_DATE = agqgeneral:eff_date
        L_TYPE = agqgeneral:bop_type
        L_RATE_NO = agqgeneral:RATE_NO
        Access BPSCREDITS, Set BPSCREDITS:COMPANY_ID = L_COMPANY_ID,
                               BPSCREDITS:STATE = L_STATE,
                               BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

        while BPSCREDITS:COMPANY_ID       = L_COMPANY_ID and
              BPSCREDITS:STATE            = L_STATE and
              BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
            begin
            If L_EFF_DATE >= BPSCREDITS:EFF_DATE Then
                L_PERCENT_OCCUPIED  = BPSCREDITS:PERCENT_OCCUPIED

            Next BPSCREDITS
            End

        If agqgeneral:TENANT = "N" And
           agqgeneral:PERCENT_OCCUPIED >= L_PERCENT_OCCUPIED Then
            L_OCCUPIED = "O"
        Else
            L_OCCUPIED = "L"

        if agqgeneral:company_id = "WHMIC" then
            begin
            include "bpsbuild1.inc"
            end
        else
            begin
            Include "bpsbuild.inc"
            end

        L_PROPERTY_RATE = L_BUILDING_RATE
        end
    End

Do GET_CREDITS
Do GET_LIABILITY
If L_LIABILITY_RATE = 0 Then
    L_LIABILITY_RATE = 1.00

if sfscompany:boiler_rating one of 4 and
   agqgeneral:state one of 7, 29 then
    l_territory_contents = agqgeneral:rating_territory_factor *
                           agqgeneral:special_exposure_factor
else
if sfscompany:boiler_rating one of 4 and
   agqgeneral:state not one of 7, 29 then
    begin
    if agqgeneral:territory_factors[2] <> 0 then
        l_territory_contents = agqgeneral:territory_factors[2]
    else
        l_territory_contents = agqgeneral:rating_territory_factor
    end
else
    Do GET_TERRITORY_FACTORS

l_wind_deduct_factor = 0
Do GET_WIND_DEDUCTIBLE

L_PROPERTY_LIMIT = agqgeneral:PROPERTY_LIMIT Divide 1000
access bpsrate, set bpsrate:company_id = agqgeneral:company_id,
                    bpsrate:state = agqgeneral:state,
                    bpsrate:line_of_business = agqgeneral:line_of_business, generic

while bpsrate:company_id = agqgeneral:company_id and
      bpsrate:state = agqgeneral:state and
      bpsrate:line_of_business = agqgeneral:line_of_business
        begin
        if agqgeneral:eff_date >= bpsrate:eff_date then
            begin
            l_liability_rate_or_charge = bpsrate:liability_rate_or_charge

            end

        next bpsrate
        end

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

l_tier = agqgeneral_alias:tier
include "sfstier.pro"

if l_tier_factor = 0 then
    l_tier_factor = 1.00

if l_wind_exclusion_factor = 0 or
   agqgeneral_alias:windstorm_exclusion = 0 then
    l_wind_exclusion_factor = 1.00

if l_liability_rate_or_charge not one of 1 then
    begin
    if agqgeneral_alias:property_limit = 0 then
        L_PROPERTY_ADJUSTMENTS = L_PROPERTY_CREDIT_FACTORS *
                                 L_TERRITORY_CONTENTS * L_WIND_DEDUCT_FACTOR *
                                 L_CONTENTS_SPRINKLER * l_wind_exclusion_factor *
                                 L_FMA_FACTOR * l_tier_factor
    else
        L_PROPERTY_ADJUSTMENTS = L_PROPERTY_CREDIT_FACTORS * L_LIABILITY_RATE *
                                 L_TERRITORY_CONTENTS * L_WIND_DEDUCT_FACTOR *
                                 l_wind_exclusion_factor *
                                 L_AGGREGATE_FACTOR * L_CONTENTS_SPRINKLER *
                                 L_FMA_FACTOR * l_tier_factor
    end
else
    begin
    L_PROPERTY_ADJUSTMENTS = L_PROPERTY_CREDIT_FACTORS * l_aggregate_factor *
                             L_TERRITORY_CONTENTS * L_WIND_DEDUCT_FACTOR *
                             L_CONTENTS_SPRINKLER *
                             L_FMA_FACTOR * l_tier_factor
    end

L_PROPERTY_RATE = L_PROPERTY_RATE * L_LOSS_COST
L_PROPERTY_RATE_1 = L_PROPERTY_RATE
Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

if sfscompany:boiler_rating <> 4 then
    begin
    if l_liability_rate_or_charge not one of 1 then
        begin
        If agqgeneral_ALIAS:ALARM_OPTION[1] = "Y" And
           agqgeneral_ALIAS:ALARM_OPTION[2] = "Y" And
           agqgeneral_ALIAS:ALARM_OPTION[3] = "N" Then
            L_PROPERTY_ADJUSTMENTS = L_PROPERTY_ADJUSTMENTS * agqgeneral_ALIAS:ALARM_FACTOR
        If agqgeneral_ALIAS:ALARM_OPTION[1] = "Y" And
           agqgeneral_ALIAS:ALARM_OPTION[2] = "N" And
           agqgeneral_ALIAS:ALARM_OPTION[3] = "N" Then
            L_PROPERTY_ADJUSTMENTS = L_PROPERTY_ADJUSTMENTS * agqgeneral_ALIAS:ALARM_FACTOR
        If agqgeneral_ALIAS:ALARM_OPTION[3] = "Y" Then
            L_PROPERTY_ADJUSTMENTS = L_PROPERTY_ADJUSTMENTS * agqgeneral_ALIAS:ALARM_FACTOR
        end
    else
        begin
        if agqgeneral_alias:alarm_option[1] = "Y" and
           agqgeneral_alias:alarm_option[2] = "Y" then
            L_PROPERTY_ADJUSTMENTS = L_PROPERTY_ADJUSTMENTS *
                                     agqgeneral_ALIAS:ALARM_FACTOR
        if agqgeneral_alias:alarm_option[1] = "Y" and
           agqgeneral_alias:alarm_option[2] = "N" then
            L_PROPERTY_ADJUSTMENTS = L_PROPERTY_ADJUSTMENTS *
                                     agqgeneral_ALIAS:ALARM_FACTOR
        end
    end

End

Procedure CALC_EXPANDED
Begin
L_COMPANY_ID = agqgeneral:company_id
L_STATE = agqgeneral:STATE
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
L_RECORD_TYPE = 3
L_TERRITORY = 999
If agqgeneral:PROPERTY_LIMIT <= 10000 Then
    L_SPECIAL_LIMIT_1 = 100
Else
    L_SPECIAL_LIMIT_1 = agqgeneral:PROPERTY_LIMIT Divide 100
L_EFF_DATE = agqgeneral:eff_date
L_RATE_GROUP = agqgeneral:RATE_GROUP

If L_SPECIAL_LIMIT_1 < 2001 and
   agqgeneral:property_limit < 1000000 Then
    Begin
    l_special_limit = l_special_limit_1
    Include "bpsspecprop.inc"
    End
Else
if l_special_limit_1 => 2001 or
   agqgeneral:property_limit > 999999 then
    Begin
    L_SPECIAL_LIMIT = 2000
    Include "bpsspecprop1.inc"
    L_SPECIAL_LIMIT_1 = 200000
    L_SPECIAL_LIMIT_2 = ((agqgeneral:PROPERTY_LIMIT -
                        L_SPECIAL_LIMIT_1) Divide 50000)
    L_SPECIAL_PREMIUM = ((L_SPECIAL_LIMIT_2 * L_SPECIAL_EACH_ADDL) +
                        L_SPECIAL)
    L_SPECIAL = L_SPECIAL_PREMIUM
    End

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = g_app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

if l_liability_rate_or_charge not one of 1 and
   sfscompany:boiler_rating <> 4 then
    begin
    If agqgeneral_ALIAS:ALARM_OPTION[1] = "Y" And
       agqgeneral_ALIAS:ALARM_OPTION[2] = "Y" And
       agqgeneral_ALIAS:ALARM_OPTION[3] = "N" Then
        L_PROPERTY_CREDIT_FACTORS = L_PROPERTY_CREDIT_FACTORS *
                                    agqgeneral_ALIAS:ALARM_FACTOR
    If agqgeneral_ALIAS:ALARM_OPTION[1] = "Y" And
       agqgeneral_ALIAS:ALARM_OPTION[2] = "N" And
       agqgeneral_ALIAS:ALARM_OPTION[3] = "N" Then
        L_PROPERTY_CREDIT_FACTORS = L_PROPERTY_CREDIT_FACTORS *
                                    agqgeneral_ALIAS:ALARM_FACTOR

    If agqgeneral_ALIAS:ALARM_OPTION[3] = "Y" Then
        L_PROPERTY_CREDIT_FACTORS = L_PROPERTY_CREDIT_FACTORS *
                                    agqgeneral_ALIAS:ALARM_FACTOR
    end
else
if sfscompany:boiler_rating <> 4 then
    begin
    if agqgeneral_alias:alarm_option[1] = "Y" and
       agqgeneral_alias:alarm_option[2] = "Y" then
        l_property_credit_factors = l_property_credit_factors *
                                    agqgeneral_alias:alarm_factor
    if agqgeneral_alias:alarm_option[1] = "N" and
       agqgeneral_alias:alarm_option[2] = "Y" then
        l_property_credit_factors = l_property_credit_factors *
                                    agqgeneral_alias:alarm_factor
    end

/* end of calc_property_special */
End

Procedure CALC_EXPANDED_1
Begin
L_COMPANY_ID = agqgeneral:company_id
L_STATE = agqGENERAL:STATE
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
L_RECORD_TYPE = 3
L_TERRITORY = 999
If agqGENERAL:PROPERTY_LIMIT <= 10000 Then
    L_SPECIAL_LIMIT = 100
Else
    L_SPECIAL_LIMIT = agqGENERAL:PROPERTY_LIMIT Divide 100
L_EFF_DATE = agqgeneral:eff_date
L_RATE_GROUP = agqGENERAL:RATE_GROUP

If L_SPECIAL_LIMIT < 9501 and
   agqgeneral:property_limit < 1000000 Then
    Begin
    Include "bpsspecprop.inc"
    End
Else
if l_special_limit => 9501 or
   agqgeneral:property_limit > 999999 then
    Begin
    L_SPECIAL_LIMIT = 2000
    Include "bpsspecprop1.inc"
    L_SPECIAL_LIMIT_1 = 200000
    L_SPECIAL_LIMIT_2 = ((agqGENERAL:PROPERTY_LIMIT -
                        L_SPECIAL_LIMIT_1) Divide 50000)
    L_SPECIAL_PREMIUM = ((L_SPECIAL_LIMIT_2 * L_SPECIAL_EACH_ADDL) +
                        L_SPECIAL)
    L_SPECIAL = L_SPECIAL_PREMIUM
    End

Access agqGENERAL_ALIAS, Set agqGENERAL_ALIAS:app_no   = G_app_no,
                             agqGENERAL_ALIAS:PREM_NO  = agqGENERAL:PREM_NO,
                             agqGENERAL_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

if l_liability_rate_or_charge not one of 1 and
   sfscompany:boiler_rating <> 4 then
    begin
    If agqGENERAL_ALIAS:ALARM_OPTION[1] = "Y" And
       agqGENERAL_ALIAS:ALARM_OPTION[2] = "Y" And
       agqGENERAL_ALIAS:ALARM_OPTION[3] = "N" Then
        L_PROPERTY_CREDIT_FACTORS = L_PROPERTY_CREDIT_FACTORS *
                                    agqGENERAL_ALIAS:ALARM_FACTOR
    If agqGENERAL_ALIAS:ALARM_OPTION[1] = "Y" And
       agqGENERAL_ALIAS:ALARM_OPTION[2] = "N" And
       agqGENERAL_ALIAS:ALARM_OPTION[3] = "N" Then
        L_PROPERTY_CREDIT_FACTORS = L_PROPERTY_CREDIT_FACTORS *
                                    agqGENERAL_ALIAS:ALARM_FACTOR

    If agqGENERAL_ALIAS:ALARM_OPTION[3] = "Y" Then
        L_PROPERTY_CREDIT_FACTORS = L_PROPERTY_CREDIT_FACTORS *
                                    agqGENERAL_ALIAS:ALARM_FACTOR
    end
else
if sfscompany:boiler_rating <> 4 then
    begin
    if agqgeneral_alias:alarm_option[1] = "Y" and
       agqgeneral_alias:alarm_option[2] = "Y" then
        l_property_credit_factors = l_property_credit_factors *
                                    agqgeneral_alias:alarm_factor
    if agqgeneral_alias:alarm_option[1] = "N" and
       agqgeneral_alias:alarm_option[2] = "Y" then
        l_property_credit_factors = l_property_credit_factors *
                                    agqgeneral_alias:alarm_factor
    end

/* end of calc_property_special */
End

Procedure GET_CREDITS
Begin
L_COMPANY_ID = agqgeneral:company_id
L_STATE = agqgeneral:STATE
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
L_EFF_DATE = agqgeneral:eff_date
L_LOSSES = agqgeneral:LOSS_YEARS
L_MULTI_LOCATION = L_LOCATION_CREDIT
L_BUILDING_YEAR = Year(agqgeneral:eff_date) - agqgeneral:CONSTRUCTION_YEAR
L_TYPE = agqgeneral:bop_type
L_SINGLE_OCCUPANCY = agqgeneral:SINGLE_OCCUPANCY
Access BPSCREDITS, Set BPSCREDITS:COMPANY_ID = L_COMPANY_ID,
                       BPSCREDITS:STATE = L_STATE,
                       BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

while BPSCREDITS:COMPANY_ID       = L_COMPANY_ID and
      BPSCREDITS:STATE            = L_STATE and
      BPSCREDITS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
    begin
    If L_EFF_DATE >= BPSCREDITS:EFF_DATE Then
        L_PERCENT_OCCUPIED  = BPSCREDITS:PERCENT_OCCUPIED

    Next BPSCREDITS
    End

If agqgeneral:TENANT = "N" And
   agqgeneral:PERCENT_OCCUPIED  >= L_PERCENT_OCCUPIED Then
    L_OWNER = "O"
Else
    L_OWNER = "L"
L_SPRINKLERED = agqgeneral:SPRINKLERS
l_garden_type = agqgeneral:garden_type
l_family_apt  = agqgeneral:family_apt

Include "bpscredit.inc"

Do GET_DEDUCTIBLE

If SFSCOMPANY:CUSTOMER_PROPERTY_RATING one of 2, 4 or -- ficof
   sfscompany:loss_income_rating = 3 Then  -- lebins
    Begin
    L_LOSS_INCOME_FACTOR_1 = 1.00
    If agqgeneral:LIMIT_LOSS_INCOME = "Y" Then
        Begin
        L_LOSS_INCOME_LIMIT = 99999999
        Do GET_LOSS_INCOME
        L_LOSS_INCOME_FACTOR_1 = L_LOSS_INCOME_FACTOR_1 * L_LOSS_INCOME_FACTOR
        End

    If agqgeneral:DELETE_LOSS_INCOME = "Y" Then
        Begin
        L_LOSS_INCOME_LIMIT = 99999998
        Do GET_LOSS_INCOME
        L_LOSS_INCOME_FACTOR_1 = L_LOSS_INCOME_FACTOR_1 * L_LOSS_INCOME_FACTOR
        End

    If agqgeneral:WHOLESALER = "Y" Then
        Begin
        If agqgeneral:WHOLESALER_PERCENT = 200  Then
            L_LOSS_INCOME_LIMIT = 99999997
        If agqgeneral:WHOLESALER_PERCENT = 100 Then
            L_LOSS_INCOME_LIMIT = 99999996
        Do GET_LOSS_INCOME
        L_LOSS_INCOME_FACTOR_1 = L_LOSS_INCOME_FACTOR_1 * L_LOSS_INCOME_FACTOR
        End

    If agqgeneral:LOSS_INCOME_LIMIT <> 0 Then
        Begin
        L_LOSS_INCOME_LIMIT = agqgeneral:LOSS_INCOME_LIMIT
        Do GET_LOSS_INCOME
        L_LOSS_INCOME_FACTOR_1 = L_LOSS_INCOME_FACTOR_1 * L_LOSS_INCOME_FACTOR
        End

    L_LOSS_INCOME_FACTOR = L_LOSS_INCOME_FACTOR_1
    End
Else
    Begin
    If agqgeneral:LIMIT_LOSS_INCOME = "Y" Then
        L_LOSS_INCOME_LIMIT = 99999999
    Else
    If agqgeneral:DELETE_LOSS_INCOME = "Y" Then
        L_LOSS_INCOME_LIMIT = 99999998
    Else
    If agqgeneral:WHOLESALER = "Y" And
       agqgeneral:WHOLESALER_PERCENT = 200  Then
        L_LOSS_INCOME_LIMIT = 99999997
    Else
    If agqgeneral:WHOLESALER = "Y" And
       agqgeneral:WHOLESALER_PERCENT = 100 Then
        L_LOSS_INCOME_LIMIT = 99999996
    Else
        L_LOSS_INCOME_LIMIT = agqgeneral:LOSS_INCOME_LIMIT

    Do GET_LOSS_INCOME
    End

L_MAX_CREDITS = L_NEW_BUILDING_FACTOR * L_EXPERIENCE_FACTOR *
                L_MULTI_LOCATION_FACTOR
If ((agqgeneral:ALARM_OPTION[1] = "Y" Or
   agqgeneral:ALARM_OPTION[2] = "Y") And
   agqgeneral:ALARM_OPTION[3] = "N") Then
    L_MAX_CREDITS = L_MAX_CREDITS * L_FACTOR
If agqgeneral:ALARM_OPTION[3] = "Y" Then
    L_MAX_CREDITS = L_MAX_CREDITS * L_SUPERIOR_FACTOR

If agqgeneral:LOSS_INCOME_FACTOR <> 0 Then
    L_LOSS_INCOME_FACTOR = agqgeneral:LOSS_INCOME_FACTOR

access bpsrate, set bpsrate:company_id       = agqgeneral:company_id,
                    bpsrate:state            = agqgeneral:state,
                    bpsrate:line_of_business = agqgeneral:line_of_business, generic

l_weather_factor = 1.00
while bpsrate:company_id       = agqgeneral:company_id and
      bpsrate:state            = agqgeneral:state and
      bpsrate:line_of_business = agqgeneral:line_of_business
        begin
        if (agqgeneral:eff_date >= bpsrate:eff_date and
           (agqgeneral:eff_date <= bpsrate:exp_date or
           bpsrate:exp_date = 0)) then
            begin
            if agqgeneral:weather_related = 1 then
                l_weather_factor = bpsrate:weather_related_factor[1]
            else
            if agqgeneral:weather_related = 2 then
                l_weather_factor = bpsrate:weather_related_factor[2]
            else
                l_weather_factor = 1.00

            end
        next bpsrate
        end

if sfscompany:boiler_rating = 1 then
    l_weather_factor = 1.00
/*write("%c%s",2005,"                                                                                          ")
write("%c%n",2005,l_experience_factor)
write("%c%n",2015,l_new_building_factor)
write("%c%n",2025,l_multi_location_factor)
write("%c%n",2035,l_apt_condo_factor)
write("%c%n",2045,l_deductible_factor)
write("%c%n",2055,l_loss_income_factor)
write("%c%n",2065,l_single_owner_factor)
write("%c%n",2075,l_weather_factor)*/
L_BUILDING_CREDIT_FACTORS = L_EXPERIENCE_FACTOR *
                            L_NEW_BUILDING_FACTOR * L_MULTI_LOCATION_FACTOR *
                            L_APT_CONDO_FACTOR * L_DEDUCTIBLE_FACTOR *
                            L_LOSS_INCOME_FACTOR * L_SINGLE_OWNER_FACTOR *
                            l_weather_factor
if sfscompany:boiler_rating = 1 then
    L_PROPERTY_CREDIT_FACTORS = L_EXPERIENCE_FACTOR *
                                L_MULTI_LOCATION_FACTOR * L_APT_CONDO_FACTOR *
                                L_DEDUCTIBLE_FACTOR * L_LOSS_INCOME_FACTOR *
                                L_SINGLE_OWNER_FACTOR * l_weather_factor
else
    L_PROPERTY_CREDIT_FACTORS = L_EXPERIENCE_FACTOR *
                                L_MULTI_LOCATION_FACTOR * L_APT_CONDO_FACTOR *
                                L_DEDUCTIBLE_FACTOR * L_LOSS_INCOME_FACTOR *
                                L_SINGLE_OWNER_FACTOR

if sfscompany:boiler_rating = 4 then
    begin
    Access agqGENERAL_ALIAS, Set agqGENERAL_ALIAS:app_no   = agqGENERAL:app_no,
                                 agqGENERAL_ALIAS:PREM_NO  = agqGENERAL:PREM_NO,
                                 agqGENERAL_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

    If agqGENERAL_ALIAS:ALARM_OPTION[1] = "Y" And
       agqGENERAL_ALIAS:ALARM_OPTION[2] = "Y" And
       agqGENERAL_ALIAS:ALARM_OPTION[3] = "N" Then
        begin
        L_building_credit_factors = l_building_credit_factors * agqGENERAL_ALIAS:ALARM_FACTOR
        l_property_credit_factors = l_property_credit_factors * agqgeneral_alias:alarm_factor
        end
    If agqGENERAL_ALIAS:ALARM_OPTION[1] = "Y" And
       agqGENERAL_ALIAS:ALARM_OPTION[2] = "N" And
       agqGENERAL_ALIAS:ALARM_OPTION[3] = "N" Then
        begin
        l_building_credit_factors = l_building_credit_factors * agqGENERAL_ALIAS:ALARM_FACTOR
        l_property_credit_factors = l_property_credit_factors * agqGENERAL_ALIAS:ALARM_FACTOR
        end
    If agqGENERAL_ALIAS:ALARM_OPTION[3] = "Y" Then
        begin
        L_BUILDING_credit_factors = L_BUILDING_credit_factors * agqGENERAL_ALIAS:ALARM_FACTOR
        L_property_credit_factors = L_property_credit_factors * agqGENERAL_ALIAS:ALARM_FACTOR
        end
    end

End

Procedure GET_DEDUCTIBLE
Begin
L_COMPANY_ID = agqgeneral:company_id
L_STATE = agqgeneral:STATE
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
--L_DEDUCTIBLE = L_DEDUCTIBLE
L_DEDUCTIBLE_LIMIT = 99999999
L_EFF_DATE = agqgeneral:eff_date

Include "sfsdeductible.inc"

End

Procedure GET_LOSS_INCOME
Begin
L_COMPANY_ID = agqgeneral:company_id
L_STATE = agqgeneral:STATE
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
L_EFF_DATE = agqgeneral:eff_date

Include "bpslossincome.inc"

End

Procedure GET_TERRITORY_FACTORS
Begin
write("%c%s",1005,"iamher")
L_COMPANY_ID = agqgeneral:company_id
L_STATE = agqgeneral:STATE
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
L_TERRITORY = agqgeneral:TERRITORY
l_str_zipcode = str(agqgeneral:zipcode[1,5]) + "0000"
l_zipcode = val(l_str_zipcode)
L_EFF_DATE = agqgeneral:eff_date

if ((agqgeneral:state = 37 and
   sfscompany:boiler_rating = 4) or
   (agqgeneral:state = 29 and
   agqgeneral:company_id one of "NWIC", "FARMERS")) then
    begin
    l_territory_building = 0
    include "sfsterritory1.inc"
    write("%c%n",1005,l_territory_building)
    if l_territory_building = 0 then
        begin
        include "sfsterrfactor.inc"
        end
    end
else
    begin
    Include "sfsterrfactor.inc"
    end

End

Procedure GET_WIND_DEDUCTIBLE
Begin
L_COMPANY_ID = agqgeneral:company_id
L_STATE = agqgeneral:STATE
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
--L_DEDUCTIBLE = L_DEDUCTIBLE
L_WIND_DEDUCTIBLE = agqgeneral:WIND_DEDUCTIBLE
L_EFF_DATE = agqgeneral:eff_date

Include "sfswinddeduct.inc"

If L_WIND_DEDUCT_FACTOR = 0 Then
    L_WIND_DEDUCT_FACTOR = 1.00

End

Procedure ACCESS_LOSSCOST
Begin
L_COMPANY_ID = agqgeneral:company_id
L_STATE = agqgeneral:STATE
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
Access SFSLOSSCOST, Set SFSLOSSCOST:COMPANY_ID = L_COMPANY_ID,
                        SFSLOSSCOST:STATE = L_STATE,
                        SFSLOSSCOST:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

while SFSLOSSCOST:COMPANY_ID       = L_COMPANY_ID and
      SFSLOSSCOST:STATE            = L_STATE and
      SFSLOSSCOST:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
    begin
    If agqgeneral:eff_date >= SFSLOSSCOST:EFF_DATE Then
        L_LOSS_COST = SFSLOSSCOST:RATE

    Next SFSLOSSCOST
    End

If L_LOSS_COST = 0 Then
    L_LOSS_COST = 1.0000

/* end of access_sfslosscost */
End

Procedure RATE_RESTAURANTS
Begin
L_COMPANY_ID = agqgeneral:company_id
L_STATE = agqgeneral:STATE
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
L_RECEIPTS = agqgeneral:RECEIPTS
L_EFF_DATE = agqgeneral:eff_date

Include "rest.pro"

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

If agqgeneral_ALIAS:app_no = agqgeneral:app_no And
   agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO And
   agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO Then
    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:RESTAURANT_ENHANCEMENT = L_RECEIPTS_CHARGE
        End

End

Procedure RATE_SIGNS
Begin
-- this is for signs attached to the building, the rates are entered into bpsglass

L_COMPANY_ID = agqgeneral:company_id
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
L_STATE = agqgeneral:STATE
L_EFF_DATE = agqgeneral:eff_date
L_RECORD_TYPE = 6
L_TERRITORY = 999

Include "bpssigns.inc"

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

If agqgeneral_ALIAS:app_no = agqgeneral:app_no And
   agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO And
   agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO Then
    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:SIGNS_PREMIUM = (((agqgeneral_ALIAS:SIGNS_LIMIT -
                                         L_EXTERIOR_SIGNS_LIMIT)
                                         Divide L_LIMIT) * L_CHARGE)
        End

End

Procedure RATE_SIGNS_NOT_ATTACHED
Begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = agqgeneral:company_id,
                    BPSRATE:STATE = agqgeneral:STATE,
                    BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

while BPSRATE:COMPANY_ID       = agqgeneral:company_id and
      BPSRATE:STATE            = agqgeneral:STATE and
      BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business
    begin
    If agqgeneral:eff_date >= BPSRATE:EFF_DATE Then
        Begin
        Switch(L_FORM)
          Case 1 :  Begin
                    L_CHARGE = BPSRATE:SIGNS_NOT_ATTACHED_CHARGE
                    L_LIMIT = BPSRATE:SIGNS_NOT_ATTACHED_LIMIT
                    L_DEDUCTIBLE_CHARGE = 1.00
                    End
          Default : Begin
                    L_CHARGE = BPSRATE:SIGNS_ALL_RISK_CHARGE
                    L_LIMIT = BPSRATE:SIGNS_ALL_RISK_LIMIT
                    L_DEDUCTIBLE_CHARGE = 1.00
                    If agqgeneral:SIGNS_DEDUCTIBLE[2] = BPSRATE:SIGNS_DEDUCTIBLE[1] Then
                        L_DEDUCTIBLE_CHARGE = BPSRATE:SIGNS_DEDUCTIBLE_FACTOR[1]
                    If agqgeneral:SIGNS_DEDUCTIBLE[2] = BPSRATE:SIGNS_DEDUCTIBLE[2] Then
                        L_DEDUCTIBLE_CHARGE = BPSRATE:SIGNS_DEDUCTIBLE_FACTOR[2]
                    If agqgeneral:SIGNS_DEDUCTIBLE[2] = BPSRATE:SIGNS_DEDUCTIBLE[3] Then
                        L_DEDUCTIBLE_CHARGE = BPSRATE:SIGNS_DEDUCTIBLE_FACTOR[3]
                    If agqgeneral:SIGNS_DEDUCTIBLE[2] = BPSRATE:SIGNS_DEDUCTIBLE[4] Then
                        L_DEDUCTIBLE_CHARGE = BPSRATE:SIGNS_DEDUCTIBLE_FACTOR[4]
                    End
          End
        End

   Next BPSRATE
   End

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

If agqgeneral_ALIAS:app_no = agqgeneral:app_no And
   agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO And
   agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO Then
    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:SIGNS_NOT_ATTACHED_PREMIUM = (((agqgeneral_ALIAS:SIGNS_NOT_ATTACHED_LIMIT
                                                      Divide L_LIMIT) * L_CHARGE) *
                                                      L_DEDUCTIBLE_CHARGE)
        End

End

Procedure RATE_GLASS
Begin
L_COMPANY_ID = agqgeneral:company_id
L_STATE = agqgeneral:STATE
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
L_EFF_DATE = agqgeneral:eff_date
L_RECORD_TYPE = 5
L_TERRITORY = agqgeneral:TERRITORY
L_TYPE = agqgeneral:bop_type

Include "bpsglass.inc"

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

If agqgeneral_ALIAS:app_no = agqgeneral:app_no And
   agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO And
   agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO Then
    Change agqgeneral_ALIAS
        Begin
        if agqgeneral:special_enhancement = 1 and
           sfscompany:boiler_rating = 2 then
            begin
            agqgeneral_alias:glass_premium = (((agqgeneral_alias:glass_limit -
                                             l_glass_limit) divide l_limit) *
                                             l_glass_charge)
            end
        else
            agqgeneral_ALIAS:GLASS_PREMIUM = ((agqgeneral_ALIAS:GLASS_LIMIT Divide
                                             L_LIMIT) * L_GLASS_CHARGE)
        If agqgeneral_ALIAS:INCLUDE_GLASS_DEDUCTIBLE = "Y" Then
            Begin
            If SFSLINE_ALIAS:OPTION = "P" and
               sfscompany:boiler_rating <> 4 Then
                Begin
                agqgeneral_ALIAS:GLASS_PREMIUM = ((agqgeneral_ALIAS:GLASS_LIMIT
                                                 Divide L_LIMIT) * L_FACTOR_1)
                End
            Else
                Begin
                agqgeneral_ALIAS:GLASS_PREMIUM = agqgeneral_ALIAS:GLASS_PREMIUM *
                                                 L_FACTOR_1
                End
            agqgeneral_ALIAS:GLASS_DEDUCTIBLE = L_GLASS_DEDUCTIBLE
            End
        Else
            Begin
            agqgeneral_ALIAS:INCLUDE_GLASS_DEDUCTIBLE = "N"
            agqgeneral_ALIAS:GLASS_DEDUCTIBLE = 0
            End
        End

End

Procedure RATE_BURGLARY
Begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = agqgeneral:company_id,
                    BPSRATE:STATE = agqgeneral:STATE,
                    BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

while BPSRATE:COMPANY_ID       = agqgeneral:company_id and
      BPSRATE:STATE            = agqgeneral:STATE and
      BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business
    begin
    If agqgeneral:eff_date >= BPSRATE:EFF_DATE Then
        Begin
        L_FACTOR_1 = BPSRATE:BURGLARY_FACTOR[1]
        L_FACTOR_2 = BPSRATE:BURGLARY_FACTOR[2]
        L_LIMIT = BPSRATE:BURGLARY_LIMIT_ON[2]
        End

    Next BPSRATE
    End

L_COMPANY_ID = agqgeneral:company_id
L_STATE = agqgeneral:STATE
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
L_RECORD_TYPE = 3
L_TERRITORY = 999
If agqgeneral:PROPERTY_LIMIT <= 10000 Then
    L_SPECIAL_LIMIT = 100
Else
    L_SPECIAL_LIMIT = agqgeneral:PROPERTY_LIMIT Divide 100
L_EFF_DATE = agqgeneral:eff_date
L_RATE_GROUP = agqgeneral:RATE_GROUP

If L_SPECIAL_LIMIT < 2500 Then
    Begin
    Include "bpsspecprop.inc"
    End
Else
    Begin
    L_SPECIAL_LIMIT = 2000
    Include "bpsspecprop1.inc"
    L_SPECIAL_LIMIT_1 = 200000
    L_SPECIAL_LIMIT_2 = ((agqgeneral:PROPERTY_LIMIT -
                        L_SPECIAL_LIMIT_1) Divide 50000)
    L_SPECIAL_PREMIUM = ((L_SPECIAL_LIMIT_2 * L_SPECIAL_EACH_ADDL) +
                        L_SPECIAL)
    L_SPECIAL = L_SPECIAL_PREMIUM
    End

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

If agqgeneral_ALIAS:app_no = agqgeneral:app_no And
   agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO And
   agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO Then
    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:BURGLARY_PREMIUM = 0
        agqgeneral_ALIAS:BURGLARY_PREMIUM = L_SPECIAL * L_LOSS_COST *
                                            L_TERRITORY_EXPANDED
                                            * L_PROPERTY_CREDIT_FACTORS
                                            * L_FACTOR_1
        End

If agqgeneral:BURGLARY_LIMIT_ON = L_LIMIT Then
    Begin
    L_COMPANY_ID = agqgeneral:company_id
    L_STATE = agqgeneral:STATE
    L_LINE_OF_BUSINESS = agqgeneral:line_of_business
    L_RECORD_TYPE = 3
    L_TERRITORY = 999
    L_SPECIAL_LIMIT = 100
    L_EFF_DATE = agqgeneral:eff_date
    L_RATE_GROUP = agqgeneral:RATE_GROUP

    Include "bpsspecprop.inc"

    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

    If agqgeneral_ALIAS:app_no = agqgeneral:app_no And
       agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO And
       agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO Then
        Change agqgeneral_ALIAS
            Begin
            agqgeneral_ALIAS:BURGLARY_PREMIUM = (agqgeneral_ALIAS:BURGLARY_PREMIUM +
                                                (L_SPECIAL * L_LOSS_COST *
                                                L_TERRITORY_EXPANDED
                                                * L_PROPERTY_CREDIT_FACTORS *
                                                L_FACTOR_2))
            End
    End

End

Procedure RATE_MONEY
Begin
L_COMPANY_ID = agqgeneral:company_id
L_STATE = agqgeneral:STATE
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
L_EFF_DATE = agqgeneral:eff_date
L_RECORD_TYPE = 7
L_TERRITORY = 999
L_FILLER[1,3] = "   "
if sfscompany:boiler_rating <> 4 then
    begin
    If agqgeneral:MONEY_LIMIT_ON <> 0 Then
        Begin
        If agqgeneral:MONEY_LIMIT_ON = agsdefault_bop:MONEY_LIMIT_ON Then
            L_MONEY_LIMITS = 1
        Else
            L_MONEY_LIMITS = 2
        End
    Else
        L_MONEY_LIMITS = 1
    end
else
    begin
    if agqgeneral:money_limit_on = 10000 then
        l_money_limits = 1
    else
    if agqgeneral:money_limit_on = 15000 then
        begin
        if agqgeneral:money_limit_off = 5000 then
            l_money_limits = 2
        else
            l_money_limits = 3
        end
    else
        l_money_limits = 4
    end

Include "bpsmoney.inc"

L_COMPANY_ID = agqgeneral:company_id
L_STATE = agqgeneral:STATE
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
L_RECORD_TYPE = 3
L_TERRITORY = 999
L_SPECIAL_LIMIT = 100
L_EFF_DATE = agqgeneral:eff_date
L_RATE_GROUP = agqgeneral:RATE_GROUP

Include "bpsspecprop.inc"

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

If agqgeneral_ALIAS:app_no = agqgeneral:app_no And
   agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO And
   agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO Then
    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:MONEY_PREMIUM = 0
        If agqgeneral_ALIAS:MONEY_LIMIT_ON = 0 Then
            Begin
            agqgeneral_ALIAS:MONEY_PREMIUM = L_SPECIAL * L_MONEY_RATE_1 *
                                             agqgeneral_ALIAS:ADJUSTMENT_FACTORS
            agqgeneral_ALIAS:MONEY_PREMIUM = agqgeneral_ALIAS:MONEY_PREMIUM * -1
            End
        If agqgeneral_ALIAS:ATTACH_BU5001 = "Y" Then
            Begin
            agqgeneral_ALIAS:MONEY_PREMIUM = L_SPECIAL * L_MONEY_RATE_2
            End
        If ((agqgeneral_ALIAS:MONEY_LIMIT_ON <> agsdefault_bop:MONEY_LIMIT_ON And
           agqgeneral_ALIAS:MONEY_LIMIT_ON <> 0)  Or
           (agqgeneral_ALIAS:ATTACH_BU5001 = "Y" And
           agqgeneral_ALIAS:MONEY_LIMIT_ON <> agsdefault_bop:MONEY_LIMIT_ON)) Then
            begin
            if sfscompany:boiler_rating = 3 then
                begin
                agqgeneral_ALIAS:MONEY_PREMIUM = (agqgeneral_ALIAS:MONEY_PREMIUM +
                                                 (L_SPECIAL * L_MONEY_RATE_3 *
                                                 agqgeneral_alias:adjustment_factors))
                end
            else
            if sfscompany:boiler_rating = 4 then
                begin
                switch(agqgeneral_alias:bop_type)
                  case 1  : agqgeneral_alias:money_premium = l_money_office_charge
                  default : agqgeneral_alias:money_premium = l_money_apt_charge
                  end
                end
            else
                begin
                agqgeneral_ALIAS:MONEY_PREMIUM = (agqgeneral_ALIAS:MONEY_PREMIUM +
                                                 (L_SPECIAL * L_MONEY_RATE_3))
                end
            end
        If agqgeneral_ALIAS:MONEY_LIMIT_ON = agsdefault_bop:MONEY_LIMIT_ON And
           agqgeneral_ALIAS:ATTACH_BU5001 = "N" Then
            agqgeneral_ALIAS:MONEY_PREMIUM = 0
        End

End

procedure rate_employee_dishonesty
begin
l_code = "BU0282"
Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID = agqgeneral:company_id,
                      SFSOPTEND:STATE = agqGENERAL:STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                      SFSOPTEND:CODE = L_CODE, Generic

while SFSOPTEND:COMPANY_ID       = agqgeneral:company_id and
      SFSOPTEND:STATE            = agqGENERAL:STATE and
      SFSOPTEND:LINE_OF_BUSINESS = agqgeneral:line_of_business and
      SFSOPTEND:CODE             =  L_CODE
    begin
    If (agqgeneral:EFF_DATE >= SFSOPTEND:EFF_DATE and
       (agqgeneral:eff_date <= sfsoptend:exp_date or
       sfsoptend:exp_date = 0)) Then
        Begin
        If agqgeneral2:employee_dis_limit = SFSOPTEND:LIMIT[1] Then
            L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
        Else
        if agqgeneral2:employee_dis_limit = sfsoptend:limit[2] then
            L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
        Else
        if agqgeneral2:employee_dis_limit = sfsoptend:limit[5] and
           sfsoptend:limit[5] <> 0 then
            L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[5]

        If agqgeneral2:employee_dis_no_employees > 5 Then
            Begin
            If agqgeneral2:employee_dis_limit = SFSOPTEND:LIMIT[1] Then
                L_END_PREMIUM1 = (L_END_PREMIUM1 + ((agqgeneral2:employee_dis_NO_EMPLOYEES
                                 - 5) * SFSOPTEND:PREMIUM_1[3]))
            Else
            If agqgeneral2:employee_dis_limit = SFSOPTEND:LIMIT[2] Then
                L_END_PREMIUM1 = (L_END_PREMIUM1 + ((agqgeneral2:employee_dis_no_employees
                                 - 5) * SFSOPTEND:PREMIUM_1[4]))
            Else
            If agqgeneral2:employee_dis_limit = SFSOPTEND:LIMIT[5] and
               sfsoptend:limit[5] <> 0 Then
                L_END_PREMIUM1 = (L_END_PREMIUM1 + ((agqgeneral2:employee_dis_no_employees
                                 - 5) * SFSOPTEND:PREMIUM_1[7]))
            End

        end

    next sfsoptend
    end

Access agqgeneral2_ALIAS, Set agqgeneral2_ALIAS:app_no = agqGENERAL:app_no,
                              agqgeneral2_ALIAS:PREM_NO = agqGENERAL:PREM_NO,
                              agqgeneral2_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

If agqgeneral2_ALIAS:app_no = agqGENERAL:app_no And
   agqgeneral2_ALIAS:PREM_NO = agqGENERAL:PREM_NO And
   agqgeneral2_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO Then
    Change agqgeneral2_ALIAS
        Begin
        agqgeneral2_alias:employee_dis_premium = l_end_premium1
        end

end

Procedure RATE_pools
Begin
L_COMPANY_ID = agqgeneral:company_id
L_STATE = agqgeneral:STATE
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
L_EFF_DATE = agqgeneral:EFF_DATE
switch(l_liability_code)
  case 1  : l_limit_1 = 300000
  case 2  : l_limit_1 = 500000
  default : l_limit_1 = 1000000
  end

access bpspools, set bpspools:company_id       = l_company_id,
                     bpspools:state            = l_state,
                     bpspools:line_of_business = l_line_of_business,
                     bpspools:limit            = l_limit_1, generic

while bpspools:company_id       = l_company_id and
      bpspools:state            = l_state and
      bpspools:line_of_business = l_line_of_business and
      bpspools:limit            = l_limit_1
        begin
        if (agqgeneral:eff_date >= bpspools:eff_date and
           (agqgeneral:eff_date <= bpspools:exp_date or
           bpspools:exp_date = 0)) then
            begin
            l_charge = bpspools:charge
            l_per    = bpspools:per
            end

        next bpspools
        end

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no   = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO  = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

If agqgeneral_ALIAS:app_no   = agqgeneral:app_no And
   agqgeneral_ALIAS:PREM_NO  = agqgeneral:PREM_NO And
   agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO Then
    begin
    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:pool_PREMIUM = ((agqgeneral_alias:no_pools divide
                                        l_per) *
                                        l_charge)
        End
    end

End

Procedure RATE_credit_card
Begin
Access BPSRATE1, Set BPSRATE1:COMPANY_ID = agqgeneral:company_id,
                     BPSRATE1:STATE = agqGENERAL:STATE,
                     BPSRATE1:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

while BPSRATE1:COMPANY_ID       = agqgeneral:company_id and
      BPSRATE1:STATE            = agqGENERAL:STATE and
      BPSRATE1:LINE_OF_BUSINESS = agqgeneral:line_of_business
        begin
        If agqgeneral:EFF_DATE >= BPSRATE1:EFF_DATE Then
            Begin
            L_CHARGE = BPSRATE1:credit_card_rate
            L_LIMIT = BPSRATE1:credit_card_per
            End

        Next BPSRATE1
        end

Access agqgeneral2_ALIAS, Set agqgeneral2_ALIAS:app_no = agqGENERAL:app_no,
                              agqgeneral2_ALIAS:PREM_NO = agqGENERAL:PREM_NO,
                              agqgeneral2_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

If agqgeneral2_ALIAS:app_no = agqGENERAL:app_no And
   agqgeneral2_ALIAS:PREM_NO = agqGENERAL:PREM_NO And
   agqgeneral2_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO Then
    Change agqgeneral2_ALIAS
        Begin
        If agqgeneral2_ALIAS:credit_card <> L_credit_card Then
            agqgeneral2_ALIAS:credit_card_PREMIUM = (((agqgeneral2_ALIAS:credit_card -
                                                    L_credit_card) Divide
                                                    L_LIMIT) * L_CHARGE)
        End

End

Procedure RATE_electronic_data
Begin
Access BPSRATE1, Set BPSRATE1:COMPANY_ID = agqgeneral:company_id,
                     BPSRATE1:STATE = agqGENERAL:STATE,
                     BPSRATE1:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

while BPSRATE1:COMPANY_ID       = agqgeneral:company_id and
      BPSRATE1:STATE            = agqGENERAL:STATE and
      BPSRATE1:LINE_OF_BUSINESS = agqgeneral:line_of_business
        begin
        If agqgeneral:EFF_DATE >= BPSRATE1:EFF_DATE Then
            Begin
            L_factor_1 = BPSRATE1:electronic_data_factor
            L_LIMIT    = BPSRATE1:electronic_data_per
            End

        Next BPSRATE1
        end

Access agqgeneral2_ALIAS, Set agqgeneral2_ALIAS:app_no = agqGENERAL:app_no,
                              agqgeneral2_ALIAS:PREM_NO = agqGENERAL:PREM_NO,
                              agqgeneral2_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

If agqgeneral2_ALIAS:app_no = agqGENERAL:app_no And
   agqgeneral2_ALIAS:PREM_NO = agqGENERAL:PREM_NO And
   agqgeneral2_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO Then
    Change agqgeneral2_ALIAS
        Begin
        If agqgeneral2_ALIAS:electronic_data <> L_electronic_data Then
            agqgeneral2_ALIAS:electronic_data_PREMIUM = (agqgeneral_alias:property_rate *
                                                        (((agqgeneral2_ALIAS:electronic_data -
                                                        L_electronic_data) Divide
                                                        L_LIMIT) * l_factor_1))
        End

End

Procedure RATE_dependent_property
Begin
Access BPSRATE1, Set BPSRATE1:COMPANY_ID = agqgeneral:company_id,
                     BPSRATE1:STATE = agqGENERAL:STATE,
                     BPSRATE1:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

while BPSRATE1:COMPANY_ID       = agqgeneral:company_id and
      BPSRATE1:STATE            = agqGENERAL:STATE and
      BPSRATE1:LINE_OF_BUSINESS = agqgeneral:line_of_business
        begin
        If agqgeneral:EFF_DATE >= BPSRATE1:EFF_DATE Then
            Begin
            L_factor_1 = BPSRATE1:loss_income_factor[1]
            L_LIMIT    = BPSRATE1:loss_income_per[1]
            End

        Next BPSRATE1
        end

Access agqgeneral2_ALIAS, Set agqgeneral2_ALIAS:app_no = agqGENERAL:app_no,
                              agqgeneral2_ALIAS:PREM_NO = agqGENERAL:PREM_NO,
                              agqgeneral2_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

If agqgeneral2_ALIAS:app_no = agqGENERAL:app_no And
   agqgeneral2_ALIAS:PREM_NO = agqGENERAL:PREM_NO And
   agqgeneral2_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO Then
    Change agqgeneral2_ALIAS
        Begin
        If agqgeneral2_ALIAS:dependent_property <> L_dependent_property Then
            begin
            agqgeneral2_ALIAS:dependent_property_PREMIUM = (agqgeneral_alias:property_rate *
                                                           (((agqgeneral2_ALIAS:dependent_property -
                                                            L_dependent_property) Divide
                                                            L_LIMIT) * l_factor_1))
            end
        End

End

Procedure RATE_interruption
Begin
Access BPSRATE1, Set BPSRATE1:COMPANY_ID = agqgeneral:company_id,
                     BPSRATE1:STATE = agqGENERAL:STATE,
                     BPSRATE1:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

while BPSRATE1:COMPANY_ID       = agqgeneral:company_id and
      BPSRATE1:STATE            = agqGENERAL:STATE and
      BPSRATE1:LINE_OF_BUSINESS = agqgeneral:line_of_business
        begin
        If agqgeneral:EFF_DATE >= BPSRATE1:EFF_DATE Then
            Begin
            L_factor_1 = BPSRATE1:loss_income_factor[2]
            L_LIMIT    = BPSRATE1:loss_income_per[2]
            End

        Next BPSRATE1
        end

Access agqgeneral2_ALIAS, Set agqgeneral2_ALIAS:app_no = agqGENERAL:app_no,
                              agqgeneral2_ALIAS:PREM_NO = agqGENERAL:PREM_NO,
                              agqgeneral2_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

If agqgeneral2_ALIAS:app_no = agqGENERAL:app_no And
   agqgeneral2_ALIAS:PREM_NO = agqGENERAL:PREM_NO And
   agqgeneral2_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO Then
    Change agqgeneral2_ALIAS
        Begin
        If agqgeneral2_ALIAS:interruption <> L_interruption Then
            agqgeneral2_ALIAS:interruption_PREMIUM = (agqgeneral_alias:property_rate *
                                                     (((agqgeneral2_ALIAS:interruption -
                                                      L_interruption) Divide
                                                      L_LIMIT) * l_factor_1))
        End

End

Procedure RATE_AR
Begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = agqgeneral:company_id,
                    BPSRATE:STATE = agqgeneral:STATE,
                    BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

while BPSRATE:COMPANY_ID       = agqgeneral:company_id and
      BPSRATE:STATE            = agqgeneral:STATE and
      BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business
    begin
    If agqgeneral:eff_date >= BPSRATE:EFF_DATE Then
        Begin
        L_FACTOR_1 = BPSRATE:AR_FACTOR
        L_LIMIT = BPSRATE:AR_LIMIT
        End

    Next BPSRATE
    End

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

If agqgeneral_ALIAS:app_no = agqgeneral:app_no And
   agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO And
   agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO Then
    Change agqgeneral_ALIAS
        Begin
        If agqgeneral_ALIAS:AR_LIMIT <> L_AR_LIMIT_1 Then
            begin
            if l_liability_rate_or_charge = 1 then
                agqgeneral_ALIAS:AR_PREMIUM = ((agqgeneral_ALIAS:PROPERTY_RATE *
                                              l_liability_Rate) *
                                              (((agqgeneral_ALIAS:AR_LIMIT - L_AR_LIMIT_1)
                                               Divide L_LIMIT) * L_FACTOR_1))
            else
            if sfscompany:boiler_rating <> 4 then
                agqgeneral_ALIAS:AR_PREMIUM = (agqgeneral_ALIAS:PROPERTY_RATE *
                                              (((agqgeneral_ALIAS:AR_LIMIT - L_AR_LIMIT_1)
                                               Divide L_LIMIT) * L_FACTOR_1))
            else
            if sfscompany:boiler_rating = 4 then
                begin
                if agqgeneral_alias:property_rate <> 0 and
                   agqgeneral_alias:class_code <> 75 then
                    agqgeneral_alias:ar_premium = (agqgeneral_alias:property_rate *
                                                  (((agqgeneral_alias:ar_limit - l_ar_limit_1)
                                                  divide l_limit) * l_factor_1))
                else
                    agqgeneral_alias:ar_premium = (l_building_rate *
                                                  (((agqgeneral_alias:ar_limit - l_ar_limit_1)
                                                  divide l_limit) * l_factor_1))
                end
            end
        End

End

Procedure RATE_UTILITY
Begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = agqgeneral:company_id,
                    BPSRATE:STATE = agqgeneral:STATE,
                    BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

while BPSRATE:COMPANY_ID       = agqgeneral:company_id and
      BPSRATE:STATE            = agqgeneral:STATE and
      BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business
    begin
    If agqgeneral:eff_date >= BPSRATE:EFF_DATE Then
        Begin
        L_CHARGE = BPSRATE:UTILITY_CHARGE
        L_LIMIT = BPSRATE:UTILITY_LIMIT
        End

    Next BPSRATE
    End

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

If agqgeneral_ALIAS:app_no = agqgeneral:app_no And
   agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO And
   agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO Then
    Change agqgeneral_ALIAS
        Begin
        If agqgeneral_ALIAS:UTILITY_LIMIT <> L_UTILITY_LIMIT Then
            agqgeneral_ALIAS:UTILITY_PREMIUM = (((agqgeneral_ALIAS:UTILITY_LIMIT -
                                               L_UTILITY_LIMIT) Divide
                                               L_LIMIT) * L_CHARGE)
        End

End

Procedure RATE_WATERBACKUP
Begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = agqgeneral:company_id,
                    BPSRATE:STATE = agqGENERAL:STATE,
                    BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

while BPSRATE:COMPANY_ID       = agqgeneral:company_id and
      BPSRATE:STATE            = agqGENERAL:STATE and
      BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business
    begin
    If agqgeneral:EFF_DATE >= BPSRATE:EFF_DATE Then
        Begin
        L_CHARGE = BPSRATE:WATERBKUP_CHARGE
        L_LIMIT = BPSRATE:WATERBKUP_PER
        L_CHARGE_1  = BPSRATE:WATERBKUP_INCREASE
        End

    Next BPSRATE
    End

Access agqGENERAL_ALIAS, Set agqGENERAL_ALIAS:app_no = agqGENERAL:app_no,
                             agqGENERAL_ALIAS:PREM_NO = agqGENERAL:PREM_NO,
                             agqGENERAL_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

If agqGENERAL_ALIAS:app_no = agqGENERAL:app_no And
   agqGENERAL_ALIAS:PREM_NO = agqGENERAL:PREM_NO And
   agqGENERAL_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO Then
    Change agqGENERAL_ALIAS
        Begin
        If ((agqGENERAL_ALIAS:WATER_BACKUP_LIMIT = L_WATER_BKUP_LIMIT And
           SFSLINE_ALIAS:OPTION <> "P" and
           sfscompany:boiler_rating <> 4) or
           (agqgeneral_alias:water_backup_limit <= 5000 and
           agqgeneral_alias:water_backup_limit > l_water_bkup_limit and
           sfsline_alias:option = "P" and
           sfscompany:boiler_rating = 2)) Then
            Begin
            agqGENERAL_ALIAS:WATER_BACKUP_PREMIUM = L_CHARGE
            End
        Else
        if sfscompany:boiler_rating = 4 and
           sfsline_alias:option not one of "S", "P" and
           agqgeneral_alias:water_backup_limit = l_water_bkup_limit then
            begin
            agqgeneral_alias:water_backup_premium = l_charge
            end
        else
        if sfscompany:boiler_rating = 4 and
           sfsline_alias:option one of "P", "S" and
           agqgeneral_alias:water_backup_limit = agsdefault_bop:water_backup_limit then
            begin
            agqgeneral_alias:water_backup_premium = 0
            end
        else
            Begin
            agqGENERAL_ALIAS:WATER_BACKUP_PREMIUM = 0
            End

        If agqGENERAL_ALIAS:WATER_BACKUP_LIMIT <> L_WATER_BKUP_LIMIT Then
            Begin
            if sfscompany:boiler_rating = 2 then
                begin
                if sfsline_alias:option <> "P" then
                    begin
                    if agqgeneral_alias:special_enhancement = 0 then
                        agqGENERAL_ALIAS:WATER_BACKUP_PREMIUM =
                                          (L_CHARGE +
                                          (((agqGENERAL_ALIAS:WATER_BACKUP_LIMIT -
                                          L_WATER_BKUP_LIMIT)
                                          Divide L_LIMIT) * L_CHARGE_1))
                    else
                    if agqgeneral_alias:special_enhancement = 1 then
                        begin
                        if agqgeneral_alias:water_backup_limit - l_water_bkup_limit <= 5000 then
                            agqgeneral_alias:water_backup_premium = l_charge
                        else
                            agqGENERAL_ALIAS:WATER_BACKUP_PREMIUM =
                                          (L_CHARGE +
                                          ((((agqGENERAL_ALIAS:WATER_BACKUP_LIMIT -
                                          L_WATER_BKUP_LIMIT) - l_water_bkup_limit)
                                          Divide L_LIMIT) * L_CHARGE_1))
                        end

                    end
                else
                if sfsline_alias:option = "P" and
                   agqgeneral_alias:water_backup_limit <> l_water_bkup_limit then
                     begin
                     if agqgeneral_alias:water_backup_limit - l_water_bkup_limit <= 5000 then
                         agqgeneral_alias:water_backup_premium = l_charge
                     else
                         agqGENERAL_ALIAS:WATER_BACKUP_PREMIUM = (L_CHARGE +
                                             ((((agqGENERAL_ALIAS:WATER_BACKUP_LIMIT
                                             - 5000) - l_water_bkup_limit)
                                             Divide L_LIMIT) * L_CHARGE_1))
                     end
                end
            else
                begin
                agqGENERAL_ALIAS:WATER_BACKUP_PREMIUM = (L_CHARGE +
                                                 (((agqGENERAL_ALIAS:WATER_BACKUP_LIMIT -
                                                 L_WATER_BKUP_LIMIT)
                                                 Divide L_LIMIT) * L_CHARGE_1))
                end

            if sfscompany:boiler_rating = 4 and
               sfsline:option = "S" then
                agqGENERAL_ALIAS:WATER_BACKUP_PREMIUM = (((agqGENERAL_ALIAS:WATER_BACKUP_LIMIT -
                                             L_WATER_BKUP_LIMIT)
                                             Divide L_LIMIT) * L_CHARGE_1)
            End
        End

End

Procedure RATE_BUILDING_CODE
Begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = agqgeneral:company_id,
                    BPSRATE:STATE = agqgeneral:STATE,
                    BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

while BPSRATE:COMPANY_ID       = agqgeneral:company_id and
      BPSRATE:STATE            = agqgeneral:STATE and
      BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business
    begin
    If agqgeneral:eff_date >= BPSRATE:EFF_DATE Then
        Begin
        If agqgeneral:BUILDING_CODE_PERCENT = 0 Then
            L_FACTOR_1 = BPSRATE:BUILDING_CODE_DELETE
        Else
            Begin
            L_FACTOR_1 = BPSRATE:BUILDING_CODE_FACTOR
            L_LIMIT = BPSRATE:BUILDING_CODE_PER
            End
        End

    Next BPSRATE
    End

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

If agqgeneral_ALIAS:app_no = agqgeneral:app_no And
   agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO And
   agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO Then
    Change agqgeneral_ALIAS
        Begin
        If agqgeneral_ALIAS:BUILDING_CODE_PERCENT = 0 Then
            agqgeneral_ALIAS:BUILDING_CODE_PREMIUM = ((agqgeneral_ALIAS:BUILDING_PREMIUM *
                                                     L_FACTOR_1) -
                                                     agqgeneral_ALIAS:BUILDING_PREMIUM)
        Else
            Begin
            L_BUILDING_CODE_FACTOR = ((((agqgeneral_ALIAS:BUILDING_CODE_PERCENT -
                                      L_LIMIT) Divide L_LIMIT) * L_FACTOR_1) + 1)
            L_BUILDING_CODE_PREM = agqgeneral_ALIAS:BUILDING_PREMIUM * L_BUILDING_CODE_FACTOR
            agqgeneral_ALIAS:BUILDING_CODE_PREMIUM = L_BUILDING_CODE_PREM -
                                              agqgeneral_ALIAS:BUILDING_PREMIUM
        End
    End
End

Procedure RATE_MECHANICAL
Begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = agqgeneral:company_id,
                    BPSRATE:STATE = agqgeneral:STATE,
                    BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

Repeat Begin
    Exit If BPSRATE:COMPANY_ID <> agqgeneral:company_id Or
            BPSRATE:STATE <> agqgeneral:STATE Or
            BPSRATE:LINE_OF_BUSINESS <> agqgeneral:line_of_business

    If agqgeneral:eff_date >= BPSRATE:EFF_DATE Then
        Begin
        L_CHARGE = BPSRATE:MECHANICAL_CHARGE
        L_LIMIT = BPSRATE:MECHANICAL_LIMIT
        End

    Next BPSRATE
    End

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

If agqgeneral_ALIAS:app_no = agqgeneral:app_no And
   agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO And
   agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO Then
    Change agqgeneral_ALIAS
        Begin
        If agqgeneral_ALIAS:MECHANICAL_LIMIT <> L_MECHANICAL_LIMIT Then
            agqgeneral_ALIAS:MECHANICAL_PREMIUM = (((agqgeneral_ALIAS:MECHANICAL_LIMIT -
                                                  L_MECHANICAL_LIMIT)
                                                  Divide L_LIMIT) * L_CHARGE)
        End

End

Procedure RATE_HIRED_NONOWNED
Begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = agqgeneral:company_id,
                    BPSRATE:STATE = agqgeneral:STATE,
                    BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

while BPSRATE:COMPANY_ID       = agqgeneral:company_id and
      BPSRATE:STATE            = agqgeneral:STATE and
      BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business
    begin
    If agqgeneral:eff_date >= BPSRATE:EFF_DATE Then
        Begin
        L_CREDIT = BPSRATE:HIRED_NONOWNED_CREDIT
        L_CHARGE = BPSRATE:HIRED_NONOWNED_CHARGE
        End

    Next BPSRATE
    End

if sfsline:lob_code one of "CPORTFOLIO" then
    begin
    Access agqmastsupp, Set agqmastsupp:app_no = g_app_no,
                            agqmastsupp:line_of_business = agqgeneral:line_of_business, generic

    If agqmastsupp:app_no = g_app_no and
       agqmastsupp:line_of_business = agqgeneral:line_of_business Then
        begin
        Change agqmastsupp
            Begin
            If agqmastsupp:DELETE_HIRED_NONOWNED = "Y" Then
                begin
                agqmastsupp:HIRED_NONOWNED_PREMIUM = L_CREDIT
                l_hired_nonowned_premium = l_credit
                end
            If agqmastsupp:EXTEND_HIRED_NONOWNED = "Y" Then
                begin
                if sfscompany:boiler_rating one of 4 then
                    begin
                    l_code = "BU0140"
                    do rate_extend_hired_nonowned
                    agqmastsupp:hired_nonowned_premium = l_charge
                    l_hired_nonowned_premium = l_charge
                    end
                else
                    begin
                    agqmastsupp:HIRED_NONOWNED_PREMIUM = L_CHARGE
                    l_hired_nonowned_premium = l_charge
                    end
                end
            End
        end
    end
else
    begin
    Access agqMASTER, Set agqMASTER:app_no = g_app_no, exact

    If agqMASTER:app_no = g_app_no then
        begin
        Change agqMASTER
            Begin
            If agqMASTER:DELETE_HIRED_NONOWNED = "Y" Then
                begin
                agqMASTER:HIRED_NONOWNED_PREMIUM = L_CREDIT
                l_hired_nonowned_premium = l_credit
                end
            If agqMASTER:EXTEND_HIRED_NONOWNED = "Y" Then
                begin
                if sfscompany:boiler_rating = 4 then
                    begin
                    l_code= "BU0140"
                    do rate_extend_hired_nonowned
                    agqmaster:hired_nonowned_premium = l_charge
                    l_hired_nonowned_premium = l_charge
                    end
                else
                    begin
                    agqMASTER:HIRED_NONOWNED_PREMIUM = L_CHARGE
                    l_hired_nonowned_premium = l_charge
                    end
                end
            End
        end
    end

End

procedure rate_extend_hired_nonowned
begin
Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID = agqgeneral:company_id,
                      SFSOPTEND:STATE = agqGENERAL:STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                      SFSOPTEND:CODE = L_CODE, Generic

while SFSOPTEND:COMPANY_ID       = agqgeneral:company_id and
      SFSOPTEND:STATE            = agqGENERAL:STATE and
      SFSOPTEND:LINE_OF_BUSINESS = agqgeneral:line_of_business and
      SFSOPTEND:CODE             =  L_CODE
    begin
    If (agqgeneral:EFF_DATE >= SFSOPTEND:EFF_DATE and
       (agqgeneral:eff_date <= sfsoptend:exp_date or
       sfsoptend:exp_date = 0)) Then
        Begin
        switch(l_liability_code)
          case 1  : l_charge = sfsoptend:premium_1[1]
          case 2  : l_charge = sfsoptend:premium_1[2]
          default : l_charge = sfsoptend:premium_1[3]
          end
        end

    next sfsoptend
    end

end

Procedure RATE_OFF_PREMISES
Begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = agqgeneral:company_id,
                    BPSRATE:STATE = agqgeneral:STATE,
                    BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

L_CHARGE = 0
while BPSRATE:COMPANY_ID       = agqgeneral:company_id and
      BPSRATE:STATE            = agqgeneral:STATE and
      BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business
    begin
    If (agqgeneral:eff_date >= BPSRATE:EFF_DATE and
       (agqgeneral:eff_date <= bpsrate:exp_date or
       bpsrate:exp_date = 0)) Then
        Begin
        If L_OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[1] Then
            L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[1]
        Else
        If L_OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[2] Then
            L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[2]
        Else
        If L_OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[3] Then
            L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[3]
        Else
        If L_OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[4] Then
            L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[4]
        Else
        If L_OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[5] Then
            L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[5]
        Else
        If L_OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[6] Then
            L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[6]
        Else
            L_CHARGE = 0

/*        If agqgeneral:OFF_PREMISES_LIMIT <> L_OFF_PREMISES_LIMIT And
           agqgeneral:OFF_PREMISES_LIMIT <> 0 Then
            Begin
            If agqgeneral:OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[1] Then
                L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[1]
            Else
            If agqgeneral:OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[2] Then
                L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[2]
            Else
            If agqgeneral:OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[3] Then
                L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[3]
            Else
            If agqgeneral:OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[4] Then
                L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[4]
            Else
            If agqgeneral:OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[5] Then
                L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[5]
            Else
            If agqgeneral:OFF_PREMISES_LIMIT = BPSRATE:OFF_PREMISE_LIMIT[6] Then
                L_CHARGE = BPSRATE:OFF_PREMISE_CHARGE[6]
            Else
                L_CHARGE = 0
            End*/
        End

    Next BPSRATE
    End

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

--If agqgeneral_ALIAS:OFF_PREMISES_LIMIT = L_OFF_PREMISES_LIMIT Then
--    begin
    if sfsline:lob_code = "CPORTFOLIO" then
        begin
        Access agqmastsupp, Set agqmastsupp:app_no = g_app_no,
                                agqmastsupp:line_of_business = agqgeneral:line_of_business, generic

        Change agqmastsupp
            Begin
            agqmastsupp:OFF_PREMISES_PREMIUM = L_CHARGE
            l_off_premises_premium = l_charge
            End
        end
    else
        begin
        Access agqmaster, Set agqmaster:app_no = g_app_no, generic

        Change agqMASTER
            Begin
            agqMASTER:OFF_PREMISES_PREMIUM = L_CHARGE
            l_off_premises_premium = l_charge
            End
        end
    l_off_premises_premium = l_charge
--    end

If agqgeneral_ALIAS:app_no = agqgeneral:app_no And
   agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO And
   agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO Then
    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:OFF_PREMISES_PREMIUM = L_CHARGE
        End

End

Procedure RATE_CUSTOMER_PROPERTY
Begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = agqgeneral:company_id,
                    BPSRATE:STATE = agqGENERAL:STATE,
                    BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

L_CHARGE = 0
while BPSRATE:COMPANY_ID       = agqgeneral:company_id and
      BPSRATE:STATE            = agqGENERAL:STATE and
      BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business
    begin
    If agqgeneral:EFF_DATE >= BPSRATE:EFF_DATE Then
        Begin
        l_customer_adj_rate = bpsrate:customers_property
        end

    next bpsrate
    end

Access agqGENERAL_ALIAS, Set agqGENERAL_ALIAS:app_no = agqGENERAL:app_no,
                             agqGENERAL_ALIAS:PREM_NO = agqGENERAL:PREM_NO,
                             agqGENERAL_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

If L_PROP_ACV = 0 Then
    L_PROP_ACV = 1.00
If agqGENERAL_ALIAS:app_no = agqGENERAL:app_no And
   agqGENERAL_ALIAS:PREM_NO = agqGENERAL:PREM_NO And
   agqGENERAL_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO Then
    Begin
    If agqGENERAL_ALIAS:CUSTOMER_PROP_LIMIT <> L_CUSTOMER_PROP_LIMIT Then
        Begin
        if sfscompany:customer_property_rating = 1 and
           agqgeneral:company_id = "NWIC" and
           agqgeneral:state = 29 then
            begin
            Change agqGENERAL_ALIAS
                Begin
                agqGENERAL_ALIAS:CUSTOMER_PROP_PREMIUM = (agqGENERAL_ALIAS:PROPERTY_RATE *
                                                         ((agqGENERAL_ALIAS:CUSTOMER_PROP_LIMIT -
                                                         bpsdefault2:CUSTOMERS_PROPERTY_LIMIT) Divide
                                                         1000))
                end
            end
        else
        If SFSCOMPANY:CUSTOMER_PROPERTY_RATING = 1 Then
            Begin
            Change agqGENERAL_ALIAS
                Begin
                agqGENERAL_ALIAS:CUSTOMER_PROP_PREMIUM = (agqGENERAL_ALIAS:PROPERTY_RATE *
                                                         ((agqGENERAL_ALIAS:CUSTOMER_PROP_LIMIT -
                                                         agsdefault_bop:CUSTOMER_PROP_LIMIT) Divide
                                                         1000))
                End
            End

        If SFSCOMPANY:CUSTOMER_PROPERTY_RATING = 2 Then
            Begin
            Change agqGENERAL_ALIAS
                Begin
                L_CUSTOMER_ADJ_RATE = L_PROPERTY_RATE * L_PROPERTY_ADJUSTMENTS * l_prop_acv
                agqGENERAL_ALIAS:CUSTOMER_PROP_PREMIUM = (((agqGENERAL_ALIAS:CUSTOMER_PROP_LIMIT
                                                         - L_CUSTOMER_PROP_LIMIT) Divide 1000) *
                                                         L_CUSTOMER_ADJ_RATE)
                End
            If L_FORM = 3 Then
                Begin
                L_SPECIAL_LIMIT = ((agqGENERAL_ALIAS:CUSTOMER_PROP_LIMIT -
                                  L_CUSTOMER_PROP_LIMIT) Divide 100)
                If L_SPECIAL_LIMIT <= 100 Then
                    L_SPECIAL_LIMIT = 100
                Do CUSTOMER_PROPERTY_SPECIAL
                If agqGENERAL_ALIAS:app_no = agqGENERAL:app_no And
                   agqGENERAL_ALIAS:PREM_NO = agqGENERAL:PREM_NO And
                   agqGENERAL_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO Then
                    Change agqGENERAL_ALIAS
                        Begin
                        L_CUSTOMER_ADJ_RATE_SPECIAL = agqGENERAL_ALIAS:ADJUSTMENT_FACTORS
                        agqGENERAL_ALIAS:CUSTOMER_PROP_PREMIUM = (agqGENERAL_ALIAS:CUSTOMER_PROP_PREMIUM +
                                                                 (L_SPECIAL *
                                                                 L_CUSTOMER_ADJ_RATE_SPECIAL))
                        End
                End
            End

        If SFSCOMPANY:CUSTOMER_PROPERTY_RATING = 4 Then
            Begin
            Change agqGENERAL_ALIAS
                Begin
                agqGENERAL_ALIAS:CUSTOMER_PROP_PREMIUM = (l_customer_adj_rate *
                                                         ((agqGENERAL_ALIAS:CUSTOMER_PROP_LIMIT -
                                                         agsdefault_bop:CUSTOMER_PROP_LIMIT) Divide
                                                         1000))
                End
            End

        if sfscompany:customer_property_rating = 3 and
           agqgeneral:company_id = "NWIC" and
           agqgeneral:state = 29 then
            begin
            Change agqGENERAL_ALIAS
                Begin
                L_CUSTOMER_ADJ_RATE = L_PROPERTY_RATE * L_PROPERTY_ADJUSTMENTS
                agqGENERAL_ALIAS:CUSTOMER_PROP_PREMIUM = (((agqGENERAL_ALIAS:CUSTOMER_PROP_LIMIT
                                                         - bpsdefault2:CUSTOMERS_PROPERTY_LIMIT) Divide 1000) *
                                                         L_CUSTOMER_ADJ_RATE)
                End
            end
        else
        If SFSCOMPANY:CUSTOMER_PROPERTY_RATING = 3 Then
            Begin
            Change agqGENERAL_ALIAS
                Begin
                L_CUSTOMER_ADJ_RATE = L_PROPERTY_RATE * L_PROPERTY_ADJUSTMENTS
                agqGENERAL_ALIAS:CUSTOMER_PROP_PREMIUM = (((agqGENERAL_ALIAS:CUSTOMER_PROP_LIMIT
                                                         - agsdefault_bop:CUSTOMER_PROP_LIMIT) Divide 1000) *
                                                         L_CUSTOMER_ADJ_RATE)
                End
            end
        End
    End


End

Procedure CUSTOMER_PROPERTY_SPECIAL
Begin
L_COMPANY_ID = agqgeneral:company_id
L_STATE = agqgeneral:STATE
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
L_RECORD_TYPE = 3
L_TERRITORY = 999
L_EFF_DATE = agqgeneral:eff_date
L_RATE_GROUP = agqgeneral:RATE_GROUP

Include "bpsspecprop.inc"

End

Procedure RATE_VALUABLE_PAPERS
Begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = agqgeneral:company_id,
                    BPSRATE:STATE = agqgeneral:STATE,
                    BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

while BPSRATE:COMPANY_ID       = agqgeneral:company_id and
      BPSRATE:STATE            = agqgeneral:STATE and
      BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business
    begin
    If agqgeneral:eff_date >= BPSRATE:EFF_DATE Then
        Begin
        L_FACTOR_1 = BPSRATE:VALUABLE_PAPERS_FACTOR
        L_LIMIT = BPSRATE:VALUABLE_PAPERS_LIMIT
        End

    Next BPSRATE
    End

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

If agqgeneral_ALIAS:app_no = agqgeneral:app_no And
   agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO And
   agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO Then
    Change agqgeneral_ALIAS
        Begin
        If agqgeneral_ALIAS:VALUABLE_PAPERS_LIMIT <> L_VALUE_LIMIT_1 Then
            begin
            if l_liability_rate_or_charge = 1 then
                agqgeneral_ALIAS:VALUABLE_PAPERS_PREMIUM = ((agqgeneral_ALIAS:PROPERTY_RATE *
                                                           l_liability_rate) *
                                                           (((agqgeneral_ALIAS:VALUABLE_PAPERS_LIMIT -
                                                           L_VALUE_LIMIT_1) Divide
                                                           L_LIMIT) * L_FACTOR_1))
            else
            if sfscompany:boiler_rating <> 4 then
                agqgeneral_ALIAS:VALUABLE_PAPERS_PREMIUM = (agqgeneral_ALIAS:PROPERTY_RATE *
                                                (((agqgeneral_ALIAS:VALUABLE_PAPERS_LIMIT
                                                - L_VALUE_LIMIT_1) Divide
                                                L_LIMIT) * L_FACTOR_1))
            else
            if sfscompany:boiler_rating = 4 then
                begin
                if agqgeneral_alias:property_rate <> 0 and
                   agqgeneral_alias:class_code <> 75 then
                    begin
                    agqGENERAL_ALIAS:VALUABLE_PAPERS_PREMIUM = (agqGENERAL_ALIAS:PROPERTY_RATE *
                                                    (((agqGENERAL_ALIAS:VALUABLE_PAPERS_LIMIT
                                                    - L_VALUE_LIMIT_1) Divide
                                                    L_LIMIT) * L_FACTOR_1))
                    end
                else
                    begin
                    agqGENERAL_ALIAS:VALUABLE_PAPERS_PREMIUM = (l_building_rate *
                                                    (((agqGENERAL_ALIAS:VALUABLE_PAPERS_LIMIT
                                                    - L_VALUE_LIMIT_1) Divide
                                                    L_LIMIT) * L_FACTOR_1))
                    end
                end

            end

        End

End

Procedure RATE_ACV_BUILDING
Begin
L_COMPANY_ID = agqgeneral:company_id
L_STATE = agqgeneral:STATE
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
L_EFF_DATE = agqgeneral:eff_date

Include "bpsacv.inc"

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

If agqgeneral_ALIAS:app_no = agqgeneral:app_no And
   agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO And
   agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO Then
    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:ACV_BUILDING_PREMIUM = ((agqgeneral_ALIAS:BUILDING_PREMIUM * L_FACTOR_1) -
                                agqgeneral_ALIAS:BUILDING_PREMIUM)
        End
End

Procedure RATE_ACV_CONTENTS
Begin
L_COMPANY_ID = agqgeneral:company_id
L_STATE = agqgeneral:STATE
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
L_EFF_DATE = agqgeneral:eff_date

Include "bpsacv.inc"

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

If agqgeneral_ALIAS:app_no = agqgeneral:app_no And
   agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO And
   agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO Then
    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:ACV_CONTENTS_PREMIUM = ((agqgeneral_ALIAS:PROPERTY_PREMIUM *
                                         L_FACTOR_2) - agqgeneral_ALIAS:PROPERTY_PREMIUM)
        If L_FACTOR_2 <> 0 Then
            L_PROP_ACV = L_FACTOR_2
        Else
            L_PROP_ACV = 1.00
        End

End
Procedure RATE_FIRE_LEGAL
Begin
L_COMPANY_ID = agqgeneral:company_id
L_STATE = agqgeneral:STATE
L_LINE_OF_BUSINESS = agqgeneral:line_of_business
L_EFF_DATE = agqgeneral:eff_date
L_FIRE_LIMIT = agqgeneral:FIRE_LIMIT

Include "bpsfire.inc"

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

If agqgeneral_ALIAS:app_no = agqgeneral:app_no And
   agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO And
   agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO Then
    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:FIRE_PREMIUM = L_CHARGE
        End

End

Procedure BOILER_MINIMUM
Begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = agqgeneral:company_id,
                    BPSRATE:STATE = agqgeneral:STATE,
                    BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

while BPSRATE:COMPANY_ID       = agqgeneral:company_id and
      BPSRATE:STATE            = agqgeneral:STATE and
      BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business
    begin
    If (agqgeneral:eff_date >= BPSRATE:EFF_DATE and
       (agqgeneral:eff_date <= bpsrate:exp_date or
       bpsrate:exp_date = 0)) Then
        Begin
        L_MINIMUM_boiler = BPSRATE:BOILER_MINIMUM
        End

    Next BPSRATE
    End

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no, generic

L_BOILER_PREM_TOTAL = 0
while agqgeneral_ALIAS:app_no = agqgeneral:app_no
    begin
    L_BOILER_PREM_TOTAL = agqgeneral_ALIAS:BOILERS_PREMIUM +
                          L_BOILER_PREM_TOTAL

    Next agqgeneral_ALIAS
    End

If L_BOILER_PREM_TOTAL < L_MINIMUM_boiler And
   L_BOILER_PREM_TOTAL <> 0 Then
    Begin
    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no, generic

    If agqgeneral_ALIAS:app_no = agqgeneral:app_no then
        Change agqgeneral_ALIAS
            Begin
            agqgeneral_ALIAS:BOILERS_PREMIUM = L_MINIMUM_boiler
            agqgeneral_ALIAS:OPTIONAL_TOTAL = ((agqgeneral_ALIAS:OPTIONAL_TOTAL -
                                              L_BOILER_PREM_TOTAL) +
                                              L_MINIMUM_boiler)
            L_BOILER_PREM_TOTAL = L_MINIMUM_boiler
            agqgeneral_ALIAS:LOCATION_PREMIUM = ((agqgeneral_alias:location_premium -
                                                l_boiler_prem_total) +
                                                l_minimum_boiler)
            End
    End

End

Procedure TERRITORY_RATING
Begin
-- special territory rating, if sfscompany:special territory rate set to 1
If SFSCOMPANY:SPECIAL_TERRITORY_RATING = 1 Then
    Begin
    Access BPSRATE, Set BPSRATE:COMPANY_ID = agqgeneral:company_id,
                        BPSRATE:STATE = agqgeneral:STATE,
                        BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

    while BPSRATE:COMPANY_ID       = agqgeneral:company_id and
          BPSRATE:STATE            = agqgeneral:STATE and
          BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business
        begin
        If (agqgeneral:eff_date >= BPSRATE:EFF_DATE and
           (agqgeneral:eff_date <= bpsrate:exp_date or
           bpsrate:exp_date = 0)) Then
            Begin
            L_MINIMUM_boiler = BPSRATE:BOILER_MINIMUM
            End

        Next BPSRATE
        End

    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = g_app_no, generic

    L_TERRITORY_BOILER_MINIMUM = 0
    L_COUNT = 0
    while agqgeneral_ALIAS:app_no = g_app_no
        begin
        L_COUNT = L_COUNT + 1
        L_TERRITORY_BOILER_MINIMUM = L_TERRITORY_BOILER_MINIMUM +
                                     agqgeneral_ALIAS:BOILERS_PREMIUM

        Next agqgeneral_ALIAS
        End

    If agqgeneral:BOILERS = "Y" Then
        Begin
        If L_TERRITORY_BOILER_MINIMUM < L_MINIMUM_boiler And
           L_COUNT = 1 Then
            L_TERRITORY_BOILER_MINIMUM = L_MINIMUM_boiler
        Else
            L_TERRITORY_BOILER_MINIMUM = L_BOILERS_PREM
        End
    Else
        L_TERRITORY_BOILER_MINIMUM = 0

    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = g_app_no,
                                 agqgeneral_alias:prem_no  = agqgeneral:prem_no,
                                 agqgeneral_alias:build_no = agqgeneral:build_no, generic

    If agqgeneral:RATING_TERRITORY_FACTOR = 0 Then
        Change agqgeneral_ALIAS
            Begin
            agqgeneral_ALIAS:RATING_TERRITORY_FACTOR = 1.00
            End

    L_LOC_TOTAL_1 = (L_LOC_TOTAL_1 + ((L_LOC_TOTAL +
                    L_TERRITORY_BOILER_MINIMUM
                    + L_PRINTERS_ERROR) *
                    agqgeneral:RATING_TERRITORY_FACTOR))
    L_LOC_TOTAL_2 = L_LOC_TOTAL_2 + L_LOC_TOTAL
    End
End

Procedure RATE_BOILERS
Begin
Access BPSRATE, Set BPSRATE:COMPANY_ID = agqgeneral:company_id,
                    BPSRATE:STATE = agqgeneral:STATE,
                    BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

while BPSRATE:COMPANY_ID       = agqgeneral:company_id and
      BPSRATE:STATE            = agqgeneral:STATE and
      BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business
    begin
    If (agqgeneral:eff_date >= BPSRATE:EFF_DATE and
       (agqgeneral:eff_date <= bpsrate:exp_date or
       bpsrate:exp_date = 0)) Then
        Begin
        L_FACTOR_1 = BPSRATE:BOILERS_FACTOR
        L_LIMIT = BPSRATE:BOILERS_LIMIT
        L_BOILERS_LOSS_INCOME = BPSRATE:BOILER_LOSS_INCOME
        l_factor_2 = bpsrate:boilers_factor_1
        l_code     = bpsrate:boiler_code_1
        l_limit_1  = bpsrate:boiler_restaurant_limit
        End

    Next BPSRATE
    End

if sfscompany:boiler_rating = 4 then
    begin
    access agqendorse, set agqendorse:app_no   = agqgeneral:app_no,
                           agqendorse:prem_no  = 0,
                           agqendorse:build_no = 0,
                           agqendorse:code     = l_code, generic
    end
else
    begin
    access agqendorse, set agqendorse:app_no   = agqgeneral:app_no,
                           agqendorse:prem_no  = agqgeneral:prem_no,
                           agqendorse:build_no = agqgeneral:build_no,
                           agqendorse:code     = l_code, generic
    end


Access agqCOMPUTER, Set agqCOMPUTER:app_no = agqgeneral:app_no,
                        agqCOMPUTER:PREM_NO = agqgeneral:PREM_NO,
                        agqCOMPUTER:BUILD_NO = agqgeneral:BUILD_NO, Generic

access agqend, set agqend:app_no = agqgeneral:app_no,
                   agqend:prem_no = agqgeneral:prem_no,
                   agqend:build_no = agqgeneral:build_no, generic

l_bu2597_premium = 0
l_bu2510_premium = 0
while agqend:app_no   = agqgeneral:app_no and
      agqend:prem_no  = agqgeneral:prem_no and
      agqend:build_no = agqgeneral:build_no
        begin
        if agqend:code one of "BU2597", "BU0197" then
            l_bu2597_premium = l_bu2597_premium + agqend:premium
        if agqend:code one of "BU2510" then
            l_bu2510_premium = l_bu2510_premium + agqend:premium

        next agqend
        end

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

If agqgeneral_ALIAS:app_no = agqgeneral:app_no And
   agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO And
   agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO Then
    Change agqgeneral_ALIAS
        Begin
        If agqgeneral_ALIAS:LOSS_INCOME_LIMIT = 0 Then
            L_LOSS_INCOME_LIMIT = L_BOILERS_LOSS_INCOME
        Else
            L_LOSS_INCOME_LIMIT = 0

        If SFSCOMPANY:BOILER_RATING = 1 Then  -- Salem
            Begin
            agqgeneral_ALIAS:BOILERS_PREMIUM = (((agqgeneral_ALIAS:BUILDING_LIMIT +
                                               agqgeneral_ALIAS:OTHER_STRUCTURES +
                                               agqgeneral_ALIAS:PROPERTY_LIMIT +
                                               agqCOMPUTER:LIMIT[1] + agqCOMPUTER:LIMIT[2] + agqcomputer:limit[3])
                                               Divide L_LIMIT)
                                               * L_FACTOR_1)
            End
        If SFSCOMPANY:BOILER_RATING = 2 Then -- Flemington
            Begin
            agqgeneral_ALIAS:BOILERS_PREMIUM = ((((agqgeneral_ALIAS:BUILDING_LIMIT +
                                               agqgeneral_ALIAS:OTHER_STRUCTURES +
                                               agqgeneral_ALIAS:PROPERTY_LIMIT)
                                               * L_DEDUCTIBLE_FACTOR)
                                               Divide L_LIMIT)
                                               * L_FACTOR_1)
            End
        If SFSCOMPANY:BOILER_RATING = 3 Then -- lebins
            Begin
            agqgeneral_ALIAS:BOILERS_PREMIUM = (((agqgeneral_ALIAS:BUILDING_LIMIT +
                                               agqgeneral_ALIAS:PROPERTY_LIMIT +
                                               agqgeneral_ALIAS:LOSS_INCOME_LIMIT)
                                               Divide L_LIMIT)
                                               * L_FACTOR_1)
            End

        If SFSCOMPANY:BOILER_RATING one of 4 and
           agqgeneral:eff_date <= 02.28.2014 Then -- delos
            Begin
            L_RATE_FACTOR = 0.01
            L_IRPM = (1 + (agqmaster:IRPM * 0.01))
            If L_IRPM = 0 Then
                L_IRPM = 1

            if agqendorse:limit[1] = l_limit_1 and
               agqendorse:limit[1] <> 0 and
               l_factor_2 <> 0 then
                l_factor_1 = l_factor_2

            if agqendorse:premium <> 0 then
                begin
                agqgeneral_alias:optional_total = agqgeneral_alias:optional_total -
                                                  agqgeneral_alias:boilers_premium
                agqGENERAL_ALIAS:BOILERS_PREMIUM = agqendorse:premium
                agqgeneral_alias:optional_total  = agqgeneral_alias:optional_total +
                                                   agqgeneral_alias:boilers_premium
                end
            else
                begin
                agqgeneral_alias:optional_total = agqgeneral_alias:optional_total -
                                                  agqgeneral_alias:boilers_premium
                agqGENERAL_ALIAS:BOILERS_PREMIUM = ((((l_loc_total -
                                                   l_bu2510_premium -
                                                   l_bu2597_premium) *
                                                   l_irpm) +
                                                   l_bu2510_premium +
                                                   l_bu2597_premium) *
                                                   (l_factor_1 divide 100))
                agqgeneral_alias:optional_total  = agqgeneral_alias:optional_total +
                                                   agqgeneral_alias:boilers_premium
                end
            End
        else
        If SFSCOMPANY:BOILER_RATING one of 4 and
           agqgeneral:eff_date > 02.28.2014 Then
            Begin
            if agqendorse:limit[1] = l_limit_1 and
               agqendorse:limit[1] <> 0 and
               l_factor_2 <> 0 then
                l_factor_1 = l_factor_2

            do access_bpsboilerdeduct
            agqgeneral_ALIAS:BOILERS_PREMIUM = (((agqgeneral_ALIAS:BUILDING_LIMIT +
                                               agqgeneral_ALIAS:PROPERTY_LIMIT)
                                               Divide L_LIMIT)
                                               * L_FACTOR_1 *
                                               l_boiler_deductible_factor)
            End


        If agqgeneral_ALIAS:BOILERS_PREMIUM = 0 Then
            agqgeneral_ALIAS:BOILERS_PREMIUM = 1
        L_BOILERS_PREM = agqgeneral_ALIAS:BOILERS_PREMIUM
        End

End

procedure access_bpsboilerdeduct
begin
Access bpsboilerdeduct, Set bpsboilerdeduct:COMPANY_ID       = agqgeneral:company_id,
                            bpsboilerdeduct:STATE            = agqgeneral:STATE,
                            bpsboilerdeduct:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                            bpsboilerdeduct:deductible       = l_deductible, Generic

l_boiler_deductible_factor = 0
while bpsboilerdeduct:COMPANY_ID       = agqgeneral:company_id and
      bpsboilerdeduct:STATE            = agqgeneral:STATE and
      bpsboilerdeduct:LINE_OF_BUSINESS = agqgeneral:line_of_business and
      bpsboilerdeduct:deductible       = l_deductible
    begin
    If agqgeneral:eff_date >= bpsboilerdeduct:EFF_DATE Then
        l_boiler_deductible_factor = bpsboilerdeduct:factor

    Next bpsboilerdeduct
    End

end

Procedure GET_RATE
Begin
Access SFSPACKAGE, Set SFSPACKAGE:COMPANY_ID = agqgeneral:company_id,
                       SFSPACKAGE:STATE = agqgeneral:STATE,
                       SFSPACKAGE:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

while SFSPACKAGE:COMPANY_ID       = agqgeneral:company_id and
      SFSPACKAGE:STATE            = agqgeneral:STATE and
      SFSPACKAGE:LINE_OF_BUSINESS = agqgeneral:line_of_business
    begin
    If agqgeneral:eff_date >= SFSPACKAGE:EFF_DATE Then
        L_PACKAGE = SFSPACKAGE:PACKAGE_MOD

    Next SFSPACKAGE
    End

access sfsline, set sfsline:company_Id = agqname:company_id,
                    sfsline:line_of_business = agqname:line_of_business,
                    sfsline:lob_subline = "00", generic

if sfsline:lob_code one of "CPORTFOLIO" then
    begin
    Access agqmastsupp, Set agqmastsupp:app_no = agqgeneral:app_no,
                            agqmastsupp:line_of_business = agqgeneral:line_of_business, Generic

    l_package_deviation = agqmastsupp:package_deviation
    l_irpm = agqmastsupp:irpm
    If agqmastsupp:app_no = agqgeneral:app_no then
        begin
        Change agqmastsupp
            Begin
            agqmastsupp:PACKAGE_DEVIATION = L_PACKAGE
            end
        End
    end
else
    begin
    Access agqMASTER, Set agqMASTER:app_no = agqgeneral:app_no, generic

    l_package_deviation = agqmaster:package_deviation
    l_irpm = agqmaster:irpm
    If agqMASTER:app_no = agqgeneral:app_no then
        begin
        Change agqMASTER
            Begin
            agqMASTER:PACKAGE_DEVIATION = L_PACKAGE
            end
        End
    end

L_PACKAGE = 0
L_RATE_FACTOR = 0.01

l_split_comm = agqmaster:split_comm
if sfscompany:boiler_rating <> 4 then
    begin
    Access SFSAGTCOMM, Set SFSAGTCOMM:COMPANY_ID = agqgeneral:company_id,
                           SFSAGTCOMM:AGENT_NO = agqgeneral:AGENT_NO,
                           SFSAGTCOMM:LINE_OF_BUSINESS = l_line_of_business, Generic

    while SFSAGTCOMM:COMPANY_ID       = agqgeneral:company_id and
          SFSAGTCOMM:AGENT_NO         = agqgeneral:AGENT_NO and
          SFSAGTCOMM:LINE_OF_BUSINESS = l_line_of_business
        begin
        If agqgeneral:eff_date >= SFSAGTCOMM:EFF_DATE Then
            Begin
            L_AGENT_COMM = SFSAGTCOMM:COMM_RATE
            End

        Next SFSAGTCOMM
        End
    end
else
    begin
    Access SFSAGTCOMM, Set SFSAGTCOMM:COMPANY_ID = agqgeneral:company_id,
                           SFSAGTCOMM:AGENT_NO = agqgeneral:AGENT_NO,
                           SFSAGTCOMM:LINE_OF_BUSINESS = l_line_of_business, Generic

    while SFSAGTCOMM:COMPANY_ID       = agqgeneral:company_id and
          SFSAGTCOMM:AGENT_NO         = agqgeneral:AGENT_NO and
          SFSAGTCOMM:LINE_OF_BUSINESS = l_line_of_business
        begin
        If agqgeneral:eff_date >= SFSAGTCOMM:EFF_DATE Then
            Begin
            i_comm = sfsagtcomm:comm_rate
            i_renewal_comm = sfsagtcomm:renewal_comm_rate
            i_habitational_comm = sfsagtcomm:comm_rate_1
            End

        Next SFSAGTCOMM
        End

    if ((agqgeneral:bop_type one of 3 or
       agqgeneral:class_code one of 22) and
       i_habitational_comm <> 0) then
        i_comm = i_habitational_comm

    l_agent_comm = i_comm
    end

If L_SPLIT_COMM = "B" Then
    L_COMM = (1 - (((L_AGENT_COMM - agqNAME:SPEC_COMM_RATE) * L_RATE_FACTOR) * 2))
If L_SPLIT_COMM = "A" Then
    L_COMM = (1 - (((L_AGENT_COMM - agqNAME:SPEC_COMM_RATE) * L_RATE_FACTOR) * 1))
If L_COMM = 0 Then
    L_COMM = 1
L_PACKAGE = (1 - (L_PACKAGE_DEVIATION * L_RATE_FACTOR))
If L_PACKAGE = 0 Then
    L_PACKAGE = 1
L_CREDIT_FACTOR = L_COMM * L_PACKAGE
L_LOC_TOTAL = (((L_PREM + L_TOTAL_END) * L_CREDIT_FACTOR) +
              L_MISC_PREMIUM)

l_liability_code = agqmaster:liability_code
access sfsliability, set sfsliability:company_id = agqgeneral:company_id,
                         sfsliability:state      = l_state,
                         sfsliability:line_of_business = l_line_of_business,
                         sfsliability:liability_code   = l_liability_code, generic

Access agqLOCATION, Set agqLOCATION:app_no = agqgeneral:app_no,
                        agqLOCATION:PREM_NO = agqgeneral:PREM_NO,
                        agqLOCATION:BUILD_NO = agqgeneral:BUILD_NO, Generic

If agqLOCATION:app_no = agqgeneral:app_no And
   agqLOCATION:PREM_NO = agqgeneral:PREM_NO And
   agqLOCATION:BUILD_NO = agqgeneral:BUILD_NO Then
    Change agqLOCATION
        Begin
        agqLOCATION:LINE_OF_BUSINESS = agqgeneral:line_of_business
        agqLOCATION:STATE = agqgeneral:STATE
        agqLOCATION:COUNTY = agqgeneral:COUNTY
        agqLOCATION:TRANS_CODE = 10
        agqLOCATION:TRANS_DATE = agqNAME:TRANS_DATE
        agqLOCATION:EFF_DATE = agqgeneral:eff_date
        agqLOCATION:EXP_DATE = agqNAME:EXP_DATE
        agqLOCATION:LIMIT_CODE[1] = "A"
        agqLOCATION:LIMIT[1] = agqgeneral:BUILDING_LIMIT + agqgeneral:OTHER_STRUCTURES
        agqLOCATION:LIMIT_CODE[2] = "B"
        agqLOCATION:LIMIT[2] = agqgeneral:PROPERTY_LIMIT
        agqLOCATION:LIMIT_CODE[3] = "C"
        agqLOCATION:LIMIT[3] = agqgeneral:LOSS_INCOME_LIMIT
        agqLOCATION:LIMIT_CODE[4] = "D"
        agqLOCATION:LIMIT[4] = agqgeneral:MONEY_LIMIT_ON + agqgeneral:MONEY_LIMIT_OFF
        agqLOCATION:LIMIT_CODE[5] = "L"
        agqLOCATION:LIMIT[5] = SFSLIABILITY:LIMIT
        agqlocation:premium[6] = l_boilers_prem
        agqLOCATION:LIMIT_CODE[10] = "T"
        agqLOCATION:LIMIT[10] = agqgeneral:BUILDING_LIMIT +
                                agqgeneral:PROPERTY_LIMIT +
                                agqgeneral:OTHER_STRUCTURES +
                                L_AR_LIMIT_1 + L_VALUE_LIMIT_1 + L_EDP_LIMIT +
                                agqgeneral:LOSS_INCOME_LIMIT
--        L_IRPM = (1 + (L_IRPM * L_RATE_FACTOR))
--        If L_IRPM = 0 Then
--            L_IRPM = 1
        if agqgeneral:rating_territory_Factor <> 0 then
            l_rating_territory_factor = agqgeneral:rating_territory_factor
        else
            l_rating_territory_factor = 1.00
        l_location_premium_11 = l_loc_total *
                                l_rating_territory_factor *
                                l_irpm
        agqLOCATION:PREMIUM[10] = l_location_premium_11
        l_location_premium_10 = agqlocation:premium[10] + l_location_premium_10
        End

L_TOTAL_3 = L_LOC_TOTAL + L_TOTAL_3

/* end of get rate */
End

procedure printers_credit
begin
If agqgeneral:CLASS_CODE = 60 Then
    Begin
    Access BPSCREDITS, Set BPSCREDITS:COMPANY_ID = agqgeneral:company_id,
                           BPSCREDITS:STATE = agqgeneral:STATE,
                           BPSCREDITS:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

    while BPSCREDITS:COMPANY_ID       = agqgeneral:company_id and
          BPSCREDITS:STATE            = agqgeneral:STATE and
          BPSCREDITS:LINE_OF_BUSINESS = agqgeneral:line_of_business
        begin
        If agqgeneral:eff_date >= BPSCREDITS:EFF_DATE Then
            L_PRINTERS_PERCENT = BPSCREDITS:PRINTERS_CREDIT

        Next BPSCREDITS
        End

    L_PRINTERS_PERCENT = (1 + (L_PRINTERS_PERCENT * L_RATE_FACTOR))
    If L_PRINTERS_PERCENT = 0 Then
        L_PRINTERS_PERCENT = 1
    End

If agqgeneral:CLASS_CODE = 60 Then
    Begin
    l_printers_total = l_prem + l_total_end + l_misc_premium + l_boiler_prem_total
    l_prem            = l_prem * l_printers_percent
    if agqgeneral:bop_premium = l_minimum and
       l_change_minimum_rating = 1 then
        l_prem        = l_minimum
    l_boiler_printer_total = l_boiler_prem_total * l_printers_percent
    if agqgeneral:boilers_premium = l_minimum_boiler then
        l_boiler_printer_total = l_minimum_boiler
    l_total_end       = l_total_end * l_printers_percent
    l_misc_premium    = l_misc_premium * l_printers_percent
    l_printers_credit = l_prem + l_total_end + l_misc_premium + l_boiler_printer_total

    L_PRINTERS_CREDIT = ((l_printers_total - L_PRINTERS_CREDIT) * -1)

    Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                                 agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                                 agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Exact

    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:PRINTERS_ERRORS_CREDITS = L_PRINTERS_CREDIT
        End
    End

Access agqLOCATION, Set agqLOCATION:app_no = agqgeneral:app_no,
                        agqLOCATION:PREM_NO = agqgeneral:PREM_NO,
                        agqLOCATION:BUILD_NO = agqgeneral:BUILD_NO, Generic

If agqLOCATION:app_no = agqgeneral:app_no And
   agqLOCATION:PREM_NO = agqgeneral:PREM_NO And
   agqLOCATION:BUILD_NO = agqgeneral:BUILD_NO Then
    Change agqLOCATION
        Begin
        agqlocation:premium[7] = l_printers_error * l_printers_percent
        End

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

If agqgeneral_ALIAS:app_no = agqgeneral:app_no And
   agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO And
   agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO Then
    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:PRINTERS_ERROR_PREMIUM = L_PRINTERS_ERROR * l_printers_percent
        End

l_printers_error = l_printers_error * l_printers_percent
L_TOTAL_PRINTERS = L_PRINTERS_ERROR + L_TOTAL_PRINTERS

End

procedure update_location_total
begin
Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = agqgeneral:app_no,
                             agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO,
                             agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO, Generic

If agqgeneral_ALIAS:app_no = agqgeneral:app_no And
   agqgeneral_ALIAS:PREM_NO = agqgeneral:PREM_NO And
   agqgeneral_ALIAS:BUILD_NO = agqgeneral:BUILD_NO Then
    Change agqgeneral_ALIAS
        Begin
        agqgeneral_ALIAS:LOCATION_PREMIUM = L_LOC_TOTAL +
                                            l_boilers_prem
        End
end

Procedure GET_TERRORISM_PREMIUM
Begin
Do ACCESS_SFSMSOTERROR
if l_terror_percentage <> 0 then
    begin
    if sfscompany:boiler_rating = 4 then
        l_terrorism_premium = ((l_final_total - l_boiler_prem_total) *
                              l_terror_percentage)
    else
        begin
        if l_irpm_total <> 0 then
            l_terrorism_premium = l_irpm_total * l_terror_percentage
        else
            L_TERRORISM_PREMIUM = L_FINAL_TOTAL * L_TERROR_PERCENTAGE
        end

    If L_TERRORISM_PREMIUM <= L_TERROR_MINIMUM Then
        Begin
        L_TERRORISM_PREMIUM = L_TERROR_MINIMUM
        End

    Do ADD_TERRORISM_ENDORSEMENT
    do remove_terrorism_exclusion
    end

End

Procedure remove_terrorism_exclusion
begin
access agqend, Set agqend:app_no = g_app_no, generic

L_FOUND = 0
While agqend:app_no    = g_app_no
        begin
        If agqend:CODE = sfsmsoterror:terrorism_form_to_remove then
            begin
            Delete agqend
            end

        Next agqend
        end

end

Procedure ADD_TERRORISM_ENDORSEMENT
Begin
Access agqEND, Set agqEND:app_no = g_app_no, generic

Access agqgeneral_ALIAS, Set agqgeneral_ALIAS:app_no = g_app_no, generic


L_FOUND = 0
While agqEND:app_no    = g_app_no
        Begin
        If agqEND:CODE = SFSMSOTERROR:TERRORISM_FORM_TO_ADD Then
            Begin
            L_FOUND = L_FOUND + 1    --terrorism code is added
            If L_FOUND => 1 Then  --it was manually added to the policy more then once
                Begin                  --delete it from agqend1
                Delete agqEND
                L_FOUND = L_FOUND - 1  --resetting it back to 1
                End
            End

        Next agqEND
        End

If L_FOUND <> 1 Then
    Begin
    l_prem_no = 0
    l_build_no = 0
    Do SUBCODE
    L_CODE = SFSMSOTERROR:TERRORISM_FORM_TO_ADD
    Do ACCESS_KEY
    Add agqEND  --ADDS ENDORSEMENTS TO agqEND1
        Begin
        agqEND:app_no       = g_app_no
        agqEND:PREM_NO      = 0
        agqEND:BUILD_NO     = 0
        agqEND:SUB_CODE     = L_SUB_CODE
        agqEND:CODE         = SFSMSOTERROR:TERRORISM_FORM_TO_ADD
        agqEND:FORM_EDITION = l_FORM_EDITION
        agqEND:PREMIUM      = L_TERRORISM_PREMIUM
        agqEND:DESCRIPTION  = l_DESCRIPTION
        agqend:terrorism_form = 1
        agqend:lob_end_code = "X"
        End
    End
End

Procedure add_back_terrorism_exclusion
Begin
l_prem_no = 0
l_build_no = 0
Do SUBCODE
L_CODE = SFSMSOTERROR:TERRORISM_FORM_TO_REMOVE
Do ACCESS_KEY
Add agqEND  --ADDS ENDORSEMENTS TO agqEND1
    Begin
    agqEND:app_no               = g_app_no
    agqEND:PREM_NO              = 0
    agqEND:BUILD_NO             = 0
    agqEND:SUB_CODE             = L_SUB_CODE
    agqEND:CODE                 = SFSMSOTERROR:TERRORISM_FORM_TO_REMOVE
    agqEND:FORM_EDITION         = l_FORM_EDITION
    agqEND:PREMIUM              = 0
    agqEND:DESCRIPTION          = l_DESCRIPTION
    agqend:terrorism_form       = 1
    agqend:lob_end_code         = "X"
    End
End

Procedure ACCESS_SFSMSOTERROR
Begin
L_STATE = agqgeneral:STATE
Access SFSMSOTERROR, Set SFSMSOTERROR:COMPANY_ID       = agqgeneral:company_id,
                         SFSMSOTERROR:STATE            = L_STATE,
                         SFSMSOTERROR:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

l_terror_percentage = 0
l_terror_minimum = 0
While SFSMSOTERROR:COMPANY_ID       = agqgeneral:company_id And
      SFSMSOTERROR:STATE            = L_STATE And
      SFSMSOTERROR:LINE_OF_BUSINESS = agqgeneral:line_of_business
        Begin
        if (agqgeneral:eff_date >= sfsmsoterror:eff_date and
           (agqgeneral:eff_date < sfsmsoterror:exp_date or
           sfsmsoterror:exp_date = 0)) then
            begin
            L_TERROR_EFF_DATE   = SFSMSOTERROR:EFF_DATE
            L_TERROR_PERCENTAGE = SFSMSOTERROR:PERCENTAGE
            L_TERROR_MINIMUM    = SFSMSOTERROR:MINIMUM_PREMIUM
            end

        Next SFSMSOTERROR
        End

Access SFSMSOTERROR, Set SFSMSOTERROR:COMPANY_ID       = agqgeneral:company_id,
                         SFSMSOTERROR:STATE            = L_STATE,
                         SFSMSOTERROR:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                         SFSMSOTERROR:EFF_DATE         = L_TERROR_EFF_DATE, Exact

End

Procedure ACCESS_KEY
Begin
l_state = agqgeneral:state
Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID       = agqgeneral:company_id ,
                      SFSOPTEND:STATE            = l_STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                      SFSOPTEND:CODE             = L_CODE, Generic

while sfsoptend:company_id = agqgeneral:company_id and
      sfsoptend:state = l_state and
      sfsoptend:line_of_business = agqgeneral:line_of_business and
      sfsoptend:code = l_code
       begin
       if (agqgeneral:eff_date >= sfsoptend:eff_date and
          (agqgeneral:eff_date <= sfsoptend:exp_date or
          sfsoptend:exp_date = 0)) then
           begin
           l_form_edition = sfsoptend:form_edition
           l_description = sfsoptend:description
           end

       next sfsoptend
       end

End

Procedure SUBCODE
Begin
Access agqEND, Set agqEND:app_no       = g_app_no ,
                   agqEND:PREM_NO      = L_PREM_NO,
                   agqEND:BUILD_NO     = L_BUILD_NO, Generic

L_SUB_CODE = 0
Repeat Begin
    Exit If agqEND:app_no <> g_app_no Or
            agqEND:PREM_NO <> L_PREM_NO Or
            agqEND:BUILD_NO <> L_BUILD_NO

   L_SUB_CODE = agqEND:SUB_CODE + 10

   Next agqEND
   End

End

/*procedure access_arspayplan
begin
Access ARSPAYPLAN, Set ARSPAYPLAN:COMPANY_ID       = agqgeneral:company_id,
                       ARSPAYPLAN:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                       ARSPAYPLAN:PAYMENT_PLAN     = agqname:payment_plan, generic
end*/

Procedure INSTALLMENT
Begin
/* 05/30/2001 - added logic to calculate the payment plan
   based on company id, line of business and total premium

   do not perform this routine of the payment plan <> 1
   must assume that if the payment plan is other than 1 the user
   wants to manually select the payment plan

   use l_total to compare total premium against minimum_premium
   requirements from teh arspayplan database
*/
/* actually recalculating the payment plan at the policy level is a
   good idea since a change in limit could easily put the policy
   into another payment plan option
*/

Do CALCULATE_PAYMENT_PLAN_OPTION

/* reaccess arspayplan since the above logic changes the value of this file
   it appears that the file is accessed on entry and even though the
   payment plan has been changed cqcs is holding the original value
*/

Access ARSPAYPLAN, Set ARSPAYPLAN:COMPANY_ID       = agqgeneral:company_id,
                       ARSPAYPLAN:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                       ARSPAYPLAN:PAYMENT_PLAN     = L_HOLD_PAYMENT_PLAN

If ARSPAYPLAN:INSTALLMENT_CHARGE_TYPE = "FLAT" And
   ARSPAYPLAN:INSTALLMENT_CHARGE_TIME = "EACH" Then
    L_INSTALLMENT = ARSPAYPLAN:INSTALLMENT_CHARGE_RATE *
                    ARSPAYPLAN:NUMBER_OF_PAYMENTS

If ARSPAYPLAN:INSTALLMENT_CHARGE_TYPE = "FIXED" Then
    L_INSTALLMENT = ARSPAYPLAN:INSTALLMENT_CHARGE_RATE

/* end of installment */
End

Procedure CALCULATE_PAYMENT_PLAN_OPTION
Begin
/* house cleaning */
L_FIRST_TIME = "Y"
L_HOLD_PAYMENT_PLAN = 1 -- this is a cya
if l_irpm_total <> 0 then
    l_sub_total = l_irpm_total
else
    l_sub_total = l_final_total

Access ARSPAYPLAN, Set ARSPAYPLAN:COMPANY_ID = agqgeneral:company_id,
                       ARSPAYPLAN:LINE_OF_BUSINESS = agqgeneral:line_of_business, Approximate

While ARSPAYPLAN:COMPANY_ID = agqgeneral:company_id And
      ARSPAYPLAN:LINE_OF_BUSINESS = agqgeneral:line_of_business
        Begin
        if arspayplan:manual_payment_plan = 0 then
            begin
            If L_FIRST_TIME = "Y" Then
                Begin
                L_FIRST_TIME = "N"
                L_HOLD_PAYMENT_PLAN = ARSPAYPLAN:PAYMENT_PLAN
                End

            If L_SUB_TOTAL >= ARSPAYPLAN:MINIMUM_PREMIUM then
                Begin
                L_HOLD_PAYMENT_PLAN = ARSPAYPLAN:PAYMENT_PLAN
                End
            end

        Next ARSPAYPLAN
        End

/* only update the agqname file if the payment plan actually changed
   05/31/2001 - removed this logic so that the agqname file would
   be updated everytime, also added update of agqname:final_rating
*/

/* if there is a mortgagee on this policy where it is of type
   "B" - billing
   "C" - combination mortgagee and billing
   "F" - premium finance
   then the payment plan is to be set to 1
*/

Access agqSUPP, Set agqSUPP:app_no = agqgeneral:app_no, generic

While agqSUPP:app_no = agqgeneral:app_no
    Begin
    If agqSUPP:MORTGAGE_TYPE_1 One Of "B", "C", "F" Then
        { L_HOLD_PAYMENT_PLAN = 1 }
    Next agqSUPP
    End

/* change on feb 21, 2002 - if AC only annual is allowed */
If agqNAME:BILL_PLAN = "AC" Then
Begin
    L_HOLD_PAYMENT_PLAN = 1
End

Access agqNAME, Set agqNAME:app_no = agqgeneral:app_no, generic

If agqNAME:app_no = agqgeneral:app_no then
    Begin
    Change agqNAME
        Begin
        agqNAME:PAYMENT_PLAN = L_HOLD_PAYMENT_PLAN
        End

    End

Access agqNAME, Set agqNAME:app_no = agqgeneral:app_no, generic

If agqNAME:app_no = agqgeneral:app_no then
    Begin
    Change agqNAME
        Begin
        agqNAME:PAYMENT_PLAN = L_HOLD_PAYMENT_PLAN
        End
    End

End

procedure minimum_premium
begin
Access SFSCONTROL, Set SFSCONTROL:COMPANY_ID = agqgeneral:company_id,
                       SFSCONTROL:STATE = agqgeneral:STATE,
                       SFSCONTROL:LINE_OF_BUSINESS = agqgeneral:line_of_business, Approximate

l_change_minimum_rating = 0
while SFSCONTROL:COMPANY_ID       = agqgeneral:company_id and
      SFSCONTROL:STATE            = agqgeneral:STATE and
      SFSCONTROL:LINE_OF_BUSINESS = agqgeneral:line_of_business
    begin
    If (agqgeneral:eff_date >= SFSCONTROL:EFF_DATE and
       (agqgeneral:eff_date <= sfscontrol:exp_date or
       sfscontrol:exp_date = 0)) Then
        begin
        L_MINIMUM = SFSCONTROL:MINIMUM_PREMIUM
        l_minimum_1 = sfscontrol:minimum_premium_1
        l_change_minimum_rating = sfscontrol:change_minimum_rating
        l_mp_building_property = sfscontrol:mp_building_property
        l_agent_minimum = sfscontrol:agent_minimum
--        l_short_rate = sfscontrol:short_rate
        end

    Next SFSCONTROL
    End

end

Procedure TOTALS
Begin
If L_BUYBACK = "Y" Then
    Begin
    l_update_sfpend_premium = L_TOTAL * L_BUYBACK_FACTOR
    If l_update_sfpend_premium < L_BUYBACK_PREMIUM Then
        l_update_sfpend_premium = L_BUYBACK_PREMIUM
    L_BUYBACK_OPTION_TOTAL = l_update_sfpend_premium
    Access agqEND, Set agqEND:app_no = agqgeneral:app_no, generic

    while agqEND:app_no = agqgeneral:app_no
        begin
        If agqEND:CODE = "MCL589" Then
            Change agqEND
                Begin
                agqEND:PREMIUM = l_update_sfpend_premium
                End

        Next agqEND
        End
    End

access bpsrate, set bpsrate:company_id = agqgeneral:company_id,
                    bpsrate:state = agqgeneral:state,
                    bpsrate:line_of_business = agqgeneral:line_of_business, generic

l_enhancement_premium = 0
while bpsrate:company_id = agqgeneral:company_id and
      bpsrate:state = agqgeneral:state and
      bpsrate:line_of_business = agqgeneral:line_of_business
        begin
        if agqgeneral:eff_date >= bpsrate:eff_date then
            begin
            if agqgeneral:special_enhancement = 1 then
                l_enhancement_premium = bpsrate:enhancement_premium

            end

        next bpsrate
        end

/*l_fungi_total = 0
if l_fungi_factor <> 0 then
    begin
    l_update_sfpend_premium = ((L_TOTAL * L_fungi_factor) - l_total)
    If l_update_sfpend_premium < L_fungi_minimum Then
        l_update_sfpend_premium = L_fungi_minimum
    l_fungi_total = l_update_sfpend_premium
    Access agqEND, Set agqEND:app_no = agqgeneral:app_no, generic

    while agqend:app_no = agqgeneral:app_no
        begin
        If agqEND:CODE one of "MCL883", "MCL884" Then
            Change agqEND
                Begin
                agqEND:PREMIUM = l_update_sfpend_premium
                End

        Next agqEND
        End
    End*/
l_fungi_total = 0
if l_fungi_factor <> 0 and
   sfscompany:boiler_rating = 1 then
    begin
    access agqgeneral_alias, set agqgeneral_alias:app_no = agqgeneral:app_no, generic

    l_total_basic_premium = 0
    l_total_basic_premium_1 = 0
    l_update_sfpend_premium = 0
    while agqgeneral_alias:app_no = agqgeneral:app_no
        begin
        l_total_basic_premium = agqgeneral_alias:building_premium +
                                agqgeneral_alias:property_premium +
                                agqgeneral_alias:property_special

        l_total_basic_premium_1 = ((l_total_basic_premium *
                                  L_fungi_factor) -
                                  l_total_basic_premium)

        If l_total_basic_premium_1 < L_fungi_minimum Then
            l_total_basic_premium_1 = L_fungi_minimum

        l_update_sfpend_premium = l_update_sfpend_premium +
                                  l_total_basic_premium_1

        next agqgeneral_alias
        end

    l_fungi_total = L_UPDATE_SFPEND_PREMIUM
    Access agqEND, Set agqEND:app_NO = agqGENERAL:app_NO, Generic

    while agqend:app_no = agqgeneral:app_no
        begin
        If agqEND:CODE one of "MCL883", "MCL884" Then
            Change agqEND
                Begin
                agqEND:PREMIUM = L_UPDATE_SFPEND_PREMIUM
                End

        Next agqEND
        End
    End
else
if l_fungi_factor <> 0 and
   sfscompany:boiler_rating <> 1 then
    begin
    access agqgeneral_alias, set agqgeneral_alias:app_no = agqgeneral:app_no, generic

    l_total_basic_premium = 0
    while agqgeneral_alias:app_no = agqgeneral:app_no
        begin
        l_total_basic_premium = agqgeneral_alias:building_premium +
                                agqgeneral_alias:property_premium +
                                agqgeneral_alias:property_special +
                                l_total_basic_premium

        next agqgeneral_alias
        end

    L_UPDATE_SFPEND_PREMIUM = ((l_total_basic_premium *
                              L_fungi_factor) -
                              l_total_basic_premium)
    If L_UPDATE_SFPEND_PREMIUM < L_fungi_minimum Then
        L_UPDATE_SFPEND_PREMIUM = L_fungi_minimum
    l_fungi_total = L_UPDATE_SFPEND_PREMIUM
    Access agqEND, Set agqEND:app_no = agqGENERAL:app_no, Generic

    while agqend:app_no = agqgeneral:app_no
        begin
        If agqEND:CODE one of "MCL883", "MCL884" Then
            Change agqEND
                Begin
                agqEND:PREMIUM = L_UPDATE_SFPEND_PREMIUM
                End

        Next agqEND
        End
    End


If SFSCOMPANY:INCLUDE_ALL_IRPM = 1 Then
    L_TOTAL = L_TOTAL + L_TERRITORY_RATING + L_BOILER_PREM_TOTAL +
              L_PRINTERS_ERROR + L_BUYBACK_OPTION_TOTAL +
              l_printers_credit + l_fungi_total + l_adjustment_to_meet_minimum +
              l_enhancement_premium
Else
    begin
    L_TOTAL = L_TOTAL + l_adjustment_to_meet_minimum + L_TERRITORY_RATING
    end

l_minimum_applies = "N"
if sfscompany:optional_coverage_screen = 1 then
    begin
    if agqgeneral:bop_type one of 3 then
        begin
        if l_total < l_minimum_1 then
            begin
            l_total = l_minimum_1
            l_minimum_applies = "Y"
            end
        end
    else
        begin
        if l_total < l_minimum then
            begin
            l_total = l_minimum
            l_minimum_applies = "Y"
            l_total_3 = l_minimum
            l_total_all_locations = l_minimum
            l_agqtotals_minimum = l_minimum
            end
        end
    end

If l_total < l_minimum and
--l_total_all_locations < L_MINIMUM and
   l_change_minimum_rating = 0 and
   l_mp_building_property = 0 and
   sfscompany:optional_coverage_screen not one of 1 Then
    Begin
    L_TOTAL = L_MINIMUM
    l_total_3 = l_minimum
    l_total_all_locations = l_minimum
    l_agqtotals_minimum = l_minimum
    L_MINIMUM_APPLIES = "Y"
    End

If L_MAX_CREDITS < L_BPSCREDITS_MAXIMUM And
   L_MAX_CREDITS <> 0 Then
    Warning "Credits exceeds maximum allowed, Press CANCEL to accept"

if l_minimum_applies = "Y" and
   sfscompany:boiler_rating = 4 then
    begin
    Access BPSRATE, Set BPSRATE:COMPANY_ID = agqgeneral:company_id,
                        BPSRATE:STATE = agqGENERAL:STATE,
                        BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business, Generic

    while BPSRATE:COMPANY_ID       = agqgeneral:company_id and
          BPSRATE:STATE            = agqGENERAL:STATE and
          BPSRATE:LINE_OF_BUSINESS = agqgeneral:line_of_business
        begin
        If agqgeneral:EFF_DATE >= BPSRATE:EFF_DATE Then
            Begin
            L_FACTOR_1 = BPSRATE:BOILERS_FACTOR
            l_code     = bpsrate:boiler_code_1
            l_factor_2 = bpsrate:boilers_factor_1
            L_LIMIT = BPSRATE:BOILERS_LIMIT
            L_BOILERS_LOSS_INCOME = BPSRATE:BOILER_LOSS_INCOME
            l_limit_1 = bpsrate:boiler_restaurant_limit
            End

        Next BPSRATE
        End

    access agqendorse, set agqendorse:app_no   = agqgeneral:app_no,
                           agqendorse:prem_no  = 0,
                           agqendorse:build_no = 0,
                           agqendorse:code     = l_code, generic

    L_RATE_FACTOR = 0.01
    L_IRPM = (1 + (agqmaster:IRPM * 0.01))
    If L_IRPM = 0 Then
        L_IRPM = 1

    if agqendorse:limit[1] = l_limit_1 and
       agqendorse:limit[1] <> 0 and
       l_factor_2 <> 0 then
        l_factor_1 = l_factor_2

    access agqendorse, set agqendorse:app_no   = agqgeneral:app_no,
                           agqendorse:prem_no  = agqgeneral:prem_no,
                           agqendorse:build_no = agqgeneral:build_no,
                           agqendorse:code     = l_code, generic

    access agqgeneral_alias, set agqgeneral_alias:app_no   = g_app_no,
                                 agqgeneral_alias:prem_no  = agqgeneral:prem_no,
                                 agqgeneral_alias:build_no = agqgeneral:build_no, generic

    change agqgeneral_alias
        begin
        if agqendorse:premium <> 0 then
           agqgeneral_alias:boilers_premium = agqendorse:premium
        else
            agqGENERAL_ALIAS:BOILERS_PREMIUM = ((l_total * l_irpm) *
                                               (l_factor_1 divide 100))
        end

    If agqgeneral_alias:boilers_premium < L_MINIMUM_boiler And
       agqgeneral_alias:boilers_premium <> 0 Then
        Begin
        Change agqGENERAL_ALIAS
            Begin
            agqGENERAL_ALIAS:BOILERS_PREMIUM = L_MINIMUM_boiler
            agqGENERAL_ALIAS:OPTIONAL_TOTAL = ((agqGENERAL_ALIAS:OPTIONAL_TOTAL -
                                              L_BOILER_PREM_TOTAL) +
                                              L_MINIMUM_boiler)
            agqGENERAL_ALIAS:LOCATION_PREMIUM = ((agqgeneral_alias:location_premium -
                                                l_boiler_prem_total) +
                                                l_minimum_boiler)
            End
        End

    l_boiler_prem_total = agqgeneral_alias:boilers_premium
    end

End

Procedure FINAL_TOTAL
Begin
L_EFF_DATE_1 = Dateadd(agqgeneral:eff_date,0,1)
If agqgeneral:EXP_DATE < L_EFF_DATE_1 Then
    Begin
    L_DAYS_RATE = L_TOTAL Divide 365
    L_DAYS = agqgeneral:EXP_DATE - agqgeneral:eff_date
    L_PRO_RATA_PREMIUM = L_DAYS * L_DAYS_RATE
    L_TOTAL = L_PRO_RATA_PREMIUM
    End

If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
    Begin
    If SFSCOMPANY:INCLUDE_ALL_IRPM = 1 Then
        Begin
        L_FINAL_TOTAL = L_TOTAL + L_INSTALLMENT
        End
    Else
        Begin
        L_FINAL_TOTAL = L_TOTAL + L_INSTALLMENT + L_BOILER_PREM_TOTAL +
                        L_PRINTERS_ERROR + L_BUYBACK_OPTION_TOTAL +
                        l_printers_credit + l_fungi_total
        End
    End
Else
    Begin
    If SFSCOMPANY:INCLUDE_ALL_IRPM = 1 Then
        Begin
        L_FINAL_TOTAL = L_TOTAL
        End
    Else
        Begin
        L_FINAL_TOTAL = L_TOTAL + L_BOILER_PREM_TOTAL + L_PRINTERS_ERROR
                        + L_BUYBACK_OPTION_TOTAL + l_printers_credit +
                        l_fungi_total
        End
    End

if sfscompany:boiler_rating <> 4 then
    begin
    L_IRPM = (1 + (L_IRPM * L_RATE_FACTOR))
    If L_IRPM = 0 Then
        L_IRPM = 1
    end
else
if sfscompany:boiler_rating one of 4 then
    begin
    l_rate_factor = 0.01
    l_irpm = (1 + (agqmaster:irpm * 0.01))
    if l_irpm = 0 then
        l_irpm = 1
    end

access agqend, set agqend:app_no = agqgeneral:app_no, generic

l_bu2597_premium = 0
l_bu2510_premium = 0
while agqend:app_no   = agqgeneral:app_no
        begin
        if agqend:code one of "BU2597", "BU0197" then
            l_bu2597_premium = l_bu2597_premium + agqend:premium
        if agqend:code one of "BU2510" then
            l_bu2510_premium = l_bu2510_premium + agqend:premium

        next agqend
        end


If SFSCOMPANY:INCLUDE_ALL_IRPM <> 1 Then
    Begin
    If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
        Begin
        If L_IRPM not one of 0, 1 Then
            Begin
            L_IRPM_TOTAL = (((L_TOTAL - l_bu2510_premium - l_bu2597_premium)
                           * L_IRPM) + L_INSTALLMENT + L_BOILER_PREM_TOTAL +
                           L_PRINTERS_ERROR + l_printers_credit + L_BUYBACK_OPTION_TOTAL +
                           l_fungi_total + l_epl_prem)
            l_irpm_total = l_irpm_total + l_bu2510_premium + l_bu2597_premium + l_epl_prem
            End
        End
    Else
        Begin
        If L_IRPM not one of 0, 1 Then
            Begin
            L_IRPM_TOTAL = (((L_TOTAL - l_bu2510_premium - l_bu2597_premium)
                           * L_IRPM) + L_BOILER_PREM_TOTAL +
                           L_PRINTERS_ERROR + l_printers_credit + L_BUYBACK_OPTION_TOTAL +
                           l_fungi_total + l_epl_prem)
            l_irpm_total = l_irpm_total + l_bu2510_premium + l_bu2597_premium + l_epl_prem
            End
        End
    End
Else
    Begin
    If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
        Begin
        If L_IRPM not one of 0, 1 Then
            Begin
            L_IRPM_TOTAL = (((L_TOTAL - l_bu2510_premium - l_bu2597_premium)
                           * L_IRPM) + L_INSTALLMENT)-- + l_epl_prem)
            l_irpm_total = l_irpm_total + l_bu2510_premium + l_bu2597_premium --+ l_epl_prem
            End
        End
    Else
        Begin
        If L_IRPM not one of 0, 1 Then
            Begin
            L_IRPM_TOTAL = (((L_TOTAL - l_bu2510_premium - l_bu2597_premium)
                           * L_IRPM))-- + l_epl_prem)
            l_irpm_total = l_irpm_total + l_bu2510_premium + l_bu2597_premium --+ l_epl_prem
            End
        End
    End

if l_irpm_total = 0 then
    l_final_total = l_final_total + l_epl_prem

if l_agent_minimum <> 0 and
   l_irpm_total < l_agent_minimum and
   agqgeneral:company_id = "FARMERS" and
   agqmaster:deductible = l_deductible then
    begin
    l_irpm       = 1
    l_irpm_total = 0
    access agqmaster, set agqmaster:app_no = g_app_no, generic

    if agqmaster:app_no = g_app_no then
        begin
        change agqmaster
            begin
            agqmaster:irpm = 0
            end
        end
    End

if l_irpm_total <> 0 and
   l_minimum_applies = "Y" then
    l_agqtotals_minimum = l_irpm_total
access sfssurcharge, set sfssurcharge:company_id = agqgeneral:company_id,
                         sfssurcharge:state = agqgeneral:state,
                         sfssurcharge:line_of_business = agqgeneral:line_of_business, generic

l_surcharge_date = 0
while sfssurcharge:company_id = agqgeneral:company_id and
      sfssurcharge:state = agqgeneral:state and
      sfssurcharge:line_of_business = agqgeneral:line_of_business
        begin
        if (agqgeneral:eff_date >= sfssurcharge:eff_date and
           (l_surcharge_date < sfssurcharge:eff_date or
           l_surcharge_date = 0)) then
            begin
            l_surcharge_date    = sfssurcharge:eff_date
            l_surcharge_factor  = sfssurcharge:surcharge_factor
            l_surcharge_minimum = sfssurcharge:minimum_premium
            end
        next sfssurcharge
        end

--l_minimum_applies = "N"
if l_irpm_total <> 0 then
    begin
    If L_irpm_TOTAL <= L_MINIMUM Then
        Begin
        L_irpm_total = L_MINIMUM
        L_MINIMUM_APPLIES = "Y"
        End
    end
else
    begin
    If L_final_TOTAL <= L_MINIMUM Then
        Begin
        L_final_total = L_MINIMUM
        L_MINIMUM_APPLIES = "Y"
        End
    end

if sfscompany:boiler_rating <> 4 then
    begin
    If L_IRPM_TOTAL <> 0 Then
        L_SURCHARGE = L_IRPM_TOTAL * L_SURCHARGE_FACTOR
    Else
        L_SURCHARGE = L_FINAL_TOTAL * L_SURCHARGE_FACTOR

    If L_SURCHARGE < L_SURCHARGE_MINIMUM Then
        L_SURCHARGE = L_SURCHARGE_MINIMUM
    end

end

procedure update_totals
begin
access agqtotals, set agqtotals:app_no     = agqgeneral:app_no,
                      agqtotals:prem_no    = agqgeneral:prem_no,
                      agqtotals:build_no   = agqgeneral:build_no,
                      agqtotals:deductible = l_deductible, generic

if agqtotals:app_no     = agqgeneral:app_no and
   agqtotals:prem_no    = agqgeneral:prem_no and
   agqtotals:build_no   = agqgeneral:build_no and
   agqtotals:deductible = l_deductible then
    begin
    change agqtotals
        begin
        agqtotals:deductible_premium          = l_loc_total
        end
    end
else
    begin
    add agqtotals
        begin
        agqtotals:app_no                      = agqgeneral:app_no
        agqtotals:prem_no                     = agqgeneral:prem_no
        agqtotals:build_no                    = agqgeneral:build_no
        agqtotals:deductible                  = l_deductible
        agqtotals:deductible_premium          = l_loc_total
        end
    end

l_total_all_locations = l_loc_total +
                        l_total_all_locations
End

procedure update_policy_totals
begin
l_total_all_locations = l_total_all_locations + l_territory_rating
access agqtotals, set agqtotals:app_no     = agqgeneral:app_no,
                      agqtotals:prem_no    = 0,
                      agqtotals:build_no   = 0,
                      agqtotals:deductible = l_deductible, generic

if agqtotals:app_no     = agqgeneral:app_no and
   agqtotals:prem_no    = 0 and
   agqtotals:build_no   = 0 and
   agqtotals:deductible = l_deductible then
    begin
    change agqtotals
        begin
        agqtotals:deductible_premium            = l_total_all_locations
        agqtotals:printers_premium              = l_printers_credit
        agqtotals:territory_total               = l_territory_rating
        agqtotals:terrorism_premium             = l_terrorism_premium
        agqtotals:pliga                         = l_surcharge
        agqtotals:adjustment_to_meet_minimum    = l_adjustment_to_meet_minimum
        agqtotals:identity_theft                = l_identity_theft
        agqtotals:fungi_total                   = l_fungi_total
        agqtotals:enhancement_premium           = l_enhancement_premium
        agqtotals:boiler_premium                = l_boiler_prem_total
        agqtotals:epl_prem                      = l_epl_prem
        agqtotals:minimum_premium               = l_agqtotals_minimum
        agqtotals:bu2510_premium                = l_bu2510_premium
        agqtotals:bu2597_premium                = l_bu2597_Premium
        end
    end
else
    begin
    add agqtotals
        begin
        agqtotals:app_no                        = agqgeneral:app_no
        agqtotals:prem_no                       = 0
        agqtotals:build_no                      = 0
        agqtotals:deductible                    = l_deductible
        agqtotals:deductible_premium            = l_total_all_locations
        agqtotals:printers_premium              = l_printers_credit
        agqtotals:territory_total               = l_territory_rating
        agqtotals:terrorism_premium             = l_terrorism_premium
        agqtotals:pliga                         = l_surcharge
        agqtotals:adjustment_to_meet_minimum    = l_adjustment_to_meet_minimum
        agqtotals:enhancement_premium           = l_enhancement_premium
        agqtotals:identity_theft                = l_identity_theft
        agqtotals:fungi_total                   = l_fungi_total
        agqtotals:boiler_premium                = l_boiler_prem_total
        agqtotals:epl_prem                      = l_epl_prem
        agqtotals:minimum_premium               = l_agqtotals_minimum
        agqtotals:bu2510_premium                = l_bu2510_premium
        agqtotals:bu2597_premium                = l_bu2597_Premium
        end
    end

access agqname, set agqname:app_no = g_app_no, generic

L_COMPANY_ID = agqgeneral:company_id
access sfsline, set sfsline:company_id       = agqname:company_id,
                    sfsline:line_of_business = agqname:line_of_business,
                    sfsline:lob_subline      = "00", generic

if sfsline:lob_code one of "CPORTFOLIO" then
    begin
    access agqamt, set agqamt:app_no = g_app_no, exact

    if agqamt:app_no = g_app_no then
        begin
        change agqamt
            begin
            if l_irpm_total <> 0 then
                agqamt:lob_totals[5]   = l_irpm_total - l_terrorism_premium
            else
                agqamt:lob_totals[5]   = l_final_total - l_terrorism_premium
            agqamt:lob_surcharge[5]    = l_surcharge
            agqamt:lob_terrorism[5]    = l_terrorism_premium
            agqamt:line_of_business[5] = agqgeneral:line_of_business
            end
        end
    else
        begin
        add agqamt
            begin
            agqamt:app_no              = g_app_no
            if l_irpm_total <> 0 then
                agqamt:lob_totals[5]   = l_irpm_total - l_terrorism_premium
            else
                agqamt:lob_totals[5]   = l_final_total - l_terrorism_premium
            agqamt:lob_surcharge[5]    = l_surcharge
            agqamt:lob_terrorism[5]    = l_terrorism_premium
            agqamt:line_of_business[5] = agqgeneral:line_of_business
            end
        end

    access agqmastsupp, set agqmastsupp:app_no = agqgeneral:app_no,
                            agqmastsupp:line_of_business = agqgeneral:line_of_business, generic

    If agqmastsupp:app_no = agqgeneral:app_no and
       agqmastsupp:line_of_business = agqgeneral:line_of_business Then
        begin
        Change agqmastsupp
            Begin
            agqmastsupp:TOTAL[17] = L_TOTAL
            agqmastsupp:TOTAL[18] = L_FINAL_TOTAL
            agqmastsupp:TOTAL[19] = L_IRPM_TOTAL

            If L_IRPM_TOTAL <> 0 Then
                Begin
                If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                    Begin
                    agqmastsupp:TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE  +
                                          L_INSTALLMENT
                    agqmastsupp:AMT_DUE_TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE  +
                                                  L_INSTALLMENT
                    End
                Else
                    Begin
                    agqmastsupp:TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE
                    agqmastsupp:AMT_DUE_TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE
                    End
                End
            Else
                Begin
                If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                    Begin
                    agqmastsupp:TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE +
                                          L_INSTALLMENT
                    agqmastsupp:AMT_DUE_TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE +
                                                  L_INSTALLMENT
                    End
                Else
                    Begin
                    agqmastsupp:TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE
                    agqmastsupp:AMT_DUE_TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE
                    End
                End
            If L_IRPM_TOTAL <> 0 Then
                Begin
                If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                    Begin
                    agqmastsupp:TOTAL[1] = L_IRPM_TOTAL - L_INSTALLMENT -
                                         L_BOILER_PREM_TOTAL -
                                         l_terrorism_premium -
                                         l_identity_theft
                    End
                Else
                    Begin
                    agqmastsupp:TOTAL[1] = L_IRPM_TOTAL - L_BOILER_PREM_TOTAL -
                                           l_terrorism_premium - l_identity_theft
                    End
                End
            Else
                Begin
                If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                    Begin
                    agqmastsupp:TOTAL[1] = L_FINAL_TOTAL - L_INSTALLMENT -
                                         L_BOILER_PREM_TOTAL - l_terrorism_premium -
                                         l_identity_theft
                    End
                Else
                    Begin
                    agqmastsupp:TOTAL[1] = L_FINAL_TOTAL - L_BOILER_PREM_TOTAL -
                                           l_terrorism_premium - l_identity_theft
                    End
                End
            agqmastsupp:TOTAL[2] = L_BOILER_PREM_TOTAL
            agqmastsupp:TOTAL[3] = L_BUYBACK_OPTION_TOTAL
            agqmastsupp:total[4] = l_printers_credit
            agqmastsupp:total[5] = l_fungi_total
            agqmastsupp:total[6] = l_adjustment_to_meet_minimum
            agqmastsupp:total[7] = l_identity_theft
            agqmastsupp:total[8] = l_enhancement_premium
            If L_MINIMUM_APPLIES = "Y" Then
                agqmastsupp:MINIMUM_PREM_APPLIES = "Y"
            else
                agqmastsupp:minimum_prem_applies = "N"
            agqmastsupp:SURCHARGE = L_SURCHARGE
            agqmastsupp:RAW_PREMIUM_AMT_DUE = ((L_TOTAL * L_IRPM) + L_PRINTERS_ERROR +
                                            L_BUYBACK_OPTION_TOTAL + l_printers_credit +
                                            l_fungi_total + l_enhancement_premium)
            End
        end
    end
else
    begin
    access agqmaster, set agqmaster:app_no = g_app_no, generic

    If agqmaster:app_no = agqgeneral:app_no Then
        begin
        Change agqmaster
            Begin
            write("%c%n",1005,l_total)
            write("%c%n",1015,l_deductible)
            agqmaster:TOTAL[17] = L_TOTAL
            agqmaster:total[18] = l_final_total
            agqmaster:TOTAL[19] = l_irpm_total

            If L_IRPM_TOTAL <> 0 Then
                Begin
                If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                    Begin
                    agqmaster:TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE  +
                                          L_INSTALLMENT
                    agqmaster:AMT_DUE_TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE  +
                                                  L_INSTALLMENT
                    End
                Else
                    Begin
                    agqmaster:TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE
                    agqmaster:AMT_DUE_TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE
                    End
                End
            Else
                Begin
                If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                    Begin
                    agqmaster:TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE +
                                          L_INSTALLMENT
                    agqmaster:AMT_DUE_TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE +
                                                  L_INSTALLMENT
                    End
                Else
                    Begin
                    agqmaster:TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE
                    agqmaster:AMT_DUE_TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE
                    End
                End
            If L_IRPM_TOTAL <> 0 and
               l_minimum_applies = "N" Then
                Begin
                If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                    Begin
                    agqmaster:TOTAL[1] = L_IRPM_TOTAL - L_INSTALLMENT -
                                         L_BOILER_PREM_TOTAL -
--                                         l_adjustment_to_meet_minimum -
                                         l_terrorism_premium -
                                         l_identity_theft -
                                         l_epl_prem
                    End
                Else
                    Begin
                    agqmaster:TOTAL[1] = L_IRPM_TOTAL - L_BOILER_PREM_TOTAL -
--                                         l_adjustment_to_meet_minimum -
                                         l_terrorism_premium - l_identity_theft -
                                         l_epl_prem
                    End
                End
            Else
                Begin
                if l_agqtotals_minimum <> 0 then
                    agqmaster:total[1] = l_agqtotals_minimum
                else
                    agqmaster:TOTAL[1] = l_total_all_locations
                End
            agqmaster:TOTAL[2] = L_BOILER_PREM_TOTAL
            agqmaster:TOTAL[3] = L_BUYBACK_OPTION_TOTAL
            agqmaster:total[4] = l_printers_credit
            agqmaster:total[5] = l_fungi_total
            agqmaster:total[6] = l_adjustment_to_meet_minimum
            agqmaster:total[7] = l_identity_theft
            agqmaster:total[8] = l_enhancement_premium
            agqmaster:INSTALLMENT_CHARGE = L_INSTALLMENT
            If L_MINIMUM_APPLIES = "Y" Then
                agqmaster:MINIMUM_PREM_APPLIES = "Y"
            else
                agqmaster:minimum_prem_applies = "N"
            agqmaster:SURCHARGE = L_SURCHARGE
            agqmaster:RAW_PREMIUM_AMT_DUE = ((L_TOTAL * L_IRPM) + L_PRINTERS_ERROR +
                                            L_BUYBACK_OPTION_TOTAL + l_printers_credit +
                                            l_fungi_total + l_enhancement_premium)
            End
        end
    end

End

Procedure RATE_ENDORSEMENTS
Begin
Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID = agqgeneral:company_id,
                      SFSOPTEND:STATE = agqgeneral:STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                      SFSOPTEND:CODE = L_CODE, Generic

while SFSOPTEND:COMPANY_ID       = agqgeneral:company_id and
      SFSOPTEND:STATE            = agqgeneral:STATE and
      SFSOPTEND:LINE_OF_BUSINESS = agqgeneral:line_of_business and
      SFSOPTEND:CODE             =  L_CODE
    begin
    If (agqgeneral:eff_date >= SFSOPTEND:EFF_DATE and
       (agqgeneral:eff_date <= sfsoptend:exp_date or
       sfsoptend:exp_date = 0)) Then
        Begin
        L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
        L_END_LIMIT = SFSOPTEND:LIMIT[1]
        L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]

        access agqgeneral_alt, set agqgeneral_alt:app_no   = agqend:app_no,
                                   agqgeneral_alt:prem_no  = agqend:prem_no,
                                   agqgeneral_alt:build_no = agqend:build_no, generic

        l_state = agqgeneral_alt:state
        l_line_of_business = agqgeneral_alt:line_of_business

        if l_code one of "MCL426" then
            begin
            access agqendorse, set agqendorse:app_no   = agqend:app_no,
                                   agqendorse:prem_no  = agqend:prem_no,
                                   agqendorse:build_no = agqend:build_no,
                                   agqendorse:code     = agqend:code, generic

            switch(agqendorse:limit[1])
              case 300000 : l_end_premium1 = sfsoptend:premium_1[1]
              case 500000 : l_end_premium1 = sfsoptend:premium_1[2]
              default     : l_end_premium1 = sfsoptend:premium_1[3]
              end
            end

        if l_code one of "MCP140", "MCP141", "BU0184" then
            begin
            Access agqendorse, Set agqendorse:app_no = agqend:app_no,
                                   agqendorse:PREM_NO = agqend:PREM_NO,
                                   agqendorse:BUILD_NO = agqend:BUILD_NO,
                                   agqendorse:CODE = L_CODE, Generic

            if sfsoptend:limit[1] = agqendorse:limit[1] then
                l_end_premium1 = sfsoptend:premium_1[1]
            if sfsoptend:limit[2] = agqendorse:limit[1] then
                l_end_premium1 = sfsoptend:premium_1[2]
            if sfsoptend:limit[3] = agqendorse:limit[1] then
                l_end_premium1 = sfsoptend:premium_1[3]
            end

        If L_CODE = "MCL189" Then
            Begin
            L_BUYBACK_FACTOR = SFSOPTEND:PREMIUM_1[1]
            L_BUYBACK_PREMIUM = SFSOPTEND:PREMIUM_1[2]
            End

        If L_CODE one of "MCL883", "MCL884" Then
            Begin
            Access agqendorse, Set agqendorse:app_no = agqend:app_no,
                                   agqendorse:PREM_NO = agqend:PREM_NO,
                                   agqendorse:BUILD_NO = agqend:BUILD_NO,
                                   agqendorse:CODE = L_CODE, Generic

            if agqendorse:limit[1] = sfsoptend:limit[1] then
                L_fungi_FACTOR = SFSOPTEND:PREMIUM_1[1]
            if agqendorse:limit[1] = sfsoptend:limit[2] then
                l_fungi_factor = sfsoptend:premium_1[2]
            l_fungi_minimum = sfsoptend:premium_1[3]
            End

/*        If L_CODE = "WH110" Then
            Begin
            L_END_PREMIUM1 = 0
            Access agqEEDP, Set agqEEDP:app_no = agqend:app_no,
                                agqEEDP:PREM_NO = agqend:PREM_NO,
                                agqEEDP:BUILD_NO = agqend:BUILD_NO, Generic

            If agqEEDP:EQUIPMENT_TOTAL_LIMIT > 0 Then
                L_END_PREMIUM1 = ((agqEEDP:EQUIPMENT_TOTAL_LIMIT Divide
                                 SFSOPTEND:LIMIT[1]) *
                                 SFSOPTEND:PREMIUM_1[1])
            If agqEEDP:MEDIA_TOTAL_LIMIT > 0 Then
                L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                 ((agqEEDP:MEDIA_TOTAL_LIMIT Divide
                                 SFSOPTEND:LIMIT[2]) *
                                 SFSOPTEND:PREMIUM_1[2]))
            If agqEEDP:EE_TOTAL_LIMIT > 0 Then
                L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                 ((agqEEDP:EE_TOTAL_LIMIT Divide
                                 SFSOPTEND:LIMIT[3]) *
                                 SFSOPTEND:PREMIUM_1[3]))
            End*/

        If L_CODE = "MCL434" Then
            Begin
            Switch(L_LIABILITY_CODE)
              Case 1 : Begin
                       L_END_LIMIT = SFSOPTEND:LIMIT[1]
                       L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
                       End
              Case 2 : Begin
                       L_END_LIMIT = SFSOPTEND:LIMIT[2]
                       L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
                       End
              Case 3 : Begin
                       L_END_LIMIT = SFSOPTEND:LIMIT[3]
                       L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[3]
                       End
              End

            L_END_MINIMUM = SFSOPTEND:PREMIUM_1[4]
            End

        If L_CODE = "BU0120" Then
            Begin
            Switch(L_LIABILITY_CODE)
              Case 1 : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
              Case 2 : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
              Case 3 : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[3]
              End
            End

        If L_CODE = "BU0195" Then
            Begin
            Switch(L_LIABILITY_CODE)
              Case 1 : Begin
                       L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
                       End
              Case 2 : Begin
                       L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[3]
                       End
              Case 3 : Begin
                       L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[5]
                       End
              End
            End

        If L_CODE = "BU0521" Then
            L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]

        If L_CODE = "BU0194" Or
           L_CODE = "BU0192" Or
           L_CODE = "BU0191" Then
            Begin
            Switch(L_LIABILITY_CODE)
              Case 1 : Begin
                       L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
                       End
              Case 2 : Begin
                       L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
                       End
              Case 3 : Begin
                       L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[3]
                       End
              End
            End

        If L_CODE one of "BU0282", "BU2582" Then
            Begin
            access sfscompany, set sfscompany:company_id = agqgeneral:company_id, generic

            Access SFSLINE_ALIAS, Set SFSLINE_ALIAS:COMPANY_ID = agqgeneral:company_id,
                                      SFSLINE_ALIAS:LINE_OF_BUSINESS = agqgeneral:line_of_business,
                                      SFSLINE_ALIAS:LOB_SUBLINE = "00",Generic

            if sfscompany:boiler_rating = 4 then
                begin
                Access agqdishonesty, Set agqdishonesty:app_no = agqend:app_no, generic
                end
            else
                begin
                Access agqdishonesty, Set agqdishonesty:app_no = agqend:app_no,
                                          agqdishonesty:PREM_NO = agqend:PREM_NO,
                                          agqdishonesty:BUILD_NO = agqend:BUILD_NO, generic
                end

            L_END_PREMIUM1 = 0
            If SFSLINE_ALIAS:OPTION one of "P", "S" and
               sfscompany:boiler_rating one of 2, 4 Then
                Begin
                If agqDISHONESTY:LIMIT > agsdefault_bop:EMPLOYEE_DISHONESTY Then
                    Begin
                    If agqDISHONESTY:LIMIT = SFSOPTEND:LIMIT[1] Then
                        L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
                    Else
                    if agqdishonesty:limit = sfsoptend:limit[2] then
                        L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
                    Else
                    if agqdishonesty:limit = sfsoptend:limit[5] then
                        L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[5]
                    Else
                    if agqdishonesty:limit = sfsoptend:limit[6] then
                        L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[6]

                    If agqDISHONESTY:NO_EMPLOYEES > 5 Then
                        Begin
                        If agqDISHONESTY:LIMIT = SFSOPTEND:LIMIT[1] Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + ((agqDISHONESTY:NO_EMPLOYEES
                                             - 5) * SFSOPTEND:PREMIUM_1[3]))
                        Else
                        If agqDISHONESTY:LIMIT = SFSOPTEND:LIMIT[2] Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + ((agqDISHONESTY:NO_EMPLOYEES
                                             - 5) * SFSOPTEND:PREMIUM_1[4]))
                        Else
                        If agqDISHONESTY:LIMIT = SFSOPTEND:LIMIT[5] Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + ((agqDISHONESTY:NO_EMPLOYEES
                                             - 5) * SFSOPTEND:PREMIUM_1[7]))
                        Else
                        If agqDISHONESTY:LIMIT = SFSOPTEND:LIMIT[6] Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + ((agqDISHONESTY:NO_EMPLOYEES
                                             - 5) * SFSOPTEND:PREMIUM_1[8]))
                        End
                    end
                End
            Else
                Begin
                if ((agqgeneral:special_enhancement = 1 and
                   agqdishonesty:limit <> l_employee_dishonesty) or
                   agqgeneral:special_enhancement = 0) then
                    begin
                    If agqDISHONESTY:LIMIT = SFSOPTEND:LIMIT[1] Then
                        L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
                    Else
                    if agqdishonesty:limit = sfsoptend:limit[2] then
                        L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
                    Else
                    if agqdishonesty:limit = sfsoptend:limit[5] and
                       sfsoptend:limit[5] <> 0 then
                        L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[5]
                    Else
                    if agqdishonesty:limit = sfsoptend:limit[6] and
                       sfsoptend:limit[6] <> 0 then
                        L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[6]

                    If agqDISHONESTY:NO_EMPLOYEES > 5 Then
                        Begin
                        If agqDISHONESTY:LIMIT = SFSOPTEND:LIMIT[1] Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + ((agqDISHONESTY:NO_EMPLOYEES
                                             - 5) * SFSOPTEND:PREMIUM_1[3]))
                        Else
                        If agqDISHONESTY:LIMIT = SFSOPTEND:LIMIT[2] Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + ((agqDISHONESTY:NO_EMPLOYEES
                                             - 5) * SFSOPTEND:PREMIUM_1[4]))
                        Else
                        If agqDISHONESTY:LIMIT = SFSOPTEND:LIMIT[5] and
                           sfsoptend:limit[5] <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + ((agqDISHONESTY:NO_EMPLOYEES
                                             - 5) * SFSOPTEND:PREMIUM_1[7]))
                        Else
                        If agqDISHONESTY:LIMIT = SFSOPTEND:LIMIT[6] and
                           sfsoptend:limit[6] <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + ((agqDISHONESTY:NO_EMPLOYEES
                                             - 5) * SFSOPTEND:PREMIUM_1[8]))
                        End
                    end
               end
            End

        If L_CODE = "BU0283" Then
            Begin
            Access agqendorse, Set agqendorse:app_no = agqend:app_no,
                                   agqendorse:PREM_NO = agqend:PREM_NO,
                                   agqendorse:BUILD_NO = agqend:BUILD_NO,
                                   agqendorse:CODE = L_CODE, Generic

            If agqendorse:LIMIT[1] > 15000 Then
                Begin
                L_END_PREMIUM1 = ((15000 Divide SFSOPTEND:LIMIT[1])
                                 * SFSOPTEND:PREMIUM_1[1])
                L_END_PREMIUM1 = ((((agqendorse:LIMIT[1] - 15000) Divide
                                 SFSOPTEND:LIMIT[2]) * SFSOPTEND:PREMIUM_1[2]) +
                                 L_END_PREMIUM1)
                End
            Else
                L_END_PREMIUM1 = ((agqendorse:LIMIT[1] Divide SFSOPTEND:LIMIT[1])
                                 * SFSOPTEND:PREMIUM_1[1])
            End

        If L_CODE = "BU0197" Then
            Begin
            Access agqendorse, Set agqendorse:app_no = agqend:app_no,
                                   agqendorse:PREM_NO = agqend:PREM_NO,
                                   agqendorse:BUILD_NO = agqend:BUILD_NO,
                                   agqendorse:CODE = L_CODE, Generic

            if sfscompany:boiler_rating one of 4 then
                begin
                l_rate_factor = 0.01
                l_irpm = (1 + (agqmaster:irpm * 0.01))
                if l_irpm = 0 then
                    l_irpm = 1
                end
            else
                l_irpm = 1

            l_bu2597_mp = "N"
            Switch(L_LIABILITY_CODE)
              Case 1 : Begin
                       Switch(agqendorse:BAR)
                         Case "Y" : L_END_PREMIUM1 = ((agqendorse:LIMIT[1]
                                                     Divide SFSOPTEND:LIMIT[1])
                                                     * SFSOPTEND:PREMIUM_1[1] *
                                                     l_irpm)
                         Default  : L_END_PREMIUM1 = ((agqendorse:LIMIT[1]
                                                     Divide SFSOPTEND:LIMIT[4])
                                                     * SFSOPTEND:PREMIUM_1[4] *
                                                     l_irpm)
                          End
                       if sfsoptend:premium_1[7] <> 0 and
                          l_end_premium1 < sfsoptend:premium_1[7] then
                           begin
                           l_bu2597_mp = "Y"
                           l_end_premium1 = sfsoptend:premium_1[7]
                           end
                       End
              Case 2 : Begin
                       Switch(agqendorse:BAR)
                         Case "Y" : L_END_PREMIUM1 = ((agqendorse:LIMIT[1]
                                                     Divide SFSOPTEND:LIMIT[2])
                                                     * SFSOPTEND:PREMIUM_1[2] *
                                                     l_irpm)
                         Default  : L_END_PREMIUM1 = ((agqendorse:LIMIT[1]
                                                     Divide SFSOPTEND:LIMIT[5])
                                                     * SFSOPTEND:PREMIUM_1[5] *
                                                     l_irpm)
                         end
                       if sfsoptend:premium_1[8] <> 0 and
                          l_end_premium1 < sfsoptend:premium_1[8] then
                           begin
                           l_bu2597_mp = "Y"
                           l_end_premium1 = sfsoptend:premium_1[8]
                           end
                       End
              Case 3 : Begin
                       Switch(agqendorse:BAR)
                         Case "Y" : L_END_PREMIUM1 = ((agqendorse:LIMIT[1]
                                                     Divide SFSOPTEND:LIMIT[3])
                                                     * SFSOPTEND:PREMIUM_1[3] *
                                                     l_irpm)
                         Default  : L_END_PREMIUM1 = ((agqendorse:LIMIT[1]
                                                     Divide SFSOPTEND:LIMIT[6])
                                                     * SFSOPTEND:PREMIUM_1[6] *
                                                     l_irpm)
                          End
                       if sfsoptend:premium_1[9] <> 0 and
                          l_end_premium1 < sfsoptend:premium_1[9] then
                           begin
                           l_bu2597_mp = "Y"
                           l_end_premium1 = sfsoptend:premium_1[9]
                           end
                       End
              Case 4 : Begin
                       Switch(agqendorse:BAR)
                         Case "Y" : L_END_PREMIUM1 = ((agqendorse:LIMIT[1]
                                                     Divide SFSOPTEND:LIMIT[7])
                                                     * SFSOPTEND:PREMIUM_1[7] *
                                                     l_irpm)
                         Default  : L_END_PREMIUM1 = ((agqendorse:LIMIT[1]
                                                     Divide SFSOPTEND:LIMIT[8])
                                                     * SFSOPTEND:PREMIUM_1[8] *
                                                     l_irpm)
                          End
                       if sfsoptend:premium_1[9] <> 0 and
                          l_end_premium1 < sfsoptend:premium_1[9] then
                           begin
                           l_bu2597_mp = "Y"
                           l_end_premium1 = sfsoptend:premium_1[9]
                           end
                       End
              End

            if l_bu2597_mp = "Y" then
                l_bu2597_premium = l_end_premium1
            End

        If L_CODE one of "BU2597" Then
            Begin
            Access agqENDORSE, Set agqENDORSE:app_no = agqGENERAL:app_no,
                                   agqENDORSE:PREM_NO = agqGENERAL:PREM_NO,
                                   agqENDORSE:BUILD_NO = agqGENERAL:BUILD_NO,
                                   agqENDORSE:CODE = L_CODE, Generic

            If SFSCOMPANY:BOILER_RATING one of 4 Then -- delos
                Begin
                L_RATE_FACTOR = 0.01
                L_IRPM = (1 + (agqmaster:IRPM * 0.01))
                If L_IRPM = 0 Then
                    L_IRPM = 1
                end
            else
                l_irpm = 1

            l_bu2597_mp = "N"
            Switch(L_LIABILITY_CODE)
              Case 1 : Begin
                       l_end_premium1 = ((agqENDORSE:LIMIT[1]
                                        Divide SFSOPTEND:LIMIT[1])
                                        * SFSOPTEND:PREMIUM_1[1] *
                                        l_irpm)
                       if sfsoptend:premium_1[4] <> 0 and
                          l_end_premium1 <= sfsoptend:premium_1[4] then
                           begin
                           l_bu2597_mp = "Y"
                           l_end_premium1 = sfsoptend:premium_1[4]
                           end
                       End
              Case 2 : Begin
                       L_END_PREMIUM1 = ((agqENDORSE:LIMIT[1]
                                        Divide SFSOPTEND:LIMIT[1])
                                        * SFSOPTEND:PREMIUM_1[2] *
                                        l_irpm)
                       if sfsoptend:premium_1[5] <> 0 and
                          l_end_premium1 <= sfsoptend:premium_1[5] then
                           begin
                           l_bu2597_mp = "Y"
                           l_end_premium1 = sfsoptend:premium_1[5]
                           end
                       End
              Case 3 : Begin
                       L_END_PREMIUM1 = ((agqENDORSE:LIMIT[1]
                                        Divide SFSOPTEND:LIMIT[1])
                                        * SFSOPTEND:PREMIUM_1[3] *
                                        l_irpm)
                       if sfsoptend:premium_1[6] <> 0 and
                          l_end_premium1 <= sfsoptend:premium_1[6] then
                           begin
                           l_bu2597_mp = "Y"
                           l_end_premium1 = sfsoptend:premium_1[6]
                           end
                       End
              End

--            if l_bu2597_mp = "Y" then
                l_bu2597_premium = l_end_premium1
            End

        If L_CODE one of "BU2510" Then
            Begin
            Access agqENDORSE, Set agqENDORSE:app_no = agqGENERAL:app_no, generic

            while agqendorse:app_no = agqgeneral:app_no
                begin
                if agqendorse:code = "BU2510" then
                    begin
                    if agqendorse:no_units <= sfsoptend:limit[7] then
                        l_rate = ((100 - sfsoptend:premium_1[7]) divide 100)
                    else
                    if agqendorse:no_units > sfsoptend:limit[7] and
                       agqendorse:no_units <= sfsoptend:limit[8] then
                        l_rate = ((100 - sfsoptend:premium_1[8]) divide 100)
                    else
                    if agqendorse:no_units > sfsoptend:limit[8] and
                       agqendorse:no_units <= sfsoptend:limit[9] then
                        l_rate = ((100 - sfsoptend:premium_1[9]) divide 100)
                    else
                    if agqendorse:no_units > sfsoptend:limit[9] and
                       agqendorse:no_units <= sfsoptend:limit[10] then
                        l_rate = ((100 - sfsoptend:premium_1[10]) divide 100)

                    l_bu2510_mp = "N"
                    Switch(L_LIABILITY_CODE)
                      Case 1 : Begin
                               l_end_premium1 = ((agqENDORSE:no_units *
                                                SFSOPTEND:PREMIUM_1[1]) *
                                                l_rate)
                               if sfsoptend:premium_1[2] <> 0 and
                                  l_end_premium1 <= sfsoptend:premium_1[2] then
                                   begin
                                   l_bu2510_mp = "Y"
                                   l_end_premium1 = sfsoptend:premium_1[2]
                                   end
                               End
                      Case 2 : Begin
                               l_end_premium1 = ((agqENDORSE:no_units *
                                                SFSOPTEND:PREMIUM_1[3]) *
                                                l_rate)
                               if sfsoptend:premium_1[4] <> 0 and
                                  l_end_premium1 <= sfsoptend:premium_1[4] then
                                   begin
                                  l_bu2510_mp = "Y"
                                  l_end_premium1 = sfsoptend:premium_1[4]
                                  end
                               End
                      Case 3 : Begin
                               l_end_premium1 = ((agqENDORSE:no_units *
                                                SFSOPTEND:PREMIUM_1[5]) *
                                                l_rate)
                               if sfsoptend:premium_1[6] <> 0 and
                                  l_end_premium1 <= sfsoptend:premium_1[6] then
                                   begin
                                   l_bu2510_mp = "Y"
                                   l_end_premium1 = sfsoptend:premium_1[6]
                                   end
                               End
                      End

                    if l_bu2510_mp = "N" and
                       agqendorse:experience_schedule[1] <> 0 then
                        l_end_premium1 = (l_end_premium1 *
                                         (1 + (agqendorse:experience_schedule[1] * 0.01)))
                    if l_bu2510_mp = "N" and
                       agqendorse:experience_schedule[2] <> 0 then
                        l_end_premium1 = (l_end_premium1 *
                                         (1 + (agqendorse:experience_schedule[2] * 0.01)))
                    if l_bu2510_mp = "N" and
                       agqendorse:experience_schedule[3] <> 0 then
                        l_end_premium1 = (l_end_premium1 *
                                         (1 + (agqendorse:experience_schedule[3] * 0.01)))
                    if l_bu2510_mp = "N" and
                       agqendorse:experience_schedule[4] <> 0 then
                        l_end_premium1 = (l_end_premium1 *
                                         (1 + (agqendorse:experience_schedule[4] * 0.01)))
                    end

                next agqendorse
                end

            l_bu2510_premium = l_end_premium1
            End

        if l_code = "BU0370" then
            begin
            switch(l_form)
              case 1  : l_end_factor = sfsoptend:premium_1[1]
              default : l_end_factor = sfsoptend:premium_1[2]
              end
            l_end_factor_1 = sfsoptend:premium_1[3]
            end

        if l_code one of "LM0198", "BU0196" then
            begin
            Access agqendorse, Set agqendorse:app_no = agqend:app_no,
                                   agqendorse:PREM_NO = agqend:PREM_NO,
                                   agqendorse:BUILD_NO = agqend:BUILD_NO,
                                   agqendorse:CODE = L_CODE, Generic

            Switch(L_LIABILITY_CODE)
              Case 1  : l_end_premium1 = agqendorse:no_units *
                                         sfsoptend:premium_1[1]
              case 2  : l_end_premium1 = agqendorse:no_units *
                                         sfsoptend:premium_1[2]
              default : l_end_premium1 = agqendorse:no_units *
                                         sfsoptend:premium_1[3]
              end
            end

        If L_CODE = "BU0193" Then
            Begin
            access agqbshop, set agqbshop:app_no = agqend:app_no,
                                 agqbshop:Prem_no = agqend:prem_no,
                                 agqbshop:build_no = agqend:build_no, generic

            L_BARBER_PREM_FULL = 0
            L_BARBER_PREM_PART = 0
            L_BEAUTY_PREM_FULL = 0
            L_BEAUTY_PREM_PART = 0
            L_MANICURISTS = 0
            L_BARBER_PREMIUM = 0
            L_BEAUTY_FULL_PREMIUM = 0
            L_BEAUTY_PART_PREMIUM = 0
            L_MANICURISTS_PREMIUM = 0
            Switch(L_LIABILITY_CODE)
              Case 1 : Begin
                       If agqBSHOP:BARBER_FULL_TIME <> 0 Then
                           L_BARBER_PREM_FULL = SFSOPTEND:PREMIUM_1[1]
                       If agqBSHOP:BARBER_FULL_TIME <> 0 Then
                           L_BARBER_PREM_PART = SFSOPTEND:PREMIUM_1[2]
                       If agqBSHOP:BEAUTY_FULL_TIME <> 0 Then
                           L_BEAUTY_PREM_FULL = SFSOPTEND:PREMIUM_1[7]
                       If agqBSHOP:BEAUTY_PART_TIME <> 0 Then
                           L_BEAUTY_PREM_PART = SFSOPTEND:PREMIUM_1[8]
                       End
              Case 2 : Begin
                       If agqBSHOP:BARBER_FULL_TIME <> 0 Then
                           L_BARBER_PREM_FULL = SFSOPTEND:PREMIUM_1[3]
                       If agqBSHOP:BARBER_FULL_TIME <> 0 Then
                           L_BARBER_PREM_PART = SFSOPTEND:PREMIUM_1[4]
                       If agqBSHOP:BEAUTY_FULL_TIME <> 0 Then
                           L_BEAUTY_PREM_FULL = SFSOPTEND:PREMIUM_1[9]
                       If agqBSHOP:BEAUTY_PART_TIME <> 0 Then
                           L_BEAUTY_PREM_PART = SFSOPTEND:PREMIUM_1[10]
                       End
              Case 3 : Begin
                       If agqBSHOP:BARBER_FULL_TIME <> 0 Then
                           L_BARBER_PREM_FULL = SFSOPTEND:PREMIUM_1[5]
                       If agqBSHOP:BARBER_FULL_TIME <> 0 Then
                           L_BARBER_PREM_PART = SFSOPTEND:PREMIUM_1[6]
                       If agqBSHOP:BEAUTY_FULL_TIME <> 0 Then
                           L_BEAUTY_PREM_FULL = SFSOPTEND:PREMIUM_1[11]
                       If agqBSHOP:BEAUTY_PART_TIME <> 0 Then
                           L_BEAUTY_PREM_PART = SFSOPTEND:PREMIUM_1[12]
                       End
              End
            End

        End
    Next SFSOPTEND
    End

    if l_code one of "BU5015", "BU5016" and
       sfscompany:boiler_rating = 1 then
        begin
        access bpsrate, set bpsrate:company_id       = agqgeneral:company_id,
                            bpsrate:state            = agqgeneral:state,
                            bpsrate:line_of_business = agqgeneral:line_of_business, generic

        access agqgeneral_alias, set agqgeneral_alias:app_no   = agqgeneral:app_no,
                                     agqgeneral_alias:prem_no  = agqgeneral:prem_no,
                                     agqgeneral_alias:build_no = agqgeneral:build_no, generic

        l_weather_factor = 1.00
        while bpsrate:company_id       = agqgeneral:company_id and
              bpsrate:state            = agqgeneral:state and
              bpsrate:line_of_business = agqgeneral:line_of_business
            begin
            if agqgeneral:eff_date >= bpsrate:eff_date then
                begin
                if agqgeneral:weather_related = 1 then
                    l_weather_factor = bpsrate:weather_related_factor[1]
                else
                if agqgeneral:weather_related = 2 then
                    l_weather_factor = bpsrate:weather_related_factor[2]
                else
                    l_weather_factor = 1.00
                end

            next bpsrate
            end

        l_update_sfpend_premium = ((agqgeneral_alias:bop_premium *
                                  l_weather_factor) -
                                  agqgeneral_alias:bop_premium)
        end

    if l_code = "BU0142" then
        begin
        Access agqENDORSE, Set agqENDORSE:app_no   = agqGENERAL_alt:app_no,
                               agqENDORSE:PREM_NO  = agqGENERAL_alt:PREM_NO,
                               agqENDORSE:BUILD_NO = agqGENERAL_alt:BUILD_NO,
                               agqENDORSE:CODE     = L_CODE, Generic

        l_per = (((agqendorse:percent[1] -
                l_end_limit) divide
                l_end_limit) +
                1)
        l_update_sfpend_premium = (agqgeneral_alt:building_premium *
                                  (l_end_factor *
                                  l_per))
        end

    if l_code = "BU0231" then
        begin
        l_basic_premium = agqgeneral_alt:building_premium +
                          agqgeneral_alt:property_premium +
                          agqgeneral_alt:property_special
        l_update_sfpend_premium = ((l_basic_premium *
                                  l_end_factor) -
                                  l_basic_premium)
        end

    if l_code one of "BU1526" then
      {
        access bpsemployee,
           set bpsemployee:company_id       = agqgeneral_alt:company_id,
               bpsemployee:state            = l_state,
               bpsemployee:line_of_business = l_line_of_business, GENERIC

        while bpsemployee:company_id       = agqgeneral_alt:company_id and
              bpsemployee:state            = l_state and
              bpsemployee:line_of_business = l_line_of_business
          {
            If agqgeneral_alt:eff_date >=  bpsemployee:rate_DATE Then
              {
                l_bu1526_eff_date = bpsemployee:rate_date
              }
            next bpsemployee
          }

        access bpsemployee,
           set bpsemployee:company_id       = agqgeneral_alt:company_id,
               bpsemployee:state            = l_state,
               bpsemployee:line_of_business = l_line_of_business,
               bpsemployee:rate_date        = l_bu1526_eff_date

        Access agqendorse,
           Set agqendorse:app_no       = agqend:app_no,
               agqendorse:PREM_NO      = agqend:PREM_NO,
               agqendorse:BUILD_NO     = agqend:BUILD_NO,
               agqendorse:CODE         = L_CODE, Generic

       switch (agqendorse:limit[1])
         case 25000   : l_row = 1
         case 50000   : l_row = 2
         case 100000  : l_row = 3
         case 500000  : l_row = 4
         case 1000000 : l_row = 5
         default : l_row = 1
       end

         switch (agqendorse:deductible[1])
           case 1000 : l_bu1526_factor = bpsemployee:DEDUCTIBLE_FACTOR[1]
           case 2500 : l_bu1526_factor = bpsemployee:DEDUCTIBLE_FACTOR[2]
           case 5000 : l_bu1526_factor = bpsemployee:DEDUCTIBLE_FACTOR[3]
           case 10000 : l_bu1526_factor = bpsemployee:DEDUCTIBLE_FACTOR[4]
           default :  l_bu1526_factor = bpsemployee:DEDUCTIBLE_FACTOR[1]
         end

      if agqendorse:NO_EMPLOYEES <= 25 then
        {
          l_col = 1
        }
      else
        if agqendorse:NO_EMPLOYEES <= 100 and
           agqendorse:no_employees >=  26 then
          {
            l_col = 2
          }
        else  --over 100
          {
            l_col = 3
          }

      --the l_row - 1 is the the limit you will be put in the correct math to
      --get to the correct array
      --the * 3 is becak   sue they are 3 separate band for the range of employees
      --+ l_col means it will add 1, 2, 3 to the result of the mutiplication
      --factor is * BY the correct factor to reduse the pemium

      l_update_sfpend_premium = bpsemployee:charge[((l_row - 1) * 3) + l_col] * l_bu1526_factor

      if l_update_sfpend_premium < bpsemployee:MINIMUM_PREMIUM then
        {
          l_update_sfpend_premium = bpsemployee:MINIMUM_PREMIUM
        }
   }

    if l_code = "BU0380" then
        begin
        access agqendorse, set agqendorse:app_no = agqend:app_no,
                               agqendorse:prem_no = agqend:prem_no,
                               agqendorse:build_no = agqend:build_no,
                               agqendorse:code     = l_code, generic

        l_eq_construction = agqendorse:construction
        access bpsearthquake, set bpsearthquake:company_id = l_company_id,
                                  bpsearthquake:state = l_state,
                                  bpsearthquake:line_of_business = l_line_of_business,
                                  bpsearthquake:construction = l_eq_construction, generic

        while bpsearthquake:company_id = l_company_id and
              bpsearthquake:state = l_state and
              bpsearthquake:line_of_business = l_line_of_business and
              bpsearthquake:construction = l_eq_construction
                begin
                l_eq_building_rate = bpsearthquake:building_rate
                switch(agqendorse:rate_class)
                  case 1  : l_eq_contents_rate = bpsearthquake:contents_rate[1]
                  case 2  : l_eq_contents_rate = bpsearthquake:contents_rate[2]
                  default : l_eq_contents_rate = bpsearthquake:contents_rate[3]
                  end
                l_deductible_rate = bpsearthquake:deductible_rate
                l_deductible_per = bpsearthquake:deductible_per
                l_per = bpsearthquake:per
                l_eq_deductible = bpsearthquake:deductible

                next bpsearthquake
                end

        if agqendorse:deductible[1] > l_eq_deductible then
            begin
            l_eq_deduct_rate   = ((100 - ((((agqendorse:deductible[1] -
                                 l_eq_deductible) divide l_deductible_per) *
                                 l_deductible_rate) * 100)) divide 100)
            l_eq_building_rate = l_eq_building_rate * l_eq_deduct_rate
            l_eq_contents_rate = l_eq_contents_rate * l_eq_deduct_rate
            end

        if agqgeneral_alt:building_limit <> 0 then
            l_eq_building_premium = (((agqgeneral_alt:building_limit +
                                    agqgeneral_alt:other_structures) divide l_per) *
                                    l_eq_building_rate)
        if agqgeneral_alt:property_limit <> 0 then
            l_eq_contents_premium = ((agqgeneral_alt:property_limit divide l_per) *
                                    l_eq_contents_rate)

        change agqendorse
            begin
            agqendorse:eq_deduct_rate = l_eq_deduct_rate
            agqendorse:eq_premium[1]  = l_eq_building_premium
            agqendorse:eq_premium[2]  = l_eq_contents_premium
            agqendorse:premium        = l_eq_building_premium +
                                        l_eq_contents_premium
            end

        access agqendorse, set agqendorse:app_no = agqend:app_no,
                               agqendorse:prem_no = agqend:prem_no,
                               agqendorse:build_no = agqend:build_no,
                               agqendorse:code = l_code, generic

        if agqendorse:premium <> 0 then
            begin
            l_update_sfpend_premium = agqendorse:premium
            end
        else
            begin
            l_update_sfpend_premium = 0
            while agqendorse:app_no = g_app_no and
                  agqendorse:prem_no = agqend:prem_no and
                  agqendorse:build_no = agqend:build_no and
                  agqendorse:code = l_code
                    begin
                    if agqendorse:code = l_code then
                        begin
                        l_update_sfpend_premium = agqendorse:eq_premium[1] +
                                                  agqendorse:eq_premium[2] +
                                                  l_update_sfpend_premium
                        end

                    next agqendorse
                    end
            end

        end

    If L_CODE = "MIM013" Or
       L_CODE = "MIM110" Or
       L_CODE = "MIM112" Or
       L_CODE = "MIM115" Or
       L_CODE = "MIM113" Or
       L_CODE = "MIM114" Or
       L_CODE = "MIM116" Then
        Begin
        Access agqendorse, Set agqendorse:app_no = agqend:app_no,
                               agqendorse:PREM_NO = agqend:PREM_NO,
                               agqendorse:BUILD_NO = agqend:BUILD_NO,
                               agqendorse:CODE = L_CODE, Generic

        l_update_sfpend_premium = ((agqendorse:LIMIT[1] Divide 100) *
                                  agqendorse:RATE[1])
        End

    If L_CODE = "MIM103" Then
        Begin
        l_update_sfpend_premium = 0
        Access agqendorse, Set agqendorse:app_no = agqend:app_no,
                               agqendorse:PREM_NO = agqend:PREM_NO,
                               agqendorse:BUILD_NO = agqend:BUILD_NO,
                               agqendorse:CODE = L_CODE, Generic

        l_update_sfpend_premium = (((agqendorse:OCCURRENCE +
                                  agqendorse:AGGREGATE) Divide 100) *
                                  agqendorse:RATE[1])
        End

    If L_CODE = "MIM011" Then
        Begin
        l_update_sfpend_premium = 0
        Access agqendorse, Set agqendorse:app_no = agqend:app_no,
                               agqendorse:PREM_NO = agqend:PREM_NO,
                               agqendorse:BUILD_NO = agqend:BUILD_NO,
                               agqendorse:CODE = L_CODE, Generic

        If agqendorse:LIMIT[1] <> 0 Then
            l_update_sfpend_premium = ((agqendorse:LIMIT[1] Divide 100) *
                                      agqendorse:RATE[1])
        If agqendorse:LIMIT[2] <> 0 Then
            l_update_sfpend_premium = (l_update_sfpend_premium +
                                      ((agqendorse:LIMIT[2] Divide 100) *
                                      agqendorse:RATE[2]))
        If agqendorse:LIMIT[3] <> 0 Then
            l_update_sfpend_premium = (l_update_sfpend_premium +
                                      ((agqendorse:LIMIT[3] Divide 100) *
                                      agqendorse:RATE[3]))
        If agqendorse:LIMIT[4] <> 0 Then
            l_update_sfpend_premium = (l_update_sfpend_premium +
                                      ((agqendorse:LIMIT[4] Divide 100) *
                                      agqendorse:RATE[4]))
        If agqendorse:LIMIT[5] <> 0 Then
            l_update_sfpend_premium = (l_update_sfpend_premium +
                                      ((agqendorse:LIMIT[5] Divide 100) *
                                      agqendorse:RATE[5]))
        If agqendorse:LIMIT[6] <> 0 Then
            l_update_sfpend_premium = (l_update_sfpend_premium +
                                      ((agqendorse:LIMIT[6] Divide 100) *
                                      agqendorse:RATE[6]))
        If agqendorse:LIMIT[7] <> 0 Then
            l_update_sfpend_premium = (l_update_sfpend_premium +
                                      ((agqendorse:LIMIT[7] Divide 100) *
                                      agqendorse:RATE[7]))
        If agqendorse:LIMIT[8] <> 0 Then
            l_update_sfpend_premium = (l_update_sfpend_premium +
                                      ((agqendorse:LIMIT[8] Divide 100) *
                                      agqendorse:RATE[8]))
        End

    If L_CODE = "BU0265" Then
        Begin
        Access agqendorse, Set agqendorse:app_no = agqend:app_no,
                               agqendorse:PREM_NO = agqend:PREM_NO,
                               agqendorse:BUILD_NO = agqend:BUILD_NO,
                               agqendorse:CODE = L_CODE, Generic

        L_EFF_DATE_1 = agqendorse:EFF_DATE
        L_EXP_DATE = agqendorse:EXP_DATE
        L_DAYS = L_EXP_DATE - L_EFF_DATE_1
        l_update_sfpend_premium = ((agqgeneral_alt:BUILDING_PREMIUM *
                                  (L_DAYS Divide 365) *
                                  L_END_FACTOR))
        End

    If L_CODE one of "BU0194", "BU0192", "BU0191", "LM0198", "BU2510", "BU2582" Then
        Begin
        l_update_sfpend_premium = L_END_PREMIUM1
        End

    If L_CODE = "BU0601" Or
       L_CODE = "BU0602" Or
       L_CODE = "BU0603" Or
       L_CODE = "BU0604" Or
       L_CODE = "BU0605" Or
       L_CODE = "BU0606" Or
       L_CODE = "BU0607" Or
       L_CODE = "BU0608" Or
       L_CODE = "BU0609" Or
       l_code = "BU0610" or
       L_CODE = "BU0616" or
       l_code = "BU0309" or
       l_code = "BU0302" then
        begin
        access agqaddin, set agqaddin:app_no   = g_app_no,
                             agqaddin:prem_no  = agqend:prem_no,
                             agqaddin:build_no = agqend:build_no, generic

        l_additional_total = 0
        while agqaddin:app_no   = g_app_no and
              agqaddin:prem_no  = agqend:prem_no and
              agqaddin:build_no = agqend:build_no
            begin
            if agqaddin:code = l_code then
                begin
                l_additional_total = l_end_premium1 +
                                     l_additional_total
                end

            next agqaddin
            end

        if l_code = "BU0602" and
           agqgeneral:company_id = "LEBINS" then
            l_additional_total = l_end_premium1

        l_update_sfpend_premium = l_additional_total
        end

    if l_code = "MCP140" or
       l_code = "MCP141" or
       l_code = "BU5008" or
       l_code = "BU0282" or
       l_code = "BU0184" or
       l_code = "MCL426" Then
        Begin
        l_update_sfpend_premium = L_END_PREMIUM1
        End

    If L_CODE = "BU0315" then
        begin
        access agqendorse, set agqendorse:app_no = g_app_no, generic

        l_additional_total = 0
        while agqendorse:app_no = g_app_no
            begin
            if agqendorse:code = l_code then
                begin
                l_additional_total = l_end_premium1 +
                                     l_additional_total
                end

            next agqendorse
            end

        l_update_sfpend_premium = l_additional_total
        end

    If L_CODE = "MCL189" Then
        Begin
        Access agqendorse, Set agqendorse:app_no = agqend:app_no,
                               agqendorse:PREM_NO = agqend:PREM_NO,
                               agqendorse:BUILD_NO = agqend:BUILD_NO,
                               agqendorse:CODE = L_CODE, Generic

        If agqendorse:BUYBACK_OPTION = "Y" Then
            Begin
            L_BUYBACK = "Y"
            End
        End

    If L_CODE one of "BU0291", "MCP105" Then
        Begin
        Access agqendorse, Set agqendorse:app_no = agqend:app_no,
                               agqendorse:PREM_NO = agqend:PREM_NO,
                               agqendorse:BUILD_NO = agqend:BUILD_NO,
                               agqendorse:CODE = L_CODE, Generic

        if sfscompany:boiler_rating = 1 then
            l_update_sfpend_premium = ((agqendorse:LIMIT[1] Divide L_END_LIMIT)
                                       * L_END_PREMIUM1)
        else
            l_update_sfpend_premium = (((agqendorse:LIMIT[1] - agsdefault_bop:ar_limit)
                                       Divide L_END_LIMIT)
                                       * L_END_PREMIUM1)
        End

/*    If L_CODE = "WH110" Then
        l_update_sfpend_premium = L_END_PREMIUM1

    If L_CODE = "WH111" Or
       L_CODE = "WH112" Or
       L_CODE = "WH113" Or
       L_CODE = "WH114" Or
       L_CODE = "WH115" Or
       L_CODE = "WH116" Or
       L_CODE = "WH117" Then
        Begin
        Access agqendorse, Set agqendorse:app_no = agqend:app_no,
                               agqendorse:PREM_NO = agqend:PREM_NO,
                               agqendorse:BUILD_NO = agqend:BUILD_NO,
                               agqendorse:CODE = L_CODE, Generic

        l_update_sfpend_premium = agqendorse:MISC_PREMIUM
        End*/

    if l_code = "IM7006" then
        Begin
        Access agqendorse, Set agqendorse:app_no = agqend:app_no,
                               agqendorse:PREM_NO = agqend:PREM_NO,
                               agqendorse:BUILD_NO = agqend:BUILD_NO,
                               agqendorse:CODE = L_CODE, Generic

        l_update_sfpend_premium = 0
        while agqendorse:app_no = agqend:app_no and
              agqendorse:prem_no = agqend:prem_no and
              agqendorse:build_no = agqend:build_no and
              agqendorse:code = l_code
                begin
                l_update_sfpend_premium = agqendorse:MISC_PREMIUM +
                                          l_update_sfpend_premium
                next agqendorse
                end
        End

    if l_code one of "BU1510", "MGK011" then
        begin
        l_commandline_1 = str(agqend:app_no,11) +
                          str(agqend:prem_no,4) +
                          str(agqend:build_no,4)
        proc("cli csbatch agqup11j %s",l_commandline_1)/noconsole
        access agqend_alias, set agqend_alias:app_no = g_app_no, generic

        while agqend_alias:app_no = g_app_no
            begin
            if agqend_alias:code one of "BU1510", "MGK011" then
                l_update_sfpend_premium = agqend_alias:premium

            next agqend_alias
            end
        end

    If L_CODE = "QP1" Then
        Begin
        L_PRINTERS_ERROR = L_END_PREMIUM1
        End

    If L_CODE one of "BU0370", "SIR003" Then
        Begin
        access agqcomputer, set agqcomputer:app_no = agqend:app_no,
                                agqcomputer:prem_no = agqend:prem_no,
                                agqcomputer:build_no = agqend:build_no, generic

        l_form = agqmaster:form
        access bpsdefault1, set bpsdefault1:company_id = agqgeneral:company_id,
                                bpsdefault1:line_of_business = agqgeneral:line_of_business,
                                bpsdefault1:form = l_form, generic

        -- kept the same local variable name as with peak season rating
        -- did not want to creat another local variable

        If SFSLINE_ALIAS:OPTION = "P" and
           sfscompany:boiler_rating <> 4 Then
            Begin
            If SFSCOMPANY:COMPUTER_RATING = 1 Then
                Begin
                L_PEAK_FACTOR = L_PROPERTY_RATE * L_PROPERTY_ADJUSTMENTS
                L_UPDATE_SFPEND_PREMIUM = (L_PEAK_FACTOR * ((agqCOMPUTER:LIMIT[1] +
                                          agqCOMPUTER:LIMIT[2] + agqcomputer:limit[3]) Divide L_END_LIMIT))
                End
            If SFSCOMPANY:COMPUTER_RATING = 2 Then
                Begin
                if agqgeneral:special_enhancement = 1 then
                    begin
                    l_update_sfpend_premium = 0
                    l_computer_limit_1 = agqgeneral:property_limit * (l_computer_hardware_percent divide 100)
                    if l_computer_hardware > l_computer_limit_1 then
                        l_Computer_limit = l_computer_hardware
                    else
                        l_computer_limit = l_computer_limit_1
                    l_update_sfpend_premium = (((agqcomputer:limit[1] -
                                              l_computer_limit) divide
                                              l_end_limit) *
                                              l_end_premium1)
                    l_computer_limit_1 = agqgeneral:property_limit * (l_computer_software_percent divide 100)
                    if l_computer_software > l_computer_limit_1 then
                        l_computer_limit = l_computer_software
                    else
                        l_computer_limit = l_computer_limit_1
                    L_UPDATE_SFPEND_PREMIUM = (l_update_sfpend_premium +
                                              (((agqCOMPUTER:LIMIT[3] -
                                              l_computer_limit) Divide
                                              L_END_LIMIT) *
                                              L_END_PREMIUM1))
                    l_computer_limit_1 = agqgeneral:property_limit * (l_extra_expense_percent divide 100)
                    if l_extra_expense > l_computer_limit_1 then
                        l_computer_limit = l_extra_expense
                    else
                        l_computer_limit = l_computer_limit_1
                    L_UPDATE_SFPEND_PREMIUM = (l_update_sfpend_premium +
                                              (((agqCOMPUTER:LIMIT[2] -
                                              l_computer_limit) Divide
                                              L_END_LIMIT) *
                                              L_END_PREMIUM1))
                    end
                else
                    begin
                    l_update_sfpend_premium = 0
                    l_computer_limit_1 = agqgeneral:property_limit * (bpsdefault1:computer_hardware_percent divide 100)
                    if bpsdefault1:computer_hardware_limit > l_computer_limit_1 then
                        l_Computer_limit = bpsdefault1:computer_hardware_limit
                    else
                        l_computer_limit = l_computer_limit_1
                    l_update_sfpend_premium = (((agqcomputer:limit[1] -
                                              l_computer_limit) divide
                                              l_end_limit) *
                                              l_end_premium1)
                    l_computer_limit_1 = agqgeneral:property_limit * (bpsdefault1:computer_software_percent divide 100)
                    if bpsdefault1:computer_software_limit > l_computer_limit_1 then
                        l_computer_limit = bpsdefault1:computer_software_limit
                    else
                        l_computer_limit = l_computer_limit_1
                    L_UPDATE_SFPEND_PREMIUM = (l_update_sfpend_premium +
                                              (((agqCOMPUTER:LIMIT[3] -
                                              l_computer_limit) Divide
                                              L_END_LIMIT) *
                                              L_END_PREMIUM1))
                    l_computer_limit_1 = agqgeneral:property_limit * (bpsdefault1:extra_expense_percent divide 100)
                    if bpsdefault1:extra_expense_limit > l_computer_limit_1 then
                        l_computer_limit = bpsdefault1:extra_expense_limit
                    else
                        l_computer_limit = l_computer_limit_1
                    L_UPDATE_SFPEND_PREMIUM = (l_update_sfpend_premium +
                                              (((agqCOMPUTER:LIMIT[2] -
                                              l_computer_limit) Divide
                                              L_END_LIMIT) *
                                              L_END_PREMIUM1))
                    end
                L_EDP_LIMIT = agqCOMPUTER:LIMIT[1] + agqCOMPUTER:LIMIT[2]
                End
            End
        Else
        If SFSLINE_ALIAS:OPTION = "P" and
           sfscompany:boiler_rating = 4 Then
            Begin
            L_COMPUTER_LIMIT = agsdefault_bop:COMPUTER_LIMIT

            If agqCOMPUTER:LIMIT[1] > L_COMPUTER_LIMIT Then
                Begin
                If SFSCOMPANY:COMPUTER_RATING = 2 Then
                    Begin
                    l_limit = agqcomputer:limit[1] - l_computer_limit
                    L_UPDATE_SFPEND_PREMIUM = ((l_limit Divide
                                              L_END_LIMIT) * L_END_PREMIUM1)
                    End
                L_EDP_LIMIT = agqCOMPUTER:LIMIT[1] + agqCOMPUTER:LIMIT[2]
                End
            End
        else
            begin
            If SFSCOMPANY:COMPUTER_RATING = 1 Then -- salem
                Begin
                if l_property_rate = 0 then
                    do calc_property_prem
                L_PEAK_FACTOR = L_PROPERTY_RATE * L_PROPERTY_ADJUSTMENTS
                L_UPDATE_SFPEND_PREMIUM = (L_PEAK_FACTOR * ((agqCOMPUTER:LIMIT[1] +
                                          agqcomputer:limit[3] + agqCOMPUTER:LIMIT[2])
                                          Divide L_END_LIMIT))
                End
            If SFSCOMPANY:COMPUTER_RATING = 2 and
               sfscompany:boiler_rating <> 4 Then
                Begin
                if (((agqcomputer:limit[1] + agqcomputer:limit[3]) <> l_computer_limit_1 and
                   agqgeneral:special_enhancement = 1) or
                   agqgeneral:special_enhancement = 0) then
                    begin
                    l_update_sfpend_premium = 0
                    if agqgeneral:special_enhancement = 1 then
                        begin
                        l_computer_limit_1 = agqgeneral:property_limit * (l_computer_hardware_percent divide 100)
                        if l_computer_hardware > l_computer_limit_1 then
                            l_Computer_limit = l_computer_hardware
                        else
                            l_computer_limit = l_computer_limit_1
                        l_update_sfpend_premium = (((agqcomputer:limit[1] -
                                                  l_computer_limit) divide
                                                  l_end_limit) *
                                                  l_end_premium1)
                        l_computer_limit_1 = agqgeneral:property_limit * (l_computer_software_percent divide 100)
                        if l_computer_software > l_computer_limit_1 then
                            l_computer_limit = l_computer_software
                        else
                            l_computer_limit = l_computer_limit_1
                        L_UPDATE_SFPEND_PREMIUM = (l_update_sfpend_premium +
                                                  (((agqCOMPUTER:LIMIT[3] -
                                                  l_computer_limit) Divide
                                                  L_END_LIMIT) *
                                                  L_END_PREMIUM1))

                        L_UPDATE_SFPEND_PREMIUM = (l_update_sfpend_premium +
                                                  (((agqCOMPUTER:LIMIT[2] -
                                                  l_computer_limit_2) Divide
                                                  L_END_LIMIT) *
                                                  L_END_PREMIUM1))
                        end
                    else
                        L_UPDATE_SFPEND_PREMIUM = (((agqCOMPUTER:LIMIT[1] +
                                                  agqcomputer:limit[2] +
                                                  agqCOMPUTER:LIMIT[3]) Divide
                                                  L_END_LIMIT) * L_END_PREMIUM1)
                    end
                End
            If SFSCOMPANY:COMPUTER_RATING = 2 and
               sfscompany:boiler_rating = 4 Then
                Begin
                L_UPDATE_SFPEND_PREMIUM = ((agqCOMPUTER:LIMIT[1] Divide
                                          L_END_LIMIT) * L_END_PREMIUM1)
                End
            if sfscompany:computer_rating = 3 then
                begin
                l_peak_factor = l_property_rate_1 + l_end_factor
                L_UPDATE_SFPEND_PREMIUM = (L_PEAK_FACTOR *
                                          (agqCOMPUTER:LIMIT[1]
                                          Divide L_END_LIMIT))
                if agqcomputer:limit[2] <> 0 then
                    begin
                    if l_building_Rate = 0 then
                        do calc_building_prem
                    l_peak_factor = l_building_rate * l_end_factor_1
                    l_update_sfpend_premium = (l_update_sfpend_premium +
                                              (l_peak_factor *
                                              (agqcomputer:limit[2]
                                              divide l_end_limit)))
                    end
                End

            L_EDP_LIMIT = agqCOMPUTER:LIMIT[1] + agqCOMPUTER:LIMIT[2]
            End
        End

    If L_CODE one of "BU0197", "BU2597" Then
        Begin
        l_update_sfpend_premium = L_END_PREMIUM1
        End

    If L_CODE = "BU0375" Then
        Begin
        Access agqglass, Set agqglass:app_no = agqend:app_no,
                               agqglass:PREM_NO = agqend:PREM_NO,
                               agqglass:BUILD_NO = agqend:BUILD_NO, generic

        If SFSLINE_ALIAS:OPTION = "P" and
           sfscompany:boiler_rating <> 4 Then
            Begin
            if agqgeneral:special_enhancement = 1 then
                begin
                l_indoor_glass_limit = agqgeneral:property_limit * (l_indoor_glass_percent divide 100)
                if l_special_glass_limit_1 > l_indoor_glass_limit then
                    l_indoor_glass_limit = l_special_glass_limit_1
                end
            else
                begin
                L_INDOOR_GLASS_LIMIT = (agqgeneral_alt:PROPERTY_LIMIT *
                                       (agsdefault_bop:INDOOR_GLASS_PERCENT Divide 100))
                If L_INDOOR_GLASS_LIMIT < agsdefault_bop:INDOOR_GLASS_LIMIT Then
                    L_INDOOR_GLASS_LIMIT = agsdefault_bop:INDOOR_GLASS_LIMIT
                end

            If agqGLASS:LIMIT <> L_INDOOR_GLASS_LIMIT  Then
                l_update_sfpend_premium = (((agqGLASS:LIMIT - l_indoor_glass_limit)
                                          Divide L_END_LIMIT) *
                                          L_END_PREMIUM1)
            End
        Else
            Begin
            l_update_sfpend_premium = ((agqGLASS:LIMIT Divide L_END_LIMIT) *
                                      L_END_PREMIUM1)
            End
        End

    If L_CODE = "BU0521" Then
        Begin
        l_update_sfpend_premium = ((agqgeneral_alt:PROPERTY_SPECIAL *
                                  L_END_FACTOR) * -1)
        End

    If L_CODE = "MCM828" Then
        Begin
        l_update_sfpend_premium = 0
        Access agqUMUIM, Set agqUMUIM:app_no = agqend:app_no,
                             agqUMUIM:PREM_NO = agqend:PREM_NO,
                             agqUMUIM:BUILD_NO = agqend:BUILD_NO, Generic

        Repeat Begin
            Exit If agqUMUIM:app_no <> agqend:app_no Or
                    agqUMUIM:PREM_NO <> agqend:PREM_NO Or
                    agqUMUIM:BUILD_NO <> agqend:BUILD_NO

            l_company_id = agqgeneral_alt:company_id
            Access BPSUMUIM, Set BPSUMUIM:COMPANY_ID = l_COMPANY_ID,
                                 BPSUMUIM:STATE = L_STATE,
                                 BPSUMUIM:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS,
                                 BPSUMUIM:LIMIT = agqUMUIM:LIMIT, Generic

        If BPSUMUIM:CHARGE <> L_END_PREMIUM1 Then
            Begin
            If l_state = 29 Then
                Begin
                Change agqUMUIM
                    Begin
                    agqUMUIM:TOTAL = BPSUMUIM:CHARGE_1
                    End
                l_update_sfpend_premium = l_update_sfpend_premium +
                                          BPSUMUIM:CHARGE_1

                End
            Else
                begin
                Change agqUMUIM
                    Begin
                    agqUMUIM:TOTAL = BPSUMUIM:CHARGE
                    End
                l_update_sfpend_premium = l_update_sfpend_premium +
                                          BPSUMUIM:CHARGE
                end
            End
        else
            begin
            l_update_sfpend_premium = l_end_premium1
            end

        Next agqUMUIM
        End

        End

    If L_CODE = "BU0195" Then
        Begin
        l_update_sfpend_premium = L_END_PREMIUM1
        End

    If L_CODE = "BU0196" Then
        Begin
        Access agqendorse, Set agqendorse:app_no = agqend:app_no,
                               agqendorse:PREM_NO = agqend:PREM_NO,
                               agqendorse:BUILD_NO = agqend:BUILD_NO,
                               agqendorse:CODE = L_CODE, Generic

        if agqendorse:misc_premium <> 0 then
            l_update_sfpend_premium = agqendorse:MISC_PREMIUM
        else
            l_update_sfpend_premium = l_end_premium1
        End

    If L_CODE one of "BU0283", "FBU0403", "CSB0403" Then
        l_update_sfpend_premium = L_END_PREMIUM1

    If L_CODE = "MCL328" Then
        Begin
        Access agqendorse, Set agqendorse:app_no = agqend:app_no,
                               agqendorse:PREM_NO = agqend:PREM_NO,
                               agqendorse:BUILD_NO = agqend:BUILD_NO,
                               agqendorse:CODE = L_CODE, Generic

        l_update_sfpend_premium = agqendorse:MISC_PREMIUM
        End

    if l_code one of "MIM012", "MCL602", "BU0527" then
        begin
        Access agqendorse, Set agqendorse:app_no = agqend:app_no,
                               agqendorse:PREM_NO = agqend:PREM_NO,
                               agqendorse:BUILD_NO = agqend:BUILD_NO,
                               agqendorse:CODE = L_CODE, Generic

        l_update_sfpend_premium = 0
        while agqendorse:app_no = agqend:app_no and
              agqendorse:prem_no = agqend:prem_no and
              agqendorse:build_no = agqend:build_no and
              agqendorse:code = l_code
                begin
                l_update_sfpend_premium = agqendorse:premium +
                                          l_update_sfpend_premium

                next agqendorse
                end
        end

    If L_CODE = "BU0120" Then
        begin
        Access agqendorse, Set agqendorse:app_no = agqend:app_no,
                               agqendorse:PREM_NO = agqend:PREM_NO,
                               agqendorse:BUILD_NO = agqend:BUILD_NO,
                               agqendorse:CODE = L_CODE, Generic

        if agqendorse:premium <> 0 then
            l_update_sfpend_premium = agqendorse:premium
        else
            l_update_sfpend_premium = L_END_PREMIUM1
        end

    If L_CODE = "MCL434" Then
        Begin
        Access agqprint, Set agqprint:app_no = agqend:app_no,
                               agqprint:PREM_NO = agqend:PREM_NO,
                               agqprint:BUILD_NO = agqend:BUILD_NO, generic

        l_update_sfpend_premium = ((agqPRINT:SALES Divide L_END_LIMIT) *
                                   L_END_PREMIUM1)
        If l_update_sfpend_premium < L_END_MINIMUM Then
            l_update_sfpend_premium = L_END_MINIMUM
        If agqPRINT:PART_II_PREMIUM <> 0 Then
            l_update_sfpend_premium = l_update_sfpend_premium + agqPRINT:PART_II_PREMIUM
        End

    If L_CODE = "BU0281" Then
        Begin
        L_UPDATE_SFPEND_PREMIUM = 0
        Access agqENDORSE, Set agqENDORSE:app_no = agqGENERAL:app_no,
                               agqENDORSE:PREM_NO = agqGENERAL:PREM_NO,
                               agqENDORSE:BUILD_NO = agqGENERAL:BUILD_NO,
                               agqENDORSE:CODE = L_CODE, Generic

        Access agqGENERAL_ALIAS, Set agqGENERAL_ALIAS:app_no = agqGENERAL:app_no,
                                     agqGENERAL_ALIAS:PREM_NO = agqGENERAL:PREM_NO,
                                     agqGENERAL_ALIAS:BUILD_NO = agqGENERAL:BUILD_NO, Generic

        L_EFF_DATE_1 = agqENDORSE:EFF_DATE
        L_EXP_DATE = agqENDORSE:EXP_DATE
        L_DAYS = ((L_EFF_DATE_1 - L_EXP_DATE) * -1)
        L_PEAK_FACTOR = L_PROPERTY_RATE * L_PROPERTY_ADJUSTMENTS
        L_PEAK_BASIC_PLUS_1 = (L_PEAK_FACTOR * (L_DAYS Divide 365) *
                              (agqENDORSE:LIMIT[1] Divide 1000))
        If L_FORM = 3 Then
            Begin
            L_ADJUSTMENT = ((agqGENERAL_ALIAS:PROPERTY_SPECIAL Divide
                           (agqGENERAL_ALIAS:PROPERTY_LIMIT
                           Divide 1000)))
            L_PEAK_EXPANDED_1 = (L_ADJUSTMENT *
                                (L_DAYS Divide 365) * (agqENDORSE:LIMIT[1]
                                Divide 1000))
            End
        L_PEAK_PREMIUM_1 = L_PEAK_BASIC_PLUS_1 + L_PEAK_EXPANDED_1

        If agqENDORSE:EFF_DATE_1 <> 0 Then
            Begin
            L_EFF_DATE_1 = agqENDORSE:EFF_DATE_1
            L_EXP_DATE = agqENDORSE:EXP_DATE_1
            L_DAYS = ((L_EFF_DATE_1 - L_EXP_DATE) * -1)
            L_PEAK_FACTOR = L_PROPERTY_RATE * L_PROPERTY_ADJUSTMENTS
            L_PEAK_BASIC_PLUS_2 = (L_PEAK_FACTOR * (L_DAYS Divide 365) *
                                  (agqENDORSE:LIMIT[1] Divide 1000))
            If L_FORM = 3 Then
                Begin
                L_ADJUSTMENT = ((agqGENERAL_ALIAS:PROPERTY_SPECIAL Divide
                               (agqGENERAL_ALIAS:PROPERTY_LIMIT
                               Divide 1000)))
                L_PEAK_EXPANDED_2 = (L_ADJUSTMENT *
                                    (L_DAYS Divide 365) * (agqENDORSE:LIMIT[1]
                                    Divide 1000))
                End
            End
        L_PEAK_PREMIUM_2 = L_PEAK_BASIC_PLUS_2 + L_PEAK_EXPANDED_2

        If agqENDORSE:EFF_DATE_2 <> 0 Then
            Begin
            L_EFF_DATE_1 = agqENDORSE:EFF_DATE_2
            L_EXP_DATE = agqENDORSE:EXP_DATE_2
            L_DAYS = ((L_EFF_DATE_1 - L_EXP_DATE) * -1)
            L_PEAK_FACTOR = L_PROPERTY_RATE * L_PROPERTY_ADJUSTMENTS
            L_PEAK_BASIC_PLUS_3 = (L_PEAK_FACTOR * (L_DAYS Divide 365) *
                                  (agqENDORSE:LIMIT[1] Divide 1000))
            If L_FORM = 3 Then
                Begin
                L_ADJUSTMENT = ((agqGENERAL_ALIAS:PROPERTY_SPECIAL Divide
                               (agqGENERAL_ALIAS:PROPERTY_LIMIT
                               Divide 1000)))
                L_PEAK_EXPANDED_3 = (L_ADJUSTMENT *
                                    (L_DAYS Divide 365) * (agqENDORSE:LIMIT[1]
                                    Divide 1000))
                End
            End
        L_PEAK_PREMIUM_3 = L_PEAK_BASIC_PLUS_3 + L_PEAK_EXPANDED_3

        If agqENDORSE:EFF_DATE_3 <> 0 Then
            Begin
            L_EFF_DATE_1 = agqENDORSE:EFF_DATE_3
            L_EXP_DATE = agqENDORSE:EXP_DATE_3
            L_DAYS = ((L_EFF_DATE_1 - L_EXP_DATE) * -1)
            L_PEAK_FACTOR = L_PROPERTY_RATE * L_PROPERTY_ADJUSTMENTS
            L_PEAK_BASIC_PLUS_4 = (L_PEAK_FACTOR * (L_DAYS Divide 365) *
                                  (agqENDORSE:LIMIT[1] Divide 1000))
            If L_FORM = 3 Then
                Begin
                L_ADJUSTMENT = ((agqGENERAL_ALIAS:PROPERTY_SPECIAL Divide
                               (agqGENERAL_ALIAS:PROPERTY_LIMIT
                               Divide 1000)))
                L_PEAK_EXPANDED_4 = (L_ADJUSTMENT *
                                    (L_DAYS Divide 365) * (agqENDORSE:LIMIT[1]
                                    Divide 1000))
                End
            End
        L_PEAK_PREMIUM_4 = L_PEAK_BASIC_PLUS_4 + L_PEAK_EXPANDED_4

        If agqENDORSE:EFF_DATE_4 <> 0 Then
            Begin
            L_EFF_DATE_1 = agqENDORSE:EFF_DATE_4
            L_EXP_DATE = agqENDORSE:EXP_DATE_4
            L_DAYS = ((L_EFF_DATE_1 - L_EXP_DATE) * -1)
            L_PEAK_FACTOR = L_PROPERTY_RATE * L_PROPERTY_ADJUSTMENTS
            L_PEAK_BASIC_PLUS_5 = (L_PEAK_FACTOR * (L_DAYS Divide 365) *
                                  (agqENDORSE:LIMIT[1] Divide 1000))
            If L_FORM = 3 Then
                Begin
                L_ADJUSTMENT = ((agqGENERAL_ALIAS:PROPERTY_SPECIAL Divide
                               (agqGENERAL_ALIAS:PROPERTY_LIMIT
                               Divide 1000)))
                L_PEAK_EXPANDED_5 = (L_ADJUSTMENT *
                                    (L_DAYS Divide 365) * (agqENDORSE:LIMIT[1]
                                    Divide 1000))
                End
            End

        L_PEAK_PREMIUM_5 = L_PEAK_BASIC_PLUS_5 + L_PEAK_EXPANDED_5

        L_UPDATE_SFPEND_PREMIUM = L_PEAK_PREMIUM_1 + L_PEAK_PREMIUM_2 +
                                  l_peak_premium_3 + l_peak_premium_4 +
                                  l_peak_premium_5
        End

    If L_CODE = "BU0193" Then
        Begin
        Access agqbshop, Set agqbshop:app_no = agqend:app_no,
                               agqbshop:PREM_NO = agqend:PREM_NO,
                               agqbshop:BUILD_NO = agqend:BUILD_NO, generic

        Access BPSRATE, Set BPSRATE:COMPANY_ID = agqgeneral_alt:company_id,
                            BPSRATE:STATE = l_state,
                            BPSRATE:LINE_OF_BUSINESS = l_line_of_business, Generic

        Repeat Begin
            Exit If BPSRATE:COMPANY_ID <> agqgeneral_alt:company_id Or
                    BPSRATE:STATE <> l_state Or
                    BPSRATE:LINE_OF_BUSINESS <> l_line_of_business

        If agqgeneral_alt:eff_date >= BPSRATE:EFF_DATE Then
            Begin
            Switch(L_LIABILITY_CODE)
              Case 1 : L_MANICURISTS = BPSRATE:MANICURISTS[1]
              Case 2 : L_MANICURISTS = BPSRATE:MANICURISTS[2]
              Case 3 : L_MANICURISTS = BPSRATE:MANICURISTS[3]
              End
            L_PER = BPSRATE:MANICURISTS_PER
            End

        Next BPSRATE
        End

        If agqBSHOP:BARBER_FULL_TIME > 0 Then
            L_BARBER_PREMIUM = L_BARBER_PREM_FULL

        If agqBSHOP:BARBER_FULL_TIME > 1 Then
            L_BARBER_PREMIUM = (L_BARBER_PREMIUM + ((agqBSHOP:BARBER_FULL_TIME - 1) *
                               L_BARBER_PREM_PART))

        If agqBSHOP:BEAUTY_FULL_TIME > 0 Then
            L_BEAUTY_FULL_PREMIUM = agqBSHOP:BEAUTY_FULL_TIME * L_BEAUTY_PREM_FULL

        If agqBSHOP:BEAUTY_PART_TIME > 0 Then
            L_BEAUTY_PART_PREMIUM = agqBSHOP:BEAUTY_PART_TIME * L_BEAUTY_PREM_PART

        If agqBSHOP:MANICURISTS > 0 Then
            L_MANICURISTS_PREMIUM = agqBSHOP:MANICURISTS * L_MANICURISTS

        l_update_sfpend_premium = L_BARBER_PREMIUM + L_BEAUTY_FULL_PREMIUM +
                                  L_BEAUTY_PART_PREMIUM + L_MANICURISTS_PREMIUM

        End

End

End
