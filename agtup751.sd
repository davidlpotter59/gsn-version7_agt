%%
Program
        Name = "agtup751" ;
        Type = "file" ;
        Padcharacter = Space ;
        Domain = "sfsdefault" ;

        Global Unsigned Ascii Number g_app_no[11] ,
                                     G_PREM_NO[4] ,
                                     G_BUILD_NO[4] ,
                                     G_STATE[2] ,
                                     g_deductible[5] ;

        global string g_code[7] ;

        Local Signed Ascii Number   L_PREM[8]=0 ,
                                    L_LOC_TOTAL[8]=0 ,
                                    L_END_PREMIUM[8]=0 ,
                                    l_experience_score[4]=0/dec=2,
                                    l_trade_score[4]=0/dec=2,
                                    l_location_score[4]=0/dec=2,
                                    l_defect_claims_score[4]=0/dec=2,
                                    l_maintenance_score[4]=0/dec=2,
                                    l_ownership_score[4]=0/dec=2,
                                    l_storage_location_score[4]=0/dec=2,
                                    l_addl_hazard_score[4]=0/dec=2,
                                    l_geographic_score[4]=0/dec=2,
                                    l_type_premise_score[4]=0/dec=2,
                                    l_type_structure_score[4]=0/dec=2,
                                    l_credit_score_score[4]=0/dec=2,
                                    l_safety_barriers_score[4]=0/dec=2,
                                    l_utilities_score[4]=0/dec=2,
                                    l_cooperation_score[4]=0/dec=2,
                                    l_claim_history_score[4]=0/dec=2,
                                    l_application_score[4]=0/dec=2,
                                    l_reference_score[4]=0/dec=2,
                                    l_supervision_score[4]=0/dec=2,
                                    l_certificate_score[4]=0/dec=2,
                                    l_written_contract_score[4]=0/dec=2,
                                    l_hold_harmless_score[4]=0/dec=2,
                                    l_customer_contract_score[4]=0/dec=2,
                                    l_owners[2]=0,
                                    L_IRPM_TOTAL[6]=0 ,
                                    L_MISC_PREMIUM[8]=0 ,
                                    L_TOTAL[8]=0 ,
                                    L_TOTAL_1[8]=0,
                                    L_TOTAL_2[8]=0,
                                    l_total_3[8]=0,
                                    l_other_totals[8],
                                    L_TOTAL_END[8]=0 ,
                                    L_COMM[8]=0/dec=4 ,
                                    L_PACKAGE[8]=0/dec=4 ,
                                    L_IRPM[8]=0/dec=4 ,
                                    l_exp_rating[8]=0/dec=4,
                                    L_INSTALLMENT[4]=0 ,
                                    L_RATE_FACTOR[1]=0/dec=2 ,
                                    L_CREDIT_FACTOR[8]=0/dec=4 ,
                                    L_FINAL_TOTAL[8]=0 ,
                                    l_final_total1[8]=0,
                                    L_WORKERS_COMP_TOTAL[8]=0,
                                    L_UMBRELLA_TOTAL[8]=0,
                                    L_INLAND_TOTAL[8]=0,
                                    L_LIABILITY_TOTAL[8]=0,
                                    L_MAX_CREDITS[6]=0/decimals=4;

        Local Unsigned Ascii Number L_MINIMUM[4]=0 ,
                                    l_tpd6_terrorism_premium[8]/decimals=0,
                                    L_CSEXEC_NUMBER[12] ,
                                    L_TYPE[1]=0,
                                    l_access_credit_score[4],
                                    l_access_years_business[2],
                                    l_access_trade_exp[2],
                                    l_access_no_claims[2],
                                    l_access_rate_level[2],
                                    l_system_rate[1]=0,
                                    L_INCREASE_COV_C[8]=0/decimals=4,
                                    l_agent_minimum[4]=0,
                                    l_scp100[6],
                                    l_scp103[6],
                                    l_employee_charge[4]=0,
                                    l_total_all_locations[8]=0,
                                    l_employee_deduct_factor[4]=0/dec=3,
                                    l_employee_minimum[4]=0,
                                    l_no_employees[6]=0,
                                    l_employee_limit[8]=0,
                                    l_flat_premium[6]=0,
                                    l_premium_1[6]=0,
                                    l_premium_2[6]=0,
                                    l_premium_3[6]=0,
                                    l_premium_4[6]=0,
                                    l_premium_5[6]=0,
                                    l_premium_6[6]=0,
                                    l_premium_7[6]=0,
                                    l_premium_8[6]=0,
                                    l_loss_limit[8]=0,
                                    L_AR_LIMIT[8]=0,
                                    L_TOTAL_LIABILITY[8]=0,
                                    L_VALUE_LIMIT[8]=0,
                                    I_CSEXEC_NUMBER[12] ,
                                    L_SUB[2]=0,
                                    L_EDP_LIMIT[8]=0,
                                    L_SURCHARGE[6]=0,
                                    L_SURCHARGE_FACTOR[8]=0/dec=6,
                                    L_SURCHARGE_MINIMUM[2]=0,
                                    L_GROUP[2]=0,
                                    L_ZERO_LIMIT[8]=0,
                                    L_TERRITORY_FACTOR[5]=0/decimals=3,
                                    L_LIAB_DEDUCT_CREDIT[6]=0/decimals=4,
                                    l_computer_charge_per[4],
                                    L_INLAND_MARINE_MINIMUM[4]=0,
                                    L_IM_MINIMUM_TOTAL[4]=0 ;

        Local String L_MISC[1]="N" ,
                     L_MINIMUM_APPLIES[1]="N" ,
                     L_CSEXEC_APPLICATION[25]="" ,
                     l_policy_wide_first[1]="Y",
                     l_reinsurance[1]="",
                     l_display_field[1]="",
                     l_first_deductible[1]="Y",
                     L_CORRECT[1]="N",
                     L_PRO_RATE="PRO RATA" ,
                     L_USERNAME[15] ,
                     L_EC[1]="N",
                     L_RECORD_KEY[2],
                     L_VMM[1]="N",
                     L_CODE[7],
                     l_code_1[7],
                     l_janitorial[1]="N",
                     l_add_endorsement[1],
                     L_FIRST[1]="Y",
                     l_first_helper[1]="Y",
                     L_ENDORSEMENT_MPL47[1]="N",
                     L_ENDORSEMENT_MPL49[1]="N",
                     L_INLAND_MARINE_CODE[1]="N",
                     L_INLAND_MARINE_UPDATED[1]="N",
                     L_INSTALLMENT_WORDING[20]="Installment Charge",
                     L_agqEND_MINIMUM_PREMIUM[1]="N",
                     L_ARTICLE[20] ,
                     L_DWELLING[1]="N",
                     L_FORM_EDITION[25],
                     l_waive_first[1]="Y",
                     l_enter,
                     L_DESCRIPTION[75],
                     L_MP[3]="MP" ;

        local date l_surcharge_date[8] ;

        Unsigned Ascii Number L_TERRORISM_PREMIUM[8]/decimals =0;
        Unsigned Ascii Number L_TERROR_PERCENTAGE[5]/decimals=4;
        Unsigned Ascii Number L_TERROR_MINIMUM[3];
        Unsigned Ascii Number L_FOUND[1];
        Unsigned Ascii Number L_SUB_CODE[4];
        Wdate L_TERROR_EFF_DATE;

        Local Mmddyyyy Date L_CORRECT_DATE[8] ;
        Local String L_FIRST_TIME[1]="Y";
        Unsigned Ascii Number L_HOLD_PAYMENT_PLAN[4]=0;
        Signed Ascii Number L_SUB_TOTAL[9]=0/decimals=2;
        Unsigned Ascii Number L_PREM_NO[4];
        Unsigned Ascii Number L_BUILD_NO[4];

        Include "scsrate.var"

screen entry
G_APP_NO   = val(commandline[1,11])
g_deductible = val(commandline[12,16])

do schedule_rating
do location_total
Access agqcontractor, Set agqcontractor:app_no = g_app_no, generic

do policy_totals

update

procedure definition

procedure location_total
begin
Access agqcontractor, Set agqcontractor:app_no   = g_app_no, generic

while agqcontractor:app_no   = g_app_no
    begin
    access agsdefault_scp, set agsdefault_scp:company_id = agqcontractor:company_id,
                               agsdefault_scp:state = agqcontractor:state,
                               agsdefault_scp:agent_no = agqcontractor:agent_no,
                               agsdefault_scp:line_of_business = agqcontractor:line_of_business,
                               agsdefault_scp:form = agqcontractor:form, generic

    l_deductible = g_deductible
    Do MINIMUM_PREMIUMS
    Do LOC_TOTAL

    do update_totals

    next agqcontractor
    end

end

procedure schedule_rating
begin
access agqschedule, set agqschedule:app_no = g_app_no, generic

access agqcontractor, set agqcontractor:app_no = g_app_no, generic

access agqname, set agqname:app_no = g_app_no, generic

if agqschedule:app_no = g_app_no then
    begin
    l_company_id       = agqcontractor:company_id
    l_state            = agqcontractor:state
    l_line_of_business = agqcontractor:line_of_business
    access scsbusexp, set scsbusexp:company_id       = l_company_id,
                          scsbusexp:state            = l_state,
                          scsbusexp:line_of_business = l_line_of_business,
                          scsbusexp:experience       = agqschedule:years_business, approximate

    l_experience_score      = 0
    l_access_years_business = scsbusexp:experience
    while scsbusexp:company_id       = l_company_id and
          scsbusexp:state            = l_state and
          scsbusexp:line_of_business = l_line_of_business and
          scsbusexp:experience       = l_access_years_business
        begin
        if (agqname:eff_date >= scsbusexp:eff_date and
           (agqname:eff_date <= scsbusexp:exp_date or
           scsbusexp:exp_date = 0)) then
            l_experience_score = scsbusexp:score

        next scsbusexp
        end

    access scstradeexp, set scstradeexp:company_id       = l_company_id,
                            scstradeexp:state            = l_state,
                            scstradeexp:line_of_business = l_line_of_business,
                            scstradeexp:experience       = agqschedule:trade_exp, approximate

    l_trade_score      = 0
    l_access_trade_exp = scstradeexp:experience
    while scstradeexp:company_id       = l_company_id and
          scstradeexp:state            = l_state and
          scstradeexp:line_of_business = l_line_of_business and
          scstradeexp:experience       = l_access_trade_exp
        begin
        if (agqname:eff_date >= scstradeexp:eff_date and
           (agqname:eff_date <= scstradeexp:exp_date or
           scstradeexp:exp_date = 0)) then
            l_trade_score = scstradeexp:score

        next scstradeexp
        end

    access scspremises, set scspremises:company_id       = l_company_id,
                            scspremises:state            = l_state,
                            scspremises:line_of_business = l_line_of_business, generic

    l_geographic_score     = 0
    l_type_premise_score   = 0
    l_type_structure_score = 0
    while scspremises:company_id       = l_company_id and
          scspremises:state            = l_state and
          scspremises:line_of_business = l_line_of_business
        begin
        if (agqname:eff_date >= scspremises:eff_date and
           (agqname:eff_date <= scspremises:exp_date or
           scspremises:exp_date = 0)) then
            begin
            l_geographic_score     = scspremises:geo_overall
            l_type_premise_score   = scspremises:premises_overall
            l_type_structure_score = scspremises:structure_overall
            end

        next scspremises
        end

    access scscreditscore, set scscreditscore:company_id       = l_company_id,
                               scscreditscore:state            = l_state,
                               scscreditscore:line_of_business = l_line_of_business,
                               scscreditscore:credit_score     = agqschedule:credit_score, approximate

    l_credit_score_score  = 0
    l_access_credit_score = scscreditscore:credit_score
    while scscreditscore:company_id       = l_company_id and
          scscreditscore:state            = l_state and
          scscreditscore:line_of_business = l_line_of_business and
          scscreditscore:credit_score     = l_access_credit_score
        begin
        if (agqname:eff_date >= scscreditscore:eff_date and
           (agqname:eff_date <= scscreditscore:exp_date or
           scscreditscore:exp_date = 0)) then
            l_credit_score_score = scscreditscore:score

        next scscreditscore
        end

    access scsclaim, set scsclaim:company_id       = l_company_id,
                         scsclaim:state            = l_state,
                         scsclaim:line_of_business = l_line_of_business,
                         scsclaim:no_claims        = agqschedule:number_claims, approximate

    l_claim_history_score = 0
    l_access_no_claims    = scsclaim:no_claims
    while scsclaim:company_id       = l_company_id and
          scsclaim:state            = l_state and
          scsclaim:line_of_business = l_line_of_business and
          scsclaim:no_claims        = l_access_no_claims
        begin
        if (agqname:eff_date >= scsclaim:eff_date and
           (agqname:eff_date <= scsclaim:exp_date or
           scsclaim:exp_date = 0)) then
            l_claim_history_score = scsclaim:score

        next scsclaim
        end

    access scssupervision, set scssupervision:company_id       = l_company_id,
                               scssupervision:state            = l_state,
                               scssupervision:line_of_business = l_line_of_business,
                               scssupervision:level            = agqschedule:rate_level, approximate

    l_supervision_score = 0
    l_access_rate_level = scssupervision:level
    while scssupervision:company_id       = l_company_id and
          scssupervision:state            = l_state and
          scssupervision:line_of_business = l_line_of_business and
          scssupervision:level            = l_access_rate_level
        begin
        if (agqname:eff_date >= scssupervision:eff_date and
           (agqname:eff_date <= scssupervision:exp_date or
           scssupervision:exp_date = 0)) then
            l_supervision_score = scssupervision:score

        next scssupervision
        end




    end

end

procedure policy_totals
begin
Do TOTALS
Do FINAL_TOTAL
access agqmaster, set agqmaster:app_no = g_app_no, generic

If agqCONTRACTOR:REMOVE_TERROR_FORM = 0 and
   agqmaster:exclude_terrorism = 0 Then  --they may want to r
    begin
    L_TERRORISM_PREMIUM = 0
    Do GET_TERRORISM_PREMIUM
    If L_IRPM_TOTAL <> 0 Then
        L_final_total1 = L_IRPM_TOTAL + L_TERRORISM_PREMIUM
    Else
        L_FINAL_TOTAL1 = L_FINAL_TOTAL + L_TERRORISM_PREMIUM

    Access agqMASTER, Set agqMASTER:app_no = G_app_no, Generic

    Change agqMASTER
        Begin
        agqMASTER:TERRORISM_PREMIUM = l_terrorism_premium
        agqmaster:total[16] = l_final_total1
        End
    end
Else
    Begin
    do remove_terrorism_form
    If L_IRPM_TOTAL <> 0 Then
        L_final_total1 = L_IRPM_TOTAL
    Else
        L_FINAL_TOTAL1 = L_FINAL_TOTAL

    if l_irpm_total <> 0 then
        l_tpd6_terrorism_premium = l_irpm_total * l_terror_percentage
    else
        L_tpd6_TERRORISM_PREMIUM = L_FINAL_TOTAL * L_TERROR_PERCENTAGE

    If L_tpd6_TERRORISM_PREMIUM <= L_TERROR_MINIMUM Then
        begin
        L_tpd6_TERRORISM_PREMIUM = L_TERROR_MINIMUM
        end

    Access agqMASTER, Set agqMASTER:app_no = G_app_no, Generic

    Change agqMASTER
        Begin
        agqMASTER:TERRORISM_PREMIUM = 0
        agqmaster:tpd6_terrorism_premium = l_tpd6_terrorism_premium
        agqmaster:total[16] = l_final_total1
        End
    End

do update_policy_totals
end

Procedure GET_TERRORISM_PREMIUM
Begin
Do ACCESS_SFSMSOTERROR
If L_TERROR_PERCENTAGE <> 0 Then
    Begin
    If L_IRPM_TOTAL <> 0 Then
        L_TERRORISM_PREMIUM = L_IRPM_TOTAL * L_TERROR_PERCENTAGE
    Else
        L_TERRORISM_PREMIUM = L_FINAL_TOTAL * L_TERROR_PERCENTAGE
    If L_TERRORISM_PREMIUM <= L_TERROR_MINIMUM Then
        Begin
        L_TERRORISM_PREMIUM = L_TERROR_MINIMUM
        End

    Do ADD_TERRORISM_ENDORSEMENT
    End
End

procedure remove_terrorism_form
begin
Do ACCESS_SFSMSOTERROR
Access agqEND, Set agqEND:app_no = G_app_no, Generic

While agqEND:app_no = G_app_no
    Begin
    If agqEND:CODE = SFSMSOTERROR:TERRORISM_FORM_TO_ADD Then
        Delete agqEND
    If agqEND:CODE = SFSMSOTERROR:TERRORISM_FORM_TO_REMOVE Then
        Delete agqEND

    Next agqEND
    End

Access agqEND, Set agqEND:app_no = G_app_no, Generic

Do SUBCODE
L_CODE = SFSMSOTERROR:TERRORISM_FORM_TO_REMOVE
Do ACCESS_KEY

Add agqEND
    Begin
    agqEND:app_no             = G_app_no
    agqEND:PREM_NO              = 0
    agqEND:BUILD_NO             = 0
    agqEND:SUB_CODE             = L_SUB_CODE
    agqEND:CODE                 = L_CODE
    agqEND:FORM_EDITION         = L_FORM_EDITION
    agqEND:PREMIUM              = 0
    agqEND:DESCRIPTION          = L_DESCRIPTION
    agqend:policy_wide_form     = 1
    agqend:terrorism_form       = 1
    End

end

Procedure ADD_TERRORISM_ENDORSEMENT
Begin
Access agqEND, Set agqEND:app_no = G_app_no, Generic

L_FOUND = 0
While agqEND:app_no = G_app_no
        Begin
        If agqEND:CODE = SFSMSOTERROR:TERRORISM_FORM_TO_ADD Then
            Delete agqEND
        if agqend:code = sfsmsoterror:terrorism_form_to_remove then
            delete agqend

        Next agqEND
        End

Access agqEND, Set agqEND:app_no = G_app_no, Generic

Do SUBCODE
L_CODE = SFSMSOTERROR:TERRORISM_FORM_TO_ADD
Do ACCESS_KEY

Add agqEND
    Begin
    agqEND:app_no             = G_app_no
    agqEND:PREM_NO              = 0
    agqEND:BUILD_NO             = 0
    agqEND:SUB_CODE             = L_SUB_CODE
    agqEND:CODE                 = SFSMSOTERROR:TERRORISM_FORM_TO_ADD
    agqEND:FORM_EDITION         = L_FORM_EDITION
    agqEND:PREMIUM              = L_TERRORISM_PREMIUM
    agqEND:DESCRIPTION          = L_DESCRIPTION
    agqend:policy_wide_form     = 1
    agqend:terrorism_form       = 1
    End

Access agqMASTER, Set agqMASTER:app_no = G_app_no, Generic

Change agqMASTER
    Begin
    agqMASTER:TERRORISM_PREMIUM = L_TERRORISM_PREMIUM
    End

End

Procedure ACCESS_SFSMSOTERROR
Begin
L_STATE = agqCONTRACTOR:STATE
Access SFSMSOTERROR, Set SFSMSOTERROR:COMPANY_ID       = agqcontractor:company_id,
                         SFSMSOTERROR:STATE            = L_STATE,
                         SFSMSOTERROR:LINE_OF_BUSINESS = agqcontractor:line_of_business, Generic

While SFSMSOTERROR:COMPANY_ID       = agqcontractor:company_id And
      SFSMSOTERROR:STATE            = L_STATE And
      SFSMSOTERROR:LINE_OF_BUSINESS = agqcontractor:line_of_business
        Begin
        If agqcontractor:eff_date >= SFSMSOTERROR:EFF_DATE Then
            Begin
            L_TERROR_EFF_DATE   = SFSMSOTERROR:EFF_DATE
            L_TERROR_PERCENTAGE = SFSMSOTERROR:PERCENTAGE
            L_TERROR_MINIMUM    = SFSMSOTERROR:MINIMUM_PREMIUM
            End

        Next SFSMSOTERROR
        End

Access SFSMSOTERROR, Set SFSMSOTERROR:COMPANY_ID       = agqcontractor:company_id,
                         SFSMSOTERROR:STATE            = L_STATE,
                         SFSMSOTERROR:LINE_OF_BUSINESS = agqcontractor:line_of_business,
                         SFSMSOTERROR:EFF_DATE         = L_TERROR_EFF_DATE, Exact
End

Procedure ACCESS_KEY
Begin
L_STATE = agqCONTRACTOR:STATE
Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID       = agqcontractor:company_id ,
                      SFSOPTEND:STATE            = L_STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = agqcontractor:line_of_business,
                      SFSOPTEND:CODE             = L_CODE, Generic

While SFSOPTEND:COMPANY_ID = agqcontractor:company_id And
      SFSOPTEND:STATE = L_STATE And
      SFSOPTEND:LINE_OF_BUSINESS = agqcontractor:line_of_business And
      SFSOPTEND:CODE = L_CODE
        Begin
        If (agqcontractor:eff_date >= SFSOPTEND:EFF_DATE and
           (agqcontractor:eff_date <= sfsoptend:exp_date or
           sfsoptend:exp_date = 0)) Then
            Begin
            L_FORM_EDITION = SFSOPTEND:FORM_EDITION
            L_DESCRIPTION = SFSOPTEND:DESCRIPTION
            End

        Next SFSOPTEND
        End

End

Procedure SUBCODE
Begin
Access agqEND_ALIAS, Set agqEND_ALIAS:app_no    = agqEND:app_no ,
                         agqEND_ALIAS:PREM_NO     = 0,
                         agqEND_ALIAS:BUILD_NO    = 0, Generic

L_SUB_CODE = 0
while agqEND_ALIAS:app_no = agqEND:app_no and
      agqEND_ALIAS:PREM_NO  = 0 and
      agqEND_ALIAS:BUILD_NO = 0
   begin
   L_SUB_CODE = agqEND_ALIAS:SUB_CODE

   Next agqEND_ALIAS
   End

l_sub_code = l_sub_code + 10
End

Procedure LOC_TOTAL
Begin
Access agqNAME, Set agqNAME:app_no = agqCONTRACTOR:app_no, Generic

access agqclasscode, set agqclasscode:app_no = agqcontractor:app_no, generic

l_janitorial = "N"
while agqclasscode:app_no = agqcontractor:app_no
    begin
    if agqclasscode:class_code one of 1993 then
        l_janitorial = "Y"

    next agqclasscode
    end

Access scstrigger, Set scstrigger:COMPANY_ID       = agqcontractor:COMPANY_ID,
                       scstrigger:STATE            = agqCONTRACTOR:STATE,
                       scstrigger:LINE_OF_BUSINESS = agqcontractor:LINE_OF_BUSINESS, Generic

l_code_1 = ""
while scstrigger:COMPANY_ID       = agqcontractor:COMPANY_ID and
      scstrigger:STATE            = agqCONTRACTOR:STATE and
      scstrigger:LINE_OF_BUSINESS = agqcontractor:LINE_OF_BUSINESS
    begin
    If agqcontractor:EFF_DATE >= scstrigger:rate_DATE Then
        Begin
        l_code_1 = scstrigger:code[11] -- msc120
        End

    Next scstrigger
    End

If L_CODE_1 <> "" Then
    Begin
    L_CODE = L_CODE_1
    Do ACCESS_agqEND_1
    If L_ADD_ENDORSEMENT = "Y" and
       l_janitorial = "Y" then
        begin
        Do ADD_agqEND_1
        g_code = l_code
        end
    If L_ADD_ENDORSEMENT = "N" and
       l_janitorial = "N" Then
        begin
        Do DELETE_agqEND_1
        do delete_agqendorse3
        end
    End

Access agqCLASSCODE, Set agqCLASSCODE:app_no = agqCONTRACTOR:app_no,
                         agqCLASSCODE:PREM_NO = agqCONTRACTOR:PREM_NO,
                         agqCLASSCODE:BUILD_NO  = agqCONTRACTOR:BUILD_NO, Generic

while agqclasscode:app_no = agqcontractor:app_no and
      agqclasscode:prem_no  = agqcontractor:prem_no and
      agqclasscode:build_no = agqcontractor:build_no
        begin
        l_class_code = agqclasscode:class_code
        access scsclasscode, set scsclasscode:company_id       = agqcontractor:company_id,
                                 scsclasscode:state            = agqcontractor:state,
                                 scsclasscode:line_of_business = agqcontractor:line_of_business,
                                 scsclasscode:class_code       = l_class_code, generic

        while scsclasscode:company_id       = agqcontractor:company_id and
              scsclasscode:state            = agqcontractor:state and
              scsclasscode:line_of_business = agqcontractor:line_of_business and
              scsclasscode:class_code       = l_class_code
                begin
                if (agqcontractor:eff_date >= scsclasscode:eff_date and
                   (agqcontractor:eff_date <= scsclasscode:exp_date or
                   scsclasscode:exp_date = 0)) then
                    change agqclasscode
                        begin
                        agqclasscode:property_rate_group = scsclasscode:property_rate_group
                        agqclasscode:liability_prem_no   = scsclasscode:liability_prem_no
                        agqclasscode:print_class_code    = scsclasscode:print_class_code
                        end
                next scsclasscode
                end

        next agqclasscode
        end

Access agqCLASSCODE, Set agqCLASSCODE:app_no = agqCONTRACTOR:app_no,
                         agqCLASSCODE:PREM_NO = agqCONTRACTOR:PREM_NO,
                         agqCLASSCODE:BUILD_NO  = agqCONTRACTOR:BUILD_NO, Generic

Do MISC_RATES

Access agqLIABLIMITS, Set agqLIABLIMITS:app_no = agqCONTRACTOR:app_no, Generic

If agqLIABLIMITS:OCCURRENCE <> 0 Then
    Begin
    -- rating_code 1 = Salem - NJ
    -- rating_code 2 = Flemington
    -- rating code 3 = Salem - MD
    if agsdefault_scp:rating_code one of 1 then
        begin
        L_LIABILITY_PREMIUM = 0
        L_LIABILITY_PREMIUM_1 = 0
        l_addl_liability = 0
        L_WORKERS = 0
        L_HELPERS = 0

        Access agqCONTRACTOR_ALT, Set agqCONTRACTOR_ALT:app_no = agqCONTRACTOR:app_no,
                                      agqcontractor_alt:prem_no = agqcontractor:prem_no,
                                      agqcontractor_alt:build_no = agqcontractor:build_no, Generic

        While agqCONTRACTOR_ALT:app_no = agqCONTRACTOR:app_no and
              agqcontractor_alt:prem_no = agqcontractor:prem_no and
              agqcontractor_alt:build_no = agqcontractor:build_no

            Begin
            L_LIABILITY_PREMIUM = 0
            L_LIABILITY_PREMIUM_1 = 0
            l_liability_premium_3 = 0
            l_liability_high_premium = 0
            L_WORKERS = 0
            L_HELPERS = 0
            l_total_workers = 0
            Do LIABILITY_DEDUCTIBLE

            Access agqCLASSCODE, Set agqCLASSCODE:app_no = agqCONTRACTOR_ALT:app_no,
                                     agqCLASSCODE:PREM_NO = agqCONTRACTOR_ALT:PREM_NO,
                                     agqCLASSCODE:BUILD_NO = agqCONTRACTOR_ALT:BUILD_NO, Generic

            l_workers = agqclasscode:no_workers
            l_helpers = agqclasscode:no_helpers
            l_total_workers = agqclasscode:no_workers

            if l_workers <= 4 then
                begin
                Access agqCLASSCODE, Set agqCLASSCODE:app_no = agqCONTRACTOR_ALT:app_no, generic

                While agqCLASSCODE:app_no = agqCONTRACTOR_ALT:app_no --And
                    Begin
                    L_RECORD_KEY = "LP"
                    L_COMPANY_ID = agqcontractor:company_id
                    L_STATE = agqCONTRACTOR_ALT:STATE
                    L_LINE_OF_BUSINESS = agqcontractor:line_of_business
                    L_OCCURRENCE = agqLIABLIMITS:OCCURRENCE
                    L_CLASS_CODE = agqCLASSCODE:CLASS_CODE
                    L_EFF_DATE = agqcontractor:eff_date

                    Include "scsliab.pro"

                    If L_LIABILITY_PREMIUM > L_LIABILITY_PREMIUM_1  Then
                        Begin
                        L_RATE_GROUP = agqCLASSCODE:PROPERTY_RATE_GROUP
                        L_LIABILITY_PREMIUM_1  = L_LIABILITY_PREMIUM
                        End

                    Next agqCLASSCODE
                    End

                L_LIABILITY_PREMIUM = L_LIABILITY_PREMIUM_1
                If agqLIABLIMITS:INCREASED_AGGREGATE = 1 Then
                    begin
                    L_LIABILITY_PREMIUM = L_LIABILITY_PREMIUM * L_INCREASE_AGGREGATE
                    end

                If L_LIABILITY_PREMIUM > L_LIABILITY_HIGH_PREMIUM Then
                    L_LIABILITY_HIGH_PREMIUM = L_LIABILITY_PREMIUM

                end
            else
                begin
                Access agqCLASSCODE, Set agqCLASSCODE:app_no = agqCONTRACTOR_ALT:app_no, generic

                While agqCLASSCODE:app_no = agqCONTRACTOR_ALT:app_no --And
                    Begin
                    while l_total_workers <> 0
                        begin
                        if l_total_workers > 4 then
                            begin
                            l_hold_workers = l_total_workers - 4
                            l_workers = l_total_workers - l_hold_workers
                            l_total_workers = l_total_workers - 4
                            if l_first_helper = "Y" then
                                begin
                                l_helpers = agqclasscode:no_helpers
                                l_first_helper = "N"
                                end
                            else
                                l_helpers = 0
                            end
                        else
                            begin
                            l_workers = l_total_workers
                            l_total_workers = 0
                            l_helpers = 0
                            end

                        L_RECORD_KEY = "LP"
                        L_COMPANY_ID = agqcontractor:company_id
                        L_STATE = agqCONTRACTOR_ALT:STATE
                        L_LINE_OF_BUSINESS = agqcontractor:line_of_business
                        L_OCCURRENCE = agqLIABLIMITS:OCCURRENCE
                        L_CLASS_CODE = agqCLASSCODE:CLASS_CODE
                        L_EFF_DATE = agqcontractor:eff_date

                        Include "scsliab.pro"

                        l_liability_premium_3 = l_liability_premium_3 +
                                                l_liability_premium
                        end

                    l_liability_premium = l_liability_premium_3
                    if L_LIABILITY_PREMIUM > L_LIABILITY_PREMIUM_1  Then
                        Begin
                        L_RATE_GROUP = agqCLASSCODE:PROPERTY_RATE_GROUP
                        L_LIABILITY_PREMIUM_1  = L_LIABILITY_PREMIUM
                        End

                    Next agqCLASSCODE
                    End

                If agqLIABLIMITS:INCREASED_AGGREGATE = 1 Then
                    begin
                    L_LIABILITY_PREMIUM = L_LIABILITY_PREMIUM * L_INCREASE_AGGREGATE
                    end

                If L_LIABILITY_PREMIUM > L_LIABILITY_HIGH_PREMIUM Then
                    L_LIABILITY_HIGH_PREMIUM = L_LIABILITY_PREMIUM

                end

            Next agqCONTRACTOR_ALT
            End
        end

    if agsdefault_scp:rating_code one of 3 then
        begin
        L_LIABILITY_PREMIUM = 0
        L_LIABILITY_PREMIUM_1 = 0
        l_addl_liability = 0
        L_WORKERS = 0
        L_HELPERS = 0
        l_owners  = 0

        Access agqCONTRACTOR_ALT, Set agqCONTRACTOR_ALT:app_no = agqCONTRACTOR:app_no,
                                      agqcontractor_alt:prem_no = agqcontractor:prem_no,
                                      agqcontractor_alt:build_no = agqcontractor:build_no, Generic

        While agqCONTRACTOR_ALT:app_no = agqCONTRACTOR:app_no and
              agqcontractor_alt:prem_no = agqcontractor:prem_no and
              agqcontractor_alt:build_no = agqcontractor:build_no

            Begin
            L_LIABILITY_PREMIUM = 0
            L_LIABILITY_PREMIUM_1 = 0
            l_liability_premium_3 = 0
            l_liability_high_premium = 0
            L_WORKERS = 0
            L_HELPERS = 0
            l_owners  = 0
            l_total_workers = 0
            Do LIABILITY_DEDUCTIBLE

            Access agqCLASSCODE, Set agqCLASSCODE:app_no = agqCONTRACTOR_ALT:app_no,
                                     agqCLASSCODE:PREM_NO = agqCONTRACTOR_ALT:PREM_NO,
                                     agqCLASSCODE:BUILD_NO = agqCONTRACTOR_ALT:BUILD_NO, Generic

            l_workers = agqclasscode:no_workers
            l_helpers = agqclasscode:no_helpers
            l_owners  = agqclasscode:no_owners
            l_total_workers = agqclasscode:no_workers

            Access agqCLASSCODE, Set agqCLASSCODE:app_no = agqCONTRACTOR_ALT:app_no, generic

            While agqCLASSCODE:app_no = agqCONTRACTOR_ALT:app_no --And
                Begin
                L_RECORD_KEY = "LP"
                L_COMPANY_ID = agqcontractor:company_id
                L_STATE = agqCONTRACTOR_ALT:STATE
                L_LINE_OF_BUSINESS = agqcontractor:line_of_business
                L_OCCURRENCE = agqLIABLIMITS:OCCURRENCE
                L_CLASS_CODE = agqCLASSCODE:CLASS_CODE
                L_EFF_DATE = agqcontractor:eff_date

                Include "scsliab1.pro"

                If L_LIABILITY_PREMIUM > L_LIABILITY_PREMIUM_1  Then
                    Begin
                    L_RATE_GROUP = agqCLASSCODE:PROPERTY_RATE_GROUP
                    L_LIABILITY_PREMIUM_1  = L_LIABILITY_PREMIUM
                    End

                Next agqCLASSCODE
                End

            L_LIABILITY_PREMIUM = L_LIABILITY_PREMIUM_1
            If agqLIABLIMITS:INCREASED_AGGREGATE = 1 Then
                begin
                L_LIABILITY_PREMIUM = L_LIABILITY_PREMIUM * L_INCREASE_AGGREGATE
                end

            If L_LIABILITY_PREMIUM > L_LIABILITY_HIGH_PREMIUM Then
                L_LIABILITY_HIGH_PREMIUM = L_LIABILITY_PREMIUM

            Next agqCONTRACTOR_ALT
            End
        end

    if agsdefault_scp:rating_code one of 2 then
        begin
        L_LIABILITY_PREMIUM = 0
        L_LIABILITY_PREMIUM_1 = 0
        l_addl_liability = 0
        L_WORKERS = 0
        L_HELPERS = 0
        l_owners = 0
-- added prem_no and build_no 08/25/2003
        access agqclasscode, set agqclasscode:app_no = agqcontractor:app_no,
                                 agqclasscode:prem_no = agqcontractor:prem_no,
                                 agqclasscode:build_no = agqcontractor:build_no, generic

        while agqclasscode:app_no = agqcontractor:app_no and
              agqclasscode:prem_no = agqcontractor:prem_no and
              agqclasscode:build_no = agqcontractor:build_no
                begin
                l_workers = agqclasscode:no_workers
                l_helpers = agqclasscode:no_helpers
                l_owners = agqclasscode:no_owners
                L_RECORD_KEY = "LP"
                L_COMPANY_ID = agqcontractor:company_id
                L_STATE = agqCONTRACTOR:STATE
                L_LINE_OF_BUSINESS = agqcontractor:line_of_business
                L_OCCURRENCE = agqLIABLIMITS:OCCURRENCE
                L_CLASS_CODE = agqCLASSCODE:CLASS_CODE
                L_EFF_DATE = agqcontractor:eff_date

                Include "scsliab1.pro"

                L_RATE_GROUP = agqCLASSCODE:PROPERTY_RATE_GROUP
                L_LIABILITY_PREMIUM_1  = l_liability_premium_1 + L_LIABILITY_PREMIUM

                Next agqCLASSCODE
                End

        l_liability_high_premium = l_liability_premium_1
        end

    L_STATE = agqCONTRACTOR:STATE
    Access SCSRATES, Set SCSRATES:COMPANY_ID = agqcontractor:company_id,
                         SCSRATES:STATE = L_STATE,
                         SCSRATES:LINE_OF_BUSINESS = agqcontractor:line_of_business, Generic

    L_RECORD_KEY = "RT"
    While SCSRATES:RECORD_KEY = L_RECORD_KEY And
          SCSRATES:COMPANY_ID = agqcontractor:company_id And
          SCSRATES:STATE = L_STATE And
          SCSRATES:LINE_OF_BUSINESS = agqcontractor:line_of_business
            Begin
            If agqcontractor:eff_date >= SCSRATES:EFF_DATE Then
                L_INDEPENDENT_CHARGE = SCSRATES:INDEPENDENT_CHARGE

            Next SCSRATES
            End

    Access agqCONTRACTOR_ALT, Set agqCONTRACTOR_ALT:app_no = agqCONTRACTOR:app_no,
                                  agqcontractor_alt:prem_no = agqcontractor:prem_no,
                                  agqcontractor_alt:build_no = agqcontractor:build_no, Generic

    While agqCONTRACTOR_ALT:app_no = agqCONTRACTOR:app_no and
          agqcontractor_alt:prem_no = agqcontractor:prem_no and
          agqcontractor_alt:build_no = agqcontractor:build_no
        Begin
        Change agqCONTRACTOR_ALT
            Begin
            agqcontractor_alt:liability_premium = 0
            end

-- added prem_no and build_no 08/25/2003
        Access agqCLASSCODE, Set agqCLASSCODE:app_no = agqCONTRACTOR_ALT:app_no,
                                 agqCLASSCODE:PREM_NO = agqCONTRACTOR_ALT:PREM_NO,
                                 agqCLASSCODE:BUILD_NO = agqCONTRACTOR_ALT:BUILD_NO, Generic

        l_prem_no = 0
        l_build_no = 0
        While agqCLASSCODE:app_no = agqCONTRACTOR_ALT:app_no And
              agqCLASSCODE:PREM_NO = agqCONTRACTOR_ALT:PREM_NO And
              agqCLASSCODE:BUILD_NO = agqCONTRACTOR_ALT:BUILD_NO
                begin
                if agqclasscode:prem_no  <> l_prem_no or
                   agqclasscode:build_no <> l_build_no then
                    begin
                    l_prem_no  = agqclasscode:prem_no
                    l_build_no = agqclasscode:build_no
                    change agqcontractor_alt
                        begin
                        agqCONTRACTOR_ALT:LIABILITY_PREMIUM = (agqcontractor_alt:liability_premium +
                                                              (L_LIABILITY_HIGH_PREMIUM -
                                                               L_LIAB_DEDUCT_CREDIT))
                        end
                    end
                next agqclasscode
                end

        change agqcontractor_alt
            begin
            if agqliablimits:independent_contractors = 1 then
                agqCONTRACTOR_ALT:INDEPENDENT_CONTRACT_PREMIUM = ((agqCONTRACTOR_ALT:LIABILITY_PREMIUM *
                                                                 ((L_INDEPENDENT_CHARGE Divide 100) + 1)) -
                                                                 agqCONTRACTOR_ALT:LIABILITY_PREMIUM)
            else
                agqcontractor_alt:independent_contract_premium = 0
            End

        l_total_liability = l_total_liability +
                            agqcontractor_alt:liability_premium +
                            agqcontractor_alt:independent_contract_premium

        Next agqCONTRACTOR_ALT
        End

write("%c%s",1005,"")  -- do not remove dap 7/6/2006
--pause(1000)
    If agqLIABLIMITS:WAIVE_DEDUCTIBLE = 1 and
       l_first_deductible = "Y" then
        begin
        l_first_deductible = "N"
        Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                        agqcontractor_alias:prem_No = agqcontractor:prem_no,
                                        agqcontractor_alias:build_no = agqcontractor:build_no, generic

        change agqcontractor_alias
            begin
            agqcontractor_alias:liability_premium = agqcontractor_alias:liability_premium
                                                  + L_WAIVE_DEDUCTIBLE
            l_total_liability = l_total_liability +
                                l_waive_deductible
            end
        end

    End

Access agqCONTRACTOR_ALT, Set agqCONTRACTOR_ALT:app_no = agqCONTRACTOR:app_no, generic

while agqcontractor_alt:app_no = agqcontractor:app_no
    begin
    l_addl_liability = agqcontractor_alt:liability_premium + l_addl_liability

    next agqcontractor_alt
    end

If agqCONTRACTOR:BUILDING_LIMIT <> 0 Then
    Begin
    L_PREMIUM = 0
    L_COVERAGE = "A"
    L_LIMIT = agqCONTRACTOR:BUILDING_LIMIT
    Do CALC_PROPERTY_PREM
    L_INFLATION_GUARD = agqCONTRACTOR:INFLATION_GUARD[1]
    Do INFLATION_GUARD
    Do ALARM_DISCOUNT
    Do DEDUCTIBLE
    Do WIND_DEDUCTIBLE

    L_PREMIUM = ((agqCONTRACTOR:BUILDING_LIMIT Divide L_PER) * L_PROPERTY_RATE)
    l_building_rate = l_property_rate
    L_PREMIUM = L_PREMIUM * L_DEDUCTIBLE_FACTOR * L_WIND_DEDUCT_FACTOR *
                L_INFLATION_FACTOR * L_FIRE_FACTOR

    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:BUILDING_PREMIUM = L_PREMIUM
        L_BUILDING_PREMIUM = L_PREMIUM + L_BUILDING_PREMIUM
        End
    End
Else
    Begin
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:BUILDING_PREMIUM = 0
        L_BUILDING_PREMIUM = 0
        End
    End

If agqCONTRACTOR:PROPERTY_LIMIT <> 0 Then
    Begin
    L_PREMIUM = 0
    L_COVERAGE = "B"
    L_LIMIT = agqCONTRACTOR:PROPERTY_LIMIT
    Do CALC_PROPERTY_PREM
    L_INFLATION_GUARD = agqCONTRACTOR:INFLATION_GUARD[2]
    Do INFLATION_GUARD
    Do ALARM_DISCOUNT
    Do DEDUCTIBLE
    Do WIND_DEDUCTIBLE

    l_property_rate_1 = l_property_rate
    if agqcontractor:company_id = "FARMERS" Then
        l_property_adjustments = l_deductible_factor * l_wind_deduct_factor *
                                 l_inflation_factor * l_fire_factor
    else
        l_property_adjustments = l_deductible_factor * l_wind_deduct_factor *
                                 l_inflation_factor * l_fire_factor *
                                 l_burglary_factor

    L_PREMIUM = ((agqCONTRACTOR:PROPERTY_LIMIT Divide L_PER) * L_PROPERTY_RATE)
    if agqcontractor:company_id = "FARMERS" then
        L_PREMIUM = L_PREMIUM * L_DEDUCTIBLE_FACTOR * L_WIND_DEDUCT_FACTOR *
                    L_INFLATION_FACTOR * L_FIRE_FACTOR
    else
        L_PREMIUM = L_PREMIUM * L_DEDUCTIBLE_FACTOR * L_WIND_DEDUCT_FACTOR *
                    L_INFLATION_FACTOR * L_FIRE_FACTOR * L_BURGLARY_FACTOR

    If agqcontractor:form = 3 Then
        Begin
        Access agqCLASSCODE, Set agqCLASSCODE:app_no = agqCONTRACTOR:app_no,
                                 agqCLASSCODE:PREM_NO = agqCONTRACTOR:PREM_NO,
                                 agqCLASSCODE:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

        Do CALC_EXPANDED
        End
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        if agqcontractor_alias:company_id = "FARMERS" then
            agqCONTRACTOR_ALIAS:PROPERTY_RATE = L_PROPERTY_RATE *
                                                L_DEDUCTIBLE_FACTOR *
                                                L_WIND_DEDUCT_FACTOR *
                                                L_INFLATION_FACTOR *
                                                L_FIRE_FACTOR
        else
            agqCONTRACTOR_ALIAS:PROPERTY_RATE = L_PROPERTY_RATE *
                                                L_DEDUCTIBLE_FACTOR *
                                                L_WIND_DEDUCT_FACTOR *
                                                L_INFLATION_FACTOR *
                                                L_FIRE_FACTOR *
                                                L_BURGLARY_FACTOR
        agqCONTRACTOR_ALIAS:PROPERTY_PREMIUM = L_PREMIUM
        L_PROPERTY_PREMIUM = L_PREMIUM + L_PROPERTY_PREMIUM
        If agqcontractor:form = 3 Then
            Begin
            agqCONTRACTOR_ALIAS:PROPERTY_PREMIUM = agqCONTRACTOR_ALIAS:PROPERTY_PREMIUM
            agqCONTRACTOR_ALIAS:EXPANDED_PREMIUM = L_EXPANDED_PREMIUM

            L_PROPERTY_PREMIUM = L_EXPANDED_PREMIUM +
                                 L_PROPERTY_PREMIUM
            End
        Else
            agqCONTRACTOR_ALIAS:EXPANDED_PREMIUM = 0
        End
    End
Else
    Begin
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:PROPERTY_PREMIUM = 0
        agqCONTRACTOR_ALIAS:EXPANDED_PREMIUM = 0
        L_PROPERTY_PREMIUM = 0
        End
    End

If agqCONTRACTOR:PERSONAL_LIMIT <> 0 Then
    Begin
    L_PREMIUM = 0
    L_COVERAGE = "B"
    L_LIMIT = agqCONTRACTOR:PERSONAL_LIMIT
    Do CALC_PROPERTY_PREM
    L_INFLATION_GUARD = agqCONTRACTOR:INFLATION_GUARD[2]
    Do INFLATION_GUARD
    Do ALARM_DISCOUNT
    Do DEDUCTIBLE
    Do WIND_DEDUCTIBLE

    L_PREMIUM = ((agqCONTRACTOR:PERSONAL_LIMIT Divide L_PER) * L_PROPERTY_RATE)
    L_PREMIUM = L_PREMIUM * L_DEDUCTIBLE_FACTOR * L_WIND_DEDUCT_FACTOR *
                L_INFLATION_FACTOR

    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:PERSONAL_PREMIUM = L_PREMIUM
        L_PERSONAL_PREMIUM = L_PREMIUM  + L_PERSONAL_PREMIUM
        End
    End
Else
    Begin
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:PERSONAL_PREMIUM = 0
        L_PERSONAL_PREMIUM = 0
        End
    End

if (agqcontractor_alias:loss_limit = 0 and
   (agqcontractor_alias:building_limit <> 0 or
   agqcontractor_alias:property_limit <> 0)) then
    begin
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        if agqcontractor_alias:building_premium > agqcontractor_alias:property_premium and
           agqcontractor_alias:building_premium <> 0 then
            begin
            agqCONTRACTOR_ALIAS:BUILDING_PREMIUM = agqcontractor_alias:building_premium *
                                                   l_coverage_d
            end
        if agqcontractor_alias:property_premium > agqcontractor_alias:building_premium and
           agqcontractor_alias:property_premium <> 0 then
            begin
            agqCONTRACTOR_ALIAS:property_PREMIUM = agqcontractor_alias:property_premium *
                                                   l_coverage_d
            end
        end
    end

If agqCONTRACTOR:BUILDING_LIMIT > agqCONTRACTOR:PROPERTY_LIMIT Then
    L_LOSS_LIMIT = agqCONTRACTOR:BUILDING_LIMIT
Else
    L_LOSS_LIMIT = agqCONTRACTOR:PROPERTY_LIMIT
if L_LOSS_LIMIT > agsdefault_scp:coverage_d Then
    L_LOSS_LIMIT = agsdefault_scp:coverage_d

if agqcontractor:loss_limit > l_loss_limit then
    begin
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO  = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        if agqcontractor_alias:building_premium <> 0 then
            begin
            l_building_rate = (l_building_rate * (l_coverage_d_percent divide 100))
            agqCONTRACTOR_ALIAS:LOSS_PREMIUM = (((agqcontractor_alias:loss_limit -
                                               l_loss_limit) divide
                                               l_coverage_d_limit) *
                                               l_building_rate)
            end
        else
        if agqcontractor_alias:property_premium <> 0 and
           agqcontractor_alias:building_premium = 0 then
            begin
            agqCONTRACTOR_ALIAS:LOSS_PREMIUM = (((agqcontractor_alias:loss_limit -
                                               l_loss_limit) divide
                                               1000) *
                                               (l_property_rate *
                                               (l_coverage_d_percent divide
                                               100)))
            end
        end
    end
else
    begin
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:LOSS_PREMIUM = 0
        end
    end

If agqCONTRACTOR_ALIAS:COMPUTER_LIMIT <> 0 Then
    Begin
    L_PREMIUM = 0
    L_COVERAGE = "B"
    L_LIMIT = agqCONTRACTOR:PROPERTY_LIMIT
    Do CALC_PROPERTY_PREM
    L_INFLATION_GUARD = agqCONTRACTOR:INFLATION_GUARD[2]
    Do INFLATION_GUARD
    Do ALARM_DISCOUNT
    Do DEDUCTIBLE
    Do WIND_DEDUCTIBLE

    If agqCONTRACTOR:CONTENTS_ACV = 0 Then
        L_CONTENTS_ACV = 1.00
    L_PREMIUM = ((agqCONTRACTOR:COMPUTER_LIMIT Divide L_COMPUTER_PER) *
                L_PROPERTY_RATE * L_DEDUCTIBLE_FACTOR * L_WIND_DEDUCT_FACTOR *
                L_INFLATION_FACTOR * L_FIRE_FACTOR * L_CONTENTS_ACV)

    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:COMPUTER_PREMIUM = L_PREMIUM
        End
    End
Else
    Begin
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:COMPUTER_PREMIUM = 0
        End
    End

If agqCONTRACTOR_ALIAS:EMPLOYEE_DISHONESTY <> 0 Then
    Begin
    Do RATE_EMPLOYEE_DISHONESTY
    L_PREMIUM = L_EMPLOYEE_RATE
    If agqCONTRACTOR_ALIAS:NUMBER_OF_EMPLOYEES > L_NUMBER_EMPLOYEES Then
        L_PREMIUM = (L_PREMIUM + ((agqCONTRACTOR_ALIAS:NUMBER_OF_EMPLOYEES -
                    L_NUMBER_EMPLOYEES) * L_EMPLOYEE_OVER_5))

    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:EMPLOYEE_DIS_PREMIUM = L_PREMIUM
        End
    End
Else
    Begin
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:EMPLOYEE_DIS_PREMIUM = 0
        End
    End

If agqCONTRACTOR:PROPERTY_LIMIT <> 0 And
   agqcontractor:FORM = 3 Then
    Do RATE_MONEY
Else
    Begin
    Access agqMONEY, Set agqMONEY:app_no = agqCONTRACTOR:app_no, Generic

    If agqMONEY:app_no = agqCONTRACTOR:app_no Then
        Change agqMONEY
            Begin
            agqMONEY:MONEY_PREMIUM = 0
            End
    End

If agqCONTRACTOR:AR_LIMIT <> agsdefault_scp:AR_LIMIT Then
    Begin
    Do RATE_AR
    End
Else
    Begin
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:AR_PREMIUM = 0
        End
    End

If agqCONTRACTOR:PERSONAL_EFFECTS <> agsdefault_scp:PERSONAL_EFFECTS Then
    Begin
    Do RATE_PERSONAL_EFFECTS
    End
Else
    Begin
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:PERSONAL_EFFECTS_PREMIUM = 0
        End
    End

If agqCONTRACTOR:DEBRIS_LIMIT <> agsdefault_scp:DEBRIS_LIMIT And
   agqcontractor:FORM < 4 Then
    Begin
    Do RATE_DEBRIS
    End
Else
    Begin
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:DEBRIS_PREMIUM = 0
        End
    End

If agqCONTRACTOR:EXTERIOR_GLASS <> 0 Then
    Do RATE_EXTERIOR_GLASS
Else
    Begin
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:EXTERIOR_GLASS_PREM = 0
        End
    End

If agqCONTRACTOR:GLASS_LIMIT <> agsdefault_scp:GLASS_LIMIT and
   agqcontractor:glass_limit <> 0 Then
    Do RATE_GLASS
Else
    Begin
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:GLASS_PREMIUM = 0
        End
    End

If agqCONTRACTOR:SIGNS_ATTACHED_LIMIT <> agsdefault_scp:SIGNS_ATTACHED_LIMIT Then
    Do RATE_SIGNS
Else
    Begin
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:SIGNS_ATTACHED_PREM = 0
        End
    End

If agqCONTRACTOR:SIGNS_NOT_ATTACHED_LIMIT <> agsdefault_scp:SIGNS_NOT_ATTACHED_LIMIT Then
    Do RATE_SIGNS_NOT_ATTACHED
Else
    Begin
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:SIGNS_NOT_PREMIUM = 0
        End
    End

If agqCONTRACTOR:VALUABLE_PAPERS <> agsdefault_scp:VALUABLE_PAPERS Then
    Begin
    Do RATE_VALUABLE_PAPERS
    End
Else
    Begin
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:VALUABLE_PAPERS_PREMIUM = 0
        End
    End

If agqMASTER:OFF_PREMISES_LIMIT <> agsdefault_scp:OFF_PREM_LIMIT Then
    Do RATE_OFF_PREMISES
Else
    Begin
    Access agqMASTER, Set agqMASTER:app_no = agqCONTRACTOR:app_no, Exact

    Change agqMASTER
        Begin
        agqMASTER:OFF_PREMISES_PREMIUM = 0
        End
    End

If agqCONTRACTOR:BUILDING_CODE_LAW <> agsdefault_scp:BUILDING_CODE Then
    Do RATE_BUILDING_CODE
Else
    Begin
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:BUILDING_CODE_PREMIUM = 0
        End
    End

If agqCONTRACTOR:LIMIT_WATER_BKUP = 1 Then
    Do RATE_WATERBACKUP
Else
    Begin
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:WATER_BKUP_PREMIUM = 0
        End
    End

If agqCONTRACTOR:BUILDING_ACV = 1 Then
    Do RATE_ACV_BUILDING
Else
    Begin
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:BUILDING_ACV_PREMIUM = 0
        End
    End

If agqCONTRACTOR:CONTENTS_ACV = 1 Then
    Do RATE_ACV_CONTENTS
Else
    Begin
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:CONTENTS_ACV_PREMIUM = 0
        End
    End

If agqLIABLIMITS:FIRE_LEGAL <> agsdefault_scp:FIRE_LEGAL Then
    Do RATE_FIRE_LEGAL
Else
    Begin
    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:FIRE_PREMIUM = 0
        End
    End

    Access agqCLASSCODE_alias, Set agqCLASSCODE_alias:app_no = agqCONTRACTOR:app_no, generic

    l_no_workers = 0
    while agqclasscode_alias:app_no = agqcontractor:app_no
        begin
        if agqclasscode_alias:prem_no <> 0 and
           agqclasscode_alias:build_no <> 0 then
            begin
            l_no_workers = agqclasscode_alias:no_workers +
                           agqclasscode_alias:no_owners  +
                           l_no_workers
            end

        next agqclasscode_alias
        end

    l_state = agqcontractor_alias:state
    access scsfulltime, set scsfulltime:company_id       = agqcontractor:company_id,
                            scsfulltime:state            = l_state,
                            scsfulltime:line_of_business = agqcontractor:line_of_business,
                            scsfulltime:no_workers       = l_no_workers, generic

    l_full_time_factor = 0
    while scsfulltime:company_id       = agqcontractor:company_id and
          scsfulltime:state            = agqcontractor_alias:state and
          scsfulltime:line_of_business = agqcontractor:line_of_business and
          scsfulltime:no_workers       = l_no_workers
            begin
            if (agqcontractor:eff_date >= scsfulltime:eff_date and
               (agqcontractor:eff_date <= scsfulltime:exp_date or
               scsfulltime:exp_date = 0)) then
                begin
                l_full_time_factor = scsfulltime:factor
                end

            next scsfulltime
            end

    if l_full_time_factor = 0 then
        l_full_time_factor = 1.00
    change agqcontractor_alias
        begin
        agqcontractor_alias:workers_discount = ((agqcontractor_alias:liability_premium *
                                               l_full_time_factor) -
                                               agqcontractor_alias:liability_premium)
        agqcontractor_alias:liability_premium = agqcontractor_alias:liability_premium
                                                * l_full_time_factor
        l_total_liability = l_total_liability * l_full_time_factor
        end

if agqmaster:experience_rating <> 0 then
    begin
    L_RATE_FACTOR = 0.01
    l_exp_rating = (1 + (agqmaster:experience_rating * L_RATE_FACTOR))
    If l_exp_rating = 0 Then
        L_exp_rating = 1
    change agqcontractor_alias
        begin
        agqcontractor_alias:experience_rating = (((agqcontractor_alias:liability_premium +
                                                agqcontractor_alias:fire_premium +
                                                agqcontractor_alias:independent_contract_premium) *
                                                l_exp_rating) -
                                               (agqcontractor_alias:liability_premium +
                                               agqcontractor_alias:fire_premium +
                                               agqcontractor_alias:independent_contract_premium))
        agqcontractor_alias:liability_premium = agqcontractor_alias:liability_premium
                                                * l_exp_rating
        l_total_liability = l_total_liability * l_exp_rating
        end
    end

l_end_premium = 0
if l_policy_wide_first = "Y" then
    begin
    Access agqEND, Set agqEND:app_no = agqCONTRACTOR:app_no,
                       agqEND:PREM_NO  = 0,
                       agqEND:BUILD_NO = 0, Generic

    L_agqEND_MINIMUM_PREMIUM = "N"
    L_INLAND_TOTAL = 0
    L_INLAND_MARINE_CODE = ""
    Repeat Begin
        Exit If agqEND:app_no <> agqCONTRACTOR:app_no Or
                agqEND:PREM_NO  <> 0 or
                agqEND:BUILD_NO <> 0

        L_agqEND_MINIMUM_PREMIUM = "N"
        L_INLAND_MARINE_CODE = "N"
        L_UPDATE_SFPEND_PREMIUM = 0
        L_CODE = agqEND:CODE
        l_sub_code = agqend:sub_Code
        Do RATE_ENDORSEMENTS

        Change agqEND
            Begin
            if l_code one of "MIM120", "MCL180" then
                l_update_sfpend_premium = 0

            agqEND:PREMIUM = L_UPDATE_SFPEND_PREMIUM
            agqEND:INLAND_MARINE_CODE = L_INLAND_MARINE_CODE
            If L_agqEND_MINIMUM_PREMIUM = "Y" Then
                agqEND:MINIMUM_PREMIUM = "Y"
            Else
                agqEND:MINIMUM_PREMIUM = "N"
            End
        if agqend:code not one of "SCP102", "SCP103" then
            L_END_PREMIUM = L_END_PREMIUM + L_UPDATE_SFPEND_PREMIUM

        Next agqEND
        End

    l_policy_wide_first = "N"
    end

Access agqEND, Set agqEND:app_no = agqCONTRACTOR:app_no,
                   agqEND:PREM_NO = agqCONTRACTOR:PREM_NO,
                   agqEND:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

L_agqEND_MINIMUM_PREMIUM = "N"
L_INLAND_TOTAL = 0
L_INLAND_MARINE_CODE = ""
Repeat Begin
    Exit If agqEND:app_no <> agqCONTRACTOR:app_no Or
            agqEND:PREM_NO <> agqCONTRACTOR:PREM_NO Or
            agqEND:BUILD_NO <> agqCONTRACTOR:BUILD_NO

    L_agqEND_MINIMUM_PREMIUM = "N"
    L_INLAND_MARINE_CODE = "N"
    L_UPDATE_SFPEND_PREMIUM = 0
    L_CODE = agqEND:CODE
    l_sub_code = agqend:sub_Code
    Do RATE_ENDORSEMENTS

    Change agqEND
        Begin
        if l_code one of "MIM120", "MCL180" then
            l_update_sfpend_premium = 0

        agqEND:PREMIUM = L_UPDATE_SFPEND_PREMIUM
        agqEND:INLAND_MARINE_CODE = L_INLAND_MARINE_CODE
        If L_agqEND_MINIMUM_PREMIUM = "Y" Then
            agqEND:MINIMUM_PREMIUM = "Y"
        Else
            agqEND:MINIMUM_PREMIUM = "N"
        End
    if agqend:code not one of "SCP102", "SCP103" then
        L_END_PREMIUM = L_END_PREMIUM + L_UPDATE_SFPEND_PREMIUM

Next agqEND
End

If L_INLAND_TOTAL >= L_INLAND_MARINE_MINIMUM And
   L_INLAND_TOTAL <> 0 Then
    Begin
    Access agqEND, Set agqEND:app_no = agqCONTRACTOR:app_no,
                       agqEND:PREM_NO = agqCONTRACTOR:PREM_NO,
                       agqEND:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Repeat Begin
        Exit If agqEND:app_no <> agqCONTRACTOR:app_no Or
                agqEND:PREM_NO <> agqCONTRACTOR:PREM_NO Or
                agqEND:BUILD_NO <> agqCONTRACTOR:BUILD_NO

        If agqEND:INLAND_MARINE_CODE = "Y" And
           agqEND:MINIMUM_PREMIUM = "Y" Then
            Begin
            Change agqEND
                Begin
                agqEND:MINIMUM_PREMIUM = "N"
                End
            End
        Next agqEND
        End

    End

If L_INLAND_TOTAL < L_INLAND_MARINE_MINIMUM And
   L_INLAND_TOTAL <> 0 Then
    Begin
    L_INLAND_MARINE_UPDATED = "N"
    Access agqEND, Set agqEND:app_no = agqCONTRACTOR:app_no,
                       agqEND:PREM_NO = agqCONTRACTOR:PREM_NO,
                       agqEND:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    Repeat Begin
        Exit If agqEND:app_no <> agqCONTRACTOR:app_no Or
                agqEND:PREM_NO <> agqCONTRACTOR:PREM_NO Or
                agqEND:BUILD_NO <> agqCONTRACTOR:BUILD_NO

        If agqEND:INLAND_MARINE_CODE = "Y" And
           L_INLAND_MARINE_UPDATED = "N" Then
            Begin
            Change agqEND
                Begin
                L_END_PREMIUM = L_END_PREMIUM - agqEND:PREMIUM
                L_INLAND_MARINE_UPDATED = "Y"
                agqEND:PREMIUM = ((L_INLAND_MARINE_MINIMUM - L_INLAND_TOTAL) +
                                 agqEND:PREMIUM)
                L_END_PREMIUM = L_END_PREMIUM + agqEND:PREMIUM
                agqEND:MINIMUM_PREMIUM = "Y"
                End
            End

        Next agqEND
        End

    L_INLAND_TOTAL = L_INLAND_MARINE_MINIMUM
    End

Access agqMISC, Set agqMISC:app_no = G_app_no, Generic

L_MISC_PREMIUM = 0
If L_MISC <> "Y" Then
    Begin
    Repeat Begin
        Exit If agqMISC:app_no <> G_app_no

        L_MISC_PREMIUM = L_MISC_PREMIUM + agqMISC:PREMIUM
        L_MISC = "Y"

    Next agqMISC
    End
    End

Access agqMONEY, Set agqMONEY:app_no = agqCONTRACTOR:app_no, Generic

Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

If L_FIRST = "Y" Then
    Begin
    L_FIRST = "N"
    Change agqCONTRACTOR_ALIAS
        Begin
        If agqCONTRACTOR_ALIAS:BUILDING_LIMIT <> 0 Or
           agqCONTRACTOR_ALIAS:PROPERTY_LIMIT <> 0 Then
            Begin
            agqCONTRACTOR_ALIAS:PROPERTY_TOTAL =
                  agqCONTRACTOR_ALIAS:BUILDING_PREMIUM  +
                  agqCONTRACTOR_ALIAS:PROPERTY_PREMIUM  +
                  agqCONTRACTOR_ALIAS:EXPANDED_PREMIUM  +
                  agqCONTRACTOR_ALIAS:PERSONAL_PREMIUM  +
                  agqCONTRACTOR_ALIAS:LOSS_PREMIUM +
                  agqCONTRACTOR_ALIAS:BUILDING_ACV_PREMIUM +
                  agqCONTRACTOR_ALIAS:CONTENTS_ACV_PREMIUM +
                  agqCONTRACTOR_ALIAS:AR_PREMIUM +
                  agqCONTRACTOR_ALIAS:GLASS_PREMIUM +
                  agqCONTRACTOR_ALIAS:SIGNS_ATTACHED_PREM +
                  agqCONTRACTOR_ALIAS:SIGNS_NOT_PREMIUM +
                  agqCONTRACTOR_ALIAS:BUILDING_CODE_PREMIUM +
                  agqCONTRACTOR_ALIAS:OFF_PREM_PREMIUM +
                  agqCONTRACTOR_ALIAS:DEBRIS_PREMIUM +
                  agqCONTRACTOR_ALIAS:OUTDOOR_GLASS_PREMIUM +
                  agqCONTRACTOR_ALIAS:OUTDOOR_PROPERTY_PREMIUM +
                  agqCONTRACTOR_ALIAS:PERSONAL_EFFECTS_PREMIUM +
                  agqCONTRACTOR_ALIAS:VALUABLE_PAPERS_PREMIUM +
                  agqMONEY:MONEY_PREMIUM +
                  agqCONTRACTOR_ALIAS:EMPLOYEE_DIS_PREMIUM +
                  agqCONTRACTOR_ALIAS:COMPUTER_PREMIUM +
                  agqCONTRACTOR_ALIAS:WATER_BKUP_PREMIUM +
                  agqCONTRACTOR_ALIAS:EXTERIOR_GLASS_PREM +
                  L_MISC_PREMIUM +
                  L_END_PREMIUM
            End
        else
            Begin
            agqcontractor_alias:property_total = 0
            l_total_liability  =  l_total_liability +
                                  L_MISC_PREMIUM +
                                  L_END_PREMIUM
            End
        End


    L_LOC_TOTAL = agqCONTRACTOR_ALIAS:BUILDING_PREMIUM  +
                  agqCONTRACTOR_ALIAS:PROPERTY_PREMIUM  +
                  agqCONTRACTOR_ALIAS:EXPANDED_PREMIUM  +
                  agqCONTRACTOR_ALIAS:PERSONAL_PREMIUM  +
                  agqCONTRACTOR_ALIAS:LOSS_PREMIUM +
                  agqCONTRACTOR_ALIAS:LIABILITY_PREMIUM +
                  agqCONTRACTOR_ALIAS:INDEPENDENT_CONTRACT_PREMIUM +
                  agqCONTRACTOR_ALIAS:FIRE_PREMIUM +
                  agqCONTRACTOR_ALIAS:BUILDING_ACV_PREMIUM +
                  agqCONTRACTOR_ALIAS:CONTENTS_ACV_PREMIUM +
                  agqCONTRACTOR_ALIAS:AR_PREMIUM +
                  agqCONTRACTOR_ALIAS:GLASS_PREMIUM +
                  agqCONTRACTOR_ALIAS:SIGNS_ATTACHED_PREM +
                  agqCONTRACTOR_ALIAS:SIGNS_NOT_PREMIUM +
                  agqCONTRACTOR_ALIAS:BUILDING_CODE_PREMIUM +
                  agqCONTRACTOR_ALIAS:OFF_PREM_PREMIUM +
                  agqCONTRACTOR_ALIAS:DEBRIS_PREMIUM +
                  agqCONTRACTOR_ALIAS:OUTDOOR_GLASS_PREMIUM +
                  agqCONTRACTOR_ALIAS:OUTDOOR_PROPERTY_PREMIUM +
                  agqCONTRACTOR_ALIAS:PERSONAL_EFFECTS_PREMIUM +
                  agqCONTRACTOR_ALIAS:VALUABLE_PAPERS_PREMIUM +
                  agqMONEY:MONEY_PREMIUM +
                  agqCONTRACTOR_ALIAS:EMPLOYEE_DIS_PREMIUM +
                  agqCONTRACTOR_ALIAS:COMPUTER_PREMIUM +
                  agqCONTRACTOR_ALIAS:WATER_BKUP_PREMIUM +
                  agqCONTRACTOR_ALIAS:EXTERIOR_GLASS_PREM +
                  L_MISC_PREMIUM +
                  L_END_PREMIUM +
                  l_flat_premium +
                  l_scp103
    End
Else
    Begin
    Change agqCONTRACTOR_ALIAS
        Begin
        If agqCONTRACTOR_ALIAS:BUILDING_LIMIT <> 0 Or
           agqCONTRACTOR_ALIAS:PROPERTY_LIMIT <> 0 Then
            Begin
            agqCONTRACTOR_ALIAS:PROPERTY_TOTAL =
                  agqCONTRACTOR_ALIAS:BUILDING_PREMIUM  +
                  agqCONTRACTOR_ALIAS:PROPERTY_PREMIUM  +
                  agqCONTRACTOR_ALIAS:EXPANDED_PREMIUM  +
                  agqCONTRACTOR_ALIAS:PERSONAL_PREMIUM  +
                  agqCONTRACTOR_ALIAS:LOSS_PREMIUM +
                  agqCONTRACTOR_ALIAS:BUILDING_ACV_PREMIUM +
                  agqCONTRACTOR_ALIAS:CONTENTS_ACV_PREMIUM +
                  agqCONTRACTOR_ALIAS:AR_PREMIUM +
                  agqCONTRACTOR_ALIAS:GLASS_PREMIUM +
                  agqCONTRACTOR_ALIAS:SIGNS_ATTACHED_PREM +
                  agqCONTRACTOR_ALIAS:SIGNS_NOT_PREMIUM +
                  agqCONTRACTOR_ALIAS:BUILDING_CODE_PREMIUM +
                  agqCONTRACTOR_ALIAS:OFF_PREM_PREMIUM +
                  agqCONTRACTOR_ALIAS:DEBRIS_PREMIUM +
                  agqCONTRACTOR_ALIAS:OUTDOOR_GLASS_PREMIUM +
                  agqCONTRACTOR_ALIAS:OUTDOOR_PROPERTY_PREMIUM +
                  agqCONTRACTOR_ALIAS:PERSONAL_EFFECTS_PREMIUM +
                  agqCONTRACTOR_ALIAS:VALUABLE_PAPERS_PREMIUM +
                  agqCONTRACTOR_ALIAS:EMPLOYEE_DIS_PREMIUM +
                  agqCONTRACTOR_ALIAS:COMPUTER_PREMIUM +
                  agqCONTRACTOR_ALIAS:WATER_BKUP_PREMIUM +
                  agqCONTRACTOR_ALIAS:EXTERIOR_GLASS_PREM +
                  L_MISC_PREMIUM +
                  L_END_PREMIUM
            End
        else
            Begin
            agqcontractor_alias:property_total = 0
            l_total_liability = l_total_liability +
                                L_MISC_PREMIUM +
                                L_END_PREMIUM
            End
        End
    L_LOC_TOTAL = agqCONTRACTOR_ALIAS:BUILDING_PREMIUM  +
                  agqCONTRACTOR_ALIAS:PROPERTY_PREMIUM  +
                  agqCONTRACTOR_ALIAS:EXPANDED_PREMIUM  +
                  agqCONTRACTOR_ALIAS:PERSONAL_PREMIUM  +
                  agqCONTRACTOR_ALIAS:LIABILITY_PREMIUM +
                  agqCONTRACTOR_ALIAS:INDEPENDENT_CONTRACT_PREMIUM +
                  agqCONTRACTOR_ALIAS:FIRE_PREMIUM +
                  agqCONTRACTOR_ALIAS:LOSS_PREMIUM +
                  agqCONTRACTOR_ALIAS:BUILDING_ACV_PREMIUM +
                  agqCONTRACTOR_ALIAS:CONTENTS_ACV_PREMIUM +
                  agqCONTRACTOR_ALIAS:AR_PREMIUM +
                  agqCONTRACTOR_ALIAS:GLASS_PREMIUM +
                  agqCONTRACTOR_ALIAS:SIGNS_ATTACHED_PREM +
                  agqCONTRACTOR_ALIAS:SIGNS_NOT_PREMIUM +
                  agqCONTRACTOR_ALIAS:BUILDING_CODE_PREMIUM +
                  agqCONTRACTOR_ALIAS:OFF_PREM_PREMIUM +
                  agqCONTRACTOR_ALIAS:DEBRIS_PREMIUM +
                  agqCONTRACTOR_ALIAS:OUTDOOR_GLASS_PREMIUM +
                  agqCONTRACTOR_ALIAS:OUTDOOR_PROPERTY_PREMIUM +
                  agqCONTRACTOR_ALIAS:PERSONAL_EFFECTS_PREMIUM +
                  agqCONTRACTOR_ALIAS:VALUABLE_PAPERS_PREMIUM +
                  agqCONTRACTOR_ALIAS:EMPLOYEE_DIS_PREMIUM +
                  agqCONTRACTOR_ALIAS:COMPUTER_PREMIUM +
                  agqCONTRACTOR_ALIAS:WATER_BKUP_PREMIUM +
                  agqCONTRACTOR_ALIAS:EXTERIOR_GLASS_PREM +
                  L_MISC_PREMIUM +
                  L_END_PREMIUM +
                  l_flat_premium +
                  l_scp103
    End

Do GET_RATE

/* end of loc total */
End

Procedure ACCESS_agqEND_1
Begin
Access agqEND, Set agqEND:app_no = agqCONTRACTOR:app_no ,
                   agqEND:PREM_NO  = 0,
                   agqEND:BUILD_NO = 0, Generic

L_ADD_ENDORSEMENT = "Y"
Repeat Begin
    Exit If agqEND:app_no <> agqCONTRACTOR:app_no Or
            agqEND:PREM_NO  <> 0 Or
            agqEND:BUILD_NO <> 0

    If agqEND:CODE = L_CODE Then
        L_ADD_ENDORSEMENT = "N"

    Next agqEND
    End

End

Procedure ADD_agqEND_1
Begin
Access agqEND, Set agqEND:app_no = agqCONTRACTOR:app_no ,
                   agqEND:PREM_NO  = 0,
                   agqEND:BUILD_NO = 0, Generic

L_SUB_CODE = 0
Repeat Begin
    Exit If agqEND:app_no <> agqCONTRACTOR:app_no Or
            agqEND:PREM_NO  <> 0 Or
            agqEND:BUILD_NO <> 0

    L_SUB_CODE = agqEND:SUB_CODE

    Next agqEND
    End

L_SUB_CODE = L_SUB_CODE + 10

Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID = agqCONTRACTOR:COMPANY_ID,
                      SFSOPTEND:STATE = agqCONTRACTOR:STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = agqCONTRACTOR:LINE_OF_BUSINESS,
                      SFSOPTEND:CODE = L_CODE, Generic

l_form_edition = ""
Repeat Begin
    Exit If SFSOPTEND:COMPANY_ID <> agqCONTRACTOR:COMPANY_ID Or
            SFSOPTEND:STATE <> agqCONTRACTOR:STATE Or
            SFSOPTEND:LINE_OF_BUSINESS <> agqCONTRACTOR:LINE_OF_BUSINESS Or
            SFSOPTEND:CODE <> L_CODE

    If (agqcontractor:EFF_DATE >= SFSOPTEND:EFF_DATE and
       (agqcontractor:eff_date <= sfsoptend:exp_date or
       sfsoptend:exp_date = 0)) Then
        Begin
        L_FORM_EDITION = SFSOPTEND:FORM_EDITION
        L_DESCRIPTION = SFSOPTEND:DESCRIPTION
        End

    Next SFSOPTEND
    End

if l_form_edition <> "" then
begin
Add agqEND
    Begin
    agqEND:app_no               =       agqCONTRACTOR:app_no
    agqEND:PREM_NO              =       0
    agqEND:BUILD_NO             =       0
    agqEND:SUB_CODE             =       L_SUB_CODE
    agqEND:CODE                 =       L_CODE
    agqEND:FORM_EDITION         =       L_FORM_EDITION
    agqEND:DESCRIPTION          =       L_DESCRIPTION
    agqEND:PREMIUM              =       0
    End
end

End

Procedure DELETE_agqEND_1
Begin
Access agqEND, Set agqEND:app_no = agqCONTRACTOR:app_no ,
                   agqEND:PREM_NO  = 0,
                   agqEND:BUILD_NO = 0, Generic

Repeat Begin
    Exit If agqEND:app_no <> agqCONTRACTOR:app_no Or
            agqEND:PREM_NO  <> 0 Or
            agqEND:BUILD_NO <> 0

    If agqEND:CODE = L_CODE Then
        Delete agqEND

    Next agqEND
    End

End

procedure delete_agqendorse3
begin
Access agqendorse3, Set agqendorse3:app_no   = agqcontractor:app_no,
                        agqendorse3:PREM_NO  = 0,
                        agqendorse3:BUILD_NO = 0,
                        agqendorse3:CODE     = L_CODE, Generic

if agqendorse3:app_no = agqcontractor:app_no and
   agqendorse3:PREM_NO  = 0 and
   agqendorse3:BUILD_NO = 0 and
   agqendorse3:CODE     = L_CODE then
    begin
    delete agqendorse3
    end

end

Procedure MISC_RATES
Begin
L_RECORD_KEY = "RT"
L_COMPANY_ID = agqcontractor:company_id
L_STATE = agqCONTRACTOR:STATE
L_LINE_OF_BUSINESS = agqcontractor:line_of_business
L_EFF_DATE = agqcontractor:eff_date

Include "scsrates.pro"

End

Procedure CALC_PROPERTY_PREM
Begin
L_RECORD_KEY = "PP"
L_COMPANY_ID = agqcontractor:company_id
L_STATE = agqCONTRACTOR:STATE
L_LINE_OF_BUSINESS = agqcontractor:line_of_business
L_FORM = agqcontractor:FORM
L_PROTECTION = agqCONTRACTOR:PROTECTION
L_EFF_DATE = agqcontractor:eff_date
Switch(agqCONTRACTOR:RATING_TYPE)
  Case 4       : L_TYPE = 2
  Case 5, 6, 7 : L_TYPE = 3
  Default      : L_TYPE = agqCONTRACTOR:RATING_TYPE
  End
L_CONSTRUCTION = agqCONTRACTOR:CONSTRUCTION

Include "scsprop.pro"

End

Procedure DEDUCTIBLE
Begin
L_COMPANY_ID = agqcontractor:company_id
L_STATE = agqCONTRACTOR:STATE
L_LINE_OF_BUSINESS = agqcontractor:line_of_business
--L_DEDUCTIBLE = agqCONTRACTOR:DEDUCTIBLE
L_LIMIT = 99999999
L_EFF_DATE = agqcontractor:eff_date

Include "scsdeduct.pro"

l_deductible = g_deductible
End

Procedure LIABILITY_DEDUCTIBLE
Begin
L_COMPANY_ID = agqcontractor:company_id
L_STATE = agqCONTRACTOR:STATE
L_LINE_OF_BUSINESS = agqcontractor:line_of_business
l_deductible = agqliablimits:liab_deductible
L_LIMIT = 99999998
L_EFF_DATE = agqcontractor:eff_date

Include "scsdeduct1.pro"

l_deductible = g_deductible
End

Procedure WIND_DEDUCTIBLE
Begin
L_COMPANY_ID = agqcontractor:company_id
L_STATE = agqCONTRACTOR:STATE
L_LINE_OF_BUSINESS = agqcontractor:line_of_business
L_DEDUCTIBLE = agqCONTRACTOR:DEDUCTIBLE
L_WIND_DEDUCTIBLE = agqCONTRACTOR:WIND_DEDUCTIBLE
L_EFF_DATE = agqcontractor:eff_date

Include "scswinddeduct.pro"

If L_WIND_DEDUCT_FACTOR = 0 Then
    L_WIND_DEDUCT_FACTOR = 1.00

l_deductible = g_deductible
End

Procedure INFLATION_GUARD
Begin
L_COMPANY_ID = agqcontractor:company_id
L_STATE = agqCONTRACTOR:STATE
L_LINE_OF_BUSINESS = agqcontractor:line_of_business
L_EFF_DATE = agqcontractor:eff_date

Include "scsinflation.pro"

End

Procedure ALARM_DISCOUNT
Begin
If agqCONTRACTOR:FIRE_ALARM = 1 Then
    Begin
    If agqCONTRACTOR:SUPERIOR_CONDITIONS = 1 Then
        L_FIRE_FACTOR = L_SUPERIOR_FACTOR
    End
Else
    L_FIRE_FACTOR = 1.00

If agqCONTRACTOR:BURGLARY_ALARM = 1 Then
    Begin
    If agqCONTRACTOR:SUPERIOR_CONDITIONS = 1 Then
        L_BURGLARY_FACTOR = L_SUPERIOR_FACTOR
    if agqcontractor:excluding_theft = 1 then
        l_burglary_factor = 1.00
    End
Else
    L_BURGLARY_FACTOR = 1.00

End

Procedure CALC_EXPANDED
Begin
L_RECORD_KEY = "EP"
L_COMPANY_ID = agqcontractor:company_id
L_STATE = agqCONTRACTOR:STATE
L_LINE_OF_BUSINESS = agqcontractor:line_of_business
L_LIMIT = agqCONTRACTOR:PROPERTY_LIMIT
L_EFF_DATE = agqcontractor:eff_date
--L_RATE_GROUP = agqCLASSCODE:PROPERTY_RATE_GROUP
Switch(agqCONTRACTOR:RATING_TYPE)
  Case 4       : L_TYPE = 2
  Case 5, 6, 7 : L_TYPE = 3
  Default      : L_TYPE = agqCONTRACTOR:RATING_TYPE
  End

Include "scsexpanded.pro"

If L_TYPE = 1 Then
    Begin
    L_EXPANDED_PREMIUM = (((agqCONTRACTOR:PROPERTY_LIMIT Divide L_OFFICE_PER)
                          * L_OFFICE_RATE) + L_OFFICE_ADDITIONAL)
    End
Else
    Begin
    L_RECORD_KEY = "ET"
    L_COUNTY = agqCONTRACTOR:COUNTY
    Include "scsexpandterr.pro"
    L_EXPANDED_PREMIUM = L_EXPANDED_PREMIUM * L_EXPANDED_TERR
    End

If agqCONTRACTOR:EXCLUDING_THEFT = 0 Then
    L_EXCLUDE_THEFT_FACTOR = 1.00
If agqCONTRACTOR:LIMIT_THEFT = 0 Then
    L_LIMIT_THEFT_FACTOR = 1.00
L_EXPANDED_PREMIUM = L_EXPANDED_PREMIUM * L_BURGLARY_FACTOR *
                     L_EXCLUDE_THEFT_FACTOR * L_LIMIT_THEFT_FACTOR

End

Procedure RATE_EMPLOYEE_DISHONESTY
Begin
L_COMPANY_ID = agqcontractor:company_id
L_STATE = agqCONTRACTOR:STATE
L_LINE_OF_BUSINESS = agqcontractor:line_of_business
L_EFF_DATE = agqcontractor:eff_date
L_LIMIT = agqCONTRACTOR:EMPLOYEE_DISHONESTY

Include "scsempldis.pro"

End

Procedure RATE_MONEY
Begin
Access agqMONEY, Set agqMONEY:app_no = agqCONTRACTOR:app_no, Generic

L_COMPANY_ID = agqcontractor:company_id
L_STATE = agqCONTRACTOR:STATE
L_LINE_OF_BUSINESS = agqcontractor:line_of_business
L_EFF_DATE = agqcontractor:eff_date
L_TERRITORY = 999
L_MONEY_LIMITS = agqMONEY:MONEY_LIMITS

Include "scsmoney.pro"

Access agqMONEY, Set agqMONEY:app_no = agqCONTRACTOR:app_no, Generic

If agqMONEY:app_no = agqCONTRACTOR:app_no Then
    Change agqMONEY
        Begin
        agqMONEY:MONEY_PREMIUM = 0
        If L_MONEY_CHARGE_1 = 0 Then
            Begin
            If agqMONEY:MONEY_LIMIT_ON = 0 Then
                Begin
                agqMONEY:MONEY_PREMIUM = agqCONTRACTOR:EXPANDED_PREMIUM
                                         * L_MONEY_RATE_1
                agqMONEY:MONEY_PREMIUM = agqMONEY:MONEY_PREMIUM * -1
                End
            If agqMONEY:MONEY_LIMIT_ON <> agsdefault_scp:MONEY_LIMIT_ON And
               agqMONEY:MONEY_LIMIT_ON <> 0 Then
                agqMONEY:MONEY_PREMIUM = (agqMONEY:MONEY_PREMIUM +
                                         (agqCONTRACTOR:EXPANDED_PREMIUM
                                         * L_MONEY_RATE_3))
            If agqMONEY:MONEY_LIMIT_ON = agsdefault_scp:MONEY_LIMIT_ON Then
                agqMONEY:MONEY_PREMIUM = 0
            End
        Else
            Begin
            If agqMONEY:MONEY_LIMIT_ON <> 0 Then
                agqMONEY:MONEY_PREMIUM = L_MONEY_CHARGE_1
            End
        End

End

Procedure RATE_AR
Begin
Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

If agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no And
   agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO And
   agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO Then
    Change agqCONTRACTOR_ALIAS
        Begin
        If agqCONTRACTOR_ALIAS:AR_LIMIT <> agsdefault_scp:AR_LIMIT Then
            agqCONTRACTOR_ALIAS:AR_PREMIUM = (agqCONTRACTOR_ALIAS:PROPERTY_RATE *
                                             (((agqCONTRACTOR_ALIAS:AR_LIMIT -
                                             agsdefault_scp:AR_LIMIT)
                                             Divide L_AR_PER) * L_AR_FACTOR))
        End

End

Procedure RATE_PERSONAL_EFFECTS
Begin
Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

If agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no And
   agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO And
   agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO Then
    Change agqCONTRACTOR_ALIAS
        Begin
        If agqCONTRACTOR_ALIAS:PERSONAL_EFFECTS <> agsdefault_scp:PERSONAL_EFFECTS Then
            agqCONTRACTOR_ALIAS:PERSONAL_EFFECTS_PREMIUM =
                                             (agqCONTRACTOR_ALIAS:PROPERTY_RATE *
                                             ((agqCONTRACTOR_ALIAS:PERSONAL_EFFECTS -
                                             agsdefault_scp:PERSONAL_EFFECTS)
                                             Divide L_AR_PER))-- uses the same limit as A/R
        End

End

Procedure RATE_DEBRIS
Begin
Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

If agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no And
   agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO And
   agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO Then
    Change agqCONTRACTOR_ALIAS
        Begin
        If agqCONTRACTOR_ALIAS:DEBRIS_LIMIT <> agsdefault_scp:DEBRIS_LIMIT Then
            agqCONTRACTOR_ALIAS:DEBRIS_PREMIUM = (((agqCONTRACTOR_ALIAS:DEBRIS_LIMIT -
                                                 agsdefault_scp:DEBRIS_LIMIT) Divide
                                                 L_DEBRIS_PER) * L_DEBRIS_RATE)
        End

End

Procedure RATE_EXTERIOR_GLASS
Begin
Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

If agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no And
   agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO And
   agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO Then
    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:EXTERIOR_GLASS_PREM = ((agqCONTRACTOR_ALIAS:EXTERIOR_GLASS
                                                  Divide 1) *
                                                  l_glass_charge_1)
        End

End

Procedure RATE_GLASS
Begin
Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

If agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no And
   agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO And
   agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO Then
    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:GLASS_PREMIUM = L_GLASS_CHARGE
        End

End

Procedure RATE_SIGNS
Begin
Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

If agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no And
   agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO And
   agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO Then
    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:SIGNS_ATTACHED_PREM = (((agqCONTRACTOR_ALIAS:SIGNS_ATTACHED_LIMIT -
                                                  agsdefault_scp:SIGNS_ATTACHED_LIMIT)
                                                  Divide L_SIGNS_PER) * L_SIGNS_CHARGE)
        End

End

Procedure RATE_SIGNS_NOT_ATTACHED
Begin
Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

If agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no And
   agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO And
   agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO Then
    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:SIGNS_NOT_PREMIUM = (((agqCONTRACTOR_ALIAS:SIGNS_NOT_ATTACHED_LIMIT -
                                                  agsdefault_scp:SIGNS_NOT_ATTACHED_LIMIT)
                                                  Divide L_SIGNS_PER) * L_SIGNS_CHARGE)
        End

End

Procedure RATE_VALUABLE_PAPERS
Begin
Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

If agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no And
   agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO And
   agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO Then
    Change agqCONTRACTOR_ALIAS
        Begin
        If agqCONTRACTOR_ALIAS:VALUABLE_PAPERS <> agsdefault_scp:VALUABLE_PAPERS Then
            agqCONTRACTOR_ALIAS:VALUABLE_PAPERS_PREMIUM = (agqCONTRACTOR_ALIAS:PROPERTY_RATE *
                                                (((agqCONTRACTOR_ALIAS:VALUABLE_PAPERS
                                                - agsdefault_scp:VALUABLE_PAPERS) Divide
                                                L_VALUABLE_PER) * L_VALUABLE_FACTOR))
        End

End

Procedure RATE_BUILDING_CODE
Begin
Access SCSRATES, Set SCSRATES:COMPANY_ID = agqcontractor:company_id,
                     SCSRATES:STATE = agqCONTRACTOR:STATE,
                     SCSRATES:LINE_OF_BUSINESS = agqcontractor:line_of_business, Generic

While SCSRATES:RECORD_KEY = "RT" And
      SCSRATES:COMPANY_ID = agqcontractor:company_id And
      SCSRATES:STATE = agqCONTRACTOR:STATE And
      SCSRATES:LINE_OF_BUSINESS = agqcontractor:line_of_business
        Begin
        If agqcontractor:eff_date >= SCSRATES:EFF_DATE Then
            Begin
            L_FACTOR_2 = SCSRATES:BUILDING_CODE_DELETE
            L_FACTOR_1 = SCSRATES:BUILDING_CODE_FACTOR
            L_BUILDING_CODE_PER = SCSRATES:BUILDING_CODE_PER
            End

        Next SCSRATES
        End

Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

If agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no And
   agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO And
   agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO Then
    Change agqCONTRACTOR_ALIAS
        Begin
        If agqCONTRACTOR_ALIAS:BUILDING_CODE_LAW = 0 Then
            agqCONTRACTOR_ALIAS:BUILDING_CODE_PREMIUM = ((agqCONTRACTOR_ALIAS:BUILDING_PREMIUM *
                                                        L_FACTOR_2) -
                                                        agqCONTRACTOR_ALIAS:BUILDING_PREMIUM)
        Else
            Begin
            L_BUILDING_CODE_FACTOR = ((((agqCONTRACTOR_ALIAS:BUILDING_CODE_LAW -
                                      L_BUILDING_CODE_PER) Divide
                                      L_BUILDING_CODE_PER) * L_FACTOR_1) + 1)
            L_BUILDING_CODE_PREM = agqCONTRACTOR_ALIAS:BUILDING_PREMIUM * L_BUILDING_CODE_FACTOR
            agqCONTRACTOR_ALIAS:BUILDING_CODE_PREMIUM = L_BUILDING_CODE_PREM -
                                              agqCONTRACTOR_ALIAS:BUILDING_PREMIUM
            End
    End
End

Procedure RATE_WATERBACKUP
Begin
Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

If agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no And
   agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO And
   agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO Then
    Change agqCONTRACTOR_ALIAS
        Begin
        If agqCONTRACTOR_ALIAS:LIMIT_WATER_BKUP = 1 Then
            Begin
            agqCONTRACTOR_ALIAS:WATER_BKUP_PREMIUM = L_WATER_BKUP_CHARGE
            If agqCONTRACTOR_ALIAS:WATER_BKUP_LIMIT <> L_WATER_BKUP_BASIC Then
                agqCONTRACTOR_ALIAS:WATER_BKUP_PREMIUM = (L_WATER_BKUP_CHARGE +
                                                         (((agqCONTRACTOR_ALIAS:WATER_BKUP_LIMIT -
                                                         L_WATER_BKUP_BASIC)
                                                         Divide L_WATER_BKUP_PER) * L_WATER_BKUP_RATE))
            End
        Else
            Begin
            agqCONTRACTOR_ALIAS:WATER_BKUP_PREMIUM = 0
            End

        End

End

Procedure RATE_ACV_BUILDING
Begin
Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

If agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no And
   agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO And
   agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO Then
    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:BUILDING_ACV_PREMIUM =
                            ((agqCONTRACTOR_ALIAS:BUILDING_PREMIUM *
                            L_BUILDING_ACV) -
                            agqCONTRACTOR_ALIAS:BUILDING_PREMIUM)
        End
End

Procedure RATE_ACV_CONTENTS
Begin
Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

If agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no And
   agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO And
   agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO Then
    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:CONTENTS_ACV_PREMIUM =
                            ((agqCONTRACTOR_ALIAS:PROPERTY_PREMIUM *
                            L_CONTENTS_ACV) -
                            agqCONTRACTOR_ALIAS:PROPERTY_PREMIUM)
        End

End

Procedure RATE_OFF_PREMISES
Begin
Access SCSOFFPREM, Set SCSOFFPREM:COMPANY_ID = agqcontractor:company_id,
                       SCSOFFPREM:STATE = agqCONTRACTOR:STATE,
                       SCSOFFPREM:LINE_OF_BUSINESS = agqcontractor:line_of_business,
                       SCSOFFPREM:LIMIT = agqCONTRACTOR:OFF_PREM_LIMIT, Generic

Repeat Begin
    Exit If SCSOFFPREM:COMPANY_ID <> agqcontractor:company_id Or
            SCSOFFPREM:STATE <> agqCONTRACTOR:STATE Or
            SCSOFFPREM:LINE_OF_BUSINESS <> agqcontractor:line_of_business Or
            SCSOFFPREM:LIMIT <> agqCONTRACTOR:OFF_PREM_LIMIT

    If agqcontractor:eff_date >= SCSOFFPREM:EFF_DATE Then
        Begin
        L_CHARGE = SCSOFFPREM:CHARGE
        End

    Next SCSOFFPREM
    End

Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

If agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no And
   agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO And
   agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO Then
    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:OFF_PREM_PREMIUM = L_CHARGE
        End

End

Procedure RATE_FIRE_LEGAL
Begin
L_COMPANY_ID = agqcontractor:company_id
L_STATE = agqCONTRACTOR:STATE
L_LINE_OF_BUSINESS = agqcontractor:line_of_business
L_EFF_DATE = agqcontractor:eff_date
L_FIRE_LIMIT = agqLIABLIMITS:FIRE_LEGAL
L_RECORD_KEY = "FL"

Include "scsfire.inc"

Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

If agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no And
   agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO And
   agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO Then
    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:FIRE_PREMIUM = L_FIRE_RATE
        End
    l_total_liability = l_total_liability + l_Fire_rate

End

Procedure ACCESS_LOSSCOST
Begin
L_COMPANY_ID = agqcontractor:company_id
L_STATE = agqCONTRACTOR:STATE
L_LINE_OF_BUSINESS = agqcontractor:line_of_business
Access SFSLOSSCOST, Set SFSLOSSCOST:COMPANY_ID = L_COMPANY_ID,
                        SFSLOSSCOST:STATE = L_STATE,
                        SFSLOSSCOST:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

Repeat Begin
   Exit If SFSLOSSCOST:COMPANY_ID <> L_COMPANY_ID Or
           SFSLOSSCOST:STATE <> L_STATE Or
           SFSLOSSCOST:LINE_OF_BUSINESS <> L_LINE_OF_BUSINESS

   If agqcontractor:eff_date >= SFSLOSSCOST:EFF_DATE Then
       L_LOSS_COST = SFSLOSSCOST:RATE

Next SFSLOSSCOST
End

If L_LOSS_COST = 0 Then
    L_LOSS_COST = 1.0000

/* end of access_sfslosscost */
End

Procedure GET_RATE
Begin
Access agqLOCATION, Set agqLOCATION:app_no = agqCONTRACTOR:app_no,
                        agqLOCATION:PREM_NO = agqCONTRACTOR:PREM_NO,
                        agqLOCATION:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

If agqLOCATION:app_no = agqCONTRACTOR:app_no And
   agqLOCATION:PREM_NO = agqCONTRACTOR:PREM_NO And
   agqLOCATION:BUILD_NO = agqCONTRACTOR:BUILD_NO Then
    Change agqLOCATION
        Begin
        agqLOCATION:LINE_OF_BUSINESS = agqcontractor:line_of_business
        agqLOCATION:STATE = agqCONTRACTOR:STATE
        agqLOCATION:COUNTY = agqCONTRACTOR:COUNTY
        agqLOCATION:TRANS_CODE = 10
        agqLOCATION:TRANS_DATE = agqNAME:TRANS_DATE
        agqLOCATION:EFF_DATE = agqcontractor:eff_date
        agqLOCATION:EXP_DATE = agqNAME:EXP_DATE
        agqLOCATION:LIMIT_CODE[1] = "A"
        agqLOCATION:LIMIT[1] = agqCONTRACTOR:BUILDING_LIMIT
        agqLOCATION:LIMIT_CODE[2] = "B"
        agqLOCATION:LIMIT[2] = agqCONTRACTOR:PROPERTY_LIMIT
        agqLOCATION:LIMIT_CODE[3] = "C"
        agqLOCATION:LIMIT[3] = agqCONTRACTOR:PERSONAL_LIMIT
        agqLOCATION:LIMIT_CODE[4] = "D"
        agqLOCATION:LIMIT[4] = agqCONTRACTOR:LOSS_LIMIT
        agqLOCATION:LIMIT_CODE[5] = "E"
        agqLOCATION:LIMIT[5] = agqLIABLIMITS:OCCURRENCE
        agqLOCATION:LIMIT_CODE[6] = "F"
        agqLOCATION:LIMIT[6] = agqLIABLIMITS:MEDICAL_PAYMENTS
        agqLOCATION:LIMIT_CODE[10] = "T"
        agqLOCATION:LIMIT[10] = agqCONTRACTOR:BUILDING_LIMIT +
                                agqCONTRACTOR:PROPERTY_LIMIT +
                                agqCONTRACTOR:PERSONAL_LIMIT +
                                agqCONTRACTOR:LOSS_LIMIT
        agqLOCATION:PREMIUM[10] = L_LOC_TOTAL
        End

Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

If agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no And
   agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO And
   agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO Then
    Change agqCONTRACTOR_ALIAS
        Begin
        agqCONTRACTOR_ALIAS:SCP_TOTAL = L_LOC_TOTAL
        End

L_TOTAL = L_LOC_TOTAL + L_TOTAL

/* end of get rate */
End

Procedure MINIMUM_PREMIUMS
Begin
Access SFSCONTROL, Set SFSCONTROL:COMPANY_ID = agqcontractor:company_id,
                       SFSCONTROL:STATE = agqCONTRACTOR:STATE,
                       SFSCONTROL:LINE_OF_BUSINESS = agqcontractor:line_of_business, Approximate

Repeat Begin
    Exit If SFSCONTROL:COMPANY_ID <> agqcontractor:company_id Or
            SFSCONTROL:STATE <> agqCONTRACTOR:STATE Or
            SFSCONTROL:LINE_OF_BUSINESS <> agqcontractor:line_of_business

    If agqcontractor:eff_date >= SFSCONTROL:EFF_DATE Then
        Begin
        L_MINIMUM = SFSCONTROL:MINIMUM_PREMIUM
        L_INLAND_MARINE_MINIMUM = SFSCONTROL:INLAND_MARINE_PREMIUM
        l_agent_minimum = sfscontrol:agent_minimum
        End

    Next SFSCONTROL
    End

End

Procedure TOTALS
Begin
Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no, generic

l_total = 0
while agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no
    begin
    l_total = agqcontractor_alias:scp_total + l_total

    next agqcontractor_alias
    end

L_MINIMUM_APPLIES = "N"
l_total_3 = l_total - l_scp100
If L_TOTAL_3 < L_MINIMUM Then
    Begin
    L_TOTAL = L_MINIMUM + l_scp100
    L_MINIMUM_APPLIES = "Y"
    if l_property_total = 0 then
        l_total_liability = l_minimum
    else
    if l_property_total <> 0 then
        begin
        l_property_total = l_minimum - l_total_liability
        end
    End

End

Procedure FINAL_TOTAL
Begin
L_EFF_DATE_1 = Dateadd(agqcontractor:eff_date,0,1)
If agqcontractor:EXP_DATE < L_EFF_DATE_1 Then
    Begin
    L_DAYS_RATE = L_TOTAL Divide 365
    L_DAYS = agqcontractor:EXP_DATE - agqcontractor:eff_date
    L_PRO_RATA_PREMIUM = L_DAYS * L_DAYS_RATE
    L_TOTAL = L_PRO_RATA_PREMIUM
    End

If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
    L_FINAL_TOTAL = L_TOTAL + L_INSTALLMENT
Else
    L_FINAL_TOTAL = L_TOTAL

access agqmaster, set agqmaster:app_no = g_app_no, generic

-- if minimum premium not irpm allowed
/*If L_MINIMUM_APPLIES = "Y" And
   agqMASTER:IRPM <> 0 Then
    Begin
    Access agqMASTER, Set agqMASTER:app_no = G_app_no, Exact

    If agqMASTER:app_no = G_app_no Then
        begin
        Change agqMASTER
            Begin
            agqMASTER:IRPM = 0
            End
        end
    End*/

L_RATE_FACTOR = 0.01
L_IRPM = (1 + (agqMASTER:IRPM * L_RATE_FACTOR))
If L_IRPM = 0 Then
    L_IRPM = 1

If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
    Begin
    If agqMASTER:IRPM <> 0 Then
        Begin
        L_IRPM_TOTAL = ((L_TOTAL * L_IRPM) + L_INSTALLMENT)
        End
    End
Else
    Begin
    If agqMASTER:IRPM <> 0 Then
        Begin
        L_IRPM_TOTAL = L_TOTAL * L_IRPM
        End
    End

if l_agent_minimum <> 0 and
   l_irpm_total < l_agent_minimum and
   agqcontractor:company_id = "FARMERS" and
   agqmaster:form not one of 4 and
   agqcontractor:deductible = l_deductible and
   agqcontractor:deductible <> 0 then
    begin
    l_irpm       = 1
    l_irpm_total = 0
    access agqmaster, set agqmaster:app_no = g_app_no, generic

    if agqmaster:app_no = g_app_no then
        begin
        change agqmaster
            begin
            agqmaster:irpm = 0
            agqmaster:minimum_premium[1] = "Y"
            end
        end
    End
else
if l_agent_minimum <> 0 and
   l_irpm_total >= l_agent_minimum and
   agqcontractor:company_id = "FARMERS" and
   agqmaster:form not one of 4 and
   agqcontractor:deductible = l_deductible and
   agqcontractor:deductible <> 0 then
    begin
    access agqmaster, set agqmaster:app_no = g_app_no, generic

    if agqmaster:app_no = g_app_no then
        begin
        change agqmaster
            begin
            agqmaster:minimum_premium[1] = ""
            end
        end
    end

if l_agent_minimum <> 0 and
   l_irpm_total < l_agent_minimum and
   agqcontractor:company_id = "FARMERS" and
   agqmaster:deductible = l_deductible and
   agqmaster:form one of 4 then
    begin
    l_irpm       = 1
    l_irpm_total = 0
    access agqmaster, set agqmaster:app_no = g_app_no, generic

    if agqmaster:app_no = g_app_no then
        begin
        change agqmaster
            begin
            agqmaster:irpm = 0
            agqmaster:minimum_premium[1] = "Y"
            end
        end
    End
else
if l_agent_minimum <> 0 and
   l_irpm_total => l_agent_minimum and
   agqcontractor:company_id = "FARMERS" and
   agqmaster:deductible = l_deductible and
   agqmaster:form one of 4 then
    begin
    access agqmaster, set agqmaster:app_no = g_app_no, generic

    if agqmaster:app_no = g_app_no then
        begin
        change agqmaster
            begin
            agqmaster:minimum_premium[1] = ""
            end
        end
    end

access sfssurcharge, set sfssurcharge:company_id = agqcontractor:company_id,
                         sfssurcharge:state = agqcontractor:state,
                         sfssurcharge:line_of_business = agqcontractor:line_of_business, generic

l_surcharge_date = 0
while sfssurcharge:company_id = agqcontractor:company_id and
      sfssurcharge:state = agqcontractor:state and
      sfssurcharge:line_of_business = agqcontractor:line_of_business
        begin
        if (agqcontractor:eff_date >= sfssurcharge:eff_date and
           (l_surcharge_date < sfssurcharge:eff_date or
           l_surcharge_date = 0)) then
            begin
            l_surcharge_date    = sfssurcharge:eff_date
            l_surcharge_factor  = sfssurcharge:surcharge_factor
            l_surcharge_minimum = sfssurcharge:minimum_premium
            end
        next sfssurcharge
        end

If L_IRPM_TOTAL <> 0 Then
    L_SURCHARGE = L_IRPM_TOTAL * L_SURCHARGE_FACTOR
Else
    L_SURCHARGE = L_FINAL_TOTAL * L_SURCHARGE_FACTOR

If L_SURCHARGE < L_SURCHARGE_MINIMUM Then
    L_SURCHARGE = L_SURCHARGE_MINIMUM

L_COMPANY_ID = agqcontractor:company_id

Access agqMASTER, Set agqMASTER:app_no = agqCONTRACTOR:app_no, Exact

Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no, Generic

L_PROPERTY_TOTAL = 0
While agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no
    Begin
    L_PROPERTY_TOTAL = L_PROPERTY_TOTAL +
                       agqCONTRACTOR_ALIAS:PROPERTY_TOTAL

    Next agqCONTRACTOR_ALIAS
    End

end

procedure update_totals
begin
access agqtotals, set agqtotals:app_no     = agqcontractor:app_no,
                      agqtotals:prem_no    = agqcontractor:prem_no,
                      agqtotals:build_no   = agqcontractor:build_no,
                      agqtotals:deductible = l_deductible, generic

if agqtotals:app_no     = agqcontractor:app_no and
   agqtotals:prem_no    = agqcontractor:prem_no and
   agqtotals:build_no   = agqcontractor:build_no and
   agqtotals:deductible = l_deductible then
    begin
    change agqtotals
        begin
        agqtotals:deductible_premium          = l_loc_total
        end
    end
else
    begin
    add agqtotals
        begin
        agqtotals:app_no                      = agqcontractor:app_no
        agqtotals:prem_no                     = agqcontractor:prem_no
        agqtotals:build_no                    = agqcontractor:build_no
        agqtotals:deductible                  = l_deductible
        agqtotals:deductible_premium          = l_loc_total
        end
    end

l_total_all_locations = l_loc_total +
                        l_total_all_locations
End


procedure update_policy_totals
begin
l_total_all_locations = l_total_all_locations
access agqtotals, set agqtotals:app_no     = agqcontractor:app_no,
                      agqtotals:prem_no    = 0,
                      agqtotals:build_no   = 0,
                      agqtotals:deductible = l_deductible, generic

if agqtotals:app_no     = agqcontractor:app_no and
   agqtotals:prem_no    = 0 and
   agqtotals:build_no   = 0 and
   agqtotals:deductible = l_deductible then
    begin
    change agqtotals
        begin
        agqtotals:deductible_premium            = l_total_all_locations
        agqtotals:terrorism_premium             = l_terrorism_premium
        agqtotals:pliga                         = l_surcharge
--        agqtotals:minimum_premium               = l_agqtotals_minimum
        end
    end
else
    begin
    add agqtotals
        begin
        agqtotals:app_no                        = agqcontractor:app_no
        agqtotals:prem_no                       = 0
        agqtotals:build_no                      = 0
        agqtotals:deductible                    = l_deductible
        agqtotals:deductible_premium            = l_total_all_locations
        agqtotals:terrorism_premium             = l_terrorism_premium
        agqtotals:pliga                         = l_surcharge
--        agqtotals:minimum_premium               = l_agqtotals_minimum
        end
    end

Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no, Generic

If agqMASTER:app_no = agqCONTRACTOR:app_no Then
    Change agqMASTER
        Begin
        -- need these totals for inquiry purposes
        agqmaster:TOTAL[3] = L_BUILDING_PREMIUM
        agqmaster:TOTAL[4] = L_PROPERTY_PREMIUM
        agqmaster:TOTAL[5] = L_PERSONAL_PREMIUM
        agqmaster:TOTAL[6] = L_LOSS_PREMIUM
        if agqname:company_id <> "FLEMINGTON" then
            begin
            agqmaster:total[8] = l_total_liability
            end
        else
            begin
            if l_irpm_total <> 0 then
                agqmaster:total[8] = (l_total_liability -
                                     (l_total - l_irpm_total))
            else
                agqmaster:total[8] = l_total_liability
            end
        if agqname:company_id <> "FLEMINGTON" then
            begin
            agqmaster:total[10] = l_property_total
            end
        else
        if l_property_total <> 0 then
            begin
            agqmaster:total[10] = l_property_total
            end
        agqmaster:TOTAL[9]  = L_INLAND_TOTAL
        agqmaster:total[12] = l_flat_premium
        if l_flat_premium <> 0 then
            agqmaster:fully_earned = 1
        else
            agqmaster:fully_earned = 0
        agqmaster:total[13] = l_scp103
        if l_property_total <> 0 then
            begin
            agqmaster:other_totals[1] = ((l_property_total +
                                        l_inland_total +
                                        l_scp100) *
                                        l_irpm)
            agqmaster:other_totals[2] = ((l_total_liability -
                                        l_scp100 -
                                        l_inland_total) *
                                        l_irpm)
            end
        else
            begin
            agqmaster:other_totals[1] = 0
            agqmaster:other_totals[2] = l_total_liability *
                                        l_irpm
            end
        l_other_totals = agqmaster:other_totals[1] +
                         agqmaster:other_totals[2]
        if l_other_totals <> l_irpm_total then
            agqmaster:other_totals[2] = (agqmaster:other_totals[2] +
                                        (l_irpm_total -
                                        l_other_totals))
        agqmaster:TOTAL[17] = L_TOTAL
        agqmaster:TOTAL[18] = L_FINAL_TOTAL
        agqmaster:TOTAL[19] = L_IRPM_TOTAL
        If L_IRPM_TOTAL <> 0 Then
            Begin
            If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                Begin
                agqmaster:TOTAL[1] = L_IRPM_TOTAL - L_INSTALLMENT
                End
            Else
                Begin
                agqmaster:TOTAL[1] = L_IRPM_TOTAL
                End
            End
        Else
            Begin
            If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                Begin
                agqmaster:TOTAL[1] = L_FINAL_TOTAL - L_INSTALLMENT
                End
            Else
                Begin
                agqmaster:TOTAL[1] = L_FINAL_TOTAL
                End
            End

        agqMASTER:RAW_PREMIUM_AMT_DUE = L_TOTAL * L_IRPM
        agqMASTER:INSTALLMENT_CHARGE = L_INSTALLMENT
        If L_MINIMUM_APPLIES = "Y" Then
            agqMASTER:MINIMUM_PREM_APPLIES = "Y"
        agqMASTER:SURCHARGE = L_SURCHARGE
        End

Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = g_app_no, generic

while agqcontractor_alias:app_no = g_app_no
    begin
    Change agqCONTRACTOR_ALIAS
        Begin
        agqcontractor_alias:breakout_property_subline = 1
        end

    next agqcontractor_alias
    end

/* end of final total */
End

Procedure RATE_ENDORSEMENTS
Begin
Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID = agqcontractor:company_id,
                      SFSOPTEND:STATE = agqCONTRACTOR:STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = agqcontractor:line_of_business,
                      SFSOPTEND:CODE = L_CODE, Generic

Repeat Begin
    Exit If SFSOPTEND:COMPANY_ID <> agqcontractor:company_id Or
            SFSOPTEND:STATE <> agqCONTRACTOR:STATE Or
            SFSOPTEND:LINE_OF_BUSINESS <> agqcontractor:line_of_business Or
            SFSOPTEND:CODE <> L_CODE

    If (agqcontractor:eff_date >= SFSOPTEND:EFF_DATE and
       (agqcontractor:eff_date <= sfsoptend:exp_date or
       sfsoptend:exp_date = 0)) Then
        Begin
        L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
        L_END_LIMIT = SFSOPTEND:LIMIT[1]
        L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
        l_end_premium2 = sfsoptend:premium_1[2]
        l_end_limit_1 = sfsoptend:limit[2]
        l_system_rate = sfsoptend:system_rate

        if l_code one of "MSC120" then
            begin
            Access agqendorse3, Set agqendorse3:app_no   = agqcontractor:app_no,
                                    agqendorse3:PREM_NO  = 0,
                                    agqendorse3:BUILD_NO = 0,
                                    agqendorse3:CODE     = L_CODE, Generic

            if agqendorse3:app_no <> g_app_no or
               agqendorse3:prem_no <> 0 or
               agqendorse3:build_no <> 0 or
               agqendorse3:code <> l_code then
                begin
                g_code = l_code
                g_app_no = agqcontractor:app_no
                display modal screen "agtmt395"
                with initial function "ADD"
                end

            Access agqendorse3, Set agqendorse3:app_no = agqcontractor:app_no,
                                    agqendorse3:PREM_NO  = 0,
                                    agqendorse3:BUILD_NO = 0,
                                    agqendorse3:CODE     = L_CODE, Generic

            l_end_premium1 = sfsoptend:premium_1[1]
            if agqendorse3:janitorial = 1 then
                l_end_premium1 = l_end_premium1 * sfsoptend:premium_1[2]
            end

        if l_code one of "MCP141", "MCP140" then
            begin
            Access agqendorse3, Set agqendorse3:app_no   = agqcontractor:app_no,
                                    agqendorse3:PREM_NO  = agqCONTRACTOR:PREM_NO,
                                    agqendorse3:BUILD_NO = agqCONTRACTOR:BUILD_NO,
                                    agqendorse3:CODE     = L_CODE, Generic

            switch(agqendorse3:limit[1])
              case 10000 : l_end_premium1 = sfsoptend:premium_1[1]
              case 25000 : l_end_premium1 = sfsoptend:premium_1[2]
              default    : l_end_premium1 = sfsoptend:premium_1[3]
              end
            end

        if l_code one of "MCL883", "MCL884" then
            begin
            access agqendorse3, set agqendorse3:app_no   = agqcontractor:app_no,
                                    agqendorse3:prem_no  = agqcontractor:prem_no,
                                    agqendorse3:build_no = agqcontractor:build_no,
                                    agqendorse3:code     = l_code, generic

            switch(agqendorse3:limit[1])
              case 50000 : l_end_premium1 = ((agqcontractor:liability_premium *
                                            sfsoptend:premium_1[1]) -
                                            agqcontractor:liability_premium)
              default    : l_end_premium1 = ((agqcontractor:liability_premium *
                                            sfsoptend:premium_1[2]) -
                                            agqcontractor:liability_premium)
              end
            if l_end_premium1 < sfsoptend:premium_1[3] then
                l_end_premium1 = sfsoptend:premium_1[3]
            end


        if l_code = "SCP103" then
            begin
            l_end_premium1 = ((l_total_liability * sfsoptend:premium_1[1]) -
                             l_total_liability)
            if l_end_premium1 < sfsoptend:premium_1[2] then
                l_end_premium1 = sfsoptend:premium_1[2]
            l_scp103 = l_end_premium1
            end

        if l_code = "SCP102" then
            begin
            if agqliablimits:occurrence = sfsoptend:limit[1] then
                l_end_premium1 = sfsoptend:premium_1[1]
            else
            if agqliablimits:occurrence = sfsoptend:limit[2] then
                l_end_premium1 = sfsoptend:premium_1[2]
            else
            if agqliablimits:occurrence = sfsoptend:limit[3] then
                l_end_premium1 = sfsoptend:premium_1[3]
            l_flat_premium = l_end_premium1
            end

        if l_code = "MCP173" then
            begin
            Access agqendorse3, Set agqendorse3:app_no = agqcontractor:app_no,
                                   agqendorse3:PREM_NO  = agqCONTRACTOR:PREM_NO,
                                   agqendorse3:BUILD_NO = agqCONTRACTOR:BUILD_NO,
                                   agqendorse3:CODE     = L_CODE, Generic

            switch(agqendorse3:limit[1])
              case 10000 : switch(agqendorse3:limit[2])
                             case 2000  : l_end_premium1 = sfsoptend:premium_1[1]
                             case 5000  : l_end_premium1 = sfsoptend:premium_1[2]
                             case 10000 : l_end_premium1 = sfsoptend:premium_1[3]
                             end
              default    : l_end_premium1 = sfsoptend:premium_1[4]
              end
            end

        End

    Next SFSOPTEND
    End

l_update_sfpend_premium = l_end_premium1

if l_code = "SCP100" then
    begin
    l_update_sfpend_premium = l_end_premium1
    l_scp100 = l_end_premium1
    end

If L_CODE one of "MIM100", "MIM101" Then
    Begin
    Access agqendorse3, Set agqendorse3:app_no  = agqcontractor:app_no,
                            agqendorse3:PREM_NO  = agqCONTRACTOR:PREM_NO,
                            agqendorse3:BUILD_NO = agqCONTRACTOR:BUILD_NO,
                            agqendorse3:CODE     = L_CODE, Generic

    if agqendorse3:total_premium <> 0 then
        l_update_sfpend_premium = agqendorse3:total_premium
    else
    if agqendorse3:premium[1] <> 0 then
        l_update_sfpend_premium = agqendorse3:premium[1]
    else
        begin
        if l_property_adjustments = 0 then
            l_property_adjustments = 1.00
        L_COMPUTER_FACTOR       = L_PROPERTY_RATE * L_PROPERTY_ADJUSTMENTS
        L_UPDATE_SFPEND_PREMIUM = ((L_property_rate * l_property_adjustments) *
                                  ((agqendorse3:LIMIT[1] + agqendorse3:limit[3] +
                                  agqendorse3:LIMIT[2]) Divide L_END_LIMIT))
        End

    L_INLAND_TOTAL = L_INLAND_TOTAL + L_UPDATE_SFPEND_PREMIUM
    L_INLAND_MARINE_CODE = "Y"
    End

If L_CODE = "MCM841" Then
    Begin
    L_UPDATE_SFPEND_PREMIUM = 0
    Access agqendorse3, Set agqendorse3:app_no = agqcontractor:app_no,
                           agqendorse3:PREM_NO  = agqCONTRACTOR:PREM_NO,
                           agqendorse3:BUILD_NO = agqCONTRACTOR:BUILD_NO,
                           agqendorse3:CODE     = L_CODE, Generic

    l_limit = agqendorse3:limit[1]
    l_state = agqcontractor:state
    access scsumuim, set scsumuim:company_id       = agqcontractor:company_id,
                         scsumuim:state            = l_state,
                         scsumuim:line_of_business = agqcontractor:line_of_business,
                         scsumuim:limit            = l_limit, generic

    while scsumuim:company_id       = agqcontractor:company_id and
          scsumuim:state            = l_state and
          scsumuim:line_of_business = agqcontractor:line_of_business and
          scsumuim:limit            = l_limit
            begin
            if agqcontractor:eff_date >= scsumuim:eff_date then
                begin
                l_update_sfpend_premium = scsumuim:charge
                end

            next scsumuim
            end

    End

if l_code = "MCL425" then
    Begin
    Access agqendorse3, Set agqendorse3:app_no = agqcontractor:app_no,
                           agqendorse3:PREM_NO  = agqcontractor:PREM_NO,
                           agqendorse3:BUILD_NO = agqcontractor:BUILD_NO,
                           agqendorse3:CODE     = L_CODE, Generic

    l_company_id       = agqcontractor:company_id
    l_state            = agqcontractor:state
    l_line_of_business = agqcontractor:line_of_business
    l_employee_limit   = agqendorse3:limit[1]
    l_deductible       = agqendorse3:deductible[1]
    l_no_employees     = agqendorse3:no_employees[1]
    l_eff_date         = agqcontractor:eff_date

    access scsemployee, set scsemployee:company_id       = l_company_id,
                            scsemployee:state            = l_state,
                            scsemployee:line_of_business = l_line_of_business, generic

    while scsemployee:company_id       = l_company_id and
          scsemployee:state            = l_state and
          scsemployee:line_of_business = l_line_of_business
            begin
            if l_eff_date >= scsemployee:rate_date then
                begin
                switch(l_employee_limit)
                  case 25000 : begin
                               if l_no_employees < 26 then
                                   l_employee_charge = scsemployee:charge[1]
                               else
                               if l_no_employees < 101 then
                                   l_employee_charge = scsemployee:charge[2]
                               else
                                   l_employee_charge = scsemployee:charge[3]
                               end
                  case 50000 : begin
                               if l_no_employees < 26 then
                                   l_employee_charge = scsemployee:charge[4]
                               else
                               if l_no_employees < 101 then
                                   l_employee_charge = scsemployee:charge[5]
                               else
                                   l_employee_charge = scsemployee:charge[6]
                               end
                  case 100000 : begin
                                if l_no_employees < 26 then
                                   l_employee_charge = scsemployee:charge[7]
                                else
                                if l_no_employees < 101 then
                                    l_employee_charge = scsemployee:charge[8]
                                else
                                    l_employee_charge = scsemployee:charge[9]
                                end
                  case 500000 : begin
                                if l_no_employees < 26 then
                                    l_employee_charge = scsemployee:charge[10]
                                else
                                if l_no_employees < 101 then
                                    l_employee_charge = scsemployee:charge[11]
                                else
                                    l_employee_charge = scsemployee:charge[12]
                                end
                   default    : begin
                                if l_no_employees < 26 then
                                    l_employee_charge = scsemployee:charge[13]
                                else
                                if l_no_employees < 101 then
                                    l_employee_charge = scsemployee:charge[14]
                                else
                                    l_employee_charge = scsemployee:charge[15]
                                end
                   end

                switch(l_deductible)
                  case 1000 : l_employee_deduct_factor = scsemployee:deductible_factor[1]
                  case 2500 : l_employee_deduct_factor = scsemployee:deductible_factor[2]
                  case 5000 : l_employee_deduct_factor = scsemployee:deductible_factor[3]
                  default   : l_employee_deduct_factor = scsemployee:deductible_factor[4]
                  end

               l_employee_minimum = scsemployee:minimum_premium
                end

            next scsemployee
            end

    l_update_sfpend_premium = l_employee_charge *
                              l_employee_deduct_factor
    if l_update_sfpend_premium < l_employee_minimum then
        l_update_sfpend_premium = l_employee_minimum
    l_deductible = g_deductible
    end

If L_CODE one of "MCL309", "MCL311", "MCL317", "MCL312", "MCL313", "MCL320",
                 "MCL322", "MCL324", "MCL328" and
    agqcontractor:company_id = "FARMERS" then
    Begin
    Access agqaddin3, Set agqaddin3:app_no = agqCONTRACTOR:app_no,
                          agqaddin3:PREM_NO = agqCONTRACTOR:PREM_NO,
                          agqaddin3:BUILD_NO = agqCONTRACTOR:BUILD_NO,
                          agqaddin3:CODE = L_CODE, Generic

    Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                    agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                    agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

    If agqaddin3:TOTAL_PREMIUM <> 0 Then
        L_UPDATE_SFPEND_PREMIUM = agqaddin3:TOTAL_PREMIUM
    else
        begin
        if sfscompany:special_territory_rating = 1 then
            l_update_sfpend_premium = l_end_factor
        else
        if l_end_factor <> 0 then
            begin
            L_UPDATE_SFPEND_PREMIUM = L_addl_LIABILITY *
                                      L_END_FACTOR
            end
        end
    End

If L_CODE one of "MCL309", "MCL311", "MCL317", "MCL312", "MCL313", "MCL320",
                 "MCL322", "MCL324" and
    agqcontractor:company_id = "FLEMINGTON" then
    Begin
    Access agqaddin3, Set agqaddin3:app_no = agqCONTRACTOR:app_no,
                          agqaddin3:PREM_NO = agqCONTRACTOR:PREM_NO,
                          agqaddin3:BUILD_NO = agqCONTRACTOR:BUILD_NO,
                          agqaddin3:CODE = L_CODE, Generic

    l_update_sfpend_premium = 0
    while agqaddin3:app_no = agqCONTRACTOR:app_no and
          agqaddin3:PREM_NO = agqCONTRACTOR:PREM_NO and
          agqaddin3:BUILD_NO = agqCONTRACTOR:BUILD_NO and
          agqaddin3:CODE = L_CODE
        begin
        Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                        agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,
                                        agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

        If agqaddin3:TOTAL_PREMIUM <> 0 Then
            L_UPDATE_SFPEND_PREMIUM = l_update_sfpend_premium +
                                      agqaddin3:TOTAL_PREMIUM

        next agqaddin3
        end
    End

if l_code = "MCL328" and
   agqcontractor:company_id = "FLEMINGTON" then
    begin
    Access agqaddin3, Set agqaddin3:app_no   = agqCONTRACTOR:app_no,
                          agqaddin3:PREM_NO  = agqCONTRACTOR:PREM_NO,
                          agqaddin3:BUILD_NO = agqCONTRACTOR:BUILD_NO,
                          agqaddin3:CODE     = L_CODE, Generic

    l_update_sfpend_premium = 0
    while agqaddin3:app_no   = agqCONTRACTOR:app_no and
          agqaddin3:PREM_NO  = agqCONTRACTOR:PREM_NO and
          agqaddin3:BUILD_NO = agqCONTRACTOR:BUILD_NO and
          agqaddin3:CODE     = L_CODE
        begin
        if agqaddin3:no_addl_insureds_under_10 = 1 then
            l_update_sfpend_premium = l_update_sfpend_premium + l_end_premium1
        if agqaddin3:no_addl_insureds_over_10 = 1 then
            l_update_sfpend_premium = l_update_sfpend_premium + l_end_premium2

        next agqaddin3
        end

    end

if L_CODE = "MCL325" Or
   L_CODE = "MCL326" Then
    Begin
    Access agqaddin3, Set agqaddin3:app_no = agqCONTRACTOR:app_no,
                          agqaddin3:PREM_NO = agqCONTRACTOR:PREM_NO,
                          agqaddin3:BUILD_NO = agqCONTRACTOR:BUILD_NO,
                          agqaddin3:CODE = L_CODE, generic
--                          agqaddin3:sub_code = l_sub_code, Generic

    l_update_sfpend_premium = 0
    while agqaddin3:app_no = agqcontractor:app_no and
          agqaddin3:prem_no = agqcontractor:prem_no and
          agqaddin3:build_no = agqcontractor:build_no and
          agqaddin3:code = l_code --and
--          agqaddin3:sub_code = l_sub_code
            begin
            Access agqCONTRACTOR_ALIAS, Set agqCONTRACTOR_ALIAS:app_no = agqCONTRACTOR:app_no,
                                            agqCONTRACTOR_ALIAS:PREM_NO = agqCONTRACTOR:PREM_NO,

                                            agqCONTRACTOR_ALIAS:BUILD_NO = agqCONTRACTOR:BUILD_NO, Generic

            If agqaddin3:TOTAL_PREMIUM <> 0 Then
                L_UPDATE_SFPEND_PREMIUM = agqaddin3:TOTAL_PREMIUM +
                                          l_update_sfpend_premium
            Else
                begin
                if sfscompany:special_territory_rating = 1 or
                   l_system_rate = 1 then
                    l_update_sfpend_premium = l_update_sfpend_premium +
                                              l_end_Factor
                else
                    L_UPDATE_SFPEND_PREMIUM = ((L_addl_LIABILITY *
                                              L_END_FACTOR) +
                                              l_update_sfpend_premium)

                end

            next agqaddin3
            end
    End

if l_code one of "MIM121" then
    begin
    Access agqendorse3, Set agqendorse3:app_no = G_app_no,
                           agqendorse3:PREM_NO = agqCONTRACTOR:PREM_NO,
                           agqendorse3:BUILD_NO = agqCONTRACTOR:BUILD_NO,
                           agqendorse3:CODE = L_CODE, Generic

    L_UPDATE_SFPEND_PREMIUM = 0
    While agqendorse3:app_no = G_app_no And
          agqendorse3:PREM_NO = agqCONTRACTOR:PREM_NO And
          agqendorse3:BUILD_NO = agqCONTRACTOR:BUILD_NO And
          agqendorse3:CODE = L_CODE
            begin
            if agqendorse3:premium[1] <> 0 or
               agqendorse3:premium[2] <> 0 then
                begin
                l_update_sfpend_premium = agqendorse3:premium[1] +
                                          agqendorse3:premium[2] +
                                          l_update_sfpend_premium
                end
            else
                begin
--                if agqcontractor:company_id = "FARMERS" then
--                    begin
                    if agqendorse3:limit[1] > l_end_limit_1 then
                        l_update_sfpend_premium = (((agqendorse3:limit[1] - l_end_limit_1)
                                                  divide l_end_limit) *
                                                  l_end_premium1)
--                    end
                end

/*            access agqdesc3, set agqdesc3:app_no = agqendorse3:app_no,
                                agqdesc3:prem_no = agqendorse3:prem_no,
                                agqdesc3:build_no = agqendorse3:build_no,
                                agqdesc3:code = agqendorse3:code, generic

            while agqdesc3:app_no = agqendorse3:app_no and
                  agqdesc3:prem_no = agqendorse3:prem_no and
                  agqdesc3:build_no = agqendorse3:build_no and
                  agqdesc3:code = agqendorse3:code
                    begin
                    l_update_sfpend_premium = l_update_sfpend_premium +
                                              agqdesc3:total_premium

                    next agqdesc3
                    end*/

            next agqendorse3
            end

    L_INLAND_TOTAL = L_INLAND_TOTAL + L_UPDATE_SFPEND_PREMIUM
    L_INLAND_MARINE_CODE = "Y"
    end

if l_code one of "MIM011" then
    begin
    Access agqendorse3, Set agqendorse3:app_no = G_app_no,
                           agqendorse3:PREM_NO = agqCONTRACTOR:PREM_NO,
                           agqendorse3:BUILD_NO = agqCONTRACTOR:BUILD_NO,
                           agqendorse3:CODE = L_CODE, Generic

    L_UPDATE_SFPEND_PREMIUM = 0
    l_premium_1 = 0
    l_premium_2 = 0
    l_premium_3 = 0
    l_premium_4 = 0
    l_premium_5 = 0
    l_premium_6 = 0
    l_premium_7 = 0
    l_premium_8 = 0
    While agqendorse3:app_no = G_app_no And
          agqendorse3:PREM_NO = agqCONTRACTOR:PREM_NO And
          agqendorse3:BUILD_NO = agqCONTRACTOR:BUILD_NO And
          agqendorse3:CODE = L_CODE
            begin
            if agqendorse3:limit[2] <> 0 then
                l_premium_1 = ((agqendorse3:limit[2] divide 100) *
                              agqendorse3:rate[1])
            if agqendorse3:limit[3] <> 0 then
                l_premium_2 = ((agqendorse3:limit[3] divide 100) *
                              agqendorse3:rate[2])
            if agqendorse3:limit[4] <> 0 then
                l_premium_3 = ((agqendorse3:limit[4] divide 100) *
                              agqendorse3:rate[3])
            if agqendorse3:limit[5] <> 0 then
                l_premium_4 = ((agqendorse3:limit[5] divide 100) *
                              agqendorse3:rate[4])
            if agqendorse3:limit[6] <> 0 then
                l_premium_5 = ((agqendorse3:limit[6] divide 100) *
                              agqendorse3:rate[5])
            if agqendorse3:limit[7] <> 0 then
                l_premium_6 = ((agqendorse3:limit[7] divide 100) *
                              agqendorse3:rate[6])
            if agqendorse3:limit[8] <> 0 then
                l_premium_7 = ((agqendorse3:limit[8] divide 100) *
                              agqendorse3:rate[7])
            if agqendorse3:limit[9] <> 0 then
                l_premium_8 = ((agqendorse3:limit[9] divide 100) *
                              agqendorse3:rate[8])

            next agqendorse3
            end

    l_update_sfpend_premium = l_premium_1 + l_premium_2 + l_premium_3 +
                              l_premium_4 + l_premium_5 + l_premium_6 +
                              l_premium_7 + l_premium_8

    L_INLAND_TOTAL = L_INLAND_TOTAL + L_UPDATE_SFPEND_PREMIUM
    L_INLAND_MARINE_CODE = "Y"
    end

if l_code one of "MIM013", "MIM110" then
    begin
    Access agqendorse3, Set agqendorse3:app_no = G_app_no,
                           agqendorse3:PREM_NO = agqCONTRACTOR:PREM_NO,
                           agqendorse3:BUILD_NO = agqCONTRACTOR:BUILD_NO,
                           agqendorse3:CODE = L_CODE, Generic

    L_UPDATE_SFPEND_PREMIUM = 0
    While agqendorse3:app_no = G_app_no And
          agqendorse3:PREM_NO = agqCONTRACTOR:PREM_NO And
          agqendorse3:BUILD_NO = agqCONTRACTOR:BUILD_NO And
          agqendorse3:CODE = L_CODE
            begin
            l_update_sfpend_premium = ((agqendorse3:limit[1] divide 100) *
                                      agqendorse3:rate[1])

            next agqendorse3
            end

    L_INLAND_TOTAL = L_INLAND_TOTAL + L_UPDATE_SFPEND_PREMIUM
    L_INLAND_MARINE_CODE = "Y"
    end

If L_CODE One Of "MCL410", "MCL411", "MCL412", "MCL510"  Then
    Begin
    Access agqendorse3, Set agqendorse3:app_no = G_app_no,
                           agqendorse3:PREM_NO = agqCONTRACTOR:PREM_NO,
                           agqendorse3:BUILD_NO = agqCONTRACTOR:BUILD_NO,
                           agqendorse3:CODE = L_CODE, Generic

    L_UPDATE_SFPEND_PREMIUM = 0
    While agqendorse3:app_no = G_app_no And
          agqendorse3:PREM_NO = agqCONTRACTOR:PREM_NO And
          agqendorse3:BUILD_NO = agqCONTRACTOR:BUILD_NO And
          agqendorse3:CODE = L_CODE
            Begin
            L_UPDATE_SFPEND_PREMIUM = agqendorse3:TOTAL_PREMIUM +
                                      L_UPDATE_SFPEND_PREMIUM

            Next agqendorse3
            End
    End

If L_CODE One Of "FM101" Then
    Begin
    L_UPDATE_SFPEND_PREMIUM = 0
    Access agqendorse3, Set agqendorse3:app_no = G_app_no,
                           agqendorse3:PREM_NO = agqCONTRACTOR:PREM_NO,
                           agqendorse3:BUILD_NO = agqCONTRACTOR:BUILD_NO,
                           agqendorse3:CODE = L_CODE, Generic

    While agqendorse3:app_no = G_app_no And
          agqendorse3:PREM_NO = agqCONTRACTOR:PREM_NO And
          agqendorse3:BUILD_NO = agqCONTRACTOR:BUILD_NO And
          agqendorse3:CODE = L_CODE
            Begin
            L_UPDATE_SFPEND_PREMIUM = agqendorse3:PREMIUM[1]  +
                                      L_UPDATE_SFPEND_PREMIUM
            Next agqendorse3
            End
    end

If L_CODE One Of "MIM112", "IM7005", "IM7015", "IM7105", "IM7205", "IM7206",
                 "IM7506", "IM7006", "PTF100", "MIM116", "MIM012" Then
    Begin
    L_UPDATE_SFPEND_PREMIUM = 0
    Access agqendorse3, Set agqendorse3:app_no = G_app_no,
                           agqendorse3:PREM_NO = agqCONTRACTOR:PREM_NO,
                           agqendorse3:BUILD_NO = agqCONTRACTOR:BUILD_NO,
                           agqendorse3:CODE = L_CODE, Generic

    While agqendorse3:app_no = G_app_no And
          agqendorse3:PREM_NO = agqCONTRACTOR:PREM_NO And
          agqendorse3:BUILD_NO = agqCONTRACTOR:BUILD_NO And
          agqendorse3:CODE = L_CODE
            Begin
            L_UPDATE_SFPEND_PREMIUM = agqendorse3:TOTAL_PREMIUM  +
                                      L_UPDATE_SFPEND_PREMIUM
            Next agqendorse3
            End

--    if l_code not one of "MIM112" then
--    begin
    Access agqdesc3, Set agqdesc3:app_no = G_app_no,
                        agqdesc3:PREM_NO = agqCONTRACTOR:PREM_NO,
                        agqdesc3:BUILD_NO = agqCONTRACTOR:BUILD_NO,
                        agqdesc3:CODE = L_CODE, Generic

    While agqdesc3:app_no = G_app_no And
          agqdesc3:PREM_NO = agqCONTRACTOR:PREM_NO And
          agqdesc3:BUILD_NO = agqCONTRACTOR:BUILD_NO And
          agqdesc3:CODE = L_CODE
            Begin
            If agqdesc3:TOTAL_PREMIUM <> 0 Then
                Begin
                L_UPDATE_SFPEND_PREMIUM = agqdesc3:TOTAL_PREMIUM  +
                                          L_UPDATE_SFPEND_PREMIUM
                End

            Next agqdesc3
            End
--    end

    L_INLAND_TOTAL = L_INLAND_TOTAL + L_UPDATE_SFPEND_PREMIUM
    L_INLAND_MARINE_CODE = "Y"

    End

If L_CODE = "MCL502" Then
    Begin
    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1
    End

End

End
