%%
Program
        Name         = "agtup9104" ;
        Type         = "File" ;
        Padcharacter = Space ;
        domain       = "sfsdefault" ;

        Global Unsigned Ascii Number g_app_no[11] ,
                                     g_deductible[5] ;

        global string g_zipcode_change[1] ;

        Local Signed Ascii Number   L_PREM[8]=0 ,
                                    L_LOC_TOTAL[8]=0 ,
                                    l_windstorm_surcharge[4]=0,
                                    L_END_PREMIUM[8]=0 ,
                                    l_abort_program[1]=0,
                                    L_IRPM_TOTAL[6]=0 ,
                                    l_irpm_total_1[6]=0,
                                    L_MISC_PREMIUM[8]=0 ,
                                    L_TOTAL[8]=0 ,
                                    L_TOTAL_END[8]=0 ,
                                    L_COMM[8]=0/dec=4 ,
                                    L_PACKAGE[8]=0/dec=4 ,
                                    l_discount_1[6]=0,
                                    l_discount_2[6]=0,
                                    l_discount_3[6]=0,
                                    L_IRPM[8]=0/dec=4 ,
                                    L_INSTALLMENT[4]=0 ,
                                    L_RATE_FACTOR[1]=0/dec=2 ,
                                    L_CREDIT_FACTOR[8]=0/dec=4 ,
                                    L_FINAL_TOTAL[8]=0 ,
                                    l_final_total1[8]=0,
                                    L_WORKERS_COMP_TOTAL[8]=0,
                                    L_UMBRELLA_TOTAL[8]=0,
                                    L_INLAND_TOTAL[8]=0,
                                    L_LIABILITY_TOTAL[8]=0,
                                    L_MAX_CREDITS[6]=0/decimals=4;

        Local Unsigned Ascii Number L_MINIMUM[4]=0 ,
                                    L_CSEXEC_NUMBER[12] ,
                                    l_windstorm_factor[2],
                                    l_policy_charge[2],
                                    l_policy_per[5],
                                    l_tier_surcharge[4],
                                    l_val_zipcode[9],
                                    l_hurricane_rate[6]=0/dec=3,
                                    l_hurricane_deductible[5]=0,
                                    l_no_claims[2],
                                    l_loss_factor[5]=0/dec=3,
                                    l_new_home_discount_factor[4]=0/dec=3,
                                    l_new_year_2[2],
                                    l_rating_change[3]=0,
                                    l_rating_change_2[3]=0,
                                    l_tier[2]=0,
                                    l_tier_1[2]=0,
                                    l_total_all_locations[8]=0,
                                    l_agqtotals_minimum[6]=0,
                                    l_tier_factor[6]=0/dec=4,
                                    L_TYPE[1]=0,
                                    L_INCREASE_COV_C[8]=0/decimals=4,
                                    l_policy_surcharge[3]=0/dec=2,
                                    l_policy_surcharge_total[5]=0,
                                    l_boiler_premium[4]=0,
                                    l_boiler_limit[6]=0,
                                    l_boiler_form[1]=0,
                                    I_CSEXEC_NUMBER[12] ,
                                    L_SUB[2]=0,
                                    L_SURCHARGE[6]=0,
                                    L_SURCHARGE_FACTOR[8]=0/dec=6,
                                    l_table_zero[1]=0,
                                    L_SURCHARGE_MINIMUM[2]=0,
                                    L_COUNTY[3]=0,
                                    L_GROUP[2]=0,
                                    L_ZERO_LIMIT[8]=0,
                                    L_ZERO_TABLE[1]=0,
                                    L_TERRITORY_FACTOR[5]=0/decimals=3,
                                    L_INLAND_MARINE_MINIMUM[4]=0,
                                    L_IM_MINIMUM_TOTAL[4]=0 ,
                                    L_WATERCRAFT_RATE_TO_USE[2]=0 ,
                                    l_basic_prem[6]=0,
                                    l_inservants_employees_prem[6]=0,
                                    l_outservants_residence_prem[6]=0,
                                    l_outservants_estate_prem[6]=0,
                                    L_FEET[3]=0 ;

        Local String L_MISC[1]="N" ,
                     L_MINIMUM_APPLIES[1]="N" ,
                     l_hurricane_code[7]="",
                     l_system_id[15],
                     l_loss_surcharge_wording[30] ,
                     l_dont_update_agqtotals[1]="N",
                     L_CSEXEC_APPLICATION[25]="" ,
                     L_CORRECT[1]="N",
                     l_new_home_discount_1[1]="N",
                     l_seasonal_surcharge_wording[30]="Seasonal Occupancy Surcharge",
                     l_enter,
                     L_PRO_RATE="PRO RATA" ,
                     l_add_endorsement[1] ,
                     L_USERNAME[15] ,
                     L_EC[1]="N",
                     l_filler_19[19]="",
                     l_mpl80_exists[1]="N",
                     l_sal01_rated[1]="N",
                     L_VMM[1]="N",
                     l_str_zipcode[9]="",
                     l_form_edition[25],
                     l_description[75],
                     L_MPL13[1]="N",
                     l_add_terror_code[7],
                     l_remove_terror_code[7],
                     L_ENDORSEMENT_MPL47[1]="N",
                     l_mpl61_rated[1]="N",
                     L_ENDORSEMENT_MPL49[1]="N",
                     L_INLAND_MARINE_CODE[1]="N",
                     l_display_field[1]="" ,
                     L_INLAND_MARINE_UPDATED[1]="N",
                     L_INSTALLMENT_WORDING[20]="Installment Charge",
                     l_mpl80="N",
                     L_agqEND_MINIMUM_PREMIUM[1]="N",
                     L_ARTICLE[20] ,
                     L_DWELLING[1]="N",
                     L_MP[3]="MP" ,
                     L_WATERCRAFT_TYPE[1]="" ;

        local date l_surcharge_date[8] ;

        local YYYYMMDD date l_rate_eff_date[8] ;

        Local Mmddyyyy Date L_CORRECT_DATE[8] ;
        Local String L_FIRST_TIME[1]="Y";
        Unsigned Ascii Number L_HOLD_PAYMENT_PLAN[4]=0;
        Signed Ascii Number L_SUB_TOTAL[9]=0/decimals=2;

        Unsigned Ascii Number L_TERRORISM_PREMIUM[8]/decimals =0;
        Unsigned Ascii Number L_TERROR_PERCENTAGE[5]/decimals=4;
        Unsigned Ascii Number L_TERROR_MINIMUM[3];
        Unsigned Ascii Number L_FOUND[1];
        unsigned ascii number l_tpd6_terrorism_premium[8]=0;
        Unsigned Ascii Number L_SUB_CODE[4];
        Wdate L_TERROR_EFF_DATE;

        Include "plprate.var"

initialisation
g_app_no     = val(commandline[1,11])
g_deductible = val(commandline[12,16])
g_zipcode_change = commandline[17,17]

do location_total
access agqpersonal, set agqpersonal:app_no = g_app_no, generic

do policy_total

update

Procedure Definition

procedure location_total
begin
access agqpersonal, set agqpersonal:app_no = g_app_no, generic

while agqpersonal:app_no = g_app_no
    begin
    Access agqMASTER, Set agqMASTER:app_no = G_app_no, Generic

    if agqmaster:app_no <> g_app_no then
        begin
        add agqmaster
            begin
            agqmaster:app_no = g_app_no
            end
        end

    l_deductible = g_deductible
    Do MINIMUM_PREMIUMS
    Do LOC_TOTAL
    do update_totals

    next agqpersonal
    end

end

procedure policy_total
begin
do loss_surcharge
Do TOTALS
Do FINAL_TOTAL
if l_irpm_total = 0 then
    l_final_total1 = l_final_total
else
    l_final_total1 = l_irpm_total

If (agqpersonal:REMOVE_TERROR_FORM = 0 and
   (agqpersonal:owner_occupied = "N" or
   (agqpersonal:owner_occupied = "Y" and
   agqpersonal:no_families > 1))) Then  --they may want to r
    begin
    L_TERRORISM_PREMIUM = 0
    Do GET_TERRORISM_PREMIUM
    if l_irpm_total = 0 then
        L_FINAL_TOTAL1 = L_FINAL_TOTAL + L_TERRORISM_PREMIUM
    else
        L_FINAL_TOTAL1 = L_IRPM_TOTAL + L_TERRORISM_PREMIUM
    end
Else
If (agqpersonal:REMOVE_TERROR_FORM = 1 and
   (agqpersonal:owner_occupied = "N" or
   (agqpersonal:owner_occupied = "Y" and
   agqpersonal:no_families > 1))) Then  --they may want to r
    Begin
    do access_sfsmsoterror
    l_terrorism_premium = 0
    Access agqMASTER, Set agqMASTER:app_no = G_app_no, Generic

    if l_terror_percentage <> 0 then
        begin
        if l_irpm_total = 0 then
            l_tpd6_terrorism_premium = l_final_total * l_terror_percentage
        else
            l_tpd6_terrorism_premium = ((l_irpm_total +
                                       l_boiler_premium) *
                                       l_terror_percentage)
        if l_tpd6_terrorism_premium <= l_terror_minimum then
            l_tpd6_terrorism_premium = l_terror_minimum
        end

    if l_irpm_total = 0 then
        L_FINAL_TOTAL1 = L_FINAL_TOTAL
    else
        l_final_total1 = l_irpm_total + l_boiler_premium

    if agqmaster:app_no = g_app_no then
        begin
        Change agqMASTER
            Begin
            agqMASTER:TERRORISM_PREMIUM = 0
            agqmaster:tpd6_terrorism_premium = l_tpd6_terrorism_premium
            end
        End
    else
        begin
        add agqmaster
            begin
            agqmaster:app_no            = g_app_no
            agqmaster:terrorism_premium = 0
            agqmaster:tpd6_terrorism_premium = l_tpd6_terrorism_premium
            end
        end

     do add_terrorism_exclusion
     End

do update_endorsements
do update_policy_totals
end

procedure update_policy_totals
begin
access agqtotals, set agqtotals:app_no     = agqpersonal:app_no,
                      agqtotals:prem_no    = 0,
                      agqtotals:build_no   = 0,
                      agqtotals:deductible = l_deductible, generic

if agqtotals:app_no     = agqpersonal:app_no and
   agqtotals:prem_no    = 0 and
   agqtotals:build_no   = 0 and
   agqtotals:deductible = l_deductible then
    begin
    change agqtotals
        begin
        if l_dont_update_agqtotals = "N" then
            begin
            agqtotals:deductible_premium            = l_total_all_locations
            agqtotals:terrorism_premium             = l_terrorism_premium
            agqtotals:pliga                         = l_surcharge
            agqtotals:boiler_premium                = l_boiler_premium
            agqtotals:minimum_premium               = l_agqtotals_minimum
            agqtotals:irpm_total                    = l_irpm_total_1
            end
        else
            begin
            agqtotals:deductible_premium            = 0
            agqtotals:terrorism_premium             = 0
            agqtotals:pliga                         = 0
            agqtotals:boiler_premium                = 0
            agqtotals:minimum_premium               = 0
            agqtotals:irpm_total                    = 0
            end
        end
    end
else
    begin
    add agqtotals
        begin
        agqtotals:app_no                        = agqpersonal:app_no
        agqtotals:prem_no                       = 0
        agqtotals:build_no                      = 0
        agqtotals:deductible                    = l_deductible
        if l_dont_update_agqtotals = "N" then
            begin
            agqtotals:deductible_premium            = l_total_all_locations
            agqtotals:terrorism_premium             = l_terrorism_premium
            agqtotals:pliga                         = l_surcharge
            agqtotals:boiler_premium                = l_boiler_premium
            agqtotals:minimum_premium               = l_agqtotals_minimum
            agqtotals:irpm_total                    = l_irpm_total_1
            end
        else
            begin
            agqtotals:deductible_premium            = 0
            agqtotals:terrorism_premium             = 0
            agqtotals:pliga                         = 0
            agqtotals:boiler_premium                = 0
            agqtotals:minimum_premium               = 0
            agqtotals:irpm_total                    = 0
            end
        end
    end

end

procedure update_totals
begin
access agqtotals, set agqtotals:app_no     = agqpersonal:app_no,
                      agqtotals:prem_no    = agqpersonal:prem_no,
                      agqtotals:build_no   = agqpersonal:build_no,
                      agqtotals:deductible = l_deductible, generic

if agqtotals:app_no     = agqpersonal:app_no and
   agqtotals:prem_no    = agqpersonal:prem_no and
   agqtotals:build_no   = agqpersonal:build_no and
   agqtotals:deductible = l_deductible then
    begin
    change agqtotals
        begin
        if l_dont_update_agqtotals = "N" then
            agqtotals:deductible_premium          = l_loc_total
        else
            agqtotals:deductible_premium          = 0
        end
    end
else
    begin
    add agqtotals
        begin
        agqtotals:app_no                      = agqpersonal:app_no
        agqtotals:prem_no                     = agqpersonal:prem_no
        agqtotals:build_no                    = agqpersonal:build_no
        agqtotals:deductible                  = l_deductible
        if l_dont_update_agqtotals = "N" then
            agqtotals:deductible_premium          = l_loc_total
        else
            agqtotals:deductible_premium          = 0
        end
    end

l_total_all_locations = l_loc_total +
                        l_total_all_locations
End

Procedure UPDATE_ENDORSEMENTS
Begin
Access agqPERSONAL_ALIAS, Set agqPERSONAL_ALIAS:app_no = G_app_no, Generic

l_form = agqpersonal_alias:form
access agsdefault_plp, set agsdefault_plp:company_id       = agqpersonal:company_id,
                           agsdefault_plp:state            = agqpersonal:state,
                           agsdefault_plp:agent_no         = agqpersonal:agent_no,
                           agsdefault_plp:line_of_business = agqpersonal:line_of_business,
                           agsdefault_plp:form             = l_form, generic

L_STATE = agqPERSONAL_ALIAS:STATE
If agqPERSONAL_ALIAS:app_no = G_app_no Then
    Begin
    Access PLSPREPRINTED, Set PLSPREPRINTED:COMPANY_ID       = agqpersonal:COMPANY_ID,
                              PLSPREPRINTED:STATE            = L_STATE,
                              PLSPREPRINTED:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS, Generic

    l_code_1  = ""
    while PLSPREPRINTED:COMPANY_ID       = agqpersonal:COMPANY_ID and
          PLSPREPRINTED:STATE            = L_STATE and
          PLSPREPRINTED:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
        begin
        If agqpersonal:EFF_DATE >= PLSPREPRINTED:rEFF_DATE Then
            Begin
            L_CODE_1  = PLSPREPRINTED:CODE[6] -- new home discount
            end

        Next PLSPREPRINTED
        End

    Access SFSLINE, Set SFSLINE:COMPANY_ID       = agqpersonal:COMPANY_ID,
                        SFSLINE:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                        SFSLINE:LOB_SUBLINE      = "00", Generic

    If L_CODE_1 <> "" Then
        Begin
        L_CODE = L_CODE_1
        If agqPERSONAL_ALIAS:YEAR_CONSTRUCTION <> 0 Then
            Begin
            Do CHECK_FOR_UNDER_CONSTRUCTION
            L_NEW_HOME_YEAR_1 = Year(agqpersonal:EFF_DATE) -
                                agqPERSONAL_ALIAS:YEAR_CONSTRUCTION

            If L_NEW_HOME_YEAR_1 > 99 Then
                L_NEW_HOME_YEAR_1 = 99
            If Year(agqpersonal:EFF_DATE) = agqPERSONAL_ALIAS:YEAR_CONSTRUCTION Then
                L_NEW_HOME_YEAR_1 = 1
            L_NEW_YEAR_2 = L_NEW_HOME_YEAR_1
            L_RECORD_KEY = "NH"
            Access PLSNEWHOMEDISC, Set PLSNEWHOMEDISC:COMPANY_ID = agqpersonal:COMPANY_ID,
                                       PLSNEWHOMEDISC:STATE = L_STATE,
                                       PLSNEWHOMEDISC:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                                       PLSNEWHOMEDISC:YEAR = L_NEW_YEAR_2, Generic

            L_NEW_HOME_DISCOUNT_1 = "N"
            Repeat Begin
                Exit If PLSNEWHOMEDISC:RECORD_KEY <> L_RECORD_KEY Or
                        PLSNEWHOMEDISC:COMPANY_ID <> agqpersonal:COMPANY_ID Or
                        PLSNEWHOMEDISC:STATE <> L_STATE Or
                        PLSNEWHOMEDISC:LINE_OF_BUSINESS <> agqpersonal:LINE_OF_BUSINESS Or
                        PLSNEWHOMEDISC:YEAR <> L_NEW_YEAR_2

                If agqpersonal:EFF_DATE >= PLSNEWHOMEDISC:rEFF_DATE Then
                    Begin
                    L_NEW_HOME_DISCOUNT_1 = "Y"
                    L_NEW_HOME_DISCOUNT_FACTOR = PLSNEWHOMEDISC:FACTOR
                    End
                Else
                    Begin
                    L_NEW_HOME_DISCOUNT_1 = "N"
                    L_NEW_HOME_DISCOUNT_FACTOR = 0
                    End

                Next PLSNEWHOMEDISC
                End
            End
        Else
            L_NEW_HOME_DISCOUNT_1 = "N"

        Do ACCESS_agqEND
        If (L_ADD_ENDORSEMENT = "Y" And
           L_NEW_HOME_DISCOUNT_1 = "Y" And
           L_NEW_HOME_DISCOUNT_FACTOR < 1.00 And
           L_NEW_HOME_DISCOUNT_FACTOR <> 0 And
           agqPERSONAL_ALIAS:FORM <> 4 And
           agqPERSONAL_ALIAS:FORM <> 6 And
           (L_MPL13 = "N" Or
           (L_MPL13 = "Y" And
           agsdefault_plp:MPL13_AND_NEW_HOME_DISCOUNT = 1))) Then
            begin
            Do ADD_agqEND
            end
        If (L_ADD_ENDORSEMENT = "N" And
           (L_NEW_HOME_DISCOUNT_1 = "N" Or
           L_NEW_HOME_DISCOUNT_FACTOR = 0 Or
           L_NEW_HOME_DISCOUNT_FACTOR > 1.00 Or
           (L_MPL13 = "Y" And
           agsdefault_plp:MPL13_AND_NEW_HOME_DISCOUNT = 0) Or
           agqPERSONAL_ALIAS:FORM = 4 Or
           agqPERSONAL_ALIAS:FORM = 6)) Then
            Do DELETE_agqEND
        End

    end

end

Procedure CHECK_FOR_UNDER_CONSTRUCTION
Begin
Access agqEND, Set agqEND:app_no   = agqPERSONAL:app_no ,
                   agqEND:PREM_NO  = agqPERSONAL:PREM_NO,
                   agqEND:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

L_MPL13 = "N"
Repeat Begin
    Exit If agqEND:app_no <> agqPERSONAL:app_no Or
            agqEND:PREM_NO <> agqPERSONAL:PREM_NO Or
            agqEND:BUILD_NO <> agqPERSONAL:BUILD_NO

    If agqEND:CODE = "MPL13" Then
        L_MPL13 = "Y"

    Next agqEND
    End

End

Procedure ACCESS_agqEND
Begin
Access agqEND, Set agqEND:app_no = agqPERSONAL:app_no ,
                   agqEND:PREM_NO = agqPERSONAL:PREM_NO,
                   agqEND:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

L_ADD_ENDORSEMENT = "Y"
Repeat Begin
    Exit If agqEND:app_no <> agqPERSONAL:app_no Or
            agqEND:PREM_NO <> agqPERSONAL:PREM_NO Or
            agqEND:BUILD_NO <> agqPERSONAL:BUILD_NO

    If agqEND:CODE = L_CODE Then
        L_ADD_ENDORSEMENT = "N"

    if l_code = "FPL20" and
       agqend:code = "FPL21" then
        delete agqend

    if l_code = "FPL21" and
       agqend:code = "FPL20" then
        delete agqend

    if l_code = "" and
       agqend:code one of "FPL20", "FPL21" then
        delete agqend

    Next agqEND
    End

End

Procedure ADD_agqEND
Begin
Access agqEND, Set agqEND:app_no = agqPERSONAL:app_no ,
                   agqEND:PREM_NO = agqPERSONAL:PREM_NO,
                   agqEND:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

L_SUB_CODE = 0
Repeat Begin
    Exit If agqEND:app_no <> agqPERSONAL:app_no Or
            agqEND:PREM_NO <> agqPERSONAL:PREM_NO Or
            agqEND:BUILD_NO <> agqPERSONAL:BUILD_NO

    L_SUB_CODE = agqEND:SUB_CODE

    Next agqEND
    End

L_SUB_CODE = L_SUB_CODE + 10

Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID = agqpersonal:COMPANY_ID,
                      SFSOPTEND:STATE = agqPERSONAL:STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                      SFSOPTEND:CODE = L_CODE, Generic

Repeat Begin
    Exit If SFSOPTEND:COMPANY_ID <> agqpersonal:COMPANY_ID Or
            SFSOPTEND:STATE <> agqPERSONAL:STATE Or
            SFSOPTEND:LINE_OF_BUSINESS <> agqpersonal:LINE_OF_BUSINESS Or
            SFSOPTEND:CODE <> L_CODE

    If (agqpersonal:EFF_DATE >= SFSOPTEND:EFF_DATE and
       (agqpersonal:eff_date <= sfsoptend:exp_date or
       sfsoptend:exp_date = 0)) Then
        Begin
        L_FORM_EDITION = SFSOPTEND:FORM_EDITION
        L_DESCRIPTION = SFSOPTEND:DESCRIPTION
        End

    Next SFSOPTEND
    End

Add agqEND
    Begin
    agqEND:app_no             =       agqPERSONAL:app_no
    agqEND:PREM_NO              =       agqPERSONAL:PREM_NO
    agqEND:BUILD_NO             =       agqPERSONAL:BUILD_NO
    agqEND:SUB_CODE             =       L_SUB_CODE
    agqEND:CODE                 =       L_CODE
    agqEND:FORM_EDITION         =       L_FORM_EDITION
    agqEND:DESCRIPTION          =       L_DESCRIPTION
    agqEND:PREMIUM              =       0
    End

End

Procedure DELETE_agqEND
Begin
Access agqEND, Set agqEND:app_no = agqPERSONAL:app_no ,
                   agqEND:PREM_NO = agqPERSONAL:PREM_NO,
                   agqEND:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

Repeat Begin
    Exit If agqEND:app_no <> agqPERSONAL:app_no Or
            agqEND:PREM_NO <> agqPERSONAL:PREM_NO Or
            agqEND:BUILD_NO <> agqPERSONAL:BUILD_NO

    If agqEND:CODE = L_CODE Then
        Delete agqEND

    Next agqEND
    End

End

Procedure GET_TERRORISM_PREMIUM
Begin
Do ACCESS_SFSMSOTERROR
If L_TERROR_PERCENTAGE <> 0 Then
    Begin
    if l_irpm_total = 0 then
        L_TERRORISM_PREMIUM = L_FINAL_TOTAL * L_TERROR_PERCENTAGE
    else
        l_terrorism_premium = l_irpm_total * l_terror_percentage

    If L_TERRORISM_PREMIUM <= L_TERROR_MINIMUM Then
        Begin
        L_TERRORISM_PREMIUM = L_TERROR_MINIMUM
        End

    Do ADD_TERRORISM_ENDORSEMENT
    End
End

Procedure ADD_TERRORISM_ENDORSEMENT
Begin
Access agqEND, Set agqEND:app_no = G_app_no, Generic

L_FOUND = 0
While agqEND:app_no = G_app_no
    Begin
    If agqEND:CODE = SFSMSOTERROR:TERRORISM_FORM_TO_ADD or
       agqend:code = sfsmsoterror:terrorism_form_to_remove Then
        Begin
        Delete agqEND
        End

    Next agqEND
    End

Access agqEND, Set agqEND:app_no = G_app_no, Generic

If agqpersonal:REMOVE_TERROR_FORM = 0 Then
    Begin
    Do SUBCODE
    L_CODE = SFSMSOTERROR:TERRORISM_FORM_TO_ADD
    Do ACCESS_KEY

    Add agqEND  --ADDS ENDORSEMENTS TO sfpend
        Begin
        agqEND:app_no       = G_app_no
        agqEND:PREM_NO      = agqpersonal:PREM_NO
        agqEND:BUILD_NO     = agqpersonal:BUILD_NO
        agqEND:SUB_CODE     = L_SUB_CODE
        agqEND:CODE         = SFSMSOTERROR:TERRORISM_FORM_TO_ADD
        agqEND:FORM_EDITION = L_FORM_EDITION
        agqEND:PREMIUM      = L_TERRORISM_PREMIUM
        agqEND:DESCRIPTION  = L_DESCRIPTION
        End
    End
Else
    Begin
    Access agqEND, Set agqEND:app_no = G_app_no, Generic

    While agqEND:app_no = G_app_no
            Begin
            If agqEND:CODE = SFSMSOTERROR:TERRORISM_FORM_TO_ADD Then
                Change agqEND
                    Begin
                    agqEND:PREMIUM = L_TERRORISM_PREMIUM
                    End
            Next agqEND
            End
   End

Access agqMASTER, Set agqMASTER:app_no = G_app_no, Generic

Change agqMASTER
    Begin
    agqMASTER:TERRORISM_PREMIUM = L_TERRORISM_PREMIUM
    End
End

Procedure ADD_TERRORISM_EXCLUSION
Begin
do access_sfsmsoterror
Access agqEND, Set agqEND:app_no = G_app_no, Generic

L_FOUND = 0
While agqEND:app_no = G_app_no
    Begin
    If agqEND:CODE = SFSMSOTERROR:TERRORISM_FORM_TO_ADD or
       agqend:code = sfsmsoterror:terrorism_form_to_remove Then
        Begin
        Delete agqEND
        End

    Next agqEND
    End

Access agqEND, Set agqEND:app_no = G_app_no, Generic

If agqpersonal:REMOVE_TERROR_FORM = 1 Then
    Begin
    Do SUBCODE
    L_CODE = SFSMSOTERROR:TERRORISM_FORM_TO_REMOVE
    Do ACCESS_KEY

    Add agqEND  --ADDS ENDORSEMENTS TO sfpend
        Begin
        agqEND:app_no       = G_app_no
        agqEND:PREM_NO      = agqpersonal:PREM_NO
        agqEND:BUILD_NO     = agqpersonal:BUILD_NO
        agqEND:SUB_CODE     = L_SUB_CODE
        agqEND:CODE         = SFSMSOTERROR:TERRORISM_FORM_TO_REMOVE
        agqEND:FORM_EDITION = L_FORM_EDITION
        agqEND:PREMIUM      = L_TERRORISM_PREMIUM
        agqEND:DESCRIPTION  = L_DESCRIPTION
        End
    End

end

Procedure ACCESS_SFSMSOTERROR
Begin
L_STATE = agqpersonal:STATE
Access SFSMSOTERROR, Set SFSMSOTERROR:COMPANY_ID       = agqpersonal:COMPANY_ID,
                         SFSMSOTERROR:STATE            = L_STATE,
                         SFSMSOTERROR:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS, Generic

While SFSMSOTERROR:COMPANY_ID       = agqpersonal:COMPANY_ID And
      SFSMSOTERROR:STATE            = L_STATE And
      SFSMSOTERROR:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
        Begin
        If (agqpersonal:EFF_DATE >= SFSMSOTERROR:EFF_DATE and
           (agqpersonal:eff_date <= sfsmsoterror:exp_date or
           sfsmsoterror:exp_date = 0)) Then
            Begin
            L_TERROR_EFF_DATE   = SFSMSOTERROR:EFF_DATE
            L_TERROR_PERCENTAGE = SFSMSOTERROR:PERCENTAGE
            L_TERROR_MINIMUM    = SFSMSOTERROR:MINIMUM_PREMIUM
            End

        Next SFSMSOTERROR
        End

Access SFSMSOTERROR, Set SFSMSOTERROR:COMPANY_ID       = agqpersonal:COMPANY_ID,
                         SFSMSOTERROR:STATE            = L_STATE,
                         SFSMSOTERROR:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                        SFSMSOTERROR:EFF_DATE         = L_TERROR_EFF_DATE, Exact
End

Procedure ACCESS_KEY
Begin
L_STATE = agqpersonal:STATE
Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID       = agqpersonal:COMPANY_ID ,
                      SFSOPTEND:STATE            = L_STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                      SFSOPTEND:CODE             = L_CODE, Generic

While SFSOPTEND:COMPANY_ID = agqpersonal:COMPANY_ID And
      SFSOPTEND:STATE = L_STATE And
      SFSOPTEND:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS And
      SFSOPTEND:CODE = L_CODE
        Begin
        If (agqpersonal:EFF_DATE >= SFSOPTEND:EFF_DATE and
           (agqpersonal:eff_date <= sfsoptend:exp_date or
           sfsoptend:exp_date = 0)) Then
            Begin
            L_FORM_EDITION = SFSOPTEND:FORM_EDITION
            L_DESCRIPTION = SFSOPTEND:DESCRIPTION
            End

        Next SFSOPTEND
        End

End

Procedure SUBCODE
Begin
Access agqEND_ALIAS, Set agqEND_ALIAS:app_no    = g_app_no ,
                         agqEND_ALIAS:PREM_NO   = agqpersonal:PREM_NO,
                         agqEND_ALIAS:BUILD_NO   = agqpersonal:BUILD_NO, Generic

L_SUB_CODE = 0
Repeat Begin
    Exit If agqEND_ALIAS:app_no    <> g_app_no Or
            agqEND_ALIAS:PREM_NO <> agqpersonal:PREM_NO Or
            agqEND_ALIAS:BUILD_NO <> agqpersonal:BUILD_NO

   L_SUB_CODE = agqEND_ALIAS:SUB_CODE + 10

   Next agqEND_ALIAS
   End

end

Procedure LOC_TOTAL
Begin
access agsdefault_plp, set agsdefault_plp:company_id       = agqpersonal:company_id,
                           agsdefault_plp:state            = agqpersonal:state,
                           agsdefault_plp:agent_no         = agqpersonal:agent_no,
                           agsdefault_plp:line_of_business = agqpersonal:line_of_business,
                           agsdefault_plp:form             = agqpersonal:form, generic

l_state = agqpersonal:state
access plsrating, set plsrating:company_id      = agqpersonal:company_id,
                      plsrating:state            = l_state,
                      plsrating:line_of_business = agqpersonal:line_of_business, generic

l_rating_change = 0
while plsrating:company_id       = agqpersonal:company_id and
      plsrating:state            = l_state and
      plsrating:line_of_business = agqpersonal:line_of_business
        begin
        if agqpersonal:eff_date >= plsrating:rate_date and
           plsrating:rate_change < 2 then
            l_rating_change = plsrating:rate_change

        next plsrating
        end

access sfscompany, set sfscompany:company_id = agqpersonal:company_id, generic

access plsrating, set plsrating:company_id       = agqpersonal:company_id,
                      plsrating:state            = agqpersonal:state,
                      plsrating:line_of_business = agqpersonal:line_of_business, generic

l_rating_change_2 = 0
while plsrating:company_id       = agqpersonal:company_id and
      plsrating:state            = agqpersonal:state and
      plsrating:line_of_business = agqpersonal:line_of_business
        begin
        if agqpersonal:eff_date >= plsrating:rate_date and
           plsrating:rate_change < 3 then
            l_rating_change_2 = plsrating:rate_change

        next plsrating
        end

l_val_zipcode = agqpersonal:zipcode
l_str_zipcode = agqpersonal:str_zipcode[1,5] + "0000"
access sfszipcode, set sfszipcode:company_id       = agqpersonal:company_id,
                       sfszipcode:state            = agqpersonal:state,
                       sfszipcode:line_of_business = agqpersonal:line_of_business,
                       sfszipcode:str_zipcode      = l_str_zipcode, generic

l_tier = 0
while sfszipcode:company_Id       = agqpersonal:company_id and
      sfszipcode:state            = agqpersonal:state and
      sfszipcode:line_of_business = agqpersonal:line_of_business and
      sfszipcode:str_zipcode      = l_str_zipcode
        begin
        if (agqpersonal:eff_date >= sfszipcode:eff_date and
           (agqpersonal:eff_date <= sfszipcode:exp_date or
           sfszipcode:exp_date = 0)) then
            begin
            l_tier            = sfszipcode:tier
            end

        next sfszipcode
        end

l_tier_1 = l_tier
if l_tier_1 = 0 then
    l_tier_1 = 3
if agsdefault_plp:dont_use_tier_rating = 1 then
    l_tier_1 = 3
access sfstier, set sfstier:company_id       = agqpersonal:company_id,
                    sfstier:state            = agqpersonal:state,
                    sfstier:line_of_business = agqpersonal:line_of_business,
                    sfstier:tier             = l_tier_1, generic

l_wind_deductible      = 0
l_hurricane_deductible = 0
while sfstier:company_Id       = agqpersonal:company_id and
      sfstier:state            = agqpersonal:state and
      sfstier:line_of_business = agqpersonal:line_of_business and
      sfstier:tier             = l_tier_1
        begin
        if (agqpersonal:eff_date >= sfstier:eff_date and
           (agqpersonal:eff_date <= sfstier:exp_date or
           sfstier:exp_date = 0)) then
            begin
            l_wind_deductible      = sfstier:wind_deductible
            l_hurricane_deductible = sfstier:hurricane_deductible
            l_hurricane_code       = sfstier:hurricane_code
            end

        next sfstier
        end

if l_hurricane_code <> "" then
    begin
    l_code = l_hurricane_code
    do access_agqend
    if l_add_endorsement = "Y" and
       agqpersonal:hurricane_deductible <> 0 then
        do add_agqend
    if l_add_endorsement = "N" and
       agqpersonal:hurricane_deductible = 0 then
        do delete_agqend
    end
else
if l_hurricane_code = "" then
    do access_agqend

access agqpersonal_alias, set agqpersonal_alias:app_no   = agqpersonal:app_no,
                              agqpersonal_alias:prem_no  = agqpersonal:prem_no,
                              agqpersonal_alias:build_no = agqpersonal:build_no, generic

if agqpersonal_alias:app_no   = agqpersonal:app_no and
   agqpersonal_alias:prem_no  = agqpersonal:prem_no and
   agqpersonal_alias:build_no = agqpersonal:build_no then
    begin
    change agqpersonal_alias
        begin
        if l_wind_deductible <> 0 then
            agqpersonal_alias:wind_deductible      = l_wind_deductible
        agqpersonal_alias:tier                     = l_tier_1
        if (l_hurricane_deductible <> 0 and
           (agqpersonal_alias:hurricane_changed = 0 or
           g_zipcode_change = "Y" or
           agqpersonal_alias:tier one of 1, 2)) then
            begin
            g_zipcode_change = "N"
            agqpersonal_alias:hurricane_deductible = l_hurricane_deductible
            if agqpersonal_alias:company_id <> "FLEMINGTON" then
                agqpersonal_alias:wind_deductible      = 0
            end
        end
    end

Access PLSPREPRINTED, Set PLSPREPRINTED:COMPANY_ID       = agqpersonal:COMPANY_ID,
                          PLSPREPRINTED:STATE            = agqpersonal:STATE,
                          PLSPREPRINTED:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS, Generic

l_code_1  = ""
while PLSPREPRINTED:COMPANY_ID       = agqpersonal:COMPANY_ID and
      PLSPREPRINTED:STATE            = agqpersonal:STATE and
      PLSPREPRINTED:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
    begin
    If agqpersonal:EFF_DATE >= PLSPREPRINTED:rEFF_DATE Then
        Begin
        L_CODE_1  = PLSPREPRINTED:CODE[7] -- wind deductible
        end

    Next PLSPREPRINTED
    End

if l_code_1 <> "" then
    begin
    l_code = l_code_1
    do access_agqend
    if l_add_endorsement = "Y" and
       agqpersonal:wind_deductible <> 0 then
        do add_agqend
    if l_add_endorsement = "N" and
       agqpersonal:wind_deductible = 0 then
        do delete_agqend
    end

l_tier_factor = 0
Access agqPERSONAL_ALIAS, Set agqpersonal_alias:app_no = agqpersonal:app_no,
                              agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                              agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

Change agqPERSONAL_ALIAS
    Begin
    agqPERSONAL_ALIAS:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
    agqPERSONAL_ALIAS:COMPANY_ID = agqpersonal:COMPANY_ID
    agqPERSONAL_ALIAS:DF_DEDUCT_PREMIUM = 0
    End

If agqPERSONAL:DWELLING_LIMIT <> 0 Then
    Begin
    L_COVERAGE = "A"
    L_LIMIT = agqPERSONAL:DWELLING_LIMIT
    L_DWELLING = "Y"
    Do DWELLING_BASE_PREMIUM
    End

If agqPERSONAL:CONTENTS_LIMIT <> 0 Then
    Begin
    L_COVERAGE = "C"
    L_LIMIT = agqPERSONAL:CONTENTS_LIMIT
    L_DWELLING = "N"
    Do DWELLING_BASE_PREMIUM
    End

if agqpersonal:structures_limit[1] <> 0 then
    begin
    L_COVERAGE = "B"
    L_INCREASE_LIMIT = (agqPERSONAL:DWELLING_LIMIT *
                       (agsdefault_plp:COVERAGE_B_PERCENT Divide 100))
    L_LIMIT = agqPERSONAL:STRUCTURES_LIMIT[1]
    If L_INCREASE_LIMIT <> L_LIMIT Then
        Do COVERAGE_B_D_PREMIUM

    Access agqPERSONAL_ALIAS, Set agqpersonal_alias:app_no = agqpersonal:app_no,
                                  agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                  agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

    If agqpersonal_alias:app_no = agqpersonal:app_no And
       agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO And
       agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO Then
        begin
        Change agqPERSONAL_ALIAS
            Begin
            If L_INCREASE_LIMIT <> L_LIMIT Then
                agqPERSONAL_ALIAS:STRUCTURES_PREMIUM_1[1] = (((L_LIMIT -
                                                             L_INCREASE_LIMIT)
                                                             Divide L_INCREASE_PER) *
                                                             L_INCREASE_CHARGE)
            Else
                agqPERSONAL_ALIAS:STRUCTURES_PREMIUM_1[1] = 0
            End
        end
    end

if agqpersonal:structures_limit[1] = 0 then
    begin
    L_COVERAGE = "B"
    L_INCREASE_LIMIT = (agqPERSONAL:DWELLING_LIMIT *
                       (agsdefault_plp:COVERAGE_B_PERCENT Divide 100))
    Do COVERAGE_B_D_PREMIUM

    Access agqPERSONAL_ALIAS, Set agqpersonal_alias:app_no   = agqpersonal:app_no,
                                  agqPERSONAL_ALIAS:PREM_NO  = agqPERSONAL:PREM_NO,
                                  agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

    If agqpersonal_alias:app_no   = agqpersonal:app_no And
       agqPERSONAL_ALIAS:PREM_NO  = agqPERSONAL:PREM_NO And
       agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO Then
        begin
        Change agqPERSONAL_ALIAS
            Begin
            If agqpersonal_alias:structures_limit[1] = 0 then
                agqPERSONAL_ALIAS:STRUCTURES_PREMIUM_1[1] = (((L_INCREASE_LIMIT divide
                                                             L_INCREASE_PER) *
                                                             L_INCREASE_CHARGE) * -1)
            End
        end
    end

If agqPERSONAL:LOSS_RENTS_LIMIT <> 0 Then
    Begin
    L_COVERAGE = "D"
    L_LIMIT = agqPERSONAL:LOSS_RENTS_LIMIT
    If agqPERSONAL:DWELLING_LIMIT <> 0 Then
        L_INCREASE_LIMIT = (agqPERSONAL:DWELLING_LIMIT *
                           (agsdefault_plp:COVERAGE_D_PERCENT Divide 100))
    Else
        L_INCREASE_LIMIT = (agqPERSONAL:CONTENTS_LIMIT *
                           (agsdefault_plp:COVERAGE_D_PERCENT Divide 100))
    If L_INCREASE_LIMIT <> L_LIMIT Then
        Do COVERAGE_B_D_PREMIUM

    Access agqPERSONAL_ALIAS, Set agqpersonal_alias:app_no = agqpersonal:app_no,
                                  agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                  agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

    If agqpersonal_alias:app_no = agqpersonal:app_no And
       agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO And
       agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO Then
        begin
        Change agqPERSONAL_ALIAS
            Begin
            If L_INCREASE_LIMIT <> L_LIMIT Then
                agqPERSONAL_ALIAS:LOSS_RENTS_PREMIUM[1] = (((L_LIMIT -
                                                          L_INCREASE_LIMIT) Divide
                                                          L_INCREASE_PER) *
                                                          L_INCREASE_CHARGE)
            Else
                agqPERSONAL_ALIAS:LOSS_RENTS_PREMIUM[1] = 0
            End
        end
    end

Do LIABILITY_PREMIUM

Access agqend, Set agqend:app_no = agqpersonal:app_no,
                   agqend:PREM_NO = agqPERSONAL:PREM_NO,
                   agqend:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

L_WORKERS_COMP_TOTAL = 0
L_UMBRELLA_TOTAL = 0
L_INLAND_TOTAL = 0
L_END_PREMIUM = 0
L_agqend_MINIMUM_PREMIUM = "N"
L_INLAND_MARINE_CODE = ""
Repeat Begin
    Exit If agqend:app_no <> agqpersonal:app_no Or
            agqend:PREM_NO <> agqPERSONAL:PREM_NO Or
            agqend:BUILD_NO <> agqPERSONAL:BUILD_NO

    L_agqend_MINIMUM_PREMIUM = "N"
    L_INLAND_MARINE_CODE = "N"
    L_UPDATE_SFPEND_PREMIUM = 0
    L_CODE = agqend:CODE
    Do RATE_ENDORSEMENTS
    if agqend:code one of "MPL80", "MPL180" then
        l_mpl80_exists = "Y"

    Change agqend
        Begin
        agqend:PREMIUM = L_UPDATE_SFPEND_PREMIUM
        agqend:INLAND_MARINE_CODE = L_INLAND_MARINE_CODE
        if l_boiler_form = 1 then
            agqend:boiler_form = 1
        else
            agqend:boiler_form = 0
        If L_agqend_MINIMUM_PREMIUM = "Y" Then
            agqend:MINIMUM_PREMIUM = "Y"
        Else
            agqend:MINIMUM_PREMIUM = "N"
--        if l_mpl80 = "Y" then
--            agqend:mpl80_subline_breakout = 1
        End
    L_END_PREMIUM = L_END_PREMIUM + L_UPDATE_SFPEND_PREMIUM

Next agqend
End

If L_INLAND_TOTAL >= L_INLAND_MARINE_MINIMUM And
   L_INLAND_TOTAL <> 0 Then
    Begin
    Access agqend, Set agqend:app_no = agqpersonal:app_no,
                       agqend:PREM_NO = agqPERSONAL:PREM_NO,
                       agqend:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

    Repeat Begin
        Exit If agqend:app_no <> agqpersonal:app_no Or
                agqend:PREM_NO <> agqPERSONAL:PREM_NO Or
                agqend:BUILD_NO <> agqPERSONAL:BUILD_NO

        If agqend:INLAND_MARINE_CODE = "Y" And
           agqend:MINIMUM_PREMIUM = "Y" Then
            Begin
            Change agqend
                Begin
                agqend:MINIMUM_PREMIUM = "N"
                End
            End
        Next agqend
        End
    End

If L_INLAND_TOTAL < L_INLAND_MARINE_MINIMUM And
   L_INLAND_TOTAL <> 0 Then
    Begin
    L_INLAND_MARINE_UPDATED = "N"
    Access agqend, Set agqend:app_no = agqpersonal:app_no,
                       agqend:PREM_NO = agqPERSONAL:PREM_NO,
                       agqend:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

    Repeat Begin
        Exit If agqend:app_no <> agqpersonal:app_no Or
                agqend:PREM_NO <> agqPERSONAL:PREM_NO Or
                agqend:BUILD_NO <> agqPERSONAL:BUILD_NO

        If agqend:INLAND_MARINE_CODE = "Y" And
           L_INLAND_MARINE_UPDATED = "N" Then
            Begin
            Change agqend
                Begin
                L_END_PREMIUM = L_END_PREMIUM - agqend:PREMIUM
                L_INLAND_MARINE_UPDATED = "Y"
                agqend:PREMIUM = ((L_INLAND_MARINE_MINIMUM - L_INLAND_TOTAL) +
                                 agqend:PREMIUM)
                L_END_PREMIUM = L_END_PREMIUM + agqend:PREMIUM
                agqend:MINIMUM_PREMIUM = "Y"

                End
            End

        Next agqend
        End

    L_INLAND_TOTAL = L_INLAND_MARINE_MINIMUM
    End

Access agqPERSONAL_ALIAS, Set agqpersonal_alias:app_no = agqpersonal:app_no,
                              agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                              agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

change agqpersonal_alias
    begin
    agqpersonal_alias:boiler_premium = l_boiler_premium
    agqpersonal_alias:boiler_limit   = l_boiler_limit
    end

L_LOC_TOTAL = agqPERSONAL_ALIAS:DWELLING_PREMIUM[1] +
              agqPERSONAL_ALIAS:STRUCTURES_PREMIUM_1[1] +
              agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1] +
              agqPERSONAL_ALIAS:LOSS_RENTS_PREMIUM[1] +
              agqPERSONAL_ALIAS:LIAB_MEDICAL_PREMIUM +
              agqPERSONAL_ALIAS:DF_DEDUCT_PREMIUM +
              L_MISC_PREMIUM +
              L_END_PREMIUM

If SFSLINE:LOB_CODE = "DWELLING" Then
    Begin
    If agqPERSONAL_ALIAS:DWELLING_LIMIT <> 0 Then
        Begin
        L_BUILDING_PREMIUM = L_BUILDING_PREMIUM +
                             agqPERSONAL_ALIAS:DWELLING_PREMIUM[1] +
                             agqPERSONAL_ALIAS:STRUCTURES_PREMIUM_1[1] +
                             agqPERSONAL_ALIAS:LOSS_RENTS_PREMIUM[1] +
                             agqPERSONAL_ALIAS:DF_DEDUCT_PREMIUM +
                             L_MISC_PREMIUM +
                             L_END_PREMIUM -
                             L_INLAND_TOTAL -
                             L_WORKERS_COMP_TOTAL -
                             L_UMBRELLA_TOTAL
        L_CONTENTS_PREMIUM = L_CONTENTS_PREMIUM +
                             agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1]
        End
    If agqPERSONAL_ALIAS:DWELLING_LIMIT = 0 And
       agqPERSONAL_ALIAS:CONTENTS_LIMIT <> 0 Then
        L_CONTENTS_PREMIUM = L_CONTENTS_PREMIUM +
                             agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1] +
                             agqPERSONAL_ALIAS:LOSS_RENTS_PREMIUM[1] +
                             agqPERSONAL_ALIAS:DF_DEDUCT_PREMIUM +
                             L_MISC_PREMIUM +
                             L_END_PREMIUM -
                             L_INLAND_TOTAL -
                             L_WORKERS_COMP_TOTAL -
                             L_UMBRELLA_TOTAL
/*    else
        l_liability_total = l_liability_total + l_end_premium +
                            l_misc_premium - l_inland_total -
                            l_workers_comp_total - l_umbrella_total*/
    End

if agqpersonal_alias:contents_limit = 0 then
    l_contents_premium = 0
if agqpersonal_alias:dwelling_limit = 0 then
    l_building_premium = 0
Do GET_RATE

/* end of loc total */
End

Procedure DWELLING_BASE_PREMIUM
Begin
l_no_families      = agqpersonal:no_families
l_owner_occupied   = agqpersonal:owner_occupied
L_RECORD_KEY       = "CV"
L_COMPANY_ID       = agqPERSONAL:COMPANY_ID
L_STATE            = agqPERSONAL:STATE
L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
l_table            = agqpersonal:table
if l_coverage = "C" and
   agqpersonal:state <> 19 then
    l_table = 0
if l_coverage = "C" and
   agqpersonal:state = 37 then
    l_table = 9

L_PROTECTION = agqPERSONAL:PROTECTION
if l_protection = 4 and
   sfscompany:boiler_rating = 1 then
    l_protection = 1
L_FORM       = agqPERSONAL:FORM
L_GROUP      = agqPERSONAL:GROUP
L_EFF_DATE   = agqpersonal:EFF_DATE
L_LIMIT_ZERO = "N"
If agqPERSONAL:EC = "Y" Then
    L_EC = "Y"
If agqPERSONAL:VMM = "Y" Then
    L_VMM = "Y"

If L_STATE one of 29, 19 Then
    Begin
    Include "plsdwellingbase.pro"

    if l_coverage = "A" then
        begin
        l_rating_base_a = l_base_premium
        end
    else
        l_rating_base_c = l_base_premium

    if l_state = 29 then
        begin
        L_RECORD_KEY = "FF"

        Include "plsdwellingform.pro"
        If L_DWELLING = "Y" Then
            Begin
            If agqPERSONAL:EC = "Y" Then
                L_BASE_PREMIUM = (L_BASE_PREMIUM -
                                 ((L_LIMIT Divide L_FORM_PER_1) *
                                  L_FORM_FACTOR_1))
            If agqPERSONAL:VMM = "Y" Then
                L_BASE_PREMIUM = (L_BASE_PREMIUM -
                             ((L_LIMIT Divide L_FORM_PER_2) *
                             L_FORM_FACTOR_2))
            End

        If L_DWELLING = "N" Then
            Begin
            If agqPERSONAL:EC = "Y" Then
                L_BASE_PREMIUM = L_BASE_PREMIUM * L_FORM_FACTOR_3

            If agqPERSONAL:VMM = "Y" Then
                L_BASE_PREMIUM = L_BASE_PREMIUM * L_FORM_FACTOR_4
            End
        end


    if l_state = 19 then
        begin
        L_RECORD_KEY = "FF"
        l_county = agqpersonal:county

        Include "plsdwellingform1.pro"

        If L_DWELLING = "Y" Then
            Begin
            If agqPERSONAL:EC = "Y" Then
                L_BASE_PREMIUM = L_BASE_PREMIUM * l_form_factor_1

            If agqPERSONAL:VMM = "Y" Then
                L_BASE_PREMIUM = L_BASE_PREMIUM * l_form_factor_3
            End

        If L_DWELLING = "N" Then
            Begin
            If agqPERSONAL:EC = "Y" Then
                L_BASE_PREMIUM = L_BASE_PREMIUM * L_FORM_FACTOR_2

            If agqPERSONAL:VMM = "Y" Then
                L_BASE_PREMIUM = L_BASE_PREMIUM * L_FORM_FACTOR_4
            End
        end

    End

if l_state = 37 then
    Begin
    Include "plsdwellingbasepa.pro"

    If L_COVERAGE = "C" And
       L_VMM = "Y" Then
        Begin
        L_RECORD_KEY = "FF"

        Include "plsdwellingform.pro"

        L_BASE_PREMIUM = L_BASE_PREMIUM * L_FORM_FACTOR_4
        End

    L_RECORD_KEY = "TF"
    L_FORM = 1
    Include "plsterrfactor.pro"

    L_BASE_PREMIUM = L_BASE_PREMIUM * L_TERRITORY_FACTOR
    End

if l_state one of 19 and
   l_coverage = "A" then
    begin
    l_eff_date   = agqpersonal:eff_date
    l_record_key = "TB"
    include "plsdftable.pro"

    l_base_premium = l_base_premium * l_nonowned_factor
    end

l_endorsement_base = l_base_premium
L_RECORD_KEY       = "CF"
L_CONSTRUCTION     = agqPERSONAL:CONSTRUCTION
Include "plsconstfactor.pro"

If L_COVERAGE = "A" Then
    begin
    L_BASE_PREMIUM     = L_BASE_PREMIUM * L_CONSTRUCTION_FACTOR
    l_endorsement_base = l_base_premium
    end

if l_coverage = "C" and
   agqpersonal:state = 19 then
    begin
    l_base_premium     = l_base_premium * l_construction_factor_1
    l_endorsement_base = l_base_premium
    end

if l_coverage = "A" then
    l_mpl53_base = l_base_premium

l_code = "MPL72"
Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID       = agqPERSONAL:COMPANY_ID,
                      SFSOPTEND:STATE            = agqPERSONAL:STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                      SFSOPTEND:CODE             = L_CODE, Generic

while SFSOPTEND:COMPANY_ID       = agqPERSONAL:COMPANY_ID and
      SFSOPTEND:STATE            = agqPERSONAL:STATE and
      SFSOPTEND:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS and
      SFSOPTEND:CODE             = L_CODE
    begin
    If (agqpersonal:EFF_DATE >= SFSOPTEND:EFF_DATE and
       (agqpersonal:eff_date <= sfsoptend:Exp_date or
       sfsoptend:exp_date = 0)) Then
        Begin
        L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
        end

    next sfsoptend
    end

If ((agqPERSONAL:SEASONAL = "Y" And
   agqPERSONAL:PROTECTION = 3 and
   agqpersonal:state <> 19) or
   (l_end_factor <> 0 and
   agqpersonal:seasonal = "Y")) Then
    Begin
    L_RECORD_KEY = "SO"

    Include "plsseasonal.pro"

    If L_COVERAGE = "A" Then
        Begin
        if l_end_factor <> 0 then
            begin
            l_seasonal_premium = l_base_premium * l_end_factor
            end
        else
            begin
            If L_FORM = 1 And
               agqPERSONAL:EC = "Y" Then -- MDW74
                L_SEASONAL_PREMIUM = (L_BASE_PREMIUM + ((L_LIMIT Divide L_SEASONAL_PER)
                                 * L_SEASONAL_FACTOR_2))
            Else
                L_SEASONAL_PREMIUM = (L_BASE_PREMIUM + ((L_LIMIT Divide L_SEASONAL_PER)
                                     * L_SEASONAL_FACTOR_1))
            end
        End
    Else
        Begin
        if l_end_factor <> 0 then
            begin
            l_seasonal_premium = l_base_premium * l_end_factor
            end
        else
            begin
            If L_FORM = 1 And
               agqPERSONAL:EC = "Y" Then  -- MDW74
                L_SEASONAL_PREMIUM = L_BASE_PREMIUM * L_SEASONAL_FACTOR_4
            Else
                L_SEASONAL_PREMIUM = L_BASE_PREMIUM * L_SEASONAL_FACTOR_3
            end
        End

    L_BASE_PREMIUM     = L_SEASONAL_PREMIUM
    l_endorsement_base = l_base_premium
    End

If agqPERSONAL:SEASONAL = "Y" And
   agqpersonal:state = 19 Then
    Begin
    L_RECORD_KEY = "SO"
    l_Form       = agqpersonal:form
    l_county     = agqpersonal:county

    Include "plsseasonal1.pro"

    L_SEASONAL_PREMIUM = L_BASE_PREMIUM * l_seasonal_factor_1

    L_BASE_PREMIUM     = L_SEASONAL_PREMIUM
    l_endorsement_base = l_base_premium
    End

Access agqPERSONAL_ALIAS, Set agqpersonal_alias:app_no = agqpersonal:app_no,
                              agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                              agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

if l_rating_change_2 <> 2 then
    begin
    l_tier = agqpersonal_alias:tier
    include "sfstier.pro"

    if l_tier_factor = 0 then
        l_tier_factor = 1.00

    if agsdefault_plp:dont_use_tier_rating = 1 then
        l_tier_factor = 1.00

    if l_coverage = "C" and
       agqpersonal:company_id = "FLEMINGTON" then
        l_tier_factor = 1.00

    l_base_premium     = l_base_premium * l_tier_factor
    if l_tier_factor <> 1.00 then
        l_tier_surcharge = ((l_base_premium * l_tier_factor) - l_base_premium)
    end
else
    begin
    l_tier = agqpersonal_alias:tier
    include "sfstier.pro"

    if l_tier_factor = 0 then
        l_tier_factor = 1.00

    if agsdefault_plp:dont_use_tier_rating = 1 then
        l_tier_factor = 1.00

    if l_coverage = "C" and
       agqpersonal:company_id = "FLEMINGTON" then
        l_tier_factor = 1.00

    l_base_premium     = l_base_premium * l_tier_factor
    l_rating_base_a    = l_rating_base_a * l_tier_factor
    if l_tier_factor <> 1.00 then
        l_tier_surcharge = ((l_base_premium * l_tier_factor) - l_base_premium)
    end

l_endorsement_base = l_base_premium

/*if l_coverage = "A" then
    begin
    write("%c%n",1005,l_base_premium)
    write("%c%n",1015,l_rating_base_a)
    write("%c%n",1025,l_endorsement_base)
    end*/

-- Maryland state factor
if agqpersonal:state = 19 and
   agqpersonal:windstorm_loss_mitigation = 1 and
   agqpersonal:owner_occupied = "Y" then
    begin
    l_record_key = "RT"
    include "plsrates.pro"

    if l_state_factor_3 = 0 then
        l_state_factor_3 = 1.00
    if l_state_factor_4 = 0 then
        l_state_factor_4 = 1.00
    switch(agqpersonal:form)
      case 1  : begin
                l_base_premium = l_base_premium * l_state_factor_3
                if l_coverage = "A" then
                    l_rating_base_a = l_rating_base_a * l_state_factor_3
                else
                    l_rating_base_c = l_rating_base_c * l_state_factor_3
                l_windstorm_surcharge = (l_windstorm_surcharge +
                                        ((l_base_premium * l_state_factor_3) -
                                        l_base_premium))
                l_windstorm_factor = (100 - (100 * l_state_factor_3))
                end
      case 6  : begin
                l_base_premium = l_base_premium * l_state_factor_5
                if l_coverage = "A" then
                    l_rating_base_a = l_rating_base_a * l_state_factor_5
                else
                    l_rating_base_c = l_rating_base_c * l_state_factor_5
                l_windstorm_surcharge = (l_windstorm_surcharge +
                                        ((l_base_premium * l_state_factor_5) -
                                        l_base_premium))
                l_windstorm_factor = (100 - (100 * l_state_factor_5))
                end
      default : begin
                l_base_premium = l_base_premium * l_state_factor_4
                if l_coverage = "A" then
                    l_rating_base_a = l_rating_base_a * l_state_factor_4
                else
                    l_rating_base_c = l_rating_base_c * l_state_factor_4
                l_windstorm_surcharge = (l_windstorm_surcharge +
                                        ((l_base_premium * l_state_factor_4) -
                                        l_base_premium))
                l_windstorm_factor = (100 - (100 * l_state_factor_4))
                end
      end
    l_endorsement_base = l_base_premium
    end
else
    begin
    l_windstorm_surcharge = 0
    l_windstorm_factor = 0
    end

--write("%c%n",1025,l_base_premium)
If L_COVERAGE = "C" And
   agqPERSONAL:THEFT = 1 and
   l_rating_change <> 1 and
   agqpersonal:company_id <> "FLEMINGTON" Then
    Begin
    L_RECORD_KEY       = "RI"
    L_COMPANY_ID       = agqpersonal:COMPANY_ID
    L_STATE            = agqPERSONAL:STATE
    L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
    L_FORM             = 0
    L_TABLE            = 0
    L_EFF_DATE         = agqpersonal:EFF_DATE

    Include "plsdfrateinc.pro"

    L_BASE_PREMIUM = L_BASE_PREMIUM * L_RATE_INCREASE
    End

if l_coverage = "A" then
    begin
    if l_base_premium_a = 0 then
        l_base_premium_a = l_base_premium
    end

if l_base_premium_2 = 0 then
    L_BASE_PREMIUM_2 = L_BASE_PREMIUM
L_RECORD_KEY = "DF"
L_LIMIT      = agqPERSONAL:CONTENTS_LIMIT + agqPERSONAL:DWELLING_LIMIT

Include "plsdeductible.pro"

if l_rating_change = 1 then
    begin
    if l_coverage = "A" then
        begin
        l_base_premium = (l_base_premium + ((l_rating_base_a * l_deductible_charge) -
                         l_rating_base_a))
        end
    else
        l_base_premium = (l_base_premium + ((l_rating_base_c * l_deductible_charge) -
                         l_rating_base_c))
    end
else
    L_BASE_PREMIUM = L_BASE_PREMIUM * L_DEDUCTIBLE_CHARGE

--write("%c%n",1035,l_base_premium)
If agqPERSONAL:WIND_DEDUCTIBLE <> 0 Then
    Begin
    L_RECORD_KEY      = "WD"
    L_WIND_DEDUCTIBLE = agqPERSONAL:WIND_DEDUCTIBLE

    Include "plswinddeduct.pro"

    if l_rating_change = 1 then
        begin
        if l_coverage = "A" then
            l_base_premium = (l_base_premium + ((l_rating_base_a * l_wind_deduct_charge) -
                             l_rating_base_a))
        else
            l_base_premium = (l_base_premium + ((l_rating_base_c * l_wind_deduct_charge) -
                             l_rating_base_c))
        end
    else
        L_BASE_PREMIUM = L_BASE_PREMIUM * L_WIND_DEDUCT_CHARGE
    if l_wind_deduct_charge = 0 then
        l_dont_update_agqtotals = "Y"
    End

If agqPERSONAL:HURRICANE_DEDUCTIBLE <> 0 Then
    Begin
    L_HURRICANE_DEDUCTIBLE = agqPERSONAL:HURRICANE_DEDUCTIBLE

    Include "plshurricane.pro"

    if l_hurricane_rate = 0 then
        l_hurricane_rate = 1.00

    if l_rating_change = 1 then
        begin
        if l_coverage = "A" then
            begin
            l_base_premium = (l_base_premium + ((l_rating_base_a * l_hurricane_rate) -
                             l_rating_base_a))
            end
        else
            l_base_premium = (l_base_premium + ((l_rating_base_c * l_hurricane_rate) -
                             l_rating_base_c))
        end
    else
        L_BASE_PREMIUM = L_BASE_PREMIUM * l_hurricane_rate
    End

Access agqend, Set agqend:app_no = G_app_no,
                   agqend:PREM_NO  = agqPERSONAL:PREM_NO,
                   agqend:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

L_MPL13  = "N"
while agqend:app_no = G_app_no and
      agqend:PREM_NO  = agqPERSONAL:PREM_NO and
      agqend:BUILD_NO = agqPERSONAL:BUILD_NO
    begin
    If agqend:CODE = "MPL13" Then
        L_MPL13  = "Y"

    Next agqend
    End

If L_COVERAGE = "A" Then
    Begin
    L_RECORD_KEY      = "NH"
    L_NEW_HOME_YEAR_1 = Year(agqpersonal:EFF_DATE) - agqPERSONAL:YEAR_CONSTRUCTION
    If L_NEW_HOME_YEAR_1 <= 99 Then
        L_NEW_HOME_YEAR = L_NEW_HOME_YEAR_1
    Else
        L_NEW_HOME_YEAR = 11

    Include "plsnewhomedisc.pro"

    If (L_NEW_HOME_DISCOUNT = 0.0 Or
       (L_MPL13 = "Y" And
       agsdefault_plp:MPL13_AND_NEW_HOME_DISCOUNT = 0)) Then
        L_NEW_HOME_DISCOUNT = 1.00

    if l_rating_change = 1 then
        l_base_premium = (l_base_premium + ((l_rating_base_a * l_new_home_discount) -
                         l_rating_base_a))
    else
        L_BASE_PREMIUM = L_BASE_PREMIUM * L_NEW_HOME_DISCOUNT
    End

--write("%c%n",1045,l_base_premium)
If L_COVERAGE = "C" And
   agqPERSONAL:THEFT = 1 and
   l_rating_change = 1 and
   agqpersonal:form <> 1 and
   agqpersonal:company_id <> "FLEMINGTON" Then
    Begin
    L_RECORD_KEY       = "RI"
    L_COMPANY_ID       = agqpersonal:COMPANY_ID
    L_STATE            = agqPERSONAL:STATE
    L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
    L_FORM             = 0
    L_TABLE            = 0
    L_EFF_DATE         = agqpersonal:EFF_DATE

    Include "plsdfrateinc.pro"

    L_BASE_PREMIUM = L_BASE_PREMIUM * L_RATE_INCREASE
    End

L_ALARM_PREMIUM = 0
If agqPERSONAL:ALARM_FACTOR[1] <> 0 Then
    begin
    if l_rating_change = 1 then
        begin
        if l_coverage = "A" then
            l_base_premium = (l_base_premium + ((l_rating_base_a * agqpersonal:alarm_factor[1]) -
                             l_rating_base_a))
        else
            l_base_premium = (l_base_premium + ((l_rating_base_c * agqpersonal:alarm_factor[1]) -
                             l_rating_base_c))
        end
    else
        L_BASE_PREMIUM = L_BASE_PREMIUM * agqPERSONAL:ALARM_FACTOR[1]
    end
If agqPERSONAL:ALARM_FACTOR[2] <> 0 Then
    begin
    if l_rating_change = 1 then
        begin
        if l_coverage = "A" then
            l_base_premium = (l_base_premium + ((l_rating_base_a * agqpersonal:alarm_factor[2]) -
                             l_rating_base_a))
        else
            l_base_premium = (l_base_premium + ((l_rating_base_c * agqpersonal:alarm_factor[2]) -
                             l_rating_base_c))
        end
    else
        L_BASE_PREMIUM = L_BASE_PREMIUM * agqPERSONAL:ALARM_FACTOR[2]
    end
If agqPERSONAL:ALARM_FACTOR[3] <> 0 Then
    begin
    if l_rating_change = 1 then
        begin
        if l_coverage = "A" then
            l_base_premium = (l_base_premium + ((l_rating_base_a * agqpersonal:alarm_factor[3]) -
                             l_rating_base_a))
        else
            l_base_premium = (l_base_premium + ((l_rating_base_c * agqpersonal:alarm_factor[3]) -
                             l_rating_base_c))
        end
    else
        L_BASE_PREMIUM = L_BASE_PREMIUM * agqPERSONAL:ALARM_FACTOR[3]
    end
If agqPERSONAL:ALARM_FACTOR[4] <> 0 Then
    begin
    if l_rating_change = 1 then
        begin
        if l_coverage = "A" then
            l_base_premium = (l_base_premium + ((l_rating_base_a * agqpersonal:alarm_factor[4]) -
                             l_rating_base_a))
        else
            l_base_premium = (l_base_premium + ((l_rating_base_c * agqpersonal:alarm_factor[4]) -
                             l_rating_base_c))
        end
    else
        L_BASE_PREMIUM = L_BASE_PREMIUM * agqPERSONAL:ALARM_FACTOR[4]
    end
If agqPERSONAL:ALARM_FACTOR[5] <> 0 Then
    begin
    if l_rating_change = 1 then
        begin
        if l_coverage = "A" then
            begin
            l_base_premium = (l_base_premium + ((l_rating_base_a * agqpersonal:alarm_factor[5]) -
                             l_rating_base_a))
            end
        else
            l_base_premium = (l_base_premium + ((l_rating_base_c * agqpersonal:alarm_factor[5]) -
                             l_rating_base_c))
        end
    else
        L_BASE_PREMIUM = L_BASE_PREMIUM * agqPERSONAL:ALARM_FACTOR[5]
    end
If agqPERSONAL:ALARM_FACTOR[6] <> 0 Then
    begin
    if l_rating_change = 1 then
        begin
        if l_coverage = "A" then
            l_base_premium = (l_base_premium + ((l_rating_base_a * agqpersonal:alarm_factor[6]) -
                             l_rating_base_a))
        else
            l_base_premium = (l_base_premium + ((l_rating_base_c * agqpersonal:alarm_factor[6]) -
                             l_rating_base_c))
        end
    else
        L_BASE_PREMIUM = L_BASE_PREMIUM * agqPERSONAL:ALARM_FACTOR[6]
    end

Access agqPERSONAL_ALIAS, Set agqpersonal_alias:app_no = agqpersonal:app_no,
                              agqPERSONAL_ALIAS:PREM_NO  = agqPERSONAL:PREM_NO,
                              agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

If agqpersonal_alias:app_no = agqpersonal:app_no And
   agqPERSONAL_ALIAS:PREM_NO  = agqPERSONAL:PREM_NO And
   agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO Then
    begin
    Change agqPERSONAL_ALIAS
        Begin
        agqpersonal_alias:tier_surcharge = l_tier_surcharge
        agqpersonal_alias:windstorm_surcharge = l_windstorm_surcharge
        agqpersonal_alias:windstorm_factor = l_windstorm_factor
        Switch(L_COVERAGE)
          Case "C"  : Begin
                      agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1] = L_BASE_PREMIUM
                      L_BASE_PREMIUM_C                      = L_BASE_PREMIUM
                      End
          Default   : Begin
                      agqPERSONAL_ALIAS:DWELLING_PREMIUM[1] = L_BASE_PREMIUM
                      L_BASE_PREMIUM_A                      = L_BASE_PREMIUM
                      End
          End
        if agqpersonal_alias:contents_limit = 0 then
            agqpersonal_alias:contents_premium[1] = 0
        if agqpersonal_alias:dwelling_limit = 0 then
            agqpersonal_alias:dwelling_premium[1] = 0
        End
    end

if l_coverage = "A" then
    l_endorsement_base_1 = l_endorsement_base
else
    l_endorsement_base_2 = l_endorsement_base

l_endorsement_base_3 = l_endorsement_base_3 + l_endorsement_base
End

Procedure GET_DWELLING_TABLE
Begin
L_RECORD_KEY = "TB"
L_COMPANY_ID = agqpersonal:COMPANY_ID
L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
L_STATE = agqPERSONAL:STATE
L_OWNER_OCCUPIED = agqPERSONAL:OWNER_OCCUPIED
L_NO_FAMILIES = agqPERSONAL:NO_FAMILIES
L_EFF_DATE = agqpersonal:EFF_DATE

Include "plsdftable.pro"

Access agqPERSONAL_ALIAS, Set agqpersonal_alias:app_no = agqpersonal:app_no,
                              agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                              agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

If agqpersonal_alias:app_no = agqpersonal:app_no And
   agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO And
   agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO Then
    begin
    Change agqPERSONAL_ALIAS
        Begin
        agqPERSONAL_alias:TABLE   = L_TABLE
        agqpersonal_alias:table_1 = l_table
        end
    end

End

Procedure COVERAGE_B_D_PREMIUM
Begin
L_RECORD_KEY = "CI"
L_COMPANY_ID = agqPERSONAL:COMPANY_ID
L_STATE = agqPERSONAL:STATE
L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
L_FORM = agqPERSONAL:FORM
L_EFF_DATE = agqpersonal:EFF_DATE

Include "plscovincrease.pro"

End

Procedure LIABILITY_PREMIUM
Begin
access sfsline, set sfsline:company_id = agqpersonal:company_id,
                    sfsline:line_of_business = agqpersonal:line_of_business,
                    sfsline:lob_subline = "00", generic

If SFSLINE:LOB_CODE <> "DWELLING" Then
    Begin
    L_RECORD_KEY = "LR"
    L_COMPANY_ID = agqPERSONAL:COMPANY_ID
    L_STATE = agqPERSONAL:STATE
    L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
    L_EFF_DATE = agqpersonal:EFF_DATE
    L_CODE = ""/raw
    L_LIABILITY_LIMIT = agqPERSONAL:LIABILITY_LIMIT
    L_MEDICAL_LIMIT = agqPERSONAL:MEDICAL_LIMIT

    Include "plsliabrates.pro"

    Access agqPERSONAL_ALIAS, Set agqpersonal_alias:app_no = agqpersonal:app_no,
                                  agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                  agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

    If agqpersonal_alias:app_no = agqpersonal:app_no And
       agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO And
       agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO Then
        Change agqPERSONAL_ALIAS
            Begin
            agqPERSONAL_ALIAS:LIAB_MEDICAL_PREMIUM = L_LIABILITY_CHARGE_1
            End
    L_LIABILITY_TOTAL = 0
    End
Else
    Begin
    L_RECORD_KEY = "LR"
    L_COMPANY_ID = agqPERSONAL:COMPANY_ID
    L_STATE = agqPERSONAL:STATE
    L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
    L_EFF_DATE = agqpersonal:EFF_DATE
    Switch(agqPERSONAL:LIABILITY_FORM)
      Case 1  : L_CODE = "MDL1"
      Default : L_CODE = "MDL2"
      End
    L_LIABILITY_LIMIT = agqPERSONAL:LIABILITY_LIMIT
    L_MEDICAL_LIMIT = agqPERSONAL:MEDICAL_LIMIT

    Include "plsliabrates.pro"

    If L_STATE = 37 Then
        Begin
        -- MDL territory multipliers
        If agqPERSONAL:LIABILITY_FORM = 1 Then  -- MDL1
            Begin
            L_RECORD_KEY = "TF"
            L_COMPANY_ID = agqpersonal:COMPANY_ID
            L_STATE = agqPERSONAL:STATE
            L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
            L_FORM = 2
            L_GROUP = agqPERSONAL:GROUP
            L_EFF_DATE = agqpersonal:EFF_DATE

            Include "plsterrfactor.pro"
            End
        Else
            L_TERRITORY_FACTOR = 1.00
        End
    Else
        L_TERRITORY_FACTOR = 1.00

    Access agqPERSONAL_ALIAS, Set agqpersonal_alias:app_no = agqpersonal:app_no,
                                  agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                  agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

    If agqpersonal_alias:app_no = agqpersonal:app_no And
       agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO And
       agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO Then
        Begin
        If agqPERSONAL:LIABILITY_LIMIT <> 0 Then
            Begin
            Change agqPERSONAL_ALIAS
                Begin
                Switch(agqPERSONAL_ALIAS:NO_FAMILIES)
                  Case 1  : agqPERSONAL_ALIAS:LIAB_MEDICAL_PREMIUM =
                                 L_LIABILITY_CHARGE_1 * L_TERRITORY_FACTOR
                  Case 2  : agqPERSONAL_ALIAS:LIAB_MEDICAL_PREMIUM =
                                 L_LIABILITY_CHARGE_2 * L_TERRITORY_FACTOR
                  Case 3  : agqPERSONAL_ALIAS:LIAB_MEDICAL_PREMIUM =
                                 L_LIABILITY_CHARGE_3 * L_TERRITORY_FACTOR
                  Default : agqPERSONAL_ALIAS:LIAB_MEDICAL_PREMIUM =
                                 L_LIABILITY_CHARGE_4 * L_TERRITORY_FACTOR
                  End
                End
            End
        Else
            Change agqPERSONAL_ALIAS
                Begin
                agqPERSONAL_ALIAS:LIAB_MEDICAL_PREMIUM = 0
                End
        End

    Access agqPERSONAL_ALIAS, Set agqpersonal_alias:app_no = agqpersonal:app_no,
                                  agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                  agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

    L_LIABILITY_TOTAL = agqPERSONAL_ALIAS:LIAB_MEDICAL_PREMIUM
    End

End

Procedure ACCESS_LOSSCOST
Begin
L_COMPANY_ID = agqPERSONAL:COMPANY_ID
L_STATE = agqPERSONAL:STATE
L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
Access SFSLOSSCOST, Set SFSLOSSCOST:COMPANY_ID = L_COMPANY_ID,
                        SFSLOSSCOST:STATE = L_STATE,
                        SFSLOSSCOST:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

Repeat Begin
   Exit If SFSLOSSCOST:COMPANY_ID <> L_COMPANY_ID Or
           SFSLOSSCOST:STATE <> L_STATE Or
           SFSLOSSCOST:LINE_OF_BUSINESS <> L_LINE_OF_BUSINESS

   If agqpersonal:EFF_DATE >= SFSLOSSCOST:EFF_DATE Then
       L_LOSS_COST = SFSLOSSCOST:RATE

Next SFSLOSSCOST
End

If L_LOSS_COST = 0 Then
    L_LOSS_COST = 1.0000

/* end of access_sfslosscost */
End

Procedure GET_RATE
Begin
Access agqPERSONAL_ALIAS, Set agqpersonal_alias:app_no = agqpersonal:app_no,
                              agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                              agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

If agqpersonal_alias:app_no = agqpersonal:app_no And
   agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO And
   agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO Then
    Change agqPERSONAL_ALIAS
        Begin
        agqPERSONAL_ALIAS:PLP_TOTAL = L_LOC_TOTAL
        End

L_TOTAL = L_LOC_TOTAL + L_TOTAL

/* end of get rate */
End

Procedure MINIMUM_PREMIUMS
Begin
Access SFSCONTROL, Set SFSCONTROL:COMPANY_ID = agqpersonal:COMPANY_ID,
                       SFSCONTROL:STATE = agqPERSONAL:STATE,
                       SFSCONTROL:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS, Approximate

Repeat Begin
    Exit If SFSCONTROL:COMPANY_ID <> agqpersonal:COMPANY_ID Or
            SFSCONTROL:STATE <> agqPERSONAL:STATE Or
            SFSCONTROL:LINE_OF_BUSINESS <> agqpersonal:LINE_OF_BUSINESS

    If (agqpersonal:EFF_DATE >= SFSCONTROL:EFF_DATE and
       (agqpersonal:eff_date <= sfscontrol:exp_date or
       sfscontrol:exp_date = 0)) Then
        Begin
        L_MINIMUM               = SFSCONTROL:MINIMUM_PREMIUM
        L_INLAND_MARINE_MINIMUM = SFSCONTROL:INLAND_MARINE_PREMIUM
        l_policy_surcharge      = sfscontrol:policy_surcharge
        End

    Next SFSCONTROL
    End

End

Procedure TOTALS
Begin
if l_loss_factor <> 0 then
    l_total = l_total * l_loss_factor

L_MINIMUM_APPLIES = "N"
If L_TOTAL < L_MINIMUM Then
    Begin
    L_TOTAL = L_MINIMUM
    L_MINIMUM_APPLIES = "Y"
    End
Else
    L_MINIMUM_APPLIES = "N"

End

procedure loss_surcharge
begin
access sfsloss, set sfsloss:company_id       = agqpersonal:company_id,
                    sfsloss:state            = agqpersonal:state,
                    sfsloss:line_of_business = agqpersonal:line_of_business, generic

l_loss_factor = 0
while sfsloss:company_id       = agqpersonal:company_id and
      sfsloss:state            = agqpersonal:state and
      sfsloss:line_of_business = agqpersonal:line_of_business
        begin
        if (agqpersonal:eff_date >= sfsloss:eff_date and
           (agqpersonal:eff_date < sfsloss:exp_date or
           sfsloss:exp_date = 0)) then
            begin
            if agqpersonal:no_claims >= sfsloss:no_losses then
                l_loss_factor = sfsloss:factor
            end

        next sfsloss
        end

Access agqPERSONAL_ALIAS, Set agqpersonal_alias:app_no = agqpersonal:app_no,
                              agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                              agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

If agqpersonal_alias:app_no = agqpersonal:app_no And
   agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO And
   agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO Then
    Change agqPERSONAL_ALIAS
        Begin
        agqPERSONAL_ALIAS:loss_surcharge_factor   = l_loss_factor
        agqpersonal_alias:total_discounts_applied = ((l_total * l_loss_factor) -
                                                    l_total)
        l_discount_1 = l_total + agqpersonal_alias:total_discounts_applied
        l_discount_2 = l_total * l_loss_factor
        if l_discount_1 <> l_discount_2 then
            begin
            l_discount_3 = l_discount_2 - l_discount_1
            agqpersonal_alias:total_discounts_applied = agqpersonal_alias:total_discounts_applied +
                                                        l_discount_3
            end
        End

end

Procedure FINAL_TOTAL
Begin
l_total = l_total + l_boiler_premium
L_EFF_DATE_1 = Dateadd(agqpersonal:EFF_DATE,0,1)
If agqpersonal:EXP_DATE < L_EFF_DATE_1 Then
    Begin
    L_DAYS_RATE = L_TOTAL Divide 365
    L_DAYS = agqpersonal:EXP_DATE - agqpersonal:EFF_DATE
    L_PRO_RATA_PREMIUM = L_DAYS * L_DAYS_RATE
    L_TOTAL = L_PRO_RATA_PREMIUM
    End

if l_boiler_premium = 0 then
    begin
    access agqpersonal_alias, set agqpersonal_alias:app_no = agqpersonal:app_no, generic

    if agqpersonal_alias:app_no = agqpersonal:app_no then
        begin
        change agqpersonal_alias
            begin
            agqpersonal_alias:delete_boiler = 1
            end
        end
    end

If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
    L_FINAL_TOTAL = L_TOTAL + L_INSTALLMENT
Else
    L_FINAL_TOTAL = L_TOTAL

if (l_policy_surcharge <> 0 and
   (agqpersonal:seasonal = "Y" or
   agqpersonal:owner_occupied = "Y")) then
    begin
    if agqpersonal:override_seasonal_surcharge = 0 then
        begin
        l_policy_surcharge_total = ((l_final_total * l_policy_surcharge) -
                                   l_final_total)
        l_final_total = l_final_total * l_policy_surcharge
        end
    else
        begin
        l_policy_surcharge_total = 0
        end
    end
else
    l_policy_surcharge_total = 0

access agqtotals, set agqtotals:app_no     = agqpersonal:app_no,
                      agqtotals:prem_no    = agqpersonal:prem_no,
                      agqtotals:build_no   = agqpersonal:build_no,
                      agqtotals:deductible = l_deductible, generic

if agqtotals:app_no     = agqpersonal:app_no and
   agqtotals:prem_no    = agqpersonal:prem_no and
   agqtotals:build_no   = agqpersonal:build_no and
   agqtotals:deductible = l_deductible then
    begin
    change agqtotals
        begin
        if l_dont_update_agqtotals = "N" then
            agqtotals:deductible_premium          = agqtotals:deductible_premium +
                                                    l_policy_surcharge_total
        else
            agqtotals:deductible_premium          = 0
        end
    end

l_total_all_locations = l_total_all_locations +
                        l_policy_surcharge_total

access agqmaster, set agqmaster:app_no = agqpersonal:app_no, generic

l_irpm = agqmaster:irpm
l_irpm = (1 + (l_irpm * 0.01))
if l_irpm = 0 then
    l_irpm = 1

if l_irpm not one of 1 then
    begin
    l_irpm_total   = ((l_final_total - l_boiler_premium) * l_irpm)
    l_irpm_total_1 = (l_irpm_total - (l_final_total - l_boiler_premium))
    l_irpm_total   = l_irpm_total + l_boiler_premium
    end
else
    begin
    l_irpm_total   = 0
    l_irpm_total_1 = 0
    end

access sfssurcharge, set sfssurcharge:company_id = agqpersonal:company_id,
                         sfssurcharge:state = agqpersonal:state,
                         sfssurcharge:line_of_business = agqpersonal:line_of_business, generic

l_surcharge_date = 0
while sfssurcharge:company_id = agqpersonal:company_id and
      sfssurcharge:state = agqpersonal:state and
      sfssurcharge:line_of_business = agqpersonal:line_of_business
        begin
        if (agqpersonal:eff_date >= sfssurcharge:eff_date and
           (l_surcharge_date < sfssurcharge:eff_date or
           l_surcharge_date = 0)) then
            begin
            l_surcharge_date    = sfssurcharge:eff_date
            l_surcharge_factor  = sfssurcharge:surcharge_factor
            l_surcharge_minimum = sfssurcharge:minimum_premium
            end
        next sfssurcharge
        end

if l_irpm_total = 0 then
    L_SURCHARGE = L_FINAL_TOTAL * l_SURCHARGE_FACTOR
else
    L_SURCHARGE = L_IRPM_TOTAL * l_SURCHARGE_FACTOR
If L_SURCHARGE < l_SURCHARGE_MINIMUM Then
    L_SURCHARGE = l_SURCHARGE_MINIMUM

L_COMPANY_ID = agqPERSONAL:COMPANY_ID

Access agqmaster, Set agqmaster:app_no = agqpersonal:app_no, Exact

If agqmaster:app_no = agqpersonal:app_no Then
    Change agqmaster
        Begin
        -- need these totals for inquiry purposes
        agqmaster:total[2]  = l_boiler_premium
        agqmaster:TOTAL[3]  = L_INLAND_TOTAL
        agqmaster:TOTAL[4]  = L_basic_prem
        agqmaster:TOTAL[5]  = L_UMBRELLA_TOTAL
        agqmaster:TOTAL[6]  = 0 -- workers comp med
        agqmaster:TOTAL[8]  = L_LIABILITY_TOTAL
        agqmaster:total[9]  = l_policy_surcharge_total
        agqmaster:total[10] = l_irpm_total_1
        agqmaster:other_totals[10] = l_basic_prem
        agqmaster:other_totals[11] = l_inservants_employees_prem
        agqmaster:other_totals[12] = l_outservants_residence_prem
        agqmaster:other_totals[13] = l_outservants_estate_prem
        if l_mpl80_exists = "N" then
            begin
            agqmaster:other_totals[1] = 0
            agqmaster:other_totals[2] = 0
            agqmaster:other_totals[3] = 0
            agqmaster:other_totals[4] = 0
            agqmaster:other_totals[5] = 0
            end
        agqmaster:TOTAL[11] = 0
        agqmaster:TOTAL[12] = 0
        agqmaster:TOTAL[13] = 0
        agqmaster:TOTAL[14] = 0
        If SFSLINE:LOB_CODE = "DWELLING" Then
            Begin
            If L_MINIMUM_APPLIES = "Y" Then
                Begin
                if l_irpm_total = 0 then
                    begin
                    If agqPERSONAL:DWELLING_LIMIT <> 0 Then
                        L_BUILDING_PREMIUM = L_FINAL_TOTAL - L_INSTALLMENT
                    Else
                        L_CONTENTS_PREMIUM = L_FINAL_TOTAL - L_INSTALLMENT
                    end
                else
                    begin
                    If agqPERSONAL:DWELLING_LIMIT <> 0 Then
                        L_BUILDING_PREMIUM = L_IRPM_TOTAL - L_INSTALLMENT
                    Else
                        L_CONTENTS_PREMIUM = L_IRPM_TOTAL - L_INSTALLMENT
                    end
                End
            else
                Begin
                if agqpersonal:company_id = "NWIC" then
                    begin
                    If agqPERSONAL:DWELLING_LIMIT <> 0 Then
                        L_BUILDING_PREMIUM = l_building_premium + l_policy_surcharge_total +
                                             agqpersonal:total_discounts_applied
                    Else
                        L_CONTENTS_PREMIUM = L_contents_premium + l_policy_surcharge_total +
                                             agqpersonal:total_discounts_applied
                    end
                else
                    begin
                    If agqPERSONAL:DWELLING_LIMIT <> 0 Then
                        L_BUILDING_PREMIUM = l_building_premium + l_policy_surcharge_total + l_irpm_total_1
                    Else
                        L_CONTENTS_PREMIUM = L_contents_premium + l_policy_surcharge_total + l_irpm_total_1
                    End
                end
            If L_BUILDING_PREMIUM <> 0 Then
                Begin
                If agqPERSONAL:FORM = 1 And
                   agqPERSONAL:EC = "Y" Then
                    Begin
                    agqmaster:TOTAL[11] = L_BUILDING_PREMIUM
                    agqmaster:total[12] = 0
                    End
                Else
                    Begin
                    L_BUILDING_FIRE = (L_BUILDING_PREMIUM *
                                      (agsdefault_plp:BUILDING_PERCENT_FIRE
                                      Divide 100))
                    agqmaster:TOTAL[11] = L_BUILDING_FIRE

                    L_BUILDING_ALLIED = (L_BUILDING_PREMIUM *
                                        (agsdefault_plp:BUILDING_PERCENT_ALLIED
                                         Divide 100))
                    agqmaster:TOTAL[12] = L_BUILDING_ALLIED
                    End
                End
            else
            if l_building_premium = 0 then
                begin
                agqmaster:total[11] = 0
                agqmaster:total[12] = 0
                end

            If L_CONTENTS_PREMIUM <> 0 Then
                Begin
                If agqPERSONAL:FORM = 1 And
                   agqPERSONAL:EC = "Y" Then
                    Begin
                    agqmaster:TOTAL[13] = L_CONTENTS_PREMIUM
                    agqmaster:total[14] = 0
                    End
                Else
                    Begin
                    L_CONTENTS_FIRE = (L_CONTENTS_PREMIUM *
                                      (agsdefault_plp:CONTENTS_PERCENT_FIRE
                                      Divide 100))
                    agqmaster:TOTAL[13] = L_CONTENTS_FIRE
                    L_CONTENTS_ALLIED = (L_CONTENTS_PREMIUM *
                                        (agsdefault_plp:CONTENTS_PERCENT_ALLIED
                                        Divide 100))
                    agqmaster:TOTAL[14] = L_CONTENTS_ALLIED
                    End
                End
            else
            if l_contents_premium = 0 then
                begin
                agqmaster:total[13] = 0
                agqmaster:total[14] = 0
                end

            L_DWELLING_FIRE_TOTAL = L_BUILDING_FIRE + L_BUILDING_ALLIED +
                                    L_CONTENTS_FIRE + L_CONTENTS_ALLIED +
                                    L_INLAND_TOTAL + L_WORKERS_COMP_TOTAL +
                                    L_UMBRELLA_TOTAL + L_LIABILITY_TOTAL
            L_DWELLING_FIRE_DIFF = ((L_TOTAL - l_boiler_premium + l_policy_surcharge_total + l_irpm_total_1) - L_DWELLING_FIRE_TOTAL)
            If L_DWELLING_FIRE_TOTAL <> (L_TOTAL - l_boiler_premium + l_policy_surcharge_total + l_irpm_total_1) Then
                Begin
                If L_BUILDING_FIRE <> 0 Then
                    agqmaster:TOTAL[11] = agqmaster:TOTAL[11] + L_DWELLING_FIRE_DIFF
                Else
                If L_CONTENTS_FIRE <> 0 Then
                    agqmaster:TOTAL[13] = agqmaster:TOTAL[13] + L_DWELLING_FIRE_DIFF
                End
            End
        agqmaster:TOTAL[17] = L_TOTAL
        agqmaster:TOTAL[18] = L_FINAL_TOTAL
        agqmaster:total[19] = l_irpm_total
        if l_irpm_total = 0 then
            begin
            If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                Begin
                agqmaster:TOTAL[1] = L_FINAL_TOTAL - L_INSTALLMENT -
                                     l_boiler_premium
                End
            Else
                Begin
                agqmaster:TOTAL[1] = L_FINAL_TOTAL - l_boiler_premium
                End
            end
        else
            begin
            If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                Begin
                agqmaster:TOTAL[1] = L_IRPM_TOTAL - L_INSTALLMENT -
                                     l_boiler_premium
                End
            Else
                Begin
                agqmaster:TOTAL[1] = L_IRPM_TOTAL - l_boiler_premium
                End
            end
        agqmaster:INSTALLMENT_CHARGE = L_INSTALLMENT
        If L_MINIMUM_APPLIES = "Y" Then
            agqmaster:MINIMUM_PREM_APPLIES = "Y"
        else
            agqmaster:minimum_prem_applies = "N"
        agqmaster:SURCHARGE = L_SURCHARGE
        if l_irpm_total = 0 then
            agqmaster:RAW_PREMIUM_AMT_DUE = L_FINAL_TOTAL - l_boiler_premium
        else
            agqmaster:RAW_PREMIUM_AMT_DUE = L_IRPM_TOTAL - l_boiler_premium
        agqmaster:terrorism_premium = l_terrorism_premium
        agqmaster:tpd6_terrorism_premium = l_tpd6_terrorism_premium
        if l_irpm_total = 0 then
            begin
            If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                Begin
                agqmaster:TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE +
                                      L_INSTALLMENT
                agqmaster:AMT_DUE_TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE +
                                              L_INSTALLMENT
                End
            Else
                Begin
                agqmaster:TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE
                agqmaster:AMT_DUE_TOTAL[20] = L_FINAL_TOTAL + L_SURCHARGE
                end
            End
        else
            begin
            If SFSCOMPANY:INCLUDE_INSTALLMENT_RATING = "Y" Then
                Begin
                agqmaster:TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE +
                                      L_INSTALLMENT
                agqmaster:AMT_DUE_TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE +
                                              L_INSTALLMENT
                End
            Else
                Begin
                agqmaster:TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE
                agqmaster:AMT_DUE_TOTAL[20] = L_IRPM_TOTAL + L_SURCHARGE
                end
            End

        End

/* end of final total */
End

Procedure GET_WATERCRAFT_RATES
Begin
L_RECORD_KEY = "LR"
L_COMPANY_ID = agqPERSONAL:COMPANY_ID
L_STATE = agqPERSONAL:STATE
L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
L_LIABILITY_LIMIT = agqPERSONAL:LIABILITY_LIMIT
L_MEDICAL_LIMIT = agqPERSONAL:MEDICAL_LIMIT

Include "plsliabrates.pro"

End

Procedure RATE_ENDORSEMENTS
Begin
Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID = agqPERSONAL:COMPANY_ID,
                      SFSOPTEND:STATE = agqPERSONAL:STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                      SFSOPTEND:CODE = L_CODE, Generic

l_boiler_form = 0
Repeat Begin
    Exit If SFSOPTEND:COMPANY_ID <> agqPERSONAL:COMPANY_ID Or
            SFSOPTEND:STATE <> agqPERSONAL:STATE Or
            SFSOPTEND:LINE_OF_BUSINESS <> agqpersonal:LINE_OF_BUSINESS Or
            SFSOPTEND:CODE <> L_CODE

    If (agqpersonal:EFF_DATE >= SFSOPTEND:EFF_DATE and
       (agqpersonal:eff_date <= sfsoptend:Exp_date or
       sfsoptend:exp_date = 0)) Then
        Begin
        L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
        L_END_LIMIT = SFSOPTEND:LIMIT[1]
        L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]

        if l_code = "MPL720"  then
            begin
            l_boiler_premium = ((agqpersonal:dwelling_limit divide
                               sfsoptend:limit[1]) *
                               sfsoptend:premium_1[1])

            if l_boiler_premium < sfsoptend:premium_1[2] then
                l_boiler_premium = sfsoptend:premium_1[2]
            else
            if l_boiler_premium > sfsoptend:premium_1[3] then
                l_boiler_premium = sfsoptend:premium_1[3]

            l_boiler_form = 1
            end

        if l_code = "FPL02"  then
            begin
            if agqpersonal:form one of 3 then
                l_boiler_premium = ((agqpersonal:dwelling_limit divide
                                   sfsoptend:limit[1]) *
                                   sfsoptend:premium_1[1])
            else
            if agqpersonal:form one of 6 then
                l_boiler_premium = ((agqpersonal:contents_limit divide
                                   sfsoptend:limit[1]) *
                                   sfsoptend:premium_1[1])

            if l_boiler_premium < sfsoptend:premium_1[2] then
                l_boiler_premium = sfsoptend:premium_1[2]
            else
            if l_boiler_premium > sfsoptend:premium_1[3] then
                l_boiler_premium = sfsoptend:premium_1[3]

            if agqpersonal:form not one of 6 then
                l_boiler_limit = agqpersonal:dwelling_limit *
                                 sfsoptend:premium_1[4]
            else
                l_boiler_limit = agqpersonal:contents_limit *
                                 sfsoptend:premium_1[4]
            if l_boiler_limit < sfsoptend:limit[4] then
                l_boiler_limit = sfsoptend:limit[4]

            l_boiler_form = 1
            end

        If L_CODE = "FPL01" Then
            Begin
            Switch(agqPERSONAL:FORM)
              Case 3  : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
              Case 6  : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
              Default : L_END_PREMIUM1 = 0
              End
            end

        If L_CODE = "SAL01" Then
            Begin
            Switch(agqPERSONAL:FORM)
              Case 4  : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
              Case 6  : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[3]
              Default : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
              End

            Access agqENDORSE1, Set agqendorse1:app_no = agqpersonal:app_no,
                                    agqendorse1:PREM_NO =agqPERSONAL:PREM_NO,
                                    agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                                    agqendorse1:CODE = L_CODE, Generic

            If agqendorse1:LIMIT[1] > SFSOPTEND:LIMIT[1] Then
                l_end_premium1 = (l_end_premium1 +
                                 (((agqendorse1:limit[1] -
                                 sfsoptend:limit[1]) divide
                                 sfsoptend:limit[4]) *
                                 sfsoptend:premium_1[4]))
            End

        If L_CODE one of "SAL02", "SAL04" then
            L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]

        if l_code = "MPL122" then
            begin
            if sfsoptend:limit[1] = agqpersonal:liability_limit then
                l_end_premium1 = sfsoptend:premium_1[1]
            if sfsoptend:limit[2] = agqpersonal:liability_limit then
                l_end_premium1 = sfsoptend:premium_1[2]
            end

        If L_CODE one of "MPL18", "FPL18", "MPL53", "MPL54", "MPL13" then
            L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]

        If L_CODE = "MDL62" Then
            Begin
            Switch(agqPERSONAL:MEDICAL_LIMIT)
              Case 2000 : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
              Case 3000 : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
              Case 5000 : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[3]
              End
            End

        If L_CODE one of "MPL17", "MPL46" Then
            Begin
            Access agqENDORSE1, Set agqendorse1:app_no = agqpersonal:app_no,
                                    agqendorse1:PREM_NO =agqPERSONAL:PREM_NO,
                                    agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                                    agqendorse1:CODE = L_CODE, Generic

            If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[1] Then
                L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
            Else
            If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[2] Then
                L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
            Else
            If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[3] Then
                L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[3]
            Else
            If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[4] Then
                L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[4]
            End

        If L_CODE one of "MPL96" then
            Begin
            Access agqENDORSE1, Set agqendorse1:app_no = agqPERSONAL:app_no,
                                    agqendorse1:PREM_NO =agqPERSONAL:PREM_NO,
                                    agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                                    agqendorse1:CODE = L_CODE, Generic

            if agqpersonal:company_id <> "FARMERS" then
                begin
                If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[1] Then
                    L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
                Else
                If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[2] Then
                    L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
                Else
                If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[3] Then
                    L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[3]
                Else
                If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[4] Then
                    L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[4]
                end
            else
            if agqpersonal:company_id = "FARMERS" then
                begin
                If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[1] Then
                    L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
                Else
                If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[2] Then
                    L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]

                if agqpersonal:no_families > 1 and
                   l_end_premium1 <> 0 then
                    l_end_premium1 = (l_end_premium1 + (sfsoptend:premium_1[3] * (l_no_families - 1)))
                end
            End

        If L_CODE = "MPL123" Then
            Begin
            Access agqDAYCARE, Set agqDAYCARE:app_no = agqpersonal:app_no,
                                   agqDAYCARE:PREM_NO =agqPERSONAL:PREM_NO,
                                   agqDAYCARE:BUILD_NO = agqPERSONAL:BUILD_NO, generic

            If agqDAYCARE:liability_limit = SFSOPTEND:LIMIT[1] Then
                L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
            Else
            If agqDAYCARE:liability_limit = SFSOPTEND:LIMIT[2] Then
                L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
            end

        If L_CODE = "MPL97" Then
            Begin
            Access agqENDORSE1, Set agqendorse1:app_no = agqpersonal:app_no,
                                    agqendorse1:PREM_NO =agqPERSONAL:PREM_NO,
                                    agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                                    agqendorse1:CODE = L_CODE, Generic

            switch(agqpersonal:form)
              case 4, 6 : If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[4] Then
                              L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[4]
                          Else
                          If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[5] Then
                              L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[5]
                          Else
                          If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[6] Then
                              L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[6]
              default   : If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[1] Then
                              L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
                          Else
                          If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[2] Then
                              L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
                          Else
                          If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[3] Then
                              L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[3]
              end
            End

        If L_CODE = "MPL125" Then
            Begin
            Access agqENDORSE1, Set agqendorse1:app_no = agqpersonal:app_no,
                                    agqendorse1:PREM_NO =agqPERSONAL:PREM_NO,
                                    agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                                    agqendorse1:CODE = L_CODE, Generic

            switch(agqpersonal:form)
              case 4    : If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[2] Then
                              L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
              default   : If agqendorse1:LIMIT[1] = SFSOPTEND:LIMIT[1] Then
                              L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
              end
            End

        If L_CODE one of "MPL127", "SAL127" Then
            Begin
            Access agqENDORSE1, Set agqendorse1:app_no = agqpersonal:app_no,
                                    agqendorse1:PREM_NO =agqPERSONAL:PREM_NO,
                                    agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                                    agqendorse1:CODE = L_CODE, Generic

            l_end_premium1 = 0
            If agqendorse1:option[1] = 1 Then
                begin
                if agqendorse1:no_of_items[1] = 0 then
                    l_end_premium1 = l_end_premium1 +
                                     sfsoptend:premium_1[1]
                else
                    L_END_PREMIUM1 = (l_end_premium1 +
                                     (SFSOPTEND:PREMIUM_1[1] *
                                     agqendorse1:no_of_items[1]))
                end

            If agqendorse1:option[2] = 1 Then
                begin
                if agqendorse1:no_of_items[2] = 0 then
                    l_end_premium1 = l_end_premium1 +
                                     sfsoptend:premium_1[2]
                else
                    L_END_PREMIUM1 = (l_end_premium1 +
                                     (SFSOPTEND:PREMIUM_1[2] *
                                     agqendorse1:no_of_items[2]))
                end

            If agqendorse1:option[3] = 1 Then
                begin
                if agqendorse1:no_of_items[3] = 0 then
                    l_end_premium1 = l_end_premium1 +
                                     sfsoptend:premium_1[3]
                else
                    L_END_PREMIUM1 = (l_end_premium1 +
                                     (SFSOPTEND:PREMIUM_1[3] *
                                     agqendorse1:no_of_items[3]))
                end

            If agqendorse1:option[4] = 1 Then
                begin
                if agqendorse1:no_of_items[4] = 0 then
                    l_end_premium1 = l_end_premium1 +
                                     sfsoptend:premium_1[4]
                else
                    L_END_PREMIUM1 = (l_end_premium1 +
                                     (SFSOPTEND:PREMIUM_1[4] *
                                     agqendorse1:no_of_items[4]))
                end

            If agqendorse1:option[5] = 1 Then
                begin
                if agqendorse1:no_of_items[5] = 0 then
                    l_end_premium1 = l_end_premium1 +
                                     sfsoptend:premium_1[5]
                else
                    L_END_PREMIUM1 = (l_end_premium1 +
                                     (SFSOPTEND:PREMIUM_1[5] *
                                     agqendorse1:no_of_items[5]))
                end

            If agqendorse1:option[6] = 1 Then
                begin
                if agqendorse1:no_of_items[6] = 0 then
                    l_end_premium1 = l_end_premium1 +
                                     sfsoptend:premium_1[6]
                else
                    L_END_PREMIUM1 = (l_end_premium1 +
                                     (SFSOPTEND:PREMIUM_1[6] *
                                     agqendorse1:no_of_items[6]))
                end

            If agqendorse1:option[7] = 1 Then
                begin
                if agqendorse1:no_of_items[7] = 0 then
                    l_end_premium1 = l_end_premium1 +
                                     sfsoptend:premium_1[7]
                else
                    L_END_PREMIUM1 = (l_end_premium1 +
                                     (SFSOPTEND:PREMIUM_1[7] *
                                     agqendorse1:no_of_items[7]))
                end

            If agqendorse1:option[8] = 1 Then
                begin
                if agqendorse1:no_of_items[8] = 0 then
                    l_end_premium1 = l_end_premium1 +
                                     sfsoptend:premium_1[8]
                else
                L_END_PREMIUM1 = (l_end_premium1 +
                                 (SFSOPTEND:PREMIUM_1[8] *
                                 agqendorse1:no_of_items[8]))
                end

            If agqendorse1:option[9] = 1 Then
                begin
                if agqendorse1:no_of_items[9] = 0 then
                    l_end_premium1 = l_end_premium1 +
                                     sfsoptend:premium_1[9]
                else
                L_END_PREMIUM1 = (l_end_premium1 +
                                 (SFSOPTEND:PREMIUM_1[9] *
                                 agqendorse1:no_of_items[9]))
                end

            End

        If L_CODE = "MPL16" Then
            Begin
            Access agqDESC1, Set agqdesc1:app_no = agqpersonal:app_no,
                                 agqdesc1:PREM_NO =agqPERSONAL:PREM_NO,
                                 agqdesc1:BUILD_NO = agqPERSONAL:BUILD_NO,
                                 agqdesc1:CODE = L_CODE, Generic

            L_END_PREMIUM1 = 0
            Repeat Begin
                Exit If agqdesc1:app_no <> agqpersonal:app_no Or
                        agqdesc1:PREM_NO <> agqPERSONAL:PREM_NO Or
                        agqdesc1:BUILD_NO <> agqPERSONAL:BUILD_NO Or
                        agqdesc1:CODE <> L_CODE

            L_MPL16_PREMIUM = 0
--            If agqdesc1:OPTION = "A" And
--               L_END_PREMIUM1 <> 0 Then
--                L_MPL16_PREMIUM = ((agqdesc1:LIMIT Divide L_END_LIMIT) *
--                                  L_END_PREMIUM1)
            If agqdesc1:TOTAL_PREMIUM <> 0 Then
                L_END_PREMIUM1 = L_END_PREMIUM1 + agqdesc1:TOTAL_PREMIUM +
                                 L_MPL16_PREMIUM
            Next agqDESC1
            End

            End

        If L_CODE = "MPL58" Then
            Begin
            Access agqENDORSE1, Set agqendorse1:app_no = agqpersonal:app_no,
                                    agqendorse1:PREM_NO =agqPERSONAL:PREM_NO,
                                    agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                                    agqendorse1:CODE = L_CODE, Generic

            If agqendorse1:PREMIUM[1] <> 0 Then
                L_END_PREMIUM1 = agqendorse1:PREMIUM[1]
            End

        If L_CODE = "MPL19" Then
            Begin
            Access agqOUTBOARD, Set agqOUTBOARD:app_no = agqpersonal:app_no,
                                    agqOUTBOARD:PREM_NO = agqPERSONAL:PREM_NO,
                                    agqOUTBOARD:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

            If agqOUTBOARD:DEDUCTIBLE_TYPE = 1 Then
                L_END_PREMIUM1 = (SFSOPTEND:PREMIUM_1[1] * ((agqOUTBOARD:LIMIT[1]
                                 + agqOUTBOARD:LIMIT[2] + agqOUTBOARD:LIMIT[3] +
                                 agqOUTBOARD:LIMIT[4]) Divide 1000))
            If agqOUTBOARD:DEDUCTIBLE_TYPE = 2 Then
                L_END_PREMIUM1 = (SFSOPTEND:PREMIUM_1[2] * ((agqOUTBOARD:LIMIT[1]
                                 + agqOUTBOARD:LIMIT[2] + agqOUTBOARD:LIMIT[3] +
                                 agqOUTBOARD:LIMIT[4]) Divide 1000))
            If agqOUTBOARD:LAKES = 1 Then
                L_END_PREMIUM1 = L_END_PREMIUM1 * SFSOPTEND:PREMIUM_1[3]
            End

        If L_CODE = "MPL32" Then
            Begin
            Access agqSTRUCTURES, Set agqSTRUCTURES:app_no = agqpersonal:app_no,
                                      agqSTRUCTURES:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqSTRUCTURES:BUILD_NO = agqPERSONAL:BUILD_NO,
                                      agqSTRUCTURES:CODE = L_CODE, Generic

            L_LIMIT = agqSTRUCTURES:LIMIT[1] + agqSTRUCTURES:LIMIT[2] +
                      agqSTRUCTURES:LIMIT[3] + agqSTRUCTURES:LIMIT[4]

            L_END_PREMIUM1 = ((L_LIMIT Divide SFSOPTEND:LIMIT[1])
                             * SFSOPTEND:PREMIUM_1[1])
            End

        If L_CODE = "MPL33" Then
            Begin
            Access agqSTRUCTURES, Set agqSTRUCTURES:app_no = agqpersonal:app_no,
                                      agqSTRUCTURES:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqSTRUCTURES:BUILD_NO = agqPERSONAL:BUILD_NO,
                                      agqSTRUCTURES:CODE = L_CODE, Generic

            L_END_PREMIUM1 = 0
            Switch(agqSTRUCTURES:BARNS[1])
              Case "B" : Switch(agqSTRUCTURES:OPTION[1])
                           Case "A" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[1]
                                                       Divide SFSOPTEND:LIMIT[1])
                                                       * SFSOPTEND:PREMIUM_1[1]))
                           Case "B" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[1]
                                                       Divide SFSOPTEND:LIMIT[2])
                                                       * SFSOPTEND:PREMIUM_1[2]))
                           Case "C" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[1]
                                                       Divide SFSOPTEND:LIMIT[3])
                                                       * SFSOPTEND:PREMIUM_1[3]))
                           End
              Default  :   Switch(agqSTRUCTURES:OPTION[1])
                           Case "A" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[1]
                                                       Divide SFSOPTEND:LIMIT[4])
                                                       * SFSOPTEND:PREMIUM_1[4]))
                           Case "B" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[1]
                                                       Divide SFSOPTEND:LIMIT[5])
                                                       * SFSOPTEND:PREMIUM_1[5]))
                           Case "C" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[1]
                                                       Divide SFSOPTEND:LIMIT[6])
                                                       * SFSOPTEND:PREMIUM_1[6]))
                           End
              End
            Switch(agqSTRUCTURES:BARNS[2])
              Case "B" : Switch(agqSTRUCTURES:OPTION[2])
                           Case "A" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[2]
                                                       Divide SFSOPTEND:LIMIT[1])
                                                       * SFSOPTEND:PREMIUM_1[1]))
                           Case "B" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[2]
                                                       Divide SFSOPTEND:LIMIT[2])
                                                       * SFSOPTEND:PREMIUM_1[2]))
                           Case "C" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[2]
                                                       Divide SFSOPTEND:LIMIT[3])
                                                       * SFSOPTEND:PREMIUM_1[3]))
                           End
              Default  :   Switch(agqSTRUCTURES:OPTION[2])
                           Case "A" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[2]
                                                       Divide SFSOPTEND:LIMIT[4])
                                                       * SFSOPTEND:PREMIUM_1[4]))
                           Case "B" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[2]
                                                       Divide SFSOPTEND:LIMIT[5])
                                                       * SFSOPTEND:PREMIUM_1[5]))
                           Case "C" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[2]
                                                       Divide SFSOPTEND:LIMIT[6])
                                                       * SFSOPTEND:PREMIUM_1[6]))
                           End
              End
            Switch(agqSTRUCTURES:BARNS[3])
              Case "B" : Switch(agqSTRUCTURES:OPTION[3])
                           Case "A" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[3]
                                                       Divide SFSOPTEND:LIMIT[1])
                                                       * SFSOPTEND:PREMIUM_1[1]))
                           Case "B" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[3]
                                                       Divide SFSOPTEND:LIMIT[2])
                                                       * SFSOPTEND:PREMIUM_1[2]))
                           Case "C" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[3]
                                                       Divide SFSOPTEND:LIMIT[3])
                                                       * SFSOPTEND:PREMIUM_1[3]))
                           End
              Default  :   Switch(agqSTRUCTURES:OPTION[3])
                           Case "A" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[3]
                                                       Divide SFSOPTEND:LIMIT[4])
                                                       * SFSOPTEND:PREMIUM_1[4]))
                           Case "B" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[3]
                                                       Divide SFSOPTEND:LIMIT[5])
                                                       * SFSOPTEND:PREMIUM_1[5]))
                           Case "C" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[3]
                                                       Divide SFSOPTEND:LIMIT[6])
                                                       * SFSOPTEND:PREMIUM_1[6]))
                           End
              End
            Switch(agqSTRUCTURES:BARNS[4])
              Case "B" : Switch(agqSTRUCTURES:OPTION[4])
                           Case "A" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[4]
                                                       Divide SFSOPTEND:LIMIT[1])
                                                       * SFSOPTEND:PREMIUM_1[1]))
                           Case "B" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[4]
                                                       Divide SFSOPTEND:LIMIT[2])
                                                       * SFSOPTEND:PREMIUM_1[2]))
                           Case "C" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[4]
                                                       Divide SFSOPTEND:LIMIT[3])
                                                       * SFSOPTEND:PREMIUM_1[3]))
                           End
              Default  :   Switch(agqSTRUCTURES:OPTION[4])
                           Case "A" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[4]
                                                       Divide SFSOPTEND:LIMIT[4])
                                                       * SFSOPTEND:PREMIUM_1[4]))
                           Case "B" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[4]
                                                       Divide SFSOPTEND:LIMIT[5])
                                                       * SFSOPTEND:PREMIUM_1[5]))
                           Case "C" : L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                                       ((agqSTRUCTURES:LIMIT[4]
                                                       Divide SFSOPTEND:LIMIT[6])
                                                       * SFSOPTEND:PREMIUM_1[6]))
                           End
              End

            End

        If L_CODE = "MPL41" Then
            Begin
            L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
            End

        If L_CODE = "MPL47" Then
            Begin
            If SFSLINE:LOB_CODE = "DWELLING" Then
                L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
            Else
                Begin
                Switch(agqPERSONAL:FORM)
                  Case 4  : L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
                  Case 6  : L_END_FACTOR = SFSOPTEND:PREMIUM_1[2]
                  Case 2  : L_END_FACTOR = SFSOPTEND:PREMIUM_1[3]
                  Default : L_END_FACTOR = SFSOPTEND:PREMIUM_1[4]
                  End
                End
            End

        If L_CODE = "MPL48" Then
            Begin
            L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
            L_END_FACTOR = SFSOPTEND:PREMIUM_1[3]
            L_END_LIMIT = SFSOPTEND:LIMIT[1]
            End

        If L_CODE one of "MDW28", "MDW85" Then
            Begin
            L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
            End

        If L_CODE = "MDW25" Then
            Begin
            L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
            End

        If L_CODE = "MPL49" Then
            Begin
            If SFSLINE:LOB_CODE = "DWELLING" Then
               L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
            Else
                Begin
                Switch(agqPERSONAL:FORM)
                  Case 4  : L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
                  Case 6  : L_END_FACTOR = SFSOPTEND:PREMIUM_1[2]
                  Case 2  : L_END_FACTOR = SFSOPTEND:PREMIUM_1[3]
                  Default : L_END_FACTOR = SFSOPTEND:PREMIUM_1[4]
                  End
                End
            End

        If L_CODE = "MBO80" Then
            L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]

        If L_CODE = "MBO82" Or
           L_CODE = "MBO84" Or
           L_CODE = "MBO81" Then
            L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]

        If L_CODE = "MPL52" Then
            Begin
            Access agqSTRUCTURES, Set agqSTRUCTURES:app_no = agqpersonal:app_no,
                                      agqSTRUCTURES:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqSTRUCTURES:BUILD_NO = agqPERSONAL:BUILD_NO,
                                      agqSTRUCTURES:CODE = L_CODE, Generic

            L_LIMIT = agqSTRUCTURES:LIMIT[1] + agqSTRUCTURES:LIMIT[2]

            L_END_PREMIUM1 = ((L_LIMIT Divide SFSOPTEND:LIMIT[1])
                             * SFSOPTEND:PREMIUM_1[1])

            L_RECORD_KEY = "LR"
            L_COMPANY_ID = agqpersonal:COMPANY_ID
            L_STATE = agqPERSONAL:STATE
            L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
            L_LIABILITY_LIMIT = agqPERSONAL:LIABILITY_LIMIT
            L_MEDICAL_LIMIT = agqPERSONAL:MEDICAL_LIMIT

            Include "plsliabrates.pro"

            If agqSTRUCTURES:DESCRIPTION[2] <> "" Then
                L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_1
            If agqSTRUCTURES:DESCRIPTION[3] <> "" Then
                L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_2
            If agqSTRUCTURES:DESCRIPTION[4] <> "" Then
                L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_3
            If agqSTRUCTURES:NAME[2] <> "" Then
                L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_4

            Access agqSTRUCTLOC, Set agqSTRUCTLOC:app_no = agqpersonal:app_no,
                                     agqSTRUCTLOC:PREM_NO = agqPERSONAL:PREM_NO,
                                     agqSTRUCTLOC:BUILD_NO = agqPERSONAL:BUILD_NO,
                                     agqSTRUCTLOC:CODE = L_CODE, Generic

            Repeat Begin
                Exit If agqSTRUCTLOC:app_no <> agqpersonal:app_no Or
                        agqSTRUCTLOC:PREM_NO <> agqPERSONAL:PREM_NO Or
                        agqSTRUCTLOC:BUILD_NO <> agqPERSONAL:BUILD_NO Or
                        agqSTRUCTLOC:CODE <> L_CODE

                Switch(agqSTRUCTLOC:NO_UNITS)
                  Case 1  : L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_5
                  Case 2  : L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_6
                  Case 3  : L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_7
                  Default : L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_8
                  End

                Next agqSTRUCTLOC
                End
            End

       If L_CODE = "MPL38" Then
            Begin
            L_END_PREMIUM1 = 0
            Access agqHOMEBUS, Set agqHOMEBUS:app_no = agqpersonal:app_no,
                                   agqHOMEBUS:PREM_NO = agqPERSONAL:PREM_NO,
                                   agqHOMEBUS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

            Repeat Begin
                Exit If agqHOMEBUS:app_no <> agqpersonal:app_no Or
                        agqHOMEBUS:PREM_NO <> agqPERSONAL:PREM_NO Or
                        agqHOMEBUS:BUILD_NO <> agqPERSONAL:BUILD_NO

                Change agqHOMEBUS
                    Begin
                    agqHOMEBUS:HOME_BUS_TOTAL = 0
                    End

                L_RECORD_KEY = "HB"
                L_COMPANY_ID = agqpersonal:COMPANY_ID
                L_STATE = agqPERSONAL:STATE
                L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
                L_PROTECTION = agqPERSONAL:PROTECTION
                if l_protection = 4 and
                   sfscompany:boiler_rating = 1 then
                    l_protection = 1
                L_CONSTRUCTION = agqPERSONAL:CONSTRUCTION
                L_HOME_RES_PROP = agqHOMEBUS:RESIDENCE_PREMISES_LIMIT
                L_HOME_PROP_OTHERS = agqHOMEBUS:PERSONAL_PROPERTY_LIMIT
                L_LOSS_INCOME_LIMIT = agqHOMEBUS:LOSS_INCOME_LIMIT
                L_MPL56 = agqHOMEBUS:MPL56

                Include "plshomebus.pro"

                -- related structures used for home business
                If agqHOMEBUS:STRUCTURE_LIMIT <> 0 Then
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:STRUCTURES_PREMIUM = ((agqHOMEBUS:STRUCTURE_LIMIT
                                                        Divide
                                                        L_HOME_STRUCT_PER)
                                                        * L_HOME_STRUCT_RATE)
                        agqHOMEBUS:HOME_BUS_TOTAL = agqHOMEBUS:HOME_BUS_TOTAL +
                                                    agqHOMEBUS:STRUCTURES_PREMIUM
                        L_END_PREMIUM1 = L_END_PREMIUM1 +
                                         agqHOMEBUS:STRUCTURES_PREMIUM
                        End
                    Else
                        Change agqHOMEBUS
                            Begin
                            agqHOMEBUS:STRUCTURES_PREMIUM = 0
                            End

                -- property while at residence premises
                If agqHOMEBUS:RESIDENCE_PREMISES_LIMIT <> 0 And
                   agqHOMEBUS:RESIDENCE_PREMISES_LIMIT <= L_HOME_PROPERTY_OVER_LIMIT Then
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:RESIDENCE_PREM_PREMIUM  = (((agqHOMEBUS:RESIDENCE_PREMISES_LIMIT
                                                             Divide
                                                             L_HOME_PER_PROP_PER)
                                                             * L_HOME_PER_PROP_RATE)
                                                             + L_HOME_RES_PROP_CHARGE)
                        agqHOMEBUS:HOME_BUS_TOTAL = agqHOMEBUS:HOME_BUS_TOTAL +
                                                    agqHOMEBUS:RESIDENCE_PREM_PREMIUM
                        L_END_PREMIUM1 = L_END_PREMIUM1 +
                                         agqHOMEBUS:RESIDENCE_PREM_PREMIUM
                       End
                Else
                If agqHOMEBUS:RESIDENCE_PREMISES_LIMIT <> 0 And
                   agqHOMEBUS:RESIDENCE_PREMISES_LIMIT > L_HOME_PROPERTY_OVER_LIMIT Then
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:HOME_BUS_TOTAL = agqHOMEBUS:HOME_BUS_TOTAL +
                                                    agqHOMEBUS:RESIDENCE_PREM_PREMIUM
                        L_END_PREMIUM1 = L_END_PREMIUM1 +
                                         agqHOMEBUS:RESIDENCE_PREM_PREMIUM
                        End
                Else
                If agqHOMEBUS:RESIDENCE_PREMISES_LIMIT = 0 Then
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:RESIDENCE_PREM_PREMIUM = 0
                        End
                -- personal property of others
                If agqHOMEBUS:PERSONAL_PROPERTY_LIMIT <> L_HOME_PER_PROP_BASIC And
                   agqHOMEBUS:PERSONAL_PROPERTY_LIMIT <= L_HOME_PROPERTY_OVER_LIMIT Then
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:PERSONAL_PROP_PREMIUM = ((((agqHOMEBUS:PERSONAL_PROPERTY_LIMIT -
                                                           L_HOME_PER_PROP_BASIC)
                                                           Divide
                                                           L_HOME_PER_PROP_PER)
                                                           * L_HOME_PER_PROP_RATE)
                                                           + L_HOME_PER_PROP_CHARGE)
                        agqHOMEBUS:HOME_BUS_TOTAL = agqHOMEBUS:HOME_BUS_TOTAL +
                                                    agqHOMEBUS:PERSONAL_PROP_PREMIUM
                        L_END_PREMIUM1 = L_END_PREMIUM1 +
                                         agqHOMEBUS:PERSONAL_PROP_PREMIUM
                        End
                Else
                If agqHOMEBUS:PERSONAL_PROPERTY_LIMIT > L_HOME_PROPERTY_OVER_LIMIT Then
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:HOME_BUS_TOTAL = agqHOMEBUS:HOME_BUS_TOTAL +
                                                    agqHOMEBUS:PERSONAL_PROP_PREMIUM
                        L_END_PREMIUM1 = L_END_PREMIUM1 +
                                         agqHOMEBUS:PERSONAL_PROP_PREMIUM
                        End
                Else
                If agqHOMEBUS:PERSONAL_PROPERTY_LIMIT = L_HOME_PER_PROP_BASIC Then
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:PERSONAL_PROP_PREMIUM = 0
                        End

               -- deductible and wind deductible factors
                If agqPERSONAL:DEDUCTIBLE <> PLSHOMEBUS:DEDUCTIBLE Or
                   agqPERSONAL:WIND_DEDUCTIBLE <> 0 Then
                    Change agqHOMEBUS
                        Begin
                        If L_WIND_DEDUCT_CHARGE = 0 Then
                            L_WIND_DEDUCT_CHARGE = 1.00
                        agqHOMEBUS:DEDUCTIBLE_PREMIUM = ((agqHOMEBUS:HOME_BUS_TOTAL *
                                                        L_DEDUCTIBLE_CHARGE *
                                                        L_WIND_DEDUCT_CHARGE) -
                                                        agqHOMEBUS:HOME_BUS_TOTAL)
                        L_END_PREMIUM1 = L_END_PREMIUM1 +
                                         agqHOMEBUS:DEDUCTIBLE_PREMIUM
                        agqHOMEBUS:HOME_BUS_TOTAL = agqHOMEBUS:HOME_BUS_TOTAL +
                                                    agqHOMEBUS:DEDUCTIBLE_PREMIUM
                        End
                    Else
                        Change agqHOMEBUS
                            Begin
                            agqHOMEBUS:DEDUCTIBLE_PREMIUM = 0
                            End

                -- loss of income and extra expense
                Change agqHOMEBUS
                    Begin
                    agqHOMEBUS:LOSS_INCOME_PREMIUM = ((agqHOMEBUS:HOME_BUS_TOTAL *
                                                     L_LOSS_INCOME_FACTOR) -
                                                     agqHOMEBUS:HOME_BUS_TOTAL)
                    agqHOMEBUS:HOME_BUS_TOTAL =  agqHOMEBUS:HOME_BUS_TOTAL +
                                                 agqHOMEBUS:LOSS_INCOME_PREMIUM
                    L_END_PREMIUM1 = L_END_PREMIUM1 +
                                     agqHOMEBUS:LOSS_INCOME_PREMIUM
                    End
                -- accounts receivable
                If agqHOMEBUS:AR_LIMIT <> L_HOME_AR_LIMIT Then
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:AR_PREMIUM = (((agqHOMEBUS:AR_LIMIT -
                                                L_HOME_AR_LIMIT) Divide
                                                L_HOME_AR_PER) * L_HOME_PER_PROP_RATE
                                                * L_HOME_AR_FACTOR)
                        L_END_PREMIUM1 = L_END_PREMIUM1 +
                                         agqHOMEBUS:AR_PREMIUM
                        agqHOMEBUS:HOME_BUS_TOTAL = agqHOMEBUS:HOME_BUS_TOTAL
                                                    + agqHOMEBUS:AR_PREMIUM
                        End
                    Else
                        Change agqHOMEBUS
                            Begin
                            agqHOMEBUS:AR_PREMIUM = 0
                            End
                -- valuable papers
                If agqHOMEBUS:VALUABLE_PAPERS_LIMIT <> L_HOME_VALUE_LIMIT Then
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:VALUABLE_PAPERS_PREMIUM =
                                               (((agqHOMEBUS:VALUABLE_PAPERS_LIMIT -
                                                L_HOME_VALUE_LIMIT) Divide
                                                L_HOME_VALUE_PER) * L_HOME_PER_PROP_RATE
                                                * L_HOME_VALUE_FACTOR)
                        L_END_PREMIUM1 = L_END_PREMIUM1 +
                                         agqHOMEBUS:VALUABLE_PAPERS_PREMIUM
                        agqHOMEBUS:HOME_BUS_TOTAL = agqHOMEBUS:HOME_BUS_TOTAL +
                                                    agqHOMEBUS:VALUABLE_PAPERS_PREMIUM
                        End
                    Else
                        Change agqHOMEBUS
                            Begin
                            agqHOMEBUS:VALUABLE_PAPERS_PREMIUM = 0
                            End

                -- money on/off
                If agqHOMEBUS:MONEY_ON_LIMIT <> L_HOME_MONEY_LIMIT_1 Then
                    Change agqHOMEBUS
                        Begin
                        If agqHOMEBUS:MONEY_ON_LIMIT = L_HOME_MONEY_LIMIT_3 Then
                            agqHOMEBUS:MONEY_PREMIUM = L_HOME_MONEY_CHARGE_1
                        Else
                        If agqHOMEBUS:MONEY_ON_LIMIT = L_HOME_MONEY_LIMIT_4 Then
                            agqHOMEBUS:MONEY_PREMIUM = L_HOME_MONEY_CHARGE_2
                        L_END_PREMIUM1 = L_END_PREMIUM1 +
                                         agqHOMEBUS:MONEY_PREMIUM
                        agqHOMEBUS:HOME_BUS_TOTAL = agqHOMEBUS:HOME_BUS_TOTAL +
                                                    agqHOMEBUS:MONEY_PREMIUM
                        End
                    Else
                        Change agqHOMEBUS
                            Begin
                            agqHOMEBUS:MONEY_PREMIUM = 0
                            End

                -- liability charge
                If agqPERSONAL:LIABILITY_LIMIT = L_HOME_LIABILITY_1 Or
                   agqPERSONAL:LIABILITY_LIMIT = L_HOME_LIABILITY_2 Then
                    Change agqHOMEBUS
                        Begin
                        If agqPERSONAL:LIABILITY_LIMIT = L_HOME_LIABILITY_1 Then
                            agqHOMEBUS:LIABILITY_PREMIUM = (L_HOME_LIABILITY_CHARGE_1 +
                                                           ((agqHOMEBUS:HOME_BUS_TOTAL *
                                                           L_HOME_LIABILITY_FACTOR_1) -
                                                           agqHOMEBUS:HOME_BUS_TOTAL))
                        Else
                        If agqPERSONAL:LIABILITY_LIMIT = L_HOME_LIABILITY_2 Then
                            agqHOMEBUS:LIABILITY_PREMIUM = (L_HOME_LIABILITY_CHARGE_2 +
                                                           ((agqHOMEBUS:HOME_BUS_TOTAL *
                                                           L_HOME_LIABILITY_FACTOR_2) -
                                                           agqHOMEBUS:HOME_BUS_TOTAL))
                        agqHOMEBUS:HOME_BUS_TOTAL = agqHOMEBUS:HOME_BUS_TOTAL +
                                                    agqHOMEBUS:LIABILITY_PREMIUM
                        L_END_PREMIUM1 = L_END_PREMIUM1 +
                                         agqHOMEBUS:LIABILITY_PREMIUM
                        End
                Else
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:LIABILITY_PREMIUM = 0
                        End

                -- minimum premium
                If L_END_PREMIUM1 < L_HOME_MIN_PREM Then
                    Begin
                    L_END_PREMIUM1 = L_HOME_MIN_PREM
                    L_agqend_MINIMUM_PREMIUM = "Y"
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:HOME_BUS_TOTAL = L_HOME_MIN_PREM
                        agqHOMEBUS:MINIMUM_PREMIUM_APPLIES = "Y"
                        End

                    End
                Else
                    Begin
                    L_agqend_MINIMUM_PREMIUM = "N"
                    Change agqHOMEBUS
                        Begin
                        agqHOMEBUS:MINIMUM_PREMIUM_APPLIES = "N"
                        End
                    End

                Next agqHOMEBUS
                End
            End

        If L_CODE = "MPL26" Then
            Begin
            L_RECORD_KEY = "LR"
            L_COMPANY_ID = agqPERSONAL:COMPANY_ID
            L_STATE = agqPERSONAL:STATE
            L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
            L_LIABILITY_LIMIT = agqPERSONAL:LIABILITY_LIMIT
            L_MEDICAL_LIMIT = agqPERSONAL:MEDICAL_LIMIT

            Include "plsliabrates.pro"

            Access agqADDPREM, Set agqADDPREM:app_no = agqpersonal:app_no,
                                   agqADDPREM:PREM_NO = agqPERSONAL:PREM_NO,
                                   agqADDPREM:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

            L_END_PREMIUM1 = 0
            Repeat Begin
                Exit If agqADDPREM:app_no <> agqpersonal:app_no Or
                        agqADDPREM:PREM_NO <> agqPERSONAL:PREM_NO Or
                        agqADDPREM:BUILD_NO <> agqPERSONAL:BUILD_NO

                Switch(agqADDPREM:NO_UNITS)
                  Case 1  : L_END_PREMIUM1 = L_LIABILITY_CHARGE_1 + L_END_PREMIUM1
                  Case 2  : L_END_PREMIUM1 = L_LIABILITY_CHARGE_2 + L_END_PREMIUM1
                  Case 3  : L_END_PREMIUM1 = L_LIABILITY_CHARGE_3 + L_END_PREMIUM1
                  Default : L_END_PREMIUM1 = L_LIABILITY_CHARGE_4 + L_END_PREMIUM1
                  End

                Next agqADDPREM
                End
            End

        If L_CODE = "MPL30" Then
            Begin
            L_RECORD_KEY = "LR"
            L_COMPANY_ID = agqPERSONAL:COMPANY_ID
            L_STATE = agqPERSONAL:STATE
            L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
            L_LIABILITY_LIMIT = agqPERSONAL:LIABILITY_LIMIT
            L_MEDICAL_LIMIT = agqPERSONAL:MEDICAL_LIMIT

            Include "plsliabrates.pro"

            Access agqFARMLIAB, Set agqFARMLIAB:app_no = agqpersonal:app_no,
                                    agqFARMLIAB:PREM_NO = agqPERSONAL:PREM_NO,
                                    agqFARMLIAB:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

            If agqFARMLIAB:INITIAL_ACREAGE <> 0 Then
                Begin
                If agqFARMLIAB:INITIAL_ACREAGE >= 1 And
                   agqFARMLIAB:INITIAL_ACREAGE < 161 Then
                    L_END_PREMIUM1 = L_LIABILITY_CHARGE_1
                Else
                If agqFARMLIAB:INITIAL_ACREAGE < 501 Then
                    L_END_PREMIUM1 = L_LIABILITY_CHARGE_2
                Else
                    L_END_PREMIUM1 = L_LIABILITY_CHARGE_3
                End
            If agqFARMLIAB:ADDITIONAL_ACREAGE <> 0 Then
                L_END_PREMIUM1 = (L_END_PREMIUM1 + (L_LIABILITY_CHARGE_4 *
                                 agqFARMLIAB:ADDITIONAL_ACREAGE))
            If agqFARMLIAB:RENTED_WITH_BUILDINGS <> 0 Then
                L_END_PREMIUM1 = (L_END_PREMIUM1 + (L_LIABILITY_CHARGE_5 *
                                 agqFARMLIAB:RENTED_WITH_BUILDINGS))
            If agqFARMLIAB:RENTED_WITHOUT_BUILDINGS <> 0 Then
                L_END_PREMIUM1 = (L_END_PREMIUM1 + (L_LIABILITY_CHARGE_6 *
                                  agqFARMLIAB:RENTED_WITHOUT_BUILDINGS))
            If agqFARMLIAB:GROSS_RECEIPTS <> 0 Then
                L_END_PREMIUM1 = (L_END_PREMIUM1 + ((agqFARMLIAB:GROSS_RECEIPTS
                                Divide 1000) * L_LIABILITY_FACTOR))
            End

        If L_CODE = "MPL35" Then
            Begin
            L_RECORD_KEY = "LR"
            L_COMPANY_ID = agqPERSONAL:COMPANY_ID
            L_STATE = agqPERSONAL:STATE
            L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
            L_LIABILITY_LIMIT = agqPERSONAL:LIABILITY_LIMIT
            L_MEDICAL_LIMIT = agqPERSONAL:MEDICAL_LIMIT

            Include "plsliabrates.pro"

            Access agqFARMLIAB, Set agqFARMLIAB:app_no = agqpersonal:app_no,
                                    agqFARMLIAB:PREM_NO = agqPERSONAL:PREM_NO,
                                    agqFARMLIAB:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

            If agqFARMLIAB:ANIMAL_COLLISION = 1 Then
                Begin
                If agqFARMLIAB:NO_ANIMALS >= 1 And
                   agqFARMLIAB:NO_ANIMALS < 101 Then
                    L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_8
                Else
                If agqFARMLIAB:NO_ANIMALS < 251 Then
                    L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_9
                Else
                    L_END_PREMIUM1 = L_END_PREMIUM1 + L_LIABILITY_CHARGE_10
                End
            End

        If L_CODE = "MPL55" Then
            Begin
            L_RECORD_KEY = "LR"
            L_COMPANY_ID = agqPERSONAL:COMPANY_ID
            L_STATE = agqPERSONAL:STATE
            L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
            L_LIABILITY_LIMIT = agqPERSONAL:LIABILITY_LIMIT
            L_MEDICAL_LIMIT = agqPERSONAL:MEDICAL_LIMIT

            Include "plsliabrates.pro"

            L_END_PREMIUM1 = L_LIABILITY_CHARGE_1
            End

        If L_CODE = "MPL20" Then
            Begin
            L_STATE = agqPERSONAL:STATE
            Access agqWATERCRAFT, Set agqWATERCRAFT:app_no = agqpersonal:app_no,
                                      agqWATERCRAFT:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqWATERCRAFT:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

            While agqWATERCRAFT:app_no = agqpersonal:app_no And
                  agqWATERCRAFT:PREM_NO = agqPERSONAL:PREM_NO And
                  agqWATERCRAFT:BUILD_NO = agqPERSONAL:BUILD_NO
                    Begin
                    L_WATERCRAFT_TYPE = "O"
                    L_FEET = agqWATERCRAFT:OUTBOARD_FEET
                    Access PLSWATERCRAFT, Set PLSWATERCRAFT:COMPANY_ID = agqpersonal:COMPANY_ID,
                                              PLSWATERCRAFT:STATE = L_STATE ,
                                              PLSWATERCRAFT:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                                              PLSWATERCRAFT:INBOARD_OUTBOARD = L_WATERCRAFT_TYPE,
                                              PLSWATERCRAFT:FEET = L_FEET, Approximate

                    L_FEET = PLSWATERCRAFT:FEET
                    While PLSWATERCRAFT:COMPANY_ID = agqpersonal:COMPANY_ID And
                          PLSWATERCRAFT:STATE = L_STATE And
                          PLSWATERCRAFT:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS And
                          PLSWATERCRAFT:INBOARD_OUTBOARD = L_WATERCRAFT_TYPE And
                          PLSWATERCRAFT:FEET = L_FEET
                            Begin
                            If agqpersonal:EFF_DATE >= PLSWATERCRAFT:EFF_DATE Then
                                Begin
-- outboard motors
                                L_WATERCRAFT = 0
                                L_SUB = 1
                                While L_SUB < 5
                                    Begin
                                    If agqWATERCRAFT:HORSE_POWER[1] >= PLSWATERCRAFT:HORSE_POWER_FROM[L_SUB] And
                                       agqWATERCRAFT:HORSE_POWER[1] <= PLSWATERCRAFT:HORSE_POWER_TO[L_SUB] And
                                       agqWATERCRAFT:HORSE_POWER[1] <> 0 Then
                                        Begin
                                        L_WATERCRAFT_RATE_TO_USE = PLSWATERCRAFT:RATE_TO_USE[L_SUB]
                                        Do GET_WATERCRAFT_RATES
                                        L_WATERCRAFT = L_WATERCRAFT + L_LIABILITY_CHARGE
                                        End
                                    L_SUB = L_SUB + 1
                                    End
                                End
                            Next PLSWATERCRAFT
                            End

                    L_END_PREMIUM1 = L_END_PREMIUM1 + L_WATERCRAFT
                    L_WATERCRAFT_TYPE = "I"
                    L_FEET = agqWATERCRAFT:INBOARD_FEET
                    Access PLSWATERCRAFT, Set PLSWATERCRAFT:COMPANY_ID = agqpersonal:COMPANY_ID,
                                              PLSWATERCRAFT:STATE = L_STATE ,
                                              PLSWATERCRAFT:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                                              PLSWATERCRAFT:INBOARD_OUTBOARD = L_WATERCRAFT_TYPE,
                                              PLSWATERCRAFT:FEET = L_FEET, Approximate

                    L_FEET = PLSWATERCRAFT:FEET
                    While PLSWATERCRAFT:COMPANY_ID = agqpersonal:COMPANY_ID And
                          PLSWATERCRAFT:STATE = L_STATE And
                          PLSWATERCRAFT:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS And
                          PLSWATERCRAFT:INBOARD_OUTBOARD = L_WATERCRAFT_TYPE And
                          PLSWATERCRAFT:FEET = L_FEET
                            Begin
                            If agqpersonal:EFF_DATE >= PLSWATERCRAFT:EFF_DATE Then
                                Begin
-- inboard/inboard-outdrive
                                L_WATERCRAFT = 0
                                L_SUB = 1
                                While L_SUB < 5
                                    Begin
                                    If agqWATERCRAFT:HORSE_POWER[2] >= PLSWATERCRAFT:HORSE_POWER_FROM[L_SUB] And
                                       agqWATERCRAFT:HORSE_POWER[2] <= PLSWATERCRAFT:HORSE_POWER_TO[L_SUB] And
                                       agqWATERCRAFT:HORSE_POWER[2] <> 0 Then
                                        Begin
                                        L_WATERCRAFT_RATE_TO_USE = PLSWATERCRAFT:RATE_TO_USE[L_SUB]
                                        Do GET_WATERCRAFT_RATES
                                        L_WATERCRAFT = L_WATERCRAFT + L_LIABILITY_CHARGE
                                        End

                                    L_SUB = L_SUB + 1
                                    End
                                End

                            Next PLSWATERCRAFT
                            End

                    L_END_PREMIUM1 = L_END_PREMIUM1 + L_WATERCRAFT
                    L_WATERCRAFT_TYPE = "S"
                    L_FEET = agqWATERCRAFT:SAILBOAT_FEET
                    Access PLSWATERCRAFT, Set PLSWATERCRAFT:COMPANY_ID = agqpersonal:COMPANY_ID,
                                              PLSWATERCRAFT:STATE = L_STATE ,
                                              PLSWATERCRAFT:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                                              PLSWATERCRAFT:INBOARD_OUTBOARD = L_WATERCRAFT_TYPE,
                                              PLSWATERCRAFT:FEET = L_FEET, Approximate

                    L_FEET = PLSWATERCRAFT:FEET
                    While PLSWATERCRAFT:COMPANY_ID = agqpersonal:COMPANY_ID And
                          PLSWATERCRAFT:STATE = L_STATE And
                          PLSWATERCRAFT:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS And
                          PLSWATERCRAFT:INBOARD_OUTBOARD = L_WATERCRAFT_TYPE And
                          PLSWATERCRAFT:FEET = L_FEET
                            Begin
                            If agqpersonal:EFF_DATE >= PLSWATERCRAFT:EFF_DATE Then
                                Begin
-- sailboat
                                L_WATERCRAFT = 0
                                If agqWATERCRAFT:DESCRIPTION[5] <> "" Then
                                    Begin
                                    If agqWATERCRAFT:SAILBOAT_POWERED = 1 Then
                                        L_WATERCRAFT_RATE_TO_USE = PLSWATERCRAFT:RATE_TO_USE[1]
                                    Else
                                        L_WATERCRAFT_RATE_TO_USE = PLSWATERCRAFT:RATE_TO_USE[2]
                                    Do GET_WATERCRAFT_RATES
                                    L_WATERCRAFT = L_WATERCRAFT + L_LIABILITY_CHARGE
                                    End
                                End
                            Next PLSWATERCRAFT
                            End

                    L_END_PREMIUM1 = L_END_PREMIUM1 + L_WATERCRAFT
                    L_WATERCRAFT_TYPE = "H"
                    L_FEET = 0
                    Access PLSWATERCRAFT, Set PLSWATERCRAFT:COMPANY_ID = agqpersonal:COMPANY_ID,
                                              PLSWATERCRAFT:STATE = L_STATE ,
                                              PLSWATERCRAFT:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                                              PLSWATERCRAFT:INBOARD_OUTBOARD = L_WATERCRAFT_TYPE,
                                              PLSWATERCRAFT:FEET = L_FEET, Approximate

                    L_FEET = PLSWATERCRAFT:FEET
                    While PLSWATERCRAFT:COMPANY_ID = agqpersonal:COMPANY_ID And
                          PLSWATERCRAFT:STATE = L_STATE And
                          PLSWATERCRAFT:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS And
                          PLSWATERCRAFT:INBOARD_OUTBOARD = L_WATERCRAFT_TYPE And
                          PLSWATERCRAFT:FEET = L_FEET
                            Begin
                            If agqpersonal:EFF_DATE >= PLSWATERCRAFT:EFF_DATE Then
                                Begin
-- houseboat
                                L_WATERCRAFT = 0
                                If agqWATERCRAFT:DESCRIPTION[7] <> "" Then
                                    Begin
                                    If agqWATERCRAFT:HOUSEBOAT_SELF_PROPELLED = 0 Then
                                        L_WATERCRAFT_RATE_TO_USE = PLSWATERCRAFT:RATE_TO_USE[1]
                                    Else
                                        L_WATERCRAFT_RATE_TO_USE = PLSWATERCRAFT:RATE_TO_USE[2]
                                    Do GET_WATERCRAFT_RATES
                                    L_WATERCRAFT = L_WATERCRAFT + L_LIABILITY_CHARGE
                                    End
                                End

                            Next PLSWATERCRAFT
                            End

                    L_END_PREMIUM1 = L_END_PREMIUM1 + L_WATERCRAFT

                    Next agqWATERCRAFT
                    End

            End

        If L_CODE one of "MPL61" Then
            Begin
            Access agqendorse1, Set agqendorse1:app_no   = agqpersonal:app_no,
                                    agqendorse1:PREM_NO  = agqpersonal:PREM_NO,
                                    agqendorse1:BUILD_NO = agqpersonal:BUILD_NO,
                                    agqendorse1:CODE     = L_CODE, Generic

            l_limit = agqendorse1:limit[1]
            access plssal01, set plssal01:company_id       = agqpersonal:company_id,
                                 plssal01:state            = agqpersonal:state,
                                 plssal01:line_of_business = agqpersonal:line_of_business,
                                 plssal01:form             = agqpersonal:form,
                                 plssal01:limit            = l_limit, generic

            l_mpl61_rated = "N"
            while plssal01:company_id       = agqpersonal:company_id and
                  plssal01:state            = agqpersonal:state and
                  plssal01:line_of_business = agqpersonal:line_of_business and
                  plssal01:form             = agqpersonal:form and
                  plssal01:limit            = l_limit
                begin
                if (agqpersonal:eff_date >= plssal01:eff_date and
                   (agqpersonal:eff_date <= plssal01:exp_date or
                   plssal01:exp_date = 0)) then
                    begin
                    l_end_premium1 = plssal01:charge
                    l_mpl61_rated  = "Y"
                    end

                next plssal01
                end

            if l_mpl61_rated = "N" then
                begin
                L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
                If agqendorse1:MISC_PREMIUM <> 0 Then
                    L_END_PREMIUM1 = agqendorse1:MISC_PREMIUM
                End
            end

        If L_CODE one of "SAL61", "SAL62" Then
            Begin
            Access agqendorse1, Set agqendorse1:app_no   = agqpersonal:app_no,
                                    agqendorse1:PREM_NO  = agqpersonal:PREM_NO,
                                    agqendorse1:BUILD_NO = agqpersonal:BUILD_NO,
                                    agqendorse1:CODE     = L_CODE, Generic

            l_limit = agqendorse1:limit[1]
            access plssal01, set plssal01:company_id       = agqpersonal:company_id,
                                 plssal01:state            = agqpersonal:state,
                                 plssal01:line_of_business = agqpersonal:line_of_business,
                                 plssal01:form             = agqpersonal:form,
                                 plssal01:limit            = l_limit, generic

            l_sal01_rated   = "N"
            l_policy_charge = 0
            l_policy_per    = 0
            while plssal01:company_id       = agqpersonal:company_id and
                  plssal01:state            = agqpersonal:state and
                  plssal01:line_of_business = agqpersonal:line_of_business and
                  plssal01:form             = agqpersonal:form and
                  plssal01:limit            = l_limit
                begin
                if (agqpersonal:eff_date >= plssal01:eff_date and
                   (agqpersonal:eff_date <= plssal01:exp_date or
                   plssal01:exp_date = 0)) then
                    begin
                    l_end_premium1  = plssal01:charge
                    l_sal01_rated   = "Y"
                    l_policy_charge = plssal01:policy_limit_charge
                    l_policy_per    = plssal01:policy_limit_per
                    end

                next plssal01
                end

            if l_sal01_rated = "N" then
                begin
                Switch(agqpersonal:FORM)
                  Case 4  : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[2]
                  Case 6  : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[3]
                  Default : L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
                  End

                If agqendorse1:LIMIT[1] > SFSOPTEND:LIMIT[1] Then
                    l_end_premium1 = (l_end_premium1 +
                                     (((agqendorse1:limit[1] -
                                     sfsoptend:limit[1]) divide
                                     sfsoptend:limit[4]) *
                                     sfsoptend:premium_1[4]))
                end
            else
            if l_sal01_rated = "Y" and
               l_policy_charge <> 0 then
                begin
                l_end_premium1 = (l_end_premium1 +
                                 ((agqpersonal:dwelling_limit divide
                                 l_policy_per) *
                                 l_policy_charge))
                end

            End

        If L_CODE = "MPL64" Then
            L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]

        If L_CODE = "MPL79" Then
            Begin
            Access agqENDORSE1, Set agqendorse1:app_no = agqpersonal:app_no,
                                    agqendorse1:PREM_NO = agqPERSONAL:PREM_NO,
                                    agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                                    agqendorse1:CODE = L_CODE, Generic

            Switch(agqendorse1:REPLACEMENT_PERCENT)
              Case 70 : L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
              Case 60 : L_END_FACTOR = SFSOPTEND:PREMIUM_1[2]
              Case 50 : L_END_FACTOR = SFSOPTEND:PREMIUM_1[3]
              End
            End

        If L_CODE = "MHO45" Or
           L_CODE = "MPL45" Then
            Begin
            L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
            End

        If L_CODE = "MPL83" Or
           L_CODE = "MPL78" Then
            Begin
            Access agqWORKERSCOMP, Set agqWORKERSCOMP:app_no = agqpersonal:app_no,
                                       agqWORKERSCOMP:PREM_NO = agqPERSONAL:PREM_NO,
                                       agqWORKERSCOMP:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

            L_END_PREMIUM1 = SFSOPTEND:PREMIUM_1[1]
            End

        If L_CODE = "MPL89" Then
            Begin
            if sfsline:lob_code one of "HOME" then
                begin
                Switch(agqPERSONAL:CONSTRUCTION)
                  Case 1  : switch(agqpersonal:form)
                              case 4, 6 : begin
                                          L_END_FACTOR = SFSOPTEND:PREMIUM_1[3]
                                          L_END_LIMIT  = SFSOPTEND:LIMIT[3]
                                          end
                              default   : Begin
                                          L_END_FACTOR = SFSOPTEND:PREMIUM_1[1]
                                          L_END_LIMIT  = SFSOPTEND:LIMIT[1]
                                          end
                              End
                  Default : switch(agqpersonal:form)
                              case 4, 6 : begin
                                          L_END_FACTOR = SFSOPTEND:PREMIUM_1[4]
                                          L_END_LIMIT  = SFSOPTEND:LIMIT[4]
                                          end
                              default   : Begin
                                          L_END_FACTOR = SFSOPTEND:PREMIUM_1[2]
                                          L_END_LIMIT = SFSOPTEND:LIMIT[2]
                                          end
                              End
                  End
                end
            else
                begin
                Switch(agqPERSONAL:CONSTRUCTION)
                  Case 1  : begin
                            l_end_factor   = sfsoptend:premium_1[1]
                            l_end_factor_1 = sfsoptend:premium_1[3]
                            l_end_limit    = sfsoptend:limit[1]
                            End
                  Default : begin
                            l_end_factor   = sfsoptend:premium_1[2]
                            l_end_factor_1 = sfsoptend:premium_1[4]
                            l_end_limit    = sfsoptend:limit[1]
                            End
                  End
                end

            end

        end

    Next SFSOPTEND
    End

if l_code = "MPL89" then
    begin
    if sfsline:lob_code one of "HOME" then
        begin
        if agqpersonal:form one of 4, 6 then
            l_update_sfpend_premium = ((agqpersonal:contents_limit divide l_end_limit) *
                                      l_end_factor)
        else
            l_update_sfpend_premium = ((agqpersonal:dwelling_limit divide l_end_limit) *
                                      l_end_factor)
        end
    else
        begin
        l_update_sfpend_premium = 0
        if agqpersonal:dwelling_limit <> 0 then
            l_update_sfpend_premium = ((agqpersonal:dwelling_limit divide
                                      l_end_limit) *
                                      l_end_factor)
        if agqpersonal:contents_limit <> 0 then
            l_update_sfpend_premium = (l_update_sfpend_premium +
                                      ((agqpersonal:contents_limit divide
                                      l_end_limit) *
                                      l_end_factor_1))
        end
    end

If L_CODE one of "MPL12", "MPL122", "SAL01", "SAL02", "SAL04", "SAL62","MPL38", "MDL62", "SAL61", "SAL62", "FPL01" Then
    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1

If L_CODE = "MPL70" Then
    Begin
    L_UPDATE_SFPEND_PREMIUM = L_ALARM_PREMIUM
   End

If L_CODE = "MHO31" Then
    Begin
    L_RECORD_KEY = "LR"
    L_COMPANY_ID = agqPERSONAL:COMPANY_ID
    L_STATE = agqPERSONAL:STATE
    L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
    L_LIABILITY_LIMIT = agqPERSONAL:LIABILITY_LIMIT
    L_MEDICAL_LIMIT = agqPERSONAL:MEDICAL_LIMIT
    L_EFF_DATE = agqpersonal:EFF_DATE

    Include "plsliabrates.pro"

    Access agqENDORSE1, Set agqendorse1:app_no = agqpersonal:app_no,
                            agqendorse1:PREM_NO = agqPERSONAL:PREM_NO,
                            agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                            agqendorse1:CODE = L_CODE, Generic

    Switch(agqendorse1:OPTION[1])
      Case 0  : L_UPDATE_SFPEND_PREMIUM = L_LIABILITY_CHARGE_1
      Default : L_UPDATE_SFPEND_PREMIUM = L_LIABILITY_CHARGE_2
      End

    End

If L_CODE = "MPL15" Then
    Begin
    L_RECORD_KEY = "SP"
    L_COMPANY_ID = agqPERSONAL:COMPANY_ID
    L_STATE = agqPERSONAL:STATE
    L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
    L_EFF_DATE = agqpersonal:EFF_DATE

    Include "plsschedprop.pro"

    Access agqENDORSE1, Set agqendorse1:app_no = agqpersonal:app_no,
                            agqendorse1:PREM_NO = agqPERSONAL:PREM_NO,
                            agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                            agqendorse1:CODE = L_CODE, Generic

    -- cameras
    If agqendorse1:LIMIT[1] <> 0 Then
        Begin
        L_CAMERA_PREMIUM = ((agqendorse1:LIMIT[1] Divide 1000) * L_CAMERAS)
        Change agqENDORSE1
            Begin
            agqendorse1:PREMIUM[1] = L_CAMERA_PREMIUM
            End
        End

    -- coins
    If agqendorse1:LIMIT[2] <> 0 Then
        Begin
        If agqendorse1:COIN_THEFT = 0 Then
            L_COIN_PREMIUM = ((agqendorse1:LIMIT[2] Divide 1000)
                                       * L_COINS)
        If agqendorse1:COIN_THEFT = 1 Then
            L_COIN_PREMIUM = ((agqendorse1:LIMIT[2] Divide 1000)
                                       * L_COINS_THEFT)
        Change agqENDORSE1
            Begin
            agqendorse1:PREMIUM[2] = L_COIN_PREMIUM
            End
        End

    -- furs
    If agqendorse1:LIMIT[3] <> 0 Then
        Begin
        L_FURS_PREMIUM = ((agqendorse1:LIMIT[3] Divide 1000) * L_FURS)
        Change agqENDORSE1
            Begin
            agqendorse1:PREMIUM[3] = L_FURS_PREMIUM
            End
        End

    -- golf equipment
    If agqendorse1:LIMIT[4] <> 0 Then
        Begin
        L_GOLF_PREMIUM = ((agqendorse1:LIMIT[4] Divide 1000) *
                                  L_GOLF_EQUIPMENT)
        Change agqENDORSE1
            Begin
            agqendorse1:PREMIUM[4] = L_GOLF_PREMIUM
            End
        End

    -- jewelry
    If agqendorse1:LIMIT[5] <> 0 Then
        Begin
        L_ARTICLE = "JEWELRY"
        Access agqDESC1, Set agqdesc1:app_no = agqpersonal:app_no,
                             agqdesc1:PREM_NO = agqPERSONAL:PREM_NO,
                             agqdesc1:BUILD_NO = agqPERSONAL:BUILD_NO,
                             agqdesc1:CODE = L_CODE,
                             agqdesc1:ARTICLE = L_ARTICLE, Generic

        L_JEWELRY_PREMIUM = 0
        Repeat Begin
            Exit If agqdesc1:app_no <> agqpersonal:app_no Or
                    agqdesc1:PREM_NO <> agqPERSONAL:PREM_NO Or
                    agqdesc1:BUILD_NO <> agqPERSONAL:BUILD_NO Or
                    agqdesc1:CODE <> L_CODE Or
                    agqdesc1:ARTICLE <> L_ARTICLE

            -- not vaulted
            If agqdesc1:JEWELRY_PREMIUM <> 0 Then
                L_JEWELRY_PREMIUM = L_JEWELRY_PREMIUM +
                                    agqdesc1:JEWELRY_PREMIUM

            If agqdesc1:JEWELRY_VAULTED = 0 and
               agqdesc1:jewelry_premium = 0 Then
                Begin
                If agqdesc1:LIMIT < L_JEWELRY_VALUED_LIMIT_1 Then
                    L_JEWELRY_PREMIUM = (L_JEWELRY_PREMIUM + ((agqdesc1:LIMIT
                                        Divide 1000) * L_JEWELRY))
                Else
                If agqdesc1:LIMIT < L_JEWELRY_VALUED_LIMIT_2 and
                   l_jewelry_valued_limit_2 <> 0 Then
                    L_JEWELRY_PREMIUM = (L_JEWELRY_PREMIUM + ((agqdesc1:LIMIT
                                        Divide 1000) * L_JEWELRY_VALUED_1))
                Else
                If agqdesc1:LIMIT < L_JEWELRY_VALUED_LIMIT_3 and
                   l_jewelry_valued_limit_3 <> 0 Then
                    L_JEWELRY_PREMIUM = (L_JEWELRY_PREMIUM + ((agqdesc1:LIMIT
                                        Divide 1000) * L_JEWELRY_VALUED_2))
                Else
                If agqdesc1:LIMIT < L_JEWELRY_VALUED_LIMIT_4 and
                   l_jewelry_valued_limit_4 <> 0 Then
                    L_JEWELRY_PREMIUM = (L_JEWELRY_PREMIUM + ((agqdesc1:LIMIT
                                        Divide 1000) * L_JEWELRY_VALUED_3))
                Else
                if l_jewelry_valued_4 <> 0 then
                    L_JEWELRY_PREMIUM = (L_JEWELRY_PREMIUM + ((agqdesc1:LIMIT
                                        Divide 1000) * L_JEWELRY_VALUED_4))

                End

            -- vaulted
            If agqdesc1:JEWELRY_VAULTED = 1 and
               agqdesc1:jewelry_premium = 0 Then
                Begin
                L_JEWELRY_PREMIUM = (L_JEWELRY_PREMIUM + ((agqdesc1:LIMIT
                                    Divide 1000) * L_JEWELRY_VAULTS))
                End

            Next agqDESC1
            End

        If L_JEWELRY_PREMIUM <> 0 Then
            change agqendorse1
                Begin
                agqendorse1:PREMIUM[5] = L_JEWELRY_PREMIUM
                End
        Else
            change agqendorse1
                Begin
                agqendorse1:PREMIUM[5] = agqdesc1:JEWELRY_PREMIUM
                L_JEWELRY_PREMIUM = agqdesc1:JEWELRY_PREMIUM
                End

        End

    -- musical instruments
    If agqendorse1:LIMIT[6] <> 0 Then
        Begin
        L_ARTICLE = "MUSICAL INSTRUMENTS"
        Access agqDESC1, Set agqdesc1:app_no = agqpersonal:app_no,
                             agqdesc1:PREM_NO = agqPERSONAL:PREM_NO,
                             agqdesc1:BUILD_NO = agqPERSONAL:BUILD_NO,
                             agqdesc1:CODE = L_CODE,
                             agqdesc1:ARTICLE = L_ARTICLE, Generic

        L_MUSICAL_PREMIUM = 0
        Repeat Begin
            Exit If agqdesc1:app_no <> agqpersonal:app_no Or
                    agqdesc1:PREM_NO <> agqPERSONAL:PREM_NO Or
                    agqdesc1:BUILD_NO <> agqPERSONAL:BUILD_NO Or
                    agqdesc1:CODE <> L_CODE Or
                    agqdesc1:ARTICLE <> L_ARTICLE

            -- not vaulted
            If agqdesc1:ORGANS = 0 Then
                Begin
                If agqendorse1:PROFESSIONAL_USE = 0 Then
                    L_MUSICAL_PREMIUM = (L_MUSICAL_PREMIUM + ((agqdesc1:LIMIT
                                         Divide 1000) * L_MUSICAL_INSTRUMENTS_1))
                Else
                    L_MUSICAL_PREMIUM = (L_MUSICAL_PREMIUM + ((agqdesc1:LIMIT
                                         Divide 1000) * L_MUSICAL_INSTRUMENTS_2))
                End
            Else
                Begin
                If agqdesc1:LIMIT <= L_MUSICAL_INSTRUMENTS_LIMIT_1 Then
                    L_MUSICAL_PREMIUM = (L_MUSICAL_PREMIUM + ((agqdesc1:LIMIT
                                        Divide L_MUSICAL_INSTRUMENTS_PER) *
                                        L_MUSICAL_INSTRUMENTS_3))
                Else
                    If agqdesc1:LIMIT > L_MUSICAL_INSTRUMENTS_LIMIT_1 Then
                        L_MUSICAL_PREMIUM = (L_MUSICAL_PREMIUM +
                                            ((((agqdesc1:LIMIT -
                                            L_MUSICAL_INSTRUMENTS_LIMIT_1)
                                            Divide L_MUSICAL_INSTRUMENTS_PER) *
                                            L_MUSICAL_INSTRUMENTS_4) +
                                            L_MUSICAL_INSTRUMENTS_PLUS))

                End

            Next agqDESC1
            End

        If agqendorse1:ELECTRONIC_DAMAGE = 1 Then
            L_MUSICAL_PREMIUM = L_MUSICAL_PREMIUM * L_MUSICAL_INSTRUMENTS_DAMAGE

        change agqendorse1
            Begin
            agqendorse1:PREMIUM[6] = L_MUSICAL_PREMIUM
            End

        End

    -- silverware
    If agqendorse1:LIMIT[7] <> 0 Then
        Begin
        L_SILVERWARE_PREMIUM = ((agqendorse1:LIMIT[7] Divide 1000) * L_SILVERWARE)
        change agqendorse1
            Begin
            agqendorse1:PREMIUM[7] = L_SILVERWARE_PREMIUM
            End

        End

    -- sporting equipment
    If agqendorse1:LIMIT[8] <> 0 Then
        Begin
        L_ARTICLE = "SPORTING EQUIPMENT"
        Access agqDESC1, Set agqdesc1:app_no = agqpersonal:app_no,
                             agqdesc1:PREM_NO = agqPERSONAL:PREM_NO,
                             agqdesc1:BUILD_NO = agqPERSONAL:BUILD_NO,
                             agqdesc1:CODE = L_CODE,
                             agqdesc1:ARTICLE = L_ARTICLE, Generic

        l_equipment_premium = 0
        Repeat Begin
            Exit If agqdesc1:app_no <> agqpersonal:app_no Or
                    agqdesc1:PREM_NO <> agqPERSONAL:PREM_NO Or
                    agqdesc1:BUILD_NO <> agqPERSONAL:BUILD_NO Or
                    agqdesc1:CODE <> L_CODE Or
                    agqdesc1:ARTICLE <> L_ARTICLE

        L_EQUIPMENT_PREMIUM = agqdesc1:TOTAL_PREMIUM + l_equipment_premium

        next agqdesc1
        end

        change agqendorse1
            Begin
            agqendorse1:PREMIUM[8] = L_EQUIPMENT_PREMIUM
            End

        End

    -- stamps
    If agqendorse1:LIMIT[9] <> 0 Then
        Begin
        If agqendorse1:STAMP_THEFT = 0 Then
            L_STAMPS_PREMIUM = ((agqendorse1:LIMIT[9] Divide 1000) * L_STAMPS)
        If agqendorse1:STAMP_THEFT = 1 Then
            L_STAMPS_PREMIUM = ((agqendorse1:LIMIT[9] Divide 1000) * L_STAMPS_THEFT)
        change agqendorse1
            Begin
            agqendorse1:PREMIUM[9] = L_STAMPS_PREMIUM
            End

        End

    -- fine arts
    If agqendorse1:LIMIT[10] <> 0 Then
        Begin
        L_ARTICLE = "FINE ARTS"
        Access agqDESC1, Set agqdesc1:app_no = agqpersonal:app_no,
                             agqdesc1:PREM_NO = agqPERSONAL:PREM_NO,
                             agqdesc1:BUILD_NO = agqPERSONAL:BUILD_NO,
                             agqdesc1:CODE = L_CODE,
                             agqdesc1:ARTICLE = L_ARTICLE, Generic

        L_FINE_ARTS_PREMIUM = 0
        Repeat Begin
            Exit If agqdesc1:app_no <> agqpersonal:app_no Or
                    agqdesc1:PREM_NO <> agqPERSONAL:PREM_NO Or
                    agqdesc1:BUILD_NO <> agqPERSONAL:BUILD_NO Or
                    agqdesc1:CODE <> L_CODE Or
                    agqdesc1:ARTICLE <> L_ARTICLE

        l_protection = agqpersonal:protection
        if l_protection = 4 and
           sfscompany:boiler_rating = 1 then
            l_protection = 1
        Switch(agqPERSONAL:NO_FAMILIES)
          Case 1, 2, 3, 4 : Switch(L_PROTECTION)
                              Case 1 : L_FINE_ARTS_PREMIUM = (L_FINE_ARTS_PREMIUM
                                                             + ((agqdesc1:LIMIT
                                                             Divide 1000)
                                                             * L_FINE_ARTS_1_PROT_1))
                              Case 2 : L_FINE_ARTS_PREMIUM = (L_FINE_ARTS_PREMIUM
                                                             + ((agqdesc1:LIMIT
                                                             Divide 1000)
                                                             * L_FINE_ARTS_1_PROT_2))
                              Case 3 : L_FINE_ARTS_PREMIUM = (L_FINE_ARTS_PREMIUM
                                                             + ((agqdesc1:LIMIT
                                                             Divide 1000)
                                                             * L_FINE_ARTS_1_PROT_3))
                              End
          Default         : Switch(L_PROTECTION)
                              Case 1 : L_FINE_ARTS_PREMIUM = (L_FINE_ARTS_PREMIUM
                                                             + ((agqdesc1:LIMIT
                                                             Divide 1000)
                                                             * L_FINE_ARTS_2_PROT_1))
                              Case 2 : L_FINE_ARTS_PREMIUM = (L_FINE_ARTS_PREMIUM
                                                             + ((agqdesc1:LIMIT
                                                             Divide 1000)
                                                             * L_FINE_ARTS_2_PROT_2))
                              Case 3 : L_FINE_ARTS_PREMIUM = (L_FINE_ARTS_PREMIUM
                                                             + ((agqdesc1:LIMIT
                                                             Divide 1000)
                                                             * L_FINE_ARTS_2_PROT_3))
                              End
          End

        -- masonry credit for protection 1 and 2
        Switch(agqPERSONAL:CONSTRUCTION)
          Case 3 : Switch(agqPERSONAL:NO_FAMILIES)
                     Case 1, 2, 3, 4 : Switch(L_PROTECTION)
                                         Case 1, 2 : L_FINE_ARTS_PREMIUM =
                                                     L_FINE_ARTS_PREMIUM *
                                                     L_FINE_ARTS_CREDITS_1
                                         End
                     Default         : Switch(L_PROTECTION)
                                         Case 1, 2 : L_FINE_ARTS_PREMIUM =
                                                     L_FINE_ARTS_PREMIUM *
                                                     L_FINE_ARTS_CREDITS_2
                                         End
                     End
          End

        If agqdesc1:FINE_ARTS_BREAKAGE = 1 Then
            L_FINE_ARTS_PREMIUM = (L_FINE_ARTS_PREMIUM + ((agqdesc1:LIMIT
                                  Divide 1000) * L_FINE_ARTS_BREAKAGE))

        Next agqDESC1
        End

        change agqendorse1
            Begin
            agqendorse1:PREMIUM[10] = L_FINE_ARTS_PREMIUM
            End

        End

    L_UPDATE_SFPEND_PREMIUM = L_CAMERA_PREMIUM + L_COIN_PREMIUM + L_FURS_PREMIUM +
                              L_GOLF_PREMIUM + L_JEWELRY_PREMIUM + L_MUSICAL_PREMIUM +
                              L_SILVERWARE_PREMIUM + L_EQUIPMENT_PREMIUM +
                              L_STAMPS_PREMIUM + L_FINE_ARTS_PREMIUM
    L_INLAND_TOTAL = L_INLAND_TOTAL + L_UPDATE_SFPEND_PREMIUM
    L_INLAND_MARINE_CODE = "Y"
    End

if l_code one of "MPL127", "SAL127" then
    l_update_sfpend_premium = l_end_premium1

If L_CODE = "MPL16" Then
    Begin
    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1
    L_INLAND_TOTAL = L_INLAND_TOTAL + L_UPDATE_SFPEND_PREMIUM
    L_INLAND_MARINE_CODE = "Y"
    End

If L_CODE one of "MPL58", "MPL96", "MPL97", "MPL46", "MPL123", "MPL125" Then
    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1

If L_CODE = "MPL17" Then
    Begin
    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1
    L_INLAND_TOTAL = L_INLAND_TOTAL + L_UPDATE_SFPEND_PREMIUM
    L_INLAND_MARINE_CODE = "Y"
    End

If L_CODE one of "FPL18", "MPL18" and
   sfscompany:boiler_rating = 2 Then
    Begin
    L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM_2 * L_END_FACTOR) -
                              L_BASE_PREMIUM_2)

End

If L_CODE one of "MPL18", "MPL54" and
   sfscompany:boiler_rating not one of 2 Then
    begin
    if agqpersonal:state one of 29, 37 then
        begin
        if l_rating_change = 1 then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((l_rating_base_c * L_END_FACTOR) -
                                      l_rating_base_c)
            end
        else
            begin
            L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM * L_END_FACTOR) -
                                      L_BASE_PREMIUM)
            end
        end
    else
    if agqpersonal:state one of 19 then
        begin
        L_UPDATE_SFPEND_PREMIUM = ((L_endorsement_base_3 * L_END_FACTOR) -
                                  L_endorsement_base_3)
        end
    end

If L_CODE one of "MPL53" and
   sfscompany:boiler_rating not one of 2 Then
    begin
    if agqpersonal:state one of 29, 37 then
        begin
        if l_rating_change = 1 then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((l_endorsement_base_1 * L_END_FACTOR) -
                                      l_endorsement_base_1)
            end
        else
            begin
            L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM * L_END_FACTOR) -
                                      L_BASE_PREMIUM)
            end
        end
    else
    if agqpersonal:state one of 19 then
        begin
        L_UPDATE_SFPEND_PREMIUM = ((L_endorsement_base_3 * L_END_FACTOR) -
                                  L_endorsement_base_3)
        end
    end

If L_CODE = "MPL13" And
   L_END_FACTOR <> 0 Then
    Begin
    If SFSLINE:LOB_CODE = "DWELLING" Then
        Begin
        Access agqPERSONAL_ALIAS, Set agqpersonal_alias:app_no = agqpersonal:app_no,
                                      agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

        If agqPERSONAL_ALIAS:DWELLING_PREMIUM[1] <> 0 Then
            begin
            if l_rating_change = 1 then
                begin
                L_UPDATE_SFPEND_PREMIUM = ((l_rating_base_a * L_END_FACTOR) -
                                          l_rating_base_a)
                end
            else
                begin
                L_UPDATE_SFPEND_PREMIUM = (((agqPERSONAL_ALIAS:DWELLING_PREMIUM[1] +
                                          agqPERSONAL_ALIAS:DF_DEDUCT_PREMIUM) *
                                          L_END_FACTOR) -
                                          (agqPERSONAL_ALIAS:DWELLING_PREMIUM[1] +
                                          agqPERSONAL_ALIAS:DF_DEDUCT_PREMIUM))
                end
            end
        Else
            begin
            if l_rating_change = 1 then
                begin
                L_UPDATE_SFPEND_PREMIUM = ((l_rating_base_c * L_END_FACTOR) -
                                          l_rating_base_c)
                end
            else
                begin
                L_UPDATE_SFPEND_PREMIUM = (((agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1] +
                                          agqPERSONAL_ALIAS:DF_DEDUCT_PREMIUM) *
                                          L_END_FACTOR) -
                                          (agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1] +
                                          agqPERSONAL_ALIAS:DF_DEDUCT_PREMIUM))
                end
            end
        End
    Else
        L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM * L_END_FACTOR) - L_BASE_PREMIUM)
    End

If L_CODE = "MPL19" Then
    Begin
    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1
    L_INLAND_TOTAL = L_INLAND_TOTAL + L_UPDATE_SFPEND_PREMIUM
    L_INLAND_MARINE_CODE = "Y"
    End

If L_CODE = "MPL32" Then
    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1

If L_CODE = "MPL33" Then
    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1

If L_CODE = "MPL41" Then
    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1

If L_CODE = "MPL44" Then
    Begin
    L_RECORD_KEY = "SL"
    L_COMPANY_ID = agqPERSONAL:COMPANY_ID
    L_STATE = agqPERSONAL:STATE
    L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
    L_EFF_DATE = agqpersonal:EFF_DATE

    Include "plspeciallmts.pro"

    Access agqENDORSE1, Set agqendorse1:app_no = agqpersonal:app_no,
                            agqendorse1:PREM_NO = agqPERSONAL:PREM_NO,
                            agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                            agqendorse1:CODE = L_CODE, Generic

    -- computer 1
    If agqendorse1:LIMIT[1] <> 0 Then
        L_COMPUTER_PREMIUM_2 = ((agqendorse1:LIMIT[1] Divide
                               L_COMPUTER_PER_2) * L_COMPUTER_CHARGE_2)

    -- guns
    If agqendorse1:LIMIT[2] <> 0 Then
        L_GUNS_PREMIUM = ((agqendorse1:LIMIT[2] Divide
                         L_GUNS_PER) * L_GUNS_CHARGE)

    -- money
    If agqendorse1:LIMIT[3] <> 0 Then
        L_MONEY_PREMIUM = ((agqendorse1:LIMIT[3] Divide
                          L_MONEY_PER) * L_MONEY_CHARGE)

    -- property used in business
    If agqendorse1:LIMIT[4] <> 0 Then
        L_ON_RESIDENCE_PREMIUM = ((agqendorse1:LIMIT[4] Divide
                                 L_ON_RESIDENCE_PER) * L_ON_RESIDENCE_CHARGE)

    -- landlords
    If agqendorse1:LIMIT[5] <> 0 Then
        L_LANDLORDS_PREMIUM = ((agqendorse1:LIMIT[5] Divide
                              L_LANDLORDS_PER) * L_LANDLORDS_CHARGE)

    -- computer 2
    If agqendorse1:LIMIT[6] <> 0 Then
        L_COMPUTER_PREMIUM = ((agqendorse1:LIMIT[6] Divide
                             L_COMPUTER_PER) * L_COMPUTER_CHARGE)

    -- credit card
    If agqendorse1:LIMIT[7] <> 0 Then
        L_CREDIT_CARD_PREMIUM = ((agqendorse1:LIMIT[7] Divide
                                L_CREDIT_CARD_PER)
                                * L_CREDIT_CARD_CHARGE)

    -- loss assessment
    If agqendorse1:LIMIT[8] <> 0 Then
        L_LOSS_ASSESSMENT_PREMIUM = ((agqendorse1:LIMIT[8] Divide
                                    L_LOSS_ASSESSMENT_PER)
                                    * L_LOSS_ASSESSMENT_CHARGE)

    -- work interruption
    If agqendorse1:LIMIT[9] <> 0 Then
        L_WORK_PREMIUM = ((agqendorse1:LIMIT[9] Divide
                         L_WORK_INTER_PER) * L_WORK_INTER_CHARGE)

    -- building code
    If agqendorse1:BUILDING_CODE_PERCENT <> 0 Then
        begin
        L_BUILDING_CODE_PREMIUM = ((agqendorse1:BUILDING_CODE_PERCENT Divide
                                  100) + 1.00)
        end

    -- tenants
    If agqendorse1:LIMIT[10] <> 0 Then
        L_TENANT_PREMIUM = ((agqendorse1:LIMIT[10] Divide
                           L_TENANTS_PER) * L_TENANTS_CHARGE)

    L_UPDATE_SFPEND_PREMIUM = L_GUNS_PREMIUM + L_MONEY_PREMIUM +
                              L_ON_RESIDENCE_PREMIUM + L_LANDLORDS_PREMIUM +
                              L_COMPUTER_PREMIUM + L_CREDIT_CARD_PREMIUM +
                              L_LOSS_ASSESSMENT_PREMIUM + L_WORK_PREMIUM +
                              L_TENANT_PREMIUM + L_COMPUTER_PREMIUM_2

    If L_BUILDING_CODE_PREMIUM <> 0 Then
        begin
        if sfscompany:computer_rating = 2 then
            L_UPDATE_SFPEND_PREMIUM = (L_UPDATE_SFPEND_PREMIUM +
                                      ((L_BASE_PREMIUM_2 * L_BUILDING_CODE_PREMIUM)
                                      - L_BASE_PREMIUM_2))
        else
            L_UPDATE_SFPEND_PREMIUM = (L_UPDATE_SFPEND_PREMIUM +
                                      ((L_BASE_PREMIUM * L_BUILDING_CODE_PREMIUM)
                                      - L_BASE_PREMIUM))
        end

    End

If L_CODE = "MDW30" and
   l_end_factor <> 0 and
   agqpersonal:company_id <> "FARMERS" Then
    Begin
    Access agqPERSONAL_ALIAS, Set agqpersonal_alias:app_no = agqpersonal:app_no,
                                  agqPERSONAL_ALIAS:PREM_NO  = agqPERSONAL:PREM_NO,
                                  agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

    if agqpersonal:state one of 29 then
        begin
        L_UPDATE_SFPEND_PREMIUM = ((agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1] *
                                  L_END_FACTOR) -
                                  agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1])
        end
    else
    if agqpersonal:state one of 19 then
        begin
        L_UPDATE_SFPEND_PREMIUM = ((l_endorsement_base_2 *
                                  L_END_FACTOR) -
                                  l_endorsement_base_2)
        end
    End

If L_CODE = "MPL47" Then
    Begin
    If SFSLINE:LOB_CODE = "DWELLING" Then
        Begin
        Access agqPERSONAL_ALIAS, Set agqpersonal_alias:app_no = agqpersonal:app_no,
                                      agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

        if agqpersonal:state one of 29, 37 then
            begin
            if l_rating_change = 1 then
                begin
                L_UPDATE_SFPEND_PREMIUM = ((l_rating_base_c *
                                          L_END_FACTOR) -
                                          l_rating_base_c)
                end
            else
                begin
                L_UPDATE_SFPEND_PREMIUM = ((agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1] *
                                          L_END_FACTOR) -
                                          agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1])
                end
            end
        else
        if agqpersonal:state one of 19 then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((L_endorsement_base_2 * L_END_FACTOR) -
                                      L_endorsement_base_2)
            end
        End
    Else
        begin
        if agqpersonal:state one of 29, 37 then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM * L_END_FACTOR) -
                                      L_BASE_PREMIUM)
            end
        else
        if agqpersonal:state one of 19 then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((L_endorsement_base_3 * L_END_FACTOR) -
                                      L_endorsement_base_3)
            end
        end
    L_BASE_PREMIUM_2 = L_BASE_PREMIUM * L_END_FACTOR
    End

if l_code one of "MPL67" and
   l_end_factor <> 0 then
    begin
    if agqpersonal:state one of 29 then
        begin
        L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM_2 *
                                  L_END_FACTOR) -
                                  L_BASE_PREMIUM_2)
        end
    else
    if agqpersonal:state one of 19 then
        begin
        if agqpersonal:townhouse_units one of 3, 4 and
           agqpersonal:company_id = "FARMERS" then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((L_endorsement_base_3 *
                                      L_END_FACTOR) -
                                      L_endorsement_base_3)
            end
        else
        if agqpersonal:company_id <> "FARMERS" then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((L_endorsement_base_3 *
                                      L_END_FACTOR) -
                                      L_endorsement_base_3)
            end
        end
    end

if l_code one of "MPL68" and
   l_end_factor <> 0 then
    begin
    if agqpersonal:state one of 29 then
        begin
        L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM_2 *
                                  L_END_FACTOR) -
                                  L_BASE_PREMIUM_2)
        end
    else
    if agqpersonal:state one of 19 then
        begin
        L_UPDATE_SFPEND_PREMIUM = ((L_endorsement_base_3 *
                                  L_END_FACTOR) -
                                  L_endorsement_base_3)
        end
    end

if l_code one of "MPL69" then
    begin
    Access agqENDORSE1, Set agqendorse1:app_no = agqpersonal:app_no,
                            agqendorse1:PREM_NO  = agqPERSONAL:PREM_NO,
                            agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                            agqendorse1:CODE     = L_CODE, Generic

    L_UPDATE_SFPEND_PREMIUM = agqendorse1:misc_premium
    end

If L_CODE = "MPL48" Then
    Begin
    If agsdefault_plp:MPL48_SPECIAL_RATING = 1 then
        Begin
        Access agqENDORSE1, Set agqendorse1:app_no = agqpersonal:app_no,
                                agqendorse1:PREM_NO = agqPERSONAL:PREM_NO,
                                agqendorse1:BUILD_NO = agqPERSONAL:BUILD_NO,
                                agqendorse1:CODE = L_CODE, Generic

        L_BUILDING_CODE_FACTOR = (((agqendorse1:BUILDING_CODE_PERCENT
                                 Divide L_END_LIMIT) *
                                 L_END_FACTOR) + 1)

        if (agsdefault_plp:mpl48_use_dwelling_premium = 1 and
           (agqpersonal:eff_date <= agsdefault_plp:mpl48_use_dwelling_prem_date or
           agsdefault_plp:mpl48_use_dwelling_prem_date = 0)) then
            begin
            if agqpersonal_alias:dwelling_premium[1] <> 0 then
                begin
                L_BUILDING_CODE_PREM = agqPERSONAL_alias:DWELLING_PREMIUM[1] *
                                       L_BUILDING_CODE_FACTOR
                L_UPDATE_SFPEND_PREMIUM = L_BUILDING_CODE_PREM -
                                          agqPERSONAL_alias:DWELLING_PREMIUM[1]
                end
            else
                begin
                L_BUILDING_CODE_PREM = agqPERSONAL_alias:contents_PREMIUM[1] *
                                       L_BUILDING_CODE_FACTOR
                L_UPDATE_SFPEND_PREMIUM = L_BUILDING_CODE_PREM -
                                          agqPERSONAL_alias:contents_PREMIUM[1]
                end
            end
        else
            begin
            if l_base_premium_a <> 0 then
                begin
                L_BUILDING_CODE_PREM = l_base_premium_a *
                                       L_BUILDING_CODE_FACTOR
                L_UPDATE_SFPEND_PREMIUM = L_BUILDING_CODE_PREM -
                                          l_base_premium_a
                end
            else
                begin
                L_BUILDING_CODE_PREM = l_base_premium_c *
                                       L_BUILDING_CODE_FACTOR
                L_UPDATE_SFPEND_PREMIUM = L_BUILDING_CODE_PREM -
                                          l_base_premium_c
                end
            end
        End
    Else
    If agqPERSONAL:DWELLING_LIMIT = 0 And
       agqPERSONAL:CONTENTS_LIMIT <> 0 Then
        L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1
    Else
        Begin
        Access agqPERSONAL_ALIAS, Set agqpersonal_alias:app_no = agqpersonal:app_no,
                                      agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

        If SFSCOMPANY:COMPUTER_RATING one of 2 then
            Begin
            if l_base_premium_a <> 0 then
                begin
                L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM_a *
                                          L_END_FACTOR) -
                                          L_BASE_PREMIUM_a)
                end
            else
                begin
                L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM_c *
                                          L_END_FACTOR) -
                                          L_BASE_PREMIUM_c)
                end
            End
        Else
            L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM *
                                      L_END_FACTOR) -
                                      L_BASE_PREMIUM)
        End
    End

If L_CODE = "MPL49" Then
    Begin
    If SFSLINE:LOB_CODE = "DWELLING" Then
        Begin
        Access agqPERSONAL_ALIAS, Set agqpersonal_alias:app_no = agqpersonal:app_no,
                                      agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                      agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

        if agqpersonal:state one of 29 then
            begin
            if l_rating_change = 1 then
                begin
                L_UPDATE_SFPEND_PREMIUM = ((l_rating_base_c *
                                          L_END_FACTOR) -
                                          l_rating_base_c)
                end
            else
                begin
                L_UPDATE_SFPEND_PREMIUM = ((agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1] *
                                          L_END_FACTOR) -
                                          agqPERSONAL_ALIAS:CONTENTS_PREMIUM[1])
                end
            end
        else
        if agqpersonal:state one of 19 then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((L_endorsement_base_2 * L_END_FACTOR) -
                                      L_endorsement_base_2)
            end
        End
    Else
        begin
        if agqpersonal:state one of 29 then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM * L_END_FACTOR) -
                                      L_BASE_PREMIUM)
            end
        else
        if agqpersonal:state one of 19 then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((L_endorsement_base_3 * L_END_FACTOR) -
                                      L_endorsement_base_3)
            end
        end
    L_BASE_PREMIUM_2 = L_BASE_PREMIUM * L_END_FACTOR
    End

If L_CODE = "MBO82" Or
   L_CODE = "MBO84" Or
   L_CODE = "MBO81" Then
    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1

If L_CODE = "MBO80" Then
    L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM * L_END_FACTOR) - L_BASE_PREMIUM)

If L_CODE = "MPL79" Then
    Begin
    If SFSLINE:LOB_CODE = "DWELLING" Then
        begin
        if agqpersonal:state one of 29 then
           begin
           if l_rating_change = 1 then
               L_UPDATE_SFPEND_PREMIUM = ((l_rating_base_a * L_END_FACTOR) - l_rating_base_a)
           else
               L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM_A * L_END_FACTOR) - L_BASE_PREMIUM_A)
           end
        else
        if agqpersonal:state one of 19 then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((L_endorsement_base_3 * L_END_FACTOR) -
                                      L_endorsement_base_3)
            end
        end
    Else
        begin
        if agqpersonal:state one of 29 then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM_A * L_END_FACTOR) -
                                      L_BASE_PREMIUM_A)
            end
        else
        if agqpersonal:state one of 19 then
            begin
            L_UPDATE_SFPEND_PREMIUM = ((L_endorsement_base_3 * L_END_FACTOR) -
                                      L_endorsement_base_3)
            end
        end

    End

If L_CODE = "MHO45" Or
   L_CODE = "MPL45" And
   L_END_FACTOR <> 0 Then
    begin
    if agqpersonal:state one of 29 then
        begin
        L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM * L_END_FACTOR) -
                                  L_BASE_PREMIUM)
        end
    else
    if agqpersonal:state one of 19 then
        begin
        L_UPDATE_SFPEND_PREMIUM = ((L_endorsement_base_3 * L_END_FACTOR) -
                                  L_endorsement_base_3)
        end
    end

If L_CODE = "MPL83" Or
   L_CODE = "MPL78" Then
    Begin
    L_UPDATE_SFPEND_PREMIUM = 0
    l_basic_prem = 0
    l_inservants_employees_prem = 0
    l_outservants_residence_prem = 0
    l_outservants_estate_prem = 0
    L_RECORD_KEY = "WC"
    L_COMPANY_ID = agqPERSONAL:COMPANY_ID
    L_STATE = agqPERSONAL:STATE
    L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
    L_EFF_DATE = agqpersonal:EFF_DATE

    Include "plsworkerscomp.pro"

    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1
    l_basic_prem = l_update_sfpend_premium
    Access agqWORKERSCOMP, Set agqWORKERSCOMP:app_no = agqpersonal:app_no,
                               agqWORKERSCOMP:PREM_NO = agqPERSONAL:PREM_NO,
                               agqWORKERSCOMP:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

    if agqworkerscomp:app_no = agqpersonal:app_no and
       agqworkerscomp:prem_no = agqpersonal:prem_no and
       agqworkerscomp:build_no = agqpersonal:build_no then
        begin
        change agqworkerscomp
            begin
            agqworkerscomp:basic_prem = l_update_sfpend_premium
            If agqWORKERSCOMP:INSERVANTS_EMPLOYEES <> 0 Then
                begin
                L_UPDATE_SFPEND_PREMIUM = (L_UPDATE_SFPEND_PREMIUM +
                                          (agqWORKERSCOMP:INSERVANTS_EMPLOYEES *
                                          L_INSERVANTS_RESIDENCE))
                agqworkerscomp:inservants_employees_prem = agqworkerscomp:inservants_employees *
                                                           l_inservants_residence
                l_inservants_employees_prem = ((agqworkerscomp:inservants_employees *
                                              l_inservants_residence) +
                                              l_inservants_employees_prem)
                end
            else
                begin
                agqworkerscomp:inservants_employees_prem = 0
                l_inservants_employees_prem = 0
                end

            If agqWORKERSCOMP:OUTSERVANTS_RESIDENCE_EMPLOYEES <> 0 Then
                begin
                L_UPDATE_SFPEND_PREMIUM = (L_UPDATE_SFPEND_PREMIUM +
                                          (agqWORKERSCOMP:OUTSERVANTS_RESIDENCE_EMPLOYEES *
                                          L_OUTSERVANTS_RESIDENCE))
                agqworkerscomp:outservants_residence_prem = agqWORKERSCOMP:OUTSERVANTS_RESIDENCE_EMPLOYEES *
                                                            L_OUTSERVANTS_RESIDENCE
                l_outservants_residence_prem = ((agqWORKERSCOMP:OUTSERVANTS_RESIDENCE_EMPLOYEES *
                                               L_OUTSERVANTS_RESIDENCE) +
                                               l_outservants_residence_prem)
                end
            else
                begin
                agqworkerscomp:outservants_residence_prem = 0
                l_outservants_residence_prem = 0
                end

            If agqWORKERSCOMP:OUTSERVANTS_ESTATE_EMPLOYEES <> 0 Then
                begin
                L_UPDATE_SFPEND_PREMIUM = (L_UPDATE_SFPEND_PREMIUM +
                                          (agqWORKERSCOMP:OUTSERVANTS_ESTATE_EMPLOYEES *
                                          L_OUTSERVANTS_ESTATE))
                agqworkerscomp:outservants_estate_prem = agqWORKERSCOMP:OUTSERVANTS_ESTATE_EMPLOYEES *
                                                         L_OUTSERVANTS_ESTATE
                l_outservants_estate_prem = ((agqWORKERSCOMP:OUTSERVANTS_ESTATE_EMPLOYEES *
                                            L_OUTSERVANTS_ESTATE) +
                                            l_outservants_estate_prem)
                end
            else
                begin
                agqworkerscomp:outservants_estate_prem = 0
                l_outservants_estate_prem = 0
                end
            end
        end

    L_WORKERS_COMP_TOTAL = L_WORKERS_COMP_TOTAL + L_UPDATE_SFPEND_PREMIUM
    End

If L_CODE one of "MPL80", "SAL80", "MPL180" Then
    Begin
    Access agqPERSONAL_alias, Set agqpersonal_alias:app_no = agqpersonal:app_no,
                                  agqPERSONAL_alias:PREM_NO  = agqpersonal:PREM_NO,
                                  agqPERSONAL_alias:BUILD_NO = agqpersonal:BUILD_NO, Generic

    Access agqpersonal, Set agqpersonal:app_no = g_app_no, Generic

    L_COMPANY_ID       = agqpersonal:COMPANY_ID
    L_STATE            = agqPERSONAL_alias:STATE
    L_LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS
    L_EFF_DATE         = agqpersonal:EFF_DATE
    L_COUNTY           = agqPERSONAL_alias:COUNTY

    Access PLSUMTERR, Set PLSUMTERR:COMPANY_ID = agqpersonal:COMPANY_ID,
                          PLSUMTERR:STATE = L_STATE,
                          PLSUMTERR:LINE_OF_BUSINESS = agqpersonal:LINE_OF_BUSINESS,
                          PLSUMTERR:COUNTY = L_COUNTY, Generic

    Access agqUMBRELLA_ALIAS, Set agqUMBRELLA_ALIAS:app_no = agqpersonal:app_no, generic

    Change agqUMBRELLA_ALIAS
        Begin
        agqUMBRELLA_ALIAS:TERRITORY = PLSUMTERR:TERRITORY
        agqUMBRELLA_ALIAS:CPL_LIMIT = agqPERSONAL:LIABILITY_LIMIT
        End

    Include "plsumrates.pro"

    L_END_PREMIUM1 = L_UM_INITIAL_CHARGE
    If agqUMBRELLA_ALIAS:NO_SEASONAL_LOCATIONS <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (L_UM_EACH_ADDL_CHARGE *
                         agqUMBRELLA_ALIAS:NO_SEASONAL_LOCATIONS))
    If agqUMBRELLA_ALIAS:TERRITORY = 1 Then
        L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_TERR_1_CHARGE
    If agqUMBRELLA_ALIAS:pools <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (L_pools *
                         agqUMBRELLA_ALIAS:pools))

    If agqUMBRELLA_ALIAS:NO_VEHICLES <> 0 Then
        Begin
        Switch(agqUMBRELLA_ALIAS:VEHICLE_LIMITS)
          Case 100000 : Begin
                        L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_INITIAL_VEHICLE_2
                        If agqUMBRELLA_ALIAS:NO_VEHICLES > 1 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 +
                                             ((agqUMBRELLA_ALIAS:NO_VEHICLES - 1) *
                                             L_UM_EACH_ADDL_VEHICLE_2))
                        If agqUMBRELLA_ALIAS:YOUTHFUL_OPERATOR <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:YOUTHFUL_OPERATOR *
                                             L_UM_YOUTHFUL_OP_2))
                        If agqUMBRELLA_ALIAS:TERRITORY = 1 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:NO_VEHICLES *
                                              L_UM_TERR_1_AUTO_2))
                        If agqUMBRELLA_ALIAS:NO_UM_UIM_VEHICLES <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:NO_UM_UIM_VEHICLES *
                                              L_UM_UMUIM_2))
                        If agqUMBRELLA_ALIAS:antique_vehicles <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:antique_VEHICLES *
                                              L_antique_vehicles_2))
                        If agqUMBRELLA_ALIAS:TERRITORY = 1 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:antique_vehicles *
                                             L_UM_TERR_1_AUTO_2))
                        If agqUMBRELLA_ALIAS:trailers <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:trailers *
                                              L_motor_homes_2))
                        If agqUMBRELLA_ALIAS:motor_homes <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:motor_homes *
                                              L_um_initial_vehicle_2))
                        If agqUMBRELLA_ALIAS:TERRITORY = 1 and
                           agqumbrella_alias:motor_homes <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:motor_homes *
                                             L_UM_TERR_1_AUTO_2))
                        End
          Default     : Begin
                        L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_INITIAL_VEHICLE_1
                        If agqUMBRELLA_ALIAS:NO_VEHICLES > 1 Then
                           L_END_PREMIUM1 = (L_END_PREMIUM1 + ((agqUMBRELLA_ALIAS:NO_VEHICLES - 1) *
                                             L_UM_EACH_ADDL_VEHICLE_1))
                        If agqUMBRELLA_ALIAS:YOUTHFUL_OPERATOR <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:YOUTHFUL_OPERATOR *
                                             L_UM_YOUTHFUL_OP_1))
                        If agqUMBRELLA_ALIAS:TERRITORY = 1 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:NO_VEHICLES *
                                             L_UM_TERR_1_AUTO_1))
                        If agqUMBRELLA_ALIAS:NO_UM_UIM_VEHICLES <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:NO_UM_UIM_VEHICLES *
                                              L_UM_UMUIM_1))
                        If agqUMBRELLA_ALIAS:antique_vehicles <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:antique_VEHICLES *
                                              L_antique_vehicles_1))
                        If agqUMBRELLA_ALIAS:TERRITORY = 1 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:antique_VEHICLES *
                                             L_UM_TERR_1_AUTO_1))
                        If agqUMBRELLA_ALIAS:trailers <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:trailers *
                                              L_motor_homes_1))
                        If agqUMBRELLA_ALIAS:motor_homes <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:motor_homes *
                                              L_um_initial_vehicle_1))
                        If agqUMBRELLA_ALIAS:TERRITORY = 1 and
                           agqumbrella_alias:Motor_homes <> 0 Then
                            L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:motor_homes *
                                             L_UM_TERR_1_AUTO_1))
                        End
          End

        End

    If agqUMBRELLA_ALIAS:NO_RECREATIONAL_VEHICLES <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:NO_RECREATIONAL_VEHICLES *
                         L_UM_RECREATIONAL))

    If agqUMBRELLA_ALIAS:jet_skis <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:jet_skis *
                         L_jet_skis))

    If agqUMBRELLA_ALIAS:jet_skis_1 <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:jet_skis_1 *
                         L_jet_skis_1))

    If agqUMBRELLA_ALIAS:WATERCRAFT_25_HP <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:WATERCRAFT_25_HP *
                         L_UM_WATERCRAFT_CHARGE_1))
    If agqUMBRELLA_ALIAS:WATERCRAFT_50_250_HP <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:WATERCRAFT_50_250_HP *
                         L_UM_WATERCRAFT_CHARGE_2))
    If agqUMBRELLA_ALIAS:WATERCRAFT_LIMIT <> 0 Then
        Begin
        Switch(agqUMBRELLA_ALIAS:WATERCRAFT_LIMIT)
          Case 300000  : L_UM_WATERCRAFT_PREMIUM = agqUMBRELLA_ALIAS:WATERCRAFT_PREMIUM *
                                                   L_UM_WATERCRAFT_FACTOR_1
          Case 500000  : L_UM_WATERCRAFT_PREMIUM = agqUMBRELLA_ALIAS:WATERCRAFT_PREMIUM *
                                                   L_UM_WATERCRAFT_FACTOR_2
          Case 750000  : L_UM_WATERCRAFT_PREMIUM = agqUMBRELLA_ALIAS:WATERCRAFT_PREMIUM *
                                                   L_UM_WATERCRAFT_FACTOR_3
          Case 1000000 : L_UM_WATERCRAFT_PREMIUM = agqUMBRELLA_ALIAS:WATERCRAFT_PREMIUM *
                                                   L_UM_WATERCRAFT_FACTOR_4
          End
        If L_UM_WATERCRAFT_PREMIUM < L_UM_WATERCRAFT_MINIMUM Then
            L_UM_WATERCRAFT_PREMIUM = L_UM_WATERCRAFT_MINIMUM
        L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_WATERCRAFT_PREMIUM
        End

    If agqUMBRELLA_ALIAS:NO_CHILDREN <> 0 Then
        Begin
        Switch(agqUMBRELLA_ALIAS:NO_CHILDREN)
          Case 1, 2, 3, 4 : L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_HOME_DAY_CARE_1
          Case 5          : L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_HOME_DAY_CARE_2
          Case 6          : L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_HOME_DAY_CARE_3
          End
        End

    If agqUMBRELLA_ALIAS:BED_BREAKFAST <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:BED_BREAKFAST *
                         L_UM_BED_BREAKFAST))

    If agqUMBRELLA_ALIAS:BUSINESS_PURSUITS <> "" Then
        L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_BUSINESS_PURSUITS

    If agqUMBRELLA_ALIAS:OFFICES <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:OFFICES *
                         L_UM_BUSINESS_CHARGE_1))

    If agqUMBRELLA_ALIAS:RENTALS[1] <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:RENTALS[1] *
                         L_UM_BUSINESS_CHARGE_2))
    If agqUMBRELLA_ALIAS:RENTALS[2] <> 0 Then
        L_END_PREMIUM1 = (L_END_PREMIUM1 + (agqUMBRELLA_ALIAS:RENTALS[2] *
                         L_UM_BUSINESS_CHARGE_3))

    If agqUMBRELLA_ALIAS:BUSINESS_PROPERTY <> "" Then
        L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_BUSINESS_CHARGE_4

    If agqUMBRELLA_ALIAS:CPL_LIMIT <> agqPERSONAL:LIABILITY_LIMIT Then
        Begin
        Change agqUMBRELLA_ALIAS
            Begin
            agqUMBRELLA_ALIAS:CPL_LIMIT = agqPERSONAL:LIABILITY_LIMIT
            End
        End

    If agqUMBRELLA_ALIAS:CPL_LIMIT >= 500000 Then
        L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_CPL_CREDITS

    If agqUMBRELLA_ALIAS:VEHICLE_LIMITS >= 500000 and
       agqumbrella_alias:any_violations = 0 Then
        L_END_PREMIUM1 = L_END_PREMIUM1 + L_UM_AUTO_CREDITS

    Switch(agqUMBRELLA_ALIAS:DEDUCTIBLE)
      Case 500   : L_END_PREMIUM1 = L_END_PREMIUM1 - L_UM_SELF_INSURED_CREDIT_1
      Case 1000  : L_END_PREMIUM1 = L_END_PREMIUM1 - L_UM_SELF_INSURED_CREDIT_2
      Case 5000  : L_END_PREMIUM1 = L_END_PREMIUM1 - L_UM_SELF_INSURED_CREDIT_3
      Case 10000 : L_END_PREMIUM1 = L_END_PREMIUM1 - L_UM_SELF_INSURED_CREDIT_4
      End

    If agqUMBRELLA_ALIAS:CPL_LIMIT >= L_UM_MINIMUM_LIMITS_1 And
       agqUMBRELLA_ALIAS:VEHICLE_LIMITS >= L_UM_MINIMUM_LIMITS_2 Then
        Begin
        If L_END_PREMIUM1 < L_UM_MINIMUM_PREMIUM_1 Then
            L_END_PREMIUM1 = L_UM_MINIMUM_PREMIUM_1
        End
    Else
        Begin
        If L_END_PREMIUM1 < L_UM_MINIMUM_PREMIUM_3 Then
            L_END_PREMIUM1 = L_UM_MINIMUM_PREMIUM_3
        End

    l_repeat = ((agqumbrella_alias:limit - 1000000) divide 1000000)
    l_sub = 1
    while l_sub <= 5
        begin
        access agqmaster, set agqmaster:app_no = agqpersonal:app_no, generic

        change agqmaster
            begin
            agqmaster:other_totals[l_sub] = 0
            end
        l_sub = l_sub + 1
        end

    If agqUMBRELLA_ALIAS:LIMIT > 1000000 Then
        begin
        l_total_premium = l_end_premium1
        l_increase_total[1] = l_end_premium1
        access agqmaster, set agqmaster:app_no = agqpersonal:app_no, generic

        change agqmaster
            begin
            agqmaster:other_totals[1] = l_increase_total[1]
            end
        l_sub = 1
        while l_sub <= l_repeat
            begin
            l_increase_total[l_sub + 1] = L_total_premium * L_UM_INCREASED_FACTOR
            access agqmaster, set agqmaster:app_no = agqpersonal:app_no, generic

            change agqmaster
                begin
                agqmaster:other_totals[l_sub + 1] = l_increase_total[l_sub + 1]
                end
            l_end_premium1 = l_end_premium1 + l_increase_total[l_sub + 1]
            l_sub = l_sub + 1
            end
        end
    else
        begin
        l_increase_total[1] = l_end_premium1
        access agqmaster, set agqmaster:app_no = agqpersonal:app_no, generic

        change agqmaster
            begin
            agqmaster:other_totals[1] = l_increase_total[1]
            end
        end

    Change agqUMBRELLA_ALIAS
        Begin
        agqUMBRELLA_ALIAS:PREMIUM = L_END_PREMIUM1
        End

    Access agqUMBRELLA, Set agqUMBRELLA:app_no = G_app_no, generic

    L_UPDATE_SFPEND_PREMIUM = agqUMBRELLA:PREMIUM
    L_UMBRELLA_TOTAL = L_UMBRELLA_TOTAL + L_UPDATE_SFPEND_PREMIUM
    End

If L_CODE one of "MPL55", "MPL20", "MDW25", "MPL35", "MPL30", "MPL26",
                 "MPL61", "MPL64", "MPL52" Then
    L_UPDATE_SFPEND_PREMIUM = L_END_PREMIUM1

If L_CODE one of "MDW28", "MDW85" Then
    Begin
    Access agqPERSONAL_ALIAS, Set agqpersonal_alias:app_no = agqpersonal:app_no,
                                  agqPERSONAL_ALIAS:PREM_NO = agqPERSONAL:PREM_NO,
                                  agqPERSONAL_ALIAS:BUILD_NO = agqPERSONAL:BUILD_NO, Generic

    Access SFSCOMPANY, Set SFSCOMPANY:COMPANY_ID = agqpersonal:COMPANY_ID, Generic

    If SFSCOMPANY:COMPUTER_RATING = 1 Then -- Salem
        L_UPDATE_SFPEND_PREMIUM = ((L_BASE_PREMIUM_2 *
                                  L_END_FACTOR) - L_BASE_PREMIUM_2)
    else
        begin
        L_UPDATE_SFPEND_PREMIUM = ((agqPERSONAL_ALIAS:DWELLING_PREMIUM[1] *
                                  L_END_FACTOR) - agqPERSONAL_ALIAS:DWELLING_PREMIUM[1])
        end
    End

End

End
